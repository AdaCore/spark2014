if [ ! $# == 2 ]; then
  echo "Usage: $0 coq_ast_source_file_name any_file_name.v"
  exit
fi

INPUT_FILENAME="$1"
OUTPUT_FILENAME="$2"
SUFFIX=".v"
COQ_AST_TREE="Coq_AST_Tree"
COQ_AST_TREE_X="Coq_AST_Tree_X"
SYMBOL_TABLE="Symbol_Table"  

if [[ ! -f $INPUT_FILENAME ]]; then
  echo "Warning: File ($INPUT_FILENAME) does not exist !"
  exit
fi

if [[ $OUTPUT_FILENAME != *".v" ]]; then
  echo "Warning: File ($OUTPUT_FILENAME) should end with \".v\""
  exit
fi

> $2  # empty the file
echo -e "Require Import checks_comparison.\n" >> $2  # -e makes \n to insert newline
echo "" >> $2  # insert newline
# echo -e "Import Check_Flags_Comparison_With_Debug_Infor.\n" >> $2

sed 's/_xx//g;s/_XX//g;s/(\*checks\*)//g' $1 >> $2
sed 's/xx/x/g;s/XX/X/g;s/(\*\*//g;s/\*\*)//g' $1 >> $2

echo -e "Definition Ast_Tree_With_Expected_Checks := compile2_flagged_declaration_f $SYMBOL_TABLE $COQ_AST_TREE.\n" >> $2
echo -e "Definition Return_Msgs := compare_with_expected_results Ast_Tree_With_Expected_Checks $COQ_AST_TREE_X.\n" >> $2
echo -e "Definition Result := map_to_source_location $SYMBOL_TABLE Return_Msgs.\n" >> $2

echo "Eval compute in Result." >> $2
eval "coqc $2" # run the test
