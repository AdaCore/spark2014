------------------------------------------------------------------------------
--                                                                          --
--                            GNAT2WHY COMPONENTS                           --
--                                                                          --
--                     W H Y - A T R E E - T R E E P R                      --
--                                                                          --
--                                 B o d y                                  --
--                                                                          --
--                       Copyright (C) 2010-2011, AdaCore                   --
--                                                                          --
-- gnat2why is  free  software;  you can redistribute it and/or modify it   --
-- under terms of the  GNU General Public License as published  by the Free --
-- Software Foundation;  either version  2,  or  (at your option) any later --
-- version. gnat2why is distributed in the hope that it will  be  useful,   --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHAN-  --
-- TABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public --
-- License  for more details. You  should  have  received a copy of the GNU --
-- General Public License  distributed with GNAT; see file COPYING. If not, --
-- write to the Free Software Foundation,  51 Franklin Street, Fifth Floor, --
-- Boston,                                                                  --
--                                                                          --
-- gnat2why is maintained by AdaCore (http://www.adacore.com)               --
--                                                                          --
------------------------------------------------------------------------------
--  This package is automatically generated by xtree. Do not edit manually.

with Outputs;          use Outputs;
with Why.Atree.Tables; use Why.Atree.Tables;

package body Why.Atree.Treepr is

   O : constant Output_Id := Stdout;

   ---------
   -- wpn --
   ---------

   procedure wpn (Node : Why_Node_Id) is
      TPS : Tree_Printer_State;
   begin
      Traverse (TPS, Node);
   end wpn;

   -----------------------
   -- Identifier_Pre_Op --
   -----------------------

   procedure Identifier_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Identifier_Id)
   is
      pragma Unreferenced (State);
   begin
      P (O, "W_IDENTIFIER");
      P (O, " : ");
      P (O, Get_Name_String (Get_Node (Node).Symbol));
      NL (O);
      Relative_Indent (O, 1);
   end Identifier_Pre_Op;

   ------------------------
   -- Identifier_Post_Op --
   ------------------------

   procedure Identifier_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Identifier_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Identifier_Post_Op;

   ----------------------
   -- Type_Prop_Pre_Op --
   ----------------------

   procedure Type_Prop_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Type_Prop_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_TYPE_PROP");
      NL (O);
      Relative_Indent (O, 1);
   end Type_Prop_Pre_Op;

   -----------------------
   -- Type_Prop_Post_Op --
   -----------------------

   procedure Type_Prop_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Type_Prop_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Type_Prop_Post_Op;

   ---------------------
   -- Type_Int_Pre_Op --
   ---------------------

   procedure Type_Int_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Type_Int_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_TYPE_INT");
      NL (O);
      Relative_Indent (O, 1);
   end Type_Int_Pre_Op;

   ----------------------
   -- Type_Int_Post_Op --
   ----------------------

   procedure Type_Int_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Type_Int_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Type_Int_Post_Op;

   ----------------------
   -- Type_Bool_Pre_Op --
   ----------------------

   procedure Type_Bool_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Type_Bool_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_TYPE_BOOL");
      NL (O);
      Relative_Indent (O, 1);
   end Type_Bool_Pre_Op;

   -----------------------
   -- Type_Bool_Post_Op --
   -----------------------

   procedure Type_Bool_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Type_Bool_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Type_Bool_Post_Op;

   ----------------------
   -- Type_Real_Pre_Op --
   ----------------------

   procedure Type_Real_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Type_Real_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_TYPE_REAL");
      NL (O);
      Relative_Indent (O, 1);
   end Type_Real_Pre_Op;

   -----------------------
   -- Type_Real_Post_Op --
   -----------------------

   procedure Type_Real_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Type_Real_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Type_Real_Post_Op;

   ----------------------
   -- Type_Unit_Pre_Op --
   ----------------------

   procedure Type_Unit_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Type_Unit_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_TYPE_UNIT");
      NL (O);
      Relative_Indent (O, 1);
   end Type_Unit_Pre_Op;

   -----------------------
   -- Type_Unit_Post_Op --
   -----------------------

   procedure Type_Unit_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Type_Unit_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Type_Unit_Post_Op;

   --------------------------
   -- Abstract_Type_Pre_Op --
   --------------------------

   procedure Abstract_Type_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Abstract_Type_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_ABSTRACT_TYPE");
      NL (O);
      Relative_Indent (O, 1);
   end Abstract_Type_Pre_Op;

   ---------------------------
   -- Abstract_Type_Post_Op --
   ---------------------------

   procedure Abstract_Type_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Abstract_Type_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Abstract_Type_Post_Op;

   --------------------------------
   -- Generic_Formal_Type_Pre_Op --
   --------------------------------

   procedure Generic_Formal_Type_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Generic_Formal_Type_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_GENERIC_FORMAL_TYPE");
      NL (O);
      Relative_Indent (O, 1);
   end Generic_Formal_Type_Pre_Op;

   ---------------------------------
   -- Generic_Formal_Type_Post_Op --
   ---------------------------------

   procedure Generic_Formal_Type_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Generic_Formal_Type_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Generic_Formal_Type_Post_Op;

   --------------------------------------
   -- Generic_Actual_Type_Chain_Pre_Op --
   --------------------------------------

   procedure Generic_Actual_Type_Chain_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Generic_Actual_Type_Chain_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_GENERIC_ACTUAL_TYPE_CHAIN");
      NL (O);
      Relative_Indent (O, 1);
   end Generic_Actual_Type_Chain_Pre_Op;

   ---------------------------------------
   -- Generic_Actual_Type_Chain_Post_Op --
   ---------------------------------------

   procedure Generic_Actual_Type_Chain_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Generic_Actual_Type_Chain_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Generic_Actual_Type_Chain_Post_Op;

   -----------------------
   -- Array_Type_Pre_Op --
   -----------------------

   procedure Array_Type_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Array_Type_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_ARRAY_TYPE");
      NL (O);
      Relative_Indent (O, 1);
   end Array_Type_Pre_Op;

   ------------------------
   -- Array_Type_Post_Op --
   ------------------------

   procedure Array_Type_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Array_Type_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Array_Type_Post_Op;

   ---------------------
   -- Ref_Type_Pre_Op --
   ---------------------

   procedure Ref_Type_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Ref_Type_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_REF_TYPE");
      NL (O);
      Relative_Indent (O, 1);
   end Ref_Type_Pre_Op;

   ----------------------
   -- Ref_Type_Post_Op --
   ----------------------

   procedure Ref_Type_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Ref_Type_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Ref_Type_Post_Op;

   ---------------------------------
   -- Protected_Value_Type_Pre_Op --
   ---------------------------------

   procedure Protected_Value_Type_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Protected_Value_Type_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_PROTECTED_VALUE_TYPE");
      NL (O);
      Relative_Indent (O, 1);
   end Protected_Value_Type_Pre_Op;

   ----------------------------------
   -- Protected_Value_Type_Post_Op --
   ----------------------------------

   procedure Protected_Value_Type_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Protected_Value_Type_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Protected_Value_Type_Post_Op;

   -----------------------
   -- Arrow_Type_Pre_Op --
   -----------------------

   procedure Arrow_Type_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Arrow_Type_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_ARROW_TYPE");
      NL (O);
      Relative_Indent (O, 1);
   end Arrow_Type_Pre_Op;

   ------------------------
   -- Arrow_Type_Post_Op --
   ------------------------

   procedure Arrow_Type_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Arrow_Type_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Arrow_Type_Post_Op;

   -----------------------------
   -- Computation_Spec_Pre_Op --
   -----------------------------

   procedure Computation_Spec_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Computation_Spec_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_COMPUTATION_SPEC");
      NL (O);
      Relative_Indent (O, 1);
   end Computation_Spec_Pre_Op;

   ------------------------------
   -- Computation_Spec_Post_Op --
   ------------------------------

   procedure Computation_Spec_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Computation_Spec_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Computation_Spec_Post_Op;

   -----------------------------
   -- Integer_Constant_Pre_Op --
   -----------------------------

   procedure Integer_Constant_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Integer_Constant_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_INTEGER_CONSTANT");
      NL (O);
      Relative_Indent (O, 1);
   end Integer_Constant_Pre_Op;

   ------------------------------
   -- Integer_Constant_Post_Op --
   ------------------------------

   procedure Integer_Constant_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Integer_Constant_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Integer_Constant_Post_Op;

   --------------------------
   -- Real_Constant_Pre_Op --
   --------------------------

   procedure Real_Constant_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Real_Constant_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_REAL_CONSTANT");
      NL (O);
      Relative_Indent (O, 1);
   end Real_Constant_Pre_Op;

   ---------------------------
   -- Real_Constant_Post_Op --
   ---------------------------

   procedure Real_Constant_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Real_Constant_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Real_Constant_Post_Op;

   -------------------------
   -- True_Literal_Pre_Op --
   -------------------------

   procedure True_Literal_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_True_Literal_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_TRUE_LITERAL");
      NL (O);
      Relative_Indent (O, 1);
   end True_Literal_Pre_Op;

   --------------------------
   -- True_Literal_Post_Op --
   --------------------------

   procedure True_Literal_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_True_Literal_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end True_Literal_Post_Op;

   --------------------------
   -- False_Literal_Pre_Op --
   --------------------------

   procedure False_Literal_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_False_Literal_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_FALSE_LITERAL");
      NL (O);
      Relative_Indent (O, 1);
   end False_Literal_Pre_Op;

   ---------------------------
   -- False_Literal_Post_Op --
   ---------------------------

   procedure False_Literal_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_False_Literal_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end False_Literal_Post_Op;

   -------------------------
   -- Void_Literal_Pre_Op --
   -------------------------

   procedure Void_Literal_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Void_Literal_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_VOID_LITERAL");
      NL (O);
      Relative_Indent (O, 1);
   end Void_Literal_Pre_Op;

   --------------------------
   -- Void_Literal_Post_Op --
   --------------------------

   procedure Void_Literal_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Void_Literal_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Void_Literal_Post_Op;

   ----------------------------
   -- Arith_Operation_Pre_Op --
   ----------------------------

   procedure Arith_Operation_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Arith_Operation_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_ARITH_OPERATION");
      NL (O);
      Relative_Indent (O, 1);
   end Arith_Operation_Pre_Op;

   -----------------------------
   -- Arith_Operation_Post_Op --
   -----------------------------

   procedure Arith_Operation_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Arith_Operation_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Arith_Operation_Post_Op;

   --------------------------
   -- Negative_Term_Pre_Op --
   --------------------------

   procedure Negative_Term_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Negative_Term_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_NEGATIVE_TERM");
      NL (O);
      Relative_Indent (O, 1);
   end Negative_Term_Pre_Op;

   ---------------------------
   -- Negative_Term_Post_Op --
   ---------------------------

   procedure Negative_Term_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Negative_Term_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Negative_Term_Post_Op;

   ----------------------------
   -- Term_Identifier_Pre_Op --
   ----------------------------

   procedure Term_Identifier_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Term_Identifier_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_TERM_IDENTIFIER");
      NL (O);
      Relative_Indent (O, 1);
   end Term_Identifier_Pre_Op;

   -----------------------------
   -- Term_Identifier_Post_Op --
   -----------------------------

   procedure Term_Identifier_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Term_Identifier_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Term_Identifier_Post_Op;

   ----------------------
   -- Operation_Pre_Op --
   ----------------------

   procedure Operation_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Operation_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_OPERATION");
      NL (O);
      Relative_Indent (O, 1);
   end Operation_Pre_Op;

   -----------------------
   -- Operation_Post_Op --
   -----------------------

   procedure Operation_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Operation_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Operation_Post_Op;

   -----------------------
   -- Named_Term_Pre_Op --
   -----------------------

   procedure Named_Term_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Named_Term_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_NAMED_TERM");
      NL (O);
      Relative_Indent (O, 1);
   end Named_Term_Pre_Op;

   ------------------------
   -- Named_Term_Post_Op --
   ------------------------

   procedure Named_Term_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Named_Term_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Named_Term_Post_Op;

   -----------------------------
   -- Conditional_Term_Pre_Op --
   -----------------------------

   procedure Conditional_Term_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Conditional_Term_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_CONDITIONAL_TERM");
      NL (O);
      Relative_Indent (O, 1);
   end Conditional_Term_Pre_Op;

   ------------------------------
   -- Conditional_Term_Post_Op --
   ------------------------------

   procedure Conditional_Term_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Conditional_Term_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Conditional_Term_Post_Op;

   --------------------------
   -- Matching_Term_Pre_Op --
   --------------------------

   procedure Matching_Term_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Matching_Term_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_MATCHING_TERM");
      NL (O);
      Relative_Indent (O, 1);
   end Matching_Term_Pre_Op;

   ---------------------------
   -- Matching_Term_Post_Op --
   ---------------------------

   procedure Matching_Term_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Matching_Term_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Matching_Term_Post_Op;

   -------------------------
   -- Binding_Term_Pre_Op --
   -------------------------

   procedure Binding_Term_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Binding_Term_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_BINDING_TERM");
      NL (O);
      Relative_Indent (O, 1);
   end Binding_Term_Pre_Op;

   --------------------------
   -- Binding_Term_Post_Op --
   --------------------------

   procedure Binding_Term_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Binding_Term_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Binding_Term_Post_Op;

   ---------------------------
   -- Protected_Term_Pre_Op --
   ---------------------------

   procedure Protected_Term_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Protected_Term_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_PROTECTED_TERM");
      NL (O);
      Relative_Indent (O, 1);
   end Protected_Term_Pre_Op;

   ----------------------------
   -- Protected_Term_Post_Op --
   ----------------------------

   procedure Protected_Term_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Protected_Term_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Protected_Term_Post_Op;

   -------------------
   -- Op_Add_Pre_Op --
   -------------------

   procedure Op_Add_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Op_Add_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_OP_ADD");
      NL (O);
      Relative_Indent (O, 1);
   end Op_Add_Pre_Op;

   --------------------
   -- Op_Add_Post_Op --
   --------------------

   procedure Op_Add_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Op_Add_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Op_Add_Post_Op;

   -------------------------
   -- Op_Substract_Pre_Op --
   -------------------------

   procedure Op_Substract_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Op_Substract_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_OP_SUBSTRACT");
      NL (O);
      Relative_Indent (O, 1);
   end Op_Substract_Pre_Op;

   --------------------------
   -- Op_Substract_Post_Op --
   --------------------------

   procedure Op_Substract_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Op_Substract_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Op_Substract_Post_Op;

   ------------------------
   -- Op_Multiply_Pre_Op --
   ------------------------

   procedure Op_Multiply_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Op_Multiply_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_OP_MULTIPLY");
      NL (O);
      Relative_Indent (O, 1);
   end Op_Multiply_Pre_Op;

   -------------------------
   -- Op_Multiply_Post_Op --
   -------------------------

   procedure Op_Multiply_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Op_Multiply_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Op_Multiply_Post_Op;

   ----------------------
   -- Op_Divide_Pre_Op --
   ----------------------

   procedure Op_Divide_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Op_Divide_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_OP_DIVIDE");
      NL (O);
      Relative_Indent (O, 1);
   end Op_Divide_Pre_Op;

   -----------------------
   -- Op_Divide_Post_Op --
   -----------------------

   procedure Op_Divide_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Op_Divide_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Op_Divide_Post_Op;

   ----------------------
   -- Op_Modulo_Pre_Op --
   ----------------------

   procedure Op_Modulo_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Op_Modulo_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_OP_MODULO");
      NL (O);
      Relative_Indent (O, 1);
   end Op_Modulo_Pre_Op;

   -----------------------
   -- Op_Modulo_Post_Op --
   -----------------------

   procedure Op_Modulo_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Op_Modulo_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Op_Modulo_Post_Op;

   ------------------------------
   -- True_Literal_Pred_Pre_Op --
   ------------------------------

   procedure True_Literal_Pred_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_True_Literal_Pred_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_TRUE_LITERAL_PRED");
      NL (O);
      Relative_Indent (O, 1);
   end True_Literal_Pred_Pre_Op;

   -------------------------------
   -- True_Literal_Pred_Post_Op --
   -------------------------------

   procedure True_Literal_Pred_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_True_Literal_Pred_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end True_Literal_Pred_Post_Op;

   -------------------------------
   -- False_Literal_Pred_Pre_Op --
   -------------------------------

   procedure False_Literal_Pred_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_False_Literal_Pred_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_FALSE_LITERAL_PRED");
      NL (O);
      Relative_Indent (O, 1);
   end False_Literal_Pred_Pre_Op;

   --------------------------------
   -- False_Literal_Pred_Post_Op --
   --------------------------------

   procedure False_Literal_Pred_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_False_Literal_Pred_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end False_Literal_Pred_Post_Op;

   ---------------------------------
   -- Predicate_Identifier_Pre_Op --
   ---------------------------------

   procedure Predicate_Identifier_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Predicate_Identifier_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_PREDICATE_IDENTIFIER");
      NL (O);
      Relative_Indent (O, 1);
   end Predicate_Identifier_Pre_Op;

   ----------------------------------
   -- Predicate_Identifier_Post_Op --
   ----------------------------------

   procedure Predicate_Identifier_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Predicate_Identifier_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Predicate_Identifier_Post_Op;

   -------------------------------
   -- Predicate_Instance_Pre_Op --
   -------------------------------

   procedure Predicate_Instance_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Predicate_Instance_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_PREDICATE_INSTANCE");
      NL (O);
      Relative_Indent (O, 1);
   end Predicate_Instance_Pre_Op;

   --------------------------------
   -- Predicate_Instance_Post_Op --
   --------------------------------

   procedure Predicate_Instance_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Predicate_Instance_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Predicate_Instance_Post_Op;

   --------------------------
   -- Related_Terms_Pre_Op --
   --------------------------

   procedure Related_Terms_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Related_Terms_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_RELATED_TERMS");
      NL (O);
      Relative_Indent (O, 1);
   end Related_Terms_Pre_Op;

   ---------------------------
   -- Related_Terms_Post_Op --
   ---------------------------

   procedure Related_Terms_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Related_Terms_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Related_Terms_Post_Op;

   ------------------------
   -- Implication_Pre_Op --
   ------------------------

   procedure Implication_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Implication_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_IMPLICATION");
      NL (O);
      Relative_Indent (O, 1);
   end Implication_Pre_Op;

   -------------------------
   -- Implication_Post_Op --
   -------------------------

   procedure Implication_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Implication_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Implication_Post_Op;

   ------------------------
   -- Equivalence_Pre_Op --
   ------------------------

   procedure Equivalence_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Equivalence_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_EQUIVALENCE");
      NL (O);
      Relative_Indent (O, 1);
   end Equivalence_Pre_Op;

   -------------------------
   -- Equivalence_Post_Op --
   -------------------------

   procedure Equivalence_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Equivalence_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Equivalence_Post_Op;

   ------------------------
   -- Disjonction_Pre_Op --
   ------------------------

   procedure Disjonction_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Disjonction_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_DISJONCTION");
      NL (O);
      Relative_Indent (O, 1);
   end Disjonction_Pre_Op;

   -------------------------
   -- Disjonction_Post_Op --
   -------------------------

   procedure Disjonction_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Disjonction_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Disjonction_Post_Op;

   ------------------------
   -- Conjonction_Pre_Op --
   ------------------------

   procedure Conjonction_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Conjonction_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_CONJONCTION");
      NL (O);
      Relative_Indent (O, 1);
   end Conjonction_Pre_Op;

   -------------------------
   -- Conjonction_Post_Op --
   -------------------------

   procedure Conjonction_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Conjonction_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Conjonction_Post_Op;

   ---------------------
   -- Negation_Pre_Op --
   ---------------------

   procedure Negation_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Negation_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_NEGATION");
      NL (O);
      Relative_Indent (O, 1);
   end Negation_Pre_Op;

   ----------------------
   -- Negation_Post_Op --
   ----------------------

   procedure Negation_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Negation_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Negation_Post_Op;

   -----------------------------
   -- Conditional_Pred_Pre_Op --
   -----------------------------

   procedure Conditional_Pred_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Conditional_Pred_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_CONDITIONAL_PRED");
      NL (O);
      Relative_Indent (O, 1);
   end Conditional_Pred_Pre_Op;

   ------------------------------
   -- Conditional_Pred_Post_Op --
   ------------------------------

   procedure Conditional_Pred_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Conditional_Pred_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Conditional_Pred_Post_Op;

   -------------------------
   -- Binding_Pred_Pre_Op --
   -------------------------

   procedure Binding_Pred_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Binding_Pred_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_BINDING_PRED");
      NL (O);
      Relative_Indent (O, 1);
   end Binding_Pred_Pre_Op;

   --------------------------
   -- Binding_Pred_Post_Op --
   --------------------------

   procedure Binding_Pred_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Binding_Pred_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Binding_Pred_Post_Op;

   ------------------------------
   -- Universal_Quantif_Pre_Op --
   ------------------------------

   procedure Universal_Quantif_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Universal_Quantif_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_UNIVERSAL_QUANTIF");
      NL (O);
      Relative_Indent (O, 1);
   end Universal_Quantif_Pre_Op;

   -------------------------------
   -- Universal_Quantif_Post_Op --
   -------------------------------

   procedure Universal_Quantif_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Universal_Quantif_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Universal_Quantif_Post_Op;

   --------------------------------
   -- Existential_Quantif_Pre_Op --
   --------------------------------

   procedure Existential_Quantif_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Existential_Quantif_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_EXISTENTIAL_QUANTIF");
      NL (O);
      Relative_Indent (O, 1);
   end Existential_Quantif_Pre_Op;

   ---------------------------------
   -- Existential_Quantif_Post_Op --
   ---------------------------------

   procedure Existential_Quantif_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Existential_Quantif_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Existential_Quantif_Post_Op;

   ----------------------------
   -- Named_Predicate_Pre_Op --
   ----------------------------

   procedure Named_Predicate_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Named_Predicate_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_NAMED_PREDICATE");
      NL (O);
      Relative_Indent (O, 1);
   end Named_Predicate_Pre_Op;

   -----------------------------
   -- Named_Predicate_Post_Op --
   -----------------------------

   procedure Named_Predicate_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Named_Predicate_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Named_Predicate_Post_Op;

   --------------------------------
   -- Protected_Predicate_Pre_Op --
   --------------------------------

   procedure Protected_Predicate_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Protected_Predicate_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_PROTECTED_PREDICATE");
      NL (O);
      Relative_Indent (O, 1);
   end Protected_Predicate_Pre_Op;

   ---------------------------------
   -- Protected_Predicate_Post_Op --
   ---------------------------------

   procedure Protected_Predicate_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Protected_Predicate_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Protected_Predicate_Post_Op;

   --------------------
   -- Pattern_Pre_Op --
   --------------------

   procedure Pattern_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Pattern_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_PATTERN");
      NL (O);
      Relative_Indent (O, 1);
   end Pattern_Pre_Op;

   ---------------------
   -- Pattern_Post_Op --
   ---------------------

   procedure Pattern_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Pattern_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Pattern_Post_Op;

   -----------------------
   -- Match_Case_Pre_Op --
   -----------------------

   procedure Match_Case_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Match_Case_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_MATCH_CASE");
      NL (O);
      Relative_Indent (O, 1);
   end Match_Case_Pre_Op;

   ------------------------
   -- Match_Case_Post_Op --
   ------------------------

   procedure Match_Case_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Match_Case_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Match_Case_Post_Op;

   ---------------------
   -- Triggers_Pre_Op --
   ---------------------

   procedure Triggers_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Triggers_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_TRIGGERS");
      NL (O);
      Relative_Indent (O, 1);
   end Triggers_Pre_Op;

   ----------------------
   -- Triggers_Post_Op --
   ----------------------

   procedure Triggers_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Triggers_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Triggers_Post_Op;

   --------------------
   -- Trigger_Pre_Op --
   --------------------

   procedure Trigger_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Trigger_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_TRIGGER");
      NL (O);
      Relative_Indent (O, 1);
   end Trigger_Pre_Op;

   ---------------------
   -- Trigger_Post_Op --
   ---------------------

   procedure Trigger_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Trigger_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Trigger_Post_Op;

   -------------------
   -- Rel_Eq_Pre_Op --
   -------------------

   procedure Rel_Eq_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Rel_Eq_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_REL_EQ");
      NL (O);
      Relative_Indent (O, 1);
   end Rel_Eq_Pre_Op;

   --------------------
   -- Rel_Eq_Post_Op --
   --------------------

   procedure Rel_Eq_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Rel_Eq_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Rel_Eq_Post_Op;

   -------------------
   -- Rel_Ne_Pre_Op --
   -------------------

   procedure Rel_Ne_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Rel_Ne_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_REL_NE");
      NL (O);
      Relative_Indent (O, 1);
   end Rel_Ne_Pre_Op;

   --------------------
   -- Rel_Ne_Post_Op --
   --------------------

   procedure Rel_Ne_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Rel_Ne_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Rel_Ne_Post_Op;

   -------------------
   -- Rel_Lt_Pre_Op --
   -------------------

   procedure Rel_Lt_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Rel_Lt_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_REL_LT");
      NL (O);
      Relative_Indent (O, 1);
   end Rel_Lt_Pre_Op;

   --------------------
   -- Rel_Lt_Post_Op --
   --------------------

   procedure Rel_Lt_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Rel_Lt_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Rel_Lt_Post_Op;

   -------------------
   -- Rel_Le_Pre_Op --
   -------------------

   procedure Rel_Le_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Rel_Le_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_REL_LE");
      NL (O);
      Relative_Indent (O, 1);
   end Rel_Le_Pre_Op;

   --------------------
   -- Rel_Le_Post_Op --
   --------------------

   procedure Rel_Le_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Rel_Le_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Rel_Le_Post_Op;

   -------------------
   -- Rel_Gt_Pre_Op --
   -------------------

   procedure Rel_Gt_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Rel_Gt_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_REL_GT");
      NL (O);
      Relative_Indent (O, 1);
   end Rel_Gt_Pre_Op;

   --------------------
   -- Rel_Gt_Post_Op --
   --------------------

   procedure Rel_Gt_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Rel_Gt_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Rel_Gt_Post_Op;

   -------------------
   -- Rel_Ge_Pre_Op --
   -------------------

   procedure Rel_Ge_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Rel_Ge_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_REL_GE");
      NL (O);
      Relative_Indent (O, 1);
   end Rel_Ge_Pre_Op;

   --------------------
   -- Rel_Ge_Post_Op --
   --------------------

   procedure Rel_Ge_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Rel_Ge_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Rel_Ge_Post_Op;

   -----------------
   -- Type_Pre_Op --
   -----------------

   procedure Type_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Type_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_TYPE");
      NL (O);
      Relative_Indent (O, 1);
   end Type_Pre_Op;

   ------------------
   -- Type_Post_Op --
   ------------------

   procedure Type_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Type_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Type_Post_Op;

   ------------------
   -- Logic_Pre_Op --
   ------------------

   procedure Logic_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Logic_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_LOGIC");
      NL (O);
      Relative_Indent (O, 1);
   end Logic_Pre_Op;

   -------------------
   -- Logic_Post_Op --
   -------------------

   procedure Logic_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Logic_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Logic_Post_Op;

   ---------------------
   -- Function_Pre_Op --
   ---------------------

   procedure Function_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Function_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_FUNCTION");
      NL (O);
      Relative_Indent (O, 1);
   end Function_Pre_Op;

   ----------------------
   -- Function_Post_Op --
   ----------------------

   procedure Function_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Function_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Function_Post_Op;

   ---------------------------------
   -- Predicate_Definition_Pre_Op --
   ---------------------------------

   procedure Predicate_Definition_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Predicate_Definition_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_PREDICATE_DEFINITION");
      NL (O);
      Relative_Indent (O, 1);
   end Predicate_Definition_Pre_Op;

   ----------------------------------
   -- Predicate_Definition_Post_Op --
   ----------------------------------

   procedure Predicate_Definition_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Predicate_Definition_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Predicate_Definition_Post_Op;

   ----------------------
   -- Inductive_Pre_Op --
   ----------------------

   procedure Inductive_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Inductive_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_INDUCTIVE");
      NL (O);
      Relative_Indent (O, 1);
   end Inductive_Pre_Op;

   -----------------------
   -- Inductive_Post_Op --
   -----------------------

   procedure Inductive_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Inductive_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Inductive_Post_Op;

   ------------------
   -- Axiom_Pre_Op --
   ------------------

   procedure Axiom_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Axiom_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_AXIOM");
      NL (O);
      Relative_Indent (O, 1);
   end Axiom_Pre_Op;

   -------------------
   -- Axiom_Post_Op --
   -------------------

   procedure Axiom_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Axiom_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Axiom_Post_Op;

   -----------------
   -- Goal_Pre_Op --
   -----------------

   procedure Goal_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Goal_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_GOAL");
      NL (O);
      Relative_Indent (O, 1);
   end Goal_Pre_Op;

   ------------------
   -- Goal_Post_Op --
   ------------------

   procedure Goal_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Goal_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Goal_Post_Op;

   ---------------------
   -- External_Pre_Op --
   ---------------------

   procedure External_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_External_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_EXTERNAL");
      NL (O);
      Relative_Indent (O, 1);
   end External_Pre_Op;

   ----------------------
   -- External_Post_Op --
   ----------------------

   procedure External_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_External_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end External_Post_Op;

   -----------------------
   -- Logic_Type_Pre_Op --
   -----------------------

   procedure Logic_Type_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Logic_Type_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_LOGIC_TYPE");
      NL (O);
      Relative_Indent (O, 1);
   end Logic_Type_Pre_Op;

   ------------------------
   -- Logic_Type_Post_Op --
   ------------------------

   procedure Logic_Type_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Logic_Type_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Logic_Type_Post_Op;

   -------------------------
   -- Logic_Binder_Pre_Op --
   -------------------------

   procedure Logic_Binder_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Logic_Binder_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_LOGIC_BINDER");
      NL (O);
      Relative_Indent (O, 1);
   end Logic_Binder_Pre_Op;

   --------------------------
   -- Logic_Binder_Post_Op --
   --------------------------

   procedure Logic_Binder_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Logic_Binder_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Logic_Binder_Post_Op;

   ---------------------------
   -- Inductive_Case_Pre_Op --
   ---------------------------

   procedure Inductive_Case_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Inductive_Case_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_INDUCTIVE_CASE");
      NL (O);
      Relative_Indent (O, 1);
   end Inductive_Case_Pre_Op;

   ----------------------------
   -- Inductive_Case_Post_Op --
   ----------------------------

   procedure Inductive_Case_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Inductive_Case_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Inductive_Case_Post_Op;

   ----------------------------------------
   -- Transparent_Type_Definition_Pre_Op --
   ----------------------------------------

   procedure Transparent_Type_Definition_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Transparent_Type_Definition_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_TRANSPARENT_TYPE_DEFINITION");
      NL (O);
      Relative_Indent (O, 1);
   end Transparent_Type_Definition_Pre_Op;

   -----------------------------------------
   -- Transparent_Type_Definition_Post_Op --
   -----------------------------------------

   procedure Transparent_Type_Definition_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Transparent_Type_Definition_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Transparent_Type_Definition_Post_Op;

   ---------------------------
   -- Adt_Definition_Pre_Op --
   ---------------------------

   procedure Adt_Definition_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Adt_Definition_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_ADT_DEFINITION");
      NL (O);
      Relative_Indent (O, 1);
   end Adt_Definition_Pre_Op;

   ----------------------------
   -- Adt_Definition_Post_Op --
   ----------------------------

   procedure Adt_Definition_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Adt_Definition_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Adt_Definition_Post_Op;

   ------------------------
   -- Constr_Decl_Pre_Op --
   ------------------------

   procedure Constr_Decl_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Constr_Decl_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_CONSTR_DECL");
      NL (O);
      Relative_Indent (O, 1);
   end Constr_Decl_Pre_Op;

   -------------------------
   -- Constr_Decl_Post_Op --
   -------------------------

   procedure Constr_Decl_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Constr_Decl_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Constr_Decl_Post_Op;

   --------------------
   -- Effects_Pre_Op --
   --------------------

   procedure Effects_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Effects_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_EFFECTS");
      NL (O);
      Relative_Indent (O, 1);
   end Effects_Pre_Op;

   ---------------------
   -- Effects_Post_Op --
   ---------------------

   procedure Effects_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Effects_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Effects_Post_Op;

   -------------------------
   -- Precondition_Pre_Op --
   -------------------------

   procedure Precondition_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Precondition_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_PRECONDITION");
      NL (O);
      Relative_Indent (O, 1);
   end Precondition_Pre_Op;

   --------------------------
   -- Precondition_Post_Op --
   --------------------------

   procedure Precondition_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Precondition_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Precondition_Post_Op;

   --------------------------
   -- Postcondition_Pre_Op --
   --------------------------

   procedure Postcondition_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Postcondition_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_POSTCONDITION");
      NL (O);
      Relative_Indent (O, 1);
   end Postcondition_Pre_Op;

   ---------------------------
   -- Postcondition_Post_Op --
   ---------------------------

   procedure Postcondition_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Postcondition_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Postcondition_Post_Op;

   --------------------------
   -- Exn_Condition_Pre_Op --
   --------------------------

   procedure Exn_Condition_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Exn_Condition_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_EXN_CONDITION");
      NL (O);
      Relative_Indent (O, 1);
   end Exn_Condition_Pre_Op;

   ---------------------------
   -- Exn_Condition_Post_Op --
   ---------------------------

   procedure Exn_Condition_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Exn_Condition_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Exn_Condition_Post_Op;

   ----------------------
   -- Assertion_Pre_Op --
   ----------------------

   procedure Assertion_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Assertion_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_ASSERTION");
      NL (O);
      Relative_Indent (O, 1);
   end Assertion_Pre_Op;

   -----------------------
   -- Assertion_Post_Op --
   -----------------------

   procedure Assertion_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Assertion_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Assertion_Post_Op;

   --------------------------
   -- Prog_Constant_Pre_Op --
   --------------------------

   procedure Prog_Constant_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Prog_Constant_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_PROG_CONSTANT");
      NL (O);
      Relative_Indent (O, 1);
   end Prog_Constant_Pre_Op;

   ---------------------------
   -- Prog_Constant_Post_Op --
   ---------------------------

   procedure Prog_Constant_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Prog_Constant_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Prog_Constant_Post_Op;

   ----------------------------
   -- Prog_Identifier_Pre_Op --
   ----------------------------

   procedure Prog_Identifier_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Prog_Identifier_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_PROG_IDENTIFIER");
      NL (O);
      Relative_Indent (O, 1);
   end Prog_Identifier_Pre_Op;

   -----------------------------
   -- Prog_Identifier_Post_Op --
   -----------------------------

   procedure Prog_Identifier_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Prog_Identifier_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Prog_Identifier_Post_Op;

   ------------------
   -- Deref_Pre_Op --
   ------------------

   procedure Deref_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Deref_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_DEREF");
      NL (O);
      Relative_Indent (O, 1);
   end Deref_Pre_Op;

   -------------------
   -- Deref_Post_Op --
   -------------------

   procedure Deref_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Deref_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Deref_Post_Op;

   -----------------------
   -- Assignment_Pre_Op --
   -----------------------

   procedure Assignment_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Assignment_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_ASSIGNMENT");
      NL (O);
      Relative_Indent (O, 1);
   end Assignment_Pre_Op;

   ------------------------
   -- Assignment_Post_Op --
   ------------------------

   procedure Assignment_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Assignment_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Assignment_Post_Op;

   -------------------------
   -- Array_Access_Pre_Op --
   -------------------------

   procedure Array_Access_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Array_Access_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_ARRAY_ACCESS");
      NL (O);
      Relative_Indent (O, 1);
   end Array_Access_Pre_Op;

   --------------------------
   -- Array_Access_Post_Op --
   --------------------------

   procedure Array_Access_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Array_Access_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Array_Access_Post_Op;

   -------------------------
   -- Array_Update_Pre_Op --
   -------------------------

   procedure Array_Update_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Array_Update_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_ARRAY_UPDATE");
      NL (O);
      Relative_Indent (O, 1);
   end Array_Update_Pre_Op;

   --------------------------
   -- Array_Update_Post_Op --
   --------------------------

   procedure Array_Update_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Array_Update_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Array_Update_Post_Op;

   -----------------------
   -- Infix_Call_Pre_Op --
   -----------------------

   procedure Infix_Call_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Infix_Call_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_INFIX_CALL");
      NL (O);
      Relative_Indent (O, 1);
   end Infix_Call_Pre_Op;

   ------------------------
   -- Infix_Call_Post_Op --
   ------------------------

   procedure Infix_Call_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Infix_Call_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Infix_Call_Post_Op;

   ------------------------
   -- Prefix_Call_Pre_Op --
   ------------------------

   procedure Prefix_Call_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Prefix_Call_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_PREFIX_CALL");
      NL (O);
      Relative_Indent (O, 1);
   end Prefix_Call_Pre_Op;

   -------------------------
   -- Prefix_Call_Post_Op --
   -------------------------

   procedure Prefix_Call_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Prefix_Call_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Prefix_Call_Post_Op;

   -------------------------
   -- Binding_Prog_Pre_Op --
   -------------------------

   procedure Binding_Prog_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Binding_Prog_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_BINDING_PROG");
      NL (O);
      Relative_Indent (O, 1);
   end Binding_Prog_Pre_Op;

   --------------------------
   -- Binding_Prog_Post_Op --
   --------------------------

   procedure Binding_Prog_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Binding_Prog_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Binding_Prog_Post_Op;

   ------------------------
   -- Binding_Ref_Pre_Op --
   ------------------------

   procedure Binding_Ref_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Binding_Ref_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_BINDING_REF");
      NL (O);
      Relative_Indent (O, 1);
   end Binding_Ref_Pre_Op;

   -------------------------
   -- Binding_Ref_Post_Op --
   -------------------------

   procedure Binding_Ref_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Binding_Ref_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Binding_Ref_Post_Op;

   -----------------------------
   -- Conditional_Prog_Pre_Op --
   -----------------------------

   procedure Conditional_Prog_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Conditional_Prog_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_CONDITIONAL_PROG");
      NL (O);
      Relative_Indent (O, 1);
   end Conditional_Prog_Pre_Op;

   ------------------------------
   -- Conditional_Prog_Post_Op --
   ------------------------------

   procedure Conditional_Prog_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Conditional_Prog_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Conditional_Prog_Post_Op;

   -----------------------
   -- While_Loop_Pre_Op --
   -----------------------

   procedure While_Loop_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_While_Loop_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_WHILE_LOOP");
      NL (O);
      Relative_Indent (O, 1);
   end While_Loop_Pre_Op;

   ------------------------
   -- While_Loop_Post_Op --
   ------------------------

   procedure While_Loop_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_While_Loop_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end While_Loop_Post_Op;

   -------------------------------
   -- Statement_Sequence_Pre_Op --
   -------------------------------

   procedure Statement_Sequence_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Statement_Sequence_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_STATEMENT_SEQUENCE");
      NL (O);
      Relative_Indent (O, 1);
   end Statement_Sequence_Pre_Op;

   --------------------------------
   -- Statement_Sequence_Post_Op --
   --------------------------------

   procedure Statement_Sequence_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Statement_Sequence_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Statement_Sequence_Post_Op;

   ------------------
   -- Label_Pre_Op --
   ------------------

   procedure Label_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Label_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_LABEL");
      NL (O);
      Relative_Indent (O, 1);
   end Label_Pre_Op;

   -------------------
   -- Label_Post_Op --
   -------------------

   procedure Label_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Label_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Label_Post_Op;

   -------------------
   -- Assert_Pre_Op --
   -------------------

   procedure Assert_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Assert_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_ASSERT");
      NL (O);
      Relative_Indent (O, 1);
   end Assert_Pre_Op;

   --------------------
   -- Assert_Post_Op --
   --------------------

   procedure Assert_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Assert_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Assert_Post_Op;

   ---------------------------
   -- Post_Assertion_Pre_Op --
   ---------------------------

   procedure Post_Assertion_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Post_Assertion_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_POST_ASSERTION");
      NL (O);
      Relative_Indent (O, 1);
   end Post_Assertion_Pre_Op;

   ----------------------------
   -- Post_Assertion_Post_Op --
   ----------------------------

   procedure Post_Assertion_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Post_Assertion_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Post_Assertion_Post_Op;

   -----------------------------
   -- Opaque_Assertion_Pre_Op --
   -----------------------------

   procedure Opaque_Assertion_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Opaque_Assertion_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_OPAQUE_ASSERTION");
      NL (O);
      Relative_Indent (O, 1);
   end Opaque_Assertion_Pre_Op;

   ------------------------------
   -- Opaque_Assertion_Post_Op --
   ------------------------------

   procedure Opaque_Assertion_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Opaque_Assertion_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Opaque_Assertion_Post_Op;

   --------------------
   -- Fun_Def_Pre_Op --
   --------------------

   procedure Fun_Def_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Fun_Def_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_FUN_DEF");
      NL (O);
      Relative_Indent (O, 1);
   end Fun_Def_Pre_Op;

   ---------------------
   -- Fun_Def_Post_Op --
   ---------------------

   procedure Fun_Def_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Fun_Def_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Fun_Def_Post_Op;

   ------------------------
   -- Binding_Fun_Pre_Op --
   ------------------------

   procedure Binding_Fun_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Binding_Fun_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_BINDING_FUN");
      NL (O);
      Relative_Indent (O, 1);
   end Binding_Fun_Pre_Op;

   -------------------------
   -- Binding_Fun_Post_Op --
   -------------------------

   procedure Binding_Fun_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Binding_Fun_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Binding_Fun_Post_Op;

   ------------------------
   -- Binding_Rec_Pre_Op --
   ------------------------

   procedure Binding_Rec_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Binding_Rec_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_BINDING_REC");
      NL (O);
      Relative_Indent (O, 1);
   end Binding_Rec_Pre_Op;

   -------------------------
   -- Binding_Rec_Post_Op --
   -------------------------

   procedure Binding_Rec_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Binding_Rec_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Binding_Rec_Post_Op;

   ----------------------
   -- Prog_Call_Pre_Op --
   ----------------------

   procedure Prog_Call_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Prog_Call_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_PROG_CALL");
      NL (O);
      Relative_Indent (O, 1);
   end Prog_Call_Pre_Op;

   -----------------------
   -- Prog_Call_Post_Op --
   -----------------------

   procedure Prog_Call_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Prog_Call_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Prog_Call_Post_Op;

   ----------------------------
   -- Raise_Statement_Pre_Op --
   ----------------------------

   procedure Raise_Statement_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Raise_Statement_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_RAISE_STATEMENT");
      NL (O);
      Relative_Indent (O, 1);
   end Raise_Statement_Pre_Op;

   -----------------------------
   -- Raise_Statement_Post_Op --
   -----------------------------

   procedure Raise_Statement_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Raise_Statement_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Raise_Statement_Post_Op;

   --------------------------------------------
   -- Raise_Statement_With_Parameters_Pre_Op --
   --------------------------------------------

   procedure Raise_Statement_With_Parameters_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Raise_Statement_With_Parameters_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_RAISE_STATEMENT_WITH_PARAMETERS");
      NL (O);
      Relative_Indent (O, 1);
   end Raise_Statement_With_Parameters_Pre_Op;

   ---------------------------------------------
   -- Raise_Statement_With_Parameters_Post_Op --
   ---------------------------------------------

   procedure Raise_Statement_With_Parameters_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Raise_Statement_With_Parameters_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Raise_Statement_With_Parameters_Post_Op;

   ----------------------
   -- Try_Block_Pre_Op --
   ----------------------

   procedure Try_Block_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Try_Block_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_TRY_BLOCK");
      NL (O);
      Relative_Indent (O, 1);
   end Try_Block_Pre_Op;

   -----------------------
   -- Try_Block_Post_Op --
   -----------------------

   procedure Try_Block_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Try_Block_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Try_Block_Post_Op;

   -----------------------------
   -- Unreachable_Code_Pre_Op --
   -----------------------------

   procedure Unreachable_Code_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Unreachable_Code_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_UNREACHABLE_CODE");
      NL (O);
      Relative_Indent (O, 1);
   end Unreachable_Code_Pre_Op;

   ------------------------------
   -- Unreachable_Code_Post_Op --
   ------------------------------

   procedure Unreachable_Code_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Unreachable_Code_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Unreachable_Code_Post_Op;

   ------------------------
   -- Begin_Block_Pre_Op --
   ------------------------

   procedure Begin_Block_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Begin_Block_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_BEGIN_BLOCK");
      NL (O);
      Relative_Indent (O, 1);
   end Begin_Block_Pre_Op;

   -------------------------
   -- Begin_Block_Post_Op --
   -------------------------

   procedure Begin_Block_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Begin_Block_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Begin_Block_Post_Op;

   ---------------------------
   -- Protected_Prog_Pre_Op --
   ---------------------------

   procedure Protected_Prog_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Protected_Prog_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_PROTECTED_PROG");
      NL (O);
      Relative_Indent (O, 1);
   end Protected_Prog_Pre_Op;

   ----------------------------
   -- Protected_Prog_Post_Op --
   ----------------------------

   procedure Protected_Prog_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Protected_Prog_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Protected_Prog_Post_Op;

   ------------------------
   -- Op_Add_Prog_Pre_Op --
   ------------------------

   procedure Op_Add_Prog_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Op_Add_Prog_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_OP_ADD_PROG");
      NL (O);
      Relative_Indent (O, 1);
   end Op_Add_Prog_Pre_Op;

   -------------------------
   -- Op_Add_Prog_Post_Op --
   -------------------------

   procedure Op_Add_Prog_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Op_Add_Prog_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Op_Add_Prog_Post_Op;

   ------------------------------
   -- Op_Substract_Prog_Pre_Op --
   ------------------------------

   procedure Op_Substract_Prog_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Op_Substract_Prog_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_OP_SUBSTRACT_PROG");
      NL (O);
      Relative_Indent (O, 1);
   end Op_Substract_Prog_Pre_Op;

   -------------------------------
   -- Op_Substract_Prog_Post_Op --
   -------------------------------

   procedure Op_Substract_Prog_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Op_Substract_Prog_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Op_Substract_Prog_Post_Op;

   -----------------------------
   -- Op_Multiply_Prog_Pre_Op --
   -----------------------------

   procedure Op_Multiply_Prog_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Op_Multiply_Prog_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_OP_MULTIPLY_PROG");
      NL (O);
      Relative_Indent (O, 1);
   end Op_Multiply_Prog_Pre_Op;

   ------------------------------
   -- Op_Multiply_Prog_Post_Op --
   ------------------------------

   procedure Op_Multiply_Prog_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Op_Multiply_Prog_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Op_Multiply_Prog_Post_Op;

   ---------------------------
   -- Op_Divide_Prog_Pre_Op --
   ---------------------------

   procedure Op_Divide_Prog_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Op_Divide_Prog_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_OP_DIVIDE_PROG");
      NL (O);
      Relative_Indent (O, 1);
   end Op_Divide_Prog_Pre_Op;

   ----------------------------
   -- Op_Divide_Prog_Post_Op --
   ----------------------------

   procedure Op_Divide_Prog_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Op_Divide_Prog_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Op_Divide_Prog_Post_Op;

   ------------------------
   -- Op_Mod_Prog_Pre_Op --
   ------------------------

   procedure Op_Mod_Prog_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Op_Mod_Prog_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_OP_MOD_PROG");
      NL (O);
      Relative_Indent (O, 1);
   end Op_Mod_Prog_Pre_Op;

   -------------------------
   -- Op_Mod_Prog_Post_Op --
   -------------------------

   procedure Op_Mod_Prog_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Op_Mod_Prog_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Op_Mod_Prog_Post_Op;

   -----------------------
   -- Op_Eq_Prog_Pre_Op --
   -----------------------

   procedure Op_Eq_Prog_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Op_Eq_Prog_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_OP_EQ_PROG");
      NL (O);
      Relative_Indent (O, 1);
   end Op_Eq_Prog_Pre_Op;

   ------------------------
   -- Op_Eq_Prog_Post_Op --
   ------------------------

   procedure Op_Eq_Prog_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Op_Eq_Prog_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Op_Eq_Prog_Post_Op;

   -----------------------
   -- Op_Ne_Prog_Pre_Op --
   -----------------------

   procedure Op_Ne_Prog_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Op_Ne_Prog_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_OP_NE_PROG");
      NL (O);
      Relative_Indent (O, 1);
   end Op_Ne_Prog_Pre_Op;

   ------------------------
   -- Op_Ne_Prog_Post_Op --
   ------------------------

   procedure Op_Ne_Prog_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Op_Ne_Prog_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Op_Ne_Prog_Post_Op;

   -----------------------
   -- Op_Lt_Prog_Pre_Op --
   -----------------------

   procedure Op_Lt_Prog_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Op_Lt_Prog_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_OP_LT_PROG");
      NL (O);
      Relative_Indent (O, 1);
   end Op_Lt_Prog_Pre_Op;

   ------------------------
   -- Op_Lt_Prog_Post_Op --
   ------------------------

   procedure Op_Lt_Prog_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Op_Lt_Prog_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Op_Lt_Prog_Post_Op;

   -----------------------
   -- Op_Le_Prog_Pre_Op --
   -----------------------

   procedure Op_Le_Prog_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Op_Le_Prog_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_OP_LE_PROG");
      NL (O);
      Relative_Indent (O, 1);
   end Op_Le_Prog_Pre_Op;

   ------------------------
   -- Op_Le_Prog_Post_Op --
   ------------------------

   procedure Op_Le_Prog_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Op_Le_Prog_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Op_Le_Prog_Post_Op;

   -----------------------
   -- Op_Gt_Prog_Pre_Op --
   -----------------------

   procedure Op_Gt_Prog_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Op_Gt_Prog_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_OP_GT_PROG");
      NL (O);
      Relative_Indent (O, 1);
   end Op_Gt_Prog_Pre_Op;

   ------------------------
   -- Op_Gt_Prog_Post_Op --
   ------------------------

   procedure Op_Gt_Prog_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Op_Gt_Prog_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Op_Gt_Prog_Post_Op;

   -----------------------
   -- Op_Ge_Prog_Pre_Op --
   -----------------------

   procedure Op_Ge_Prog_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Op_Ge_Prog_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_OP_GE_PROG");
      NL (O);
      Relative_Indent (O, 1);
   end Op_Ge_Prog_Pre_Op;

   ------------------------
   -- Op_Ge_Prog_Post_Op --
   ------------------------

   procedure Op_Ge_Prog_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Op_Ge_Prog_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Op_Ge_Prog_Post_Op;

   ----------------------------
   -- Op_Or_Else_Prog_Pre_Op --
   ----------------------------

   procedure Op_Or_Else_Prog_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Op_Or_Else_Prog_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_OP_OR_ELSE_PROG");
      NL (O);
      Relative_Indent (O, 1);
   end Op_Or_Else_Prog_Pre_Op;

   -----------------------------
   -- Op_Or_Else_Prog_Post_Op --
   -----------------------------

   procedure Op_Or_Else_Prog_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Op_Or_Else_Prog_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Op_Or_Else_Prog_Post_Op;

   -----------------------------
   -- Op_And_Then_Prog_Pre_Op --
   -----------------------------

   procedure Op_And_Then_Prog_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Op_And_Then_Prog_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_OP_AND_THEN_PROG");
      NL (O);
      Relative_Indent (O, 1);
   end Op_And_Then_Prog_Pre_Op;

   ------------------------------
   -- Op_And_Then_Prog_Post_Op --
   ------------------------------

   procedure Op_And_Then_Prog_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Op_And_Then_Prog_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Op_And_Then_Prog_Post_Op;

   --------------------------
   -- Op_Minus_Prog_Pre_Op --
   --------------------------

   procedure Op_Minus_Prog_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Op_Minus_Prog_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_OP_MINUS_PROG");
      NL (O);
      Relative_Indent (O, 1);
   end Op_Minus_Prog_Pre_Op;

   ---------------------------
   -- Op_Minus_Prog_Post_Op --
   ---------------------------

   procedure Op_Minus_Prog_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Op_Minus_Prog_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Op_Minus_Prog_Post_Op;

   ------------------------
   -- Op_Not_Prog_Pre_Op --
   ------------------------

   procedure Op_Not_Prog_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Op_Not_Prog_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_OP_NOT_PROG");
      NL (O);
      Relative_Indent (O, 1);
   end Op_Not_Prog_Pre_Op;

   -------------------------
   -- Op_Not_Prog_Post_Op --
   -------------------------

   procedure Op_Not_Prog_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Op_Not_Prog_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Op_Not_Prog_Post_Op;

   -------------------
   -- Binder_Pre_Op --
   -------------------

   procedure Binder_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Binder_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_BINDER");
      NL (O);
      Relative_Indent (O, 1);
   end Binder_Pre_Op;

   --------------------
   -- Binder_Post_Op --
   --------------------

   procedure Binder_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Binder_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Binder_Post_Op;

   -------------------
   -- Recfun_Pre_Op --
   -------------------

   procedure Recfun_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Recfun_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_RECFUN");
      NL (O);
      Relative_Indent (O, 1);
   end Recfun_Pre_Op;

   --------------------
   -- Recfun_Post_Op --
   --------------------

   procedure Recfun_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Recfun_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Recfun_Post_Op;

   -----------------------
   -- Loop_Annot_Pre_Op --
   -----------------------

   procedure Loop_Annot_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Loop_Annot_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_LOOP_ANNOT");
      NL (O);
      Relative_Indent (O, 1);
   end Loop_Annot_Pre_Op;

   ------------------------
   -- Loop_Annot_Post_Op --
   ------------------------

   procedure Loop_Annot_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Loop_Annot_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Loop_Annot_Post_Op;

   -------------------
   -- Wf_Arg_Pre_Op --
   -------------------

   procedure Wf_Arg_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Wf_Arg_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_WF_ARG");
      NL (O);
      Relative_Indent (O, 1);
   end Wf_Arg_Pre_Op;

   --------------------
   -- Wf_Arg_Post_Op --
   --------------------

   procedure Wf_Arg_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Wf_Arg_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Wf_Arg_Post_Op;

   --------------------
   -- Handler_Pre_Op --
   --------------------

   procedure Handler_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Handler_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_HANDLER");
      NL (O);
      Relative_Indent (O, 1);
   end Handler_Pre_Op;

   ---------------------
   -- Handler_Post_Op --
   ---------------------

   procedure Handler_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Handler_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Handler_Post_Op;

   -----------------
   -- File_Pre_Op --
   -----------------

   procedure File_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_File_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_FILE");
      NL (O);
      Relative_Indent (O, 1);
   end File_Pre_Op;

   ------------------
   -- File_Post_Op --
   ------------------

   procedure File_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_File_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end File_Post_Op;

   ---------------------------
   -- Global_Binding_Pre_Op --
   ---------------------------

   procedure Global_Binding_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Global_Binding_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_GLOBAL_BINDING");
      NL (O);
      Relative_Indent (O, 1);
   end Global_Binding_Pre_Op;

   ----------------------------
   -- Global_Binding_Post_Op --
   ----------------------------

   procedure Global_Binding_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Global_Binding_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Global_Binding_Post_Op;

   -------------------------------
   -- Global_Rec_Binding_Pre_Op --
   -------------------------------

   procedure Global_Rec_Binding_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Global_Rec_Binding_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_GLOBAL_REC_BINDING");
      NL (O);
      Relative_Indent (O, 1);
   end Global_Rec_Binding_Pre_Op;

   --------------------------------
   -- Global_Rec_Binding_Post_Op --
   --------------------------------

   procedure Global_Rec_Binding_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Global_Rec_Binding_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Global_Rec_Binding_Post_Op;

   ----------------------------------
   -- Parameter_Declaration_Pre_Op --
   ----------------------------------

   procedure Parameter_Declaration_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Parameter_Declaration_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_PARAMETER_DECLARATION");
      NL (O);
      Relative_Indent (O, 1);
   end Parameter_Declaration_Pre_Op;

   -----------------------------------
   -- Parameter_Declaration_Post_Op --
   -----------------------------------

   procedure Parameter_Declaration_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Parameter_Declaration_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Parameter_Declaration_Post_Op;

   ----------------------------------
   -- Exception_Declaration_Pre_Op --
   ----------------------------------

   procedure Exception_Declaration_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Exception_Declaration_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_EXCEPTION_DECLARATION");
      NL (O);
      Relative_Indent (O, 1);
   end Exception_Declaration_Pre_Op;

   -----------------------------------
   -- Exception_Declaration_Post_Op --
   -----------------------------------

   procedure Exception_Declaration_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Exception_Declaration_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Exception_Declaration_Post_Op;

   ------------------------------
   -- Logic_Declaration_Pre_Op --
   ------------------------------

   procedure Logic_Declaration_Pre_Op
     (State : in out Tree_Printer_State;
      Node  : W_Logic_Declaration_Id)
   is
      pragma Unreferenced (State);
      pragma Unreferenced (Node);
   begin
      P (O, "W_LOGIC_DECLARATION");
      NL (O);
      Relative_Indent (O, 1);
   end Logic_Declaration_Pre_Op;

   -------------------------------
   -- Logic_Declaration_Post_Op --
   -------------------------------

   procedure Logic_Declaration_Post_Op
     (State : in out Tree_Printer_State;
      Node  : W_Logic_Declaration_Id)
   is
      pragma Unreferenced (Node);
      pragma Unreferenced (State);
   begin
      Relative_Indent (O, -1);
   end Logic_Declaration_Post_Op;

end Why.Atree.Treepr;
