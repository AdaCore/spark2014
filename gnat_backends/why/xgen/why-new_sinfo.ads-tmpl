------------------------------------------------------------------------------
--                                                                          --
--                            GNAT2WHY COMPONENTS                           --
--                                                                          --
--                        W H Y - N E W _ S I N F O                         --
--                                                                          --
--                                 S p e c                                  --
--                                                                          --
--                       Copyright (C) 2010-2011, AdaCore                   --
--                                                                          --
-- gnat2why is  free  software;  you can redistribute it and/or modify it   --
-- under terms of the  GNU General Public License as published  by the Free --
-- Software Foundation;  either version  2,  or  (at your option) any later --
-- version. gnat2why is distributed in the hope that it will  be  useful,   --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHAN-  --
-- TABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public --
-- License  for more details. You  should  have  received a copy of the GNU --
-- General Public License  distributed with GNAT; see file COPYING. If not, --
-- write to the Free Software Foundation,  51 Franklin Street, Fifth Floor, --
-- Boston,                                                                  --
--                                                                          --
-- gnat2why is maintained by AdaCore (http://www.adacore.com)               --
--                                                                          --
------------------------------------------------------------------------------
--  This package is automatically generated by xtree. Do not edit manually.

package Why.New_Sinfo is
   pragma Pure;

   --  This package defines the structure of the abstract syntax tree. It
   --  follows closely the syntax defined in the Why RM.

   --  As a minor difference with the Why RM, primitive types are
   --  defined outside of the two spaces (program/logic); they are
   --  used in both spaces with some local differences on which one is
   --  accepted where, it is practical to define independantly and
   --  define subtypes (node classes) on them to discriminate between
   --  those that are accepted in each context.

   _@Declare_Node_Kinds@_

   ----------------------------
   -- Node Class Definitions --
   ----------------------------

   _@Declare_Node_Classes@_

end Why.New_Sinfo;
