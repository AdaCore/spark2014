
For now, floating point types are simply represented as mathematical
reals with a range constraint; this is a quite incomplete
representation that does not take the decimal precision into
account. As a consequence, a floating-point definition has a similar
representation as a signed integer type (but using reals instead of
ints, obviously).

Whether or not we would like to have a more precise representation is
still unclear for now, and is something that we would think of; but
this first approximation should already help us to make progress.

3.5.8 defines operations on floating-point types; it only defines an
attribute ('Digits) that should already be expanded already by the
front end, so nothing to do for this section.

