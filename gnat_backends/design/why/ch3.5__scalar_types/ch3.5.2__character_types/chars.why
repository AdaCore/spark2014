type standard__character

logic integer_of___standard__character : standard__character -> int

logic eq___standard__character :
 standard__character, standard__character -> bool

axiom eq___standard__character___def :
 forall x, y : standard__character.
  eq___standard__character (x, y) = true <->
   integer_of___standard__character (x) = integer_of___standard__character (y)

logic standard__character___in_range : int -> bool

axiom standard__character___in_range___def :
 forall x : int.
 let first = 0 in
 let last = 255 in
  standard__character___in_range (x) = true <-> first <= x <= last

logic standard__character___of_integer : int -> standard__character

axiom standard__character___coerce :
 (forall x : int.
  standard__character___in_range (x) = true ->
   integer_of___standard__character (standard__character___of_integer (x)) = x)

axiom standard__character___range :
 (forall x : standard__character.
  standard__character___in_range (integer_of___standard__character (x)) = true)

axiom standard__character___unicity :
 (forall x, y : standard__character.
   eq___standard__character (x, y) = true <-> x = y)

parameter any___standard__character : unit -> { } standard__character { true }

parameter standard__character___of_integer_ :
 x : int ->
  { standard__character___in_range (x) = true }
   standard__character
  { integer_of___standard__character (result) = x }

parameter safe___standard__character___of_integer_ :
 x : int ->
  { }
   standard__character
  { integer_of___standard__character (result) = x }


