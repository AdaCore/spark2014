
(* General operations on reals *)

(* Some of these definitions are imported from real.why from the
   jessie installation (abs_real, real_of_int). Others implement the
   Ada rounding policy for fixed points (i.e. away from zero). *)

logic abs_real : real -> real

axiom abs_real_pos: forall x:real [abs_real(x)]. x >= 0.0 -> abs_real(x) = x
axiom abs_real_neg: forall x:real [abs_real(x)]. x <= 0.0 -> abs_real(x) = -x

logic real_of_int : int -> real

axiom real_of_int_zero: real_of_int(0) = 0.0
axiom real_of_int_one: real_of_int(1) = 1.0

axiom real_of_int_add: 
  forall x,y:int.
    real_of_int(x+y) = real_of_int(x) + real_of_int(y)

axiom real_of_int_sub: 
  forall x,y:int.
    real_of_int(x-y) = real_of_int(x) - real_of_int(y)

(* rounding operations, away from zero *)

logic round_real : real -> int

axiom round_real_away_from_zero :
(forall x : real.
  abs_real (real_of_int (round_real (x))) - abs_real (x) < 1.0)

