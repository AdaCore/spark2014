------------------------------------------------------------------------
package Anon_Type
--@ line 1
--# own ToDay1, ToDay2, ToDay3;
is




   type Months is (Jan, Feb, Mar, Apr, May, June,
                   July, Aug, Sept, Oct, Nov, Dec);


   subtype New_Name_1 is 
--@ line 11
                   Integer range 1 .. 31;

   subtype New_Name_2 is 
--@ line 13
                   Integer range 1 .. 4000;
   subtype New_Name_4 is Integer range 
--@ line 14
                          1 .. 6;
--@ line 14
   subtype New_Name_3 is String (New_Name_4);
--@ line 10
   type Date is record
      Day        : New_Name_1;
      Month      : Months;
      Year       : New_Name_2;
      Day_String : New_Name_3;
end record;

   type Nothing is tagged record
      null;
   end record;

   ToDay1, ToDay2, ToDay3 : Date;
end Anon_Type;
with Anon_Type;use type Anon_Type.Months; use type Anon_Type.Date; use type Anon_Type.Nothing; 
--@ line 1
------------------------------------------------------------------------------
--  Test the anonymous type as component_list in the record type
--
--# inherit anon_type;
package External_Anon_Type
is
--@ line 23
   procedure Date_Format(ToDay1 , ToDay2 , ToDay3 : out Anon_Type.Date
--@ line 23
                                                            );
end External_Anon_Type;
with Anon_Type;use type Anon_Type.Months; use type Anon_Type.Date; use type Anon_Type.Nothing; with External_Anon_Type;
--@ line 1
------------------------------------------------------------------------------
--  Test the anonymous type as component_list in the record type
--
--# inherit external_anon_type, anon_type;
package Internal_Anon_Type
is
--@ line 23
   procedure Date_Format(ToDay1 , ToDay2 , ToDay3 : out Anon_Type.Date
--@ line 23
                                                            );

end Internal_Anon_Type;
package body Internal_Anon_Type
is
   procedure Date_Format(ToDay1 , ToDay2 , ToDay3 : out Anon_Type.Date
--@ line 3
                                                            )
   is
   begin
      -- Positional aggregate
      ToDay1     := Anon_Type.Date'
--@ line 7
                    (26, Anon_Type.July
--@ line 7
                             , 2010, "Friday");
      -- Named aggregate
      --Day_String => "Friday"
      ToDay2     := Anon_Type.Date'
--@ line 10
                    (Day => 26, Month => Anon_Type.July
--@ line 10
                                             ,
                     Year => 2010, Day_String => "Friday");
      ToDay3     := Anon_Type.Date'
--@ line 12
                    (Month => Anon_Type.July
--@ line 12
                                  , Day => 26,
                     Year => 2010, Day_String => "Friday");
   end Date_Format;
end Internal_Anon_Type;
------------------------------------------------------------------------
                     Total  Examiner Simp(U/R)  Checker Review False Undiscgd
Assert or Post:          1      1      0              0      0      0       0
Precondition check:      0      0      0              0      0      0       0
Check statement:         0      0      0              0      0      0       0
Runtime check:           3      0      3              0      0      0       0
Refinement VCs:          0      0      0              0      0      0       0
Inheritance VCs:         0      0      0              0      0      0       0
===============================================================================
Totals:                  4      1      3              0      0      0       0
% Totals:                      25%    75%             0%     0%     0%      0%
===================== End of Semantic Analysis Summary ========================
