anon_type.adb:10:23: sparkify: implicit loop invariant
anon_type.adb:11:26: sparkify: implicit loop invariant
anon_type.adb:12:29: sparkify: implicit loop invariant
------------------------------------------------------------------------
------------------------------------------------------------------------------
--  Test the anonymous type in for statement see .adb
--
package Anon_Type is

   -- type Matrix_Index is range 0 .. 9;
   subtype New_Name_1 is Integer range 0 .. 9;
--@ line 7
   subtype New_Name_2 is                      Integer range 0 .. 9;
   subtype New_Name_3 is 
--@ line 8
           Integer range 0 .. 999;
--@ line 7
   type Matrix is array (New_Name_1, New_Name_2) of New_Name_3;


   procedure Multiply (X,Y : in Matrix; Z : in out Matrix);

end Anon_Type;
------------------------------------------------------------------------------
--  Test the anonymous type in for statement
--
package body Anon_Type is

   procedure Multiply (X,Y : in Matrix; Z : in out Matrix)
   is
   begin
      -- Z := Matrix'(1 .. 9 => (1 .. 9 =>0));
      for I in Integer range 
--@ line 10
               1 .. 9 loop
         --# assert True;
--@ line 11
         for J in Integer range 
--@ line 11
                  1 .. 9 loop
            --# assert True;
--@ line 12
            for K in Integer range 
--@ line 12
                     1 .. 9 loop
               --# assert True;
--@ line 13
               Z(I,J) := X(I,K) * Y(K,J);
            end loop;
         end loop;
      end loop;
   end Multiply;

end Anon_Type;
------------------------------------------------------------------------
                     Total  Examiner Simp(U/R)  Checker Review False Undiscgd
Assert or Post:         13      4      6              0      0      0       3
Precondition check:      0      0      0              0      0      0       0
Check statement:         0      0      0              0      0      0       0
Runtime check:           7      0      6              0      0      0       1
Refinement VCs:          0      0      0              0      0      0       0
Inheritance VCs:         0      0      0              0      0      0       0
===============================================================================
Totals:                 20      4     12              0      0      0       4  <<<
% Totals:                      20%    60%             0%     0%     0%     20% <<<
===================== End of Semantic Analysis Summary ========================
