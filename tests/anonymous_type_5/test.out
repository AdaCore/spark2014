------------------------------------------------------------------------
package Anon_Type is

   subtype New_Name_5 is 
--@ line 3
      Integer range 0 .. 10;
--@ line 2
   type Tab is array(Integer  range <>)
   of New_Name_5;
   procedure To_Fix (Y : out Integer);
end Anon_Type;
package body Anon_Type is
   procedure To_Fix (Y : out Integer)
   is
      subtype New_Name_2 is Integer range 
--@ line 4
               0 .. 9;
--@ line 4
      subtype New_Name_1 is Tab (New_Name_2);
--@ line 4
      T : New_Name_1  ;
      subtype New_Name_3 is 
--@ line 5
                 Integer range 0 .. 10;
--@ line 5
      type New_Name_4 is array (New_Name_3) of Integer;
--@ line 5
      X : New_Name_4                               := New_Name_4'
--@ line 5
                                                      (others => 0);
   begin
      T  := New_Name_1'
--@ line 7
            (others => 0);
      Y := T (1) + X (1);
   end To_Fix;
end Anon_Type;
------------------------------------------------------------------------
                     Total  Examiner Simp(U/R)  Checker Review False Undiscgd
Assert or Post:          1      1      0              0      0      0       0
Precondition check:      0      0      0              0      0      0       0
Check statement:         0      0      0              0      0      0       0
Runtime check:           2      0      2              0      0      0       0
Refinement VCs:          0      0      0              0      0      0       0
Inheritance VCs:         0      0      0              0      0      0       0
===============================================================================
Totals:                  3      1      2              0      0      0       0
% Totals:                      33%    67%             0%     0%     0%      0%
===================== End of Semantic Analysis Summary ========================
