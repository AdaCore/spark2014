------------------------------------------------------------------------
with Globals;
--@ line 1
--# inherit globals;
package External_Globals
is



   function Direct_Read return Integer;
--@ line 7
   --# global in     Globals.G;

   procedure Direct_Write;
--@ line 9
   --# global    out Globals.G;

   procedure Direct_Read_Write;
--@ line 11
   --# global in out Globals.G;
   --# pre              Globals.G
   --# --@ line 12
   --#                    < Integer'Last;

   function Indirect_Read return Integer;
--@ line 14
   --# global in     Globals.G;

   procedure Indirect_Write;
--@ line 16
   --# global    out Globals.G;

   procedure Indirect_Read_Write;
--@ line 18
   --# global in out Globals.G;
   --# pre              Globals.G
   --# --@ line 19
   --#                    < Integer'Last;
end External_Globals;
package Globals
--@ line 1
--# own G;
is
pragma Elaborate_Body (Globals);

   G : Integer;
end Globals;
with Globals;with External_Globals;
--@ line 1
--# inherit external_globals, globals;
--@ line 1
package Internal_Globals

is



   function Direct_Read return Integer;
--@ line 7
   --# global in     Globals.G;

   procedure Direct_Write;
--@ line 9
   --# global    out Globals.G;

   procedure Direct_Read_Write;
--@ line 11
   --# global in out Globals.G;
   --# pre              Globals.G
   --# --@ line 12
   --#                    < Integer'Last;

   function Indirect_Read return Integer;
--@ line 14
   --# global in     Globals.G;

   procedure Indirect_Write;
--@ line 16
   --# global    out Globals.G;

   procedure Indirect_Read_Write;
--@ line 18
   --# global in out Globals.G;
   --# pre              Globals.G
   --# --@ line 19
   --#                    < Integer'Last;

end Internal_Globals;
package body Internal_Globals
--@ line 1
                     is

   function Direct_Read return Integer is
   begin
      return Globals.G
--@ line 5
              ;
   end Direct_Read;

   procedure Direct_Write is
   begin
      Globals.G
--@ line 10
        := 0;
   end Direct_Write;

   procedure Direct_Read_Write is
   begin
      Globals.G
--@ line 15
        := Globals.G
--@ line 15
             + 1;
   end Direct_Read_Write;

   function Indirect_Read return Integer
   is
--@ line 19
      X : Integer;

      procedure Local (Proxy : in Integer)
--@ line 21
      --# global    out X;
      is
      begin
         X := Proxy;
      end Local;
   begin
      Local(Proxy => 
--@ line 27
             Globals.G);
      return X;
   end Indirect_Read;

   procedure Indirect_Write
   is
--@ line 32
      procedure Local1
--@ line 32
                      (Proxy : out Integer) is
      begin
         Proxy := 0;
      end Local1;
   begin
      Local1(Proxy => 
--@ line 37
             Globals.G);
   end Indirect_Write;

   procedure Indirect_Read_Write
   is
--@ line 41
      procedure Local2
--@ line 41
                      (Proxy : in out Integer) 
      --# pre                 Proxy < Integer'Last;
--@ line 41
                                               is

      begin
         Proxy := Proxy + 1;
      end Local2;
   begin
      Local2(Proxy => 
--@ line 47
             Globals.G);
   end Indirect_Read_Write;

end Internal_Globals;
------------------------------------------------------------------------
                     Total  Examiner Simp(U/R)  Checker Review False Undiscgd
Assert or Post:          9      7      2              0      0      0       0
Precondition check:      1      0      1              0      0      0       0
Check statement:         0      0      0              0      0      0       0
Runtime check:           8      0      8              0      0      0       0
Refinement VCs:          0      0      0              0      0      0       0
Inheritance VCs:         0      0      0              0      0      0       0
===============================================================================
Totals:                 18      7     11              0      0      0       0
% Totals:                      39%    61%             0%     0%     0%      0%
===================== End of Semantic Analysis Summary ========================
