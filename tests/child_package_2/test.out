------------------------------------------------------------------------
with Parent_Child;with Parent;
--@ line 1
--# inherit parent_child, parent;
package External_Parent_Child
is

   procedure Swap;
--@ line 5
   --# global in out Parent.X, Parent_Child.Y;
end External_Parent_Child;
with Parent;
--@ line 1
--# inherit parent_child, parent;
package External_Parent
is

   procedure Do_It;
--@ line 5
   --# global in out Parent.X, Parent_Child.Y;
end External_Parent;
with Parent_Child;with External_Parent_Child;with Parent;
--@ line 1
--# inherit parent_child, parent, external_parent_child;
--@ line 1
package Internal_Parent_Child
--@ line 1
                     is



   procedure Swap;
--@ line 5
   --# global in out Parent.X, Parent_Child.Y;

end Internal_Parent_Child;
with Parent;with External_Parent;
--@ line 1
--# inherit external_parent, parent_child, parent, external_parent_child;
--@ line 1
package Internal_Parent
--@ line 1
               is



   procedure Do_It;
--@ line 5
   --# global in out Parent.X, Parent_Child.Y;

end Internal_Parent;
with Parent;
--@ line 1
--# inherit parent;
package Parent_Child
--@ line 2
--# own Y;
is
pragma Elaborate_Body (Parent_Child);
--@ line 3
   Y : Integer;
end Parent_Child;
package Parent
--@ line 1
--# own X;
is
pragma Elaborate_Body (Parent);
--@ line 3
   X : Integer;
end Parent;
package body Internal_Parent_Child
--@ line 1
                          is

   procedure Swap
   is
--@ line 4
      Tmp : Integer;
   begin
      Tmp := Parent.X
--@ line 6
               + 1;
      Parent.X
--@ line 7
        := Parent_Child.Y
--@ line 7
            ;
      Parent_Child.Y
--@ line 8
        := Tmp;
   end Swap;

end Internal_Parent_Child;

with Parent_Child;
with External_Parent_Child;
--@ line 3
package body Internal_Parent
--@ line 3
                    is

   procedure Do_It is
   begin
      External_Parent_Child.Swap;
   end Do_It;

end Internal_Parent;
------------------------------------------------------------------------
                     Total  Examiner Simp(U/R)  Checker Review False Undiscgd
Assert or Post:          2      2      0              0      0      0       0
Precondition check:      0      0      0              0      0      0       0
Check statement:         0      0      0              0      0      0       0
Runtime check:           3      0      2              0      0      0       1
Refinement VCs:          0      0      0              0      0      0       0
Inheritance VCs:         0      0      0              0      0      0       0
===============================================================================
Totals:                  5      2      2              0      0      0       1  <<<
% Totals:                      40%    40%             0%     0%     0%     20% <<<
===================== End of Semantic Analysis Summary ========================
