unc_test.adb:3:3: sparkify: discard contract on definition of subprogram
unc_test.adb:25:3: sparkify: discard contract on definition of subprogram
------------------------------------------------------------------------
with Unc;use type Unc.Vector; 
--@ line 1
--# inherit unc;
package External_Unc
is
end External_Unc;

with Unc;use type Unc.Vector; with Unc_Test;
--@ line 2
--# inherit unc, unc_test;
package External_Unc_Test
is
  procedure Linear_Search
    (Table : in Unc.Vector
--@ line 6
                      ;
     Value : in Integer;
     Found : out Boolean;
     Index : out Integer);
  --# post              not Found or else Table(Index) = Value;

  function Check_Index
    (Table : Unc.Vector
--@ line 13
                   ;
     Value : Integer;
     Index : Integer) return Boolean;
  --# pre              Table'First <= Index and then Index <= Table'Last;
  --# return Result =>  Result             = (Table(Index) = Value);
end External_Unc_Test;
with Unc;use type Unc.Vector; with External_Unc;
--@ line 1
--# inherit external_unc, unc;
--@ line 1
package Internal_Unc
--@ line 1
            is



end Internal_Unc;

with Unc;use type Unc.Vector; 
with External_Unc;
with Unc_Test;with External_Unc_Test;
--@ line 2
--# inherit external_unc, external_unc_test, unc, unc_test;
package Internal_Unc_Test
--@ line 3
                 is

  procedure Linear_Search
    (Table : in Unc.Vector
--@ line 6
                      ;
     Value : in Integer;
     Found : out Boolean;
     Index : out Integer);
  --# post              not Found or else Table(Index) = Value;

  function Check_Index
    (Table : Unc.Vector
--@ line 13
                   ;
     Value : Integer;
     Index : Integer) return Boolean;
  --# pre              Table'First <= Index and then Index <= Table'Last;
  --# return Result =>  Result             = (Table(Index) = Value);

end Internal_Unc_Test;
package Unc
is
   type Vector is array (Integer range <>) of Integer;
end Unc;

with Unc;use type Unc.Vector; 
--@ line 2
--# inherit unc;
package Unc_Test
is
end Unc_Test;
package body Internal_Unc_Test
--@ line 1
                      is

  procedure Linear_Search
    (Table : in Unc.Vector
--@ line 4
                      ;
     Value : in Integer;
     Found : out Boolean;
     Index : out Integer)
  is

  begin
     Found := False;
     Index := 0;

     for I in Integer range Table'Range loop
        --# assert     Found = False;
        if Table(I) = Value then
           Found := True;
           Index := I;
           --# check      Found and then Index = I;
           exit;
        end if;
     end loop;
  end Linear_Search;

  function Check_Index
    (Table : Unc.Vector
--@ line 26
                   ;
     Value : Integer;
     Index : Integer) return Boolean
  is

  begin
     return Table(Index) = Value;
  end Check_Index;

end Internal_Unc_Test;
------------------------------------------------------------------------
                     Total  Examiner Simp(U/R)  Checker Review False Undiscgd
Assert or Post:          5      0      5              0      0      0       0
Precondition check:      0      0      0              0      0      0       0
Check statement:         1      0      1              0      0      0       0
Runtime check:           5      0      5              0      0      0       0
Refinement VCs:          0      0      0              0      0      0       0
Inheritance VCs:         0      0      0              0      0      0       0
===============================================================================
Totals:                 11      0     11              0      0      0       0
% Totals:                       0%   100%             0%     0%     0%      0%
===================== End of Semantic Analysis Summary ========================
