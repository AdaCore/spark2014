------------------------------------------------------------------------
with tq;use type tq.Complex; 
--@ line 1
--# inherit tq;
package External_tq
is




   function plus (Left, Right: in tq.Complex
--@ line 8
                                         ) return tq.Complex
--@ line 8
                                                         ;

   --# pre              Left.mReal > -1000.0 and Left.mReal < 1000.0 and
   --# 	                
   --# --@ line 11
   --#             	                Left
   --# --@ line 11
   --#                 .	                     mImaginary
   --# --@ line 11
   --#                             > -1000.0 and 	                                              Left
   --# --@ line 11
   --#                                               .	                                                   mImaginary
   --# --@ line 11
   --#                                                           < 1000.0;

   function eval return tq.Complex
--@ line 13
                               ;
end External_tq;
with tq;use type tq.Complex; 
with External_tq;
--@ line 1
--# inherit tq, external_tq;
--@ line 1
package Internal_tq
--@ line 1
           is
--@ line 8
   function plus (Left, Right: in tq.Complex
--@ line 8
                                         ) return tq.Complex
--@ line 8
                                                         ;

   --# pre              Left.mReal > -1000.0 and Left.mReal < 1000.0 and
   --# 	                
   --# --@ line 11
   --#             	                Left
   --# --@ line 11
   --#                 .	                     mImaginary
   --# --@ line 11
   --#                             > -1000.0 and 	                                              Left
   --# --@ line 11
   --#                                               .	                                                   mImaginary
   --# --@ line 11
   --#                                                           < 1000.0;

   function eval return tq.Complex
--@ line 13
                               ;

end Internal_tq;
package tq
is
   type Complex is record
      mReal : Float;
      mImaginary : Float;
end record;
end tq;

package body Internal_tq
--@ line 2
                is

   function plus (Left, Right: in tq.Complex
--@ line 4
                                         ) return tq.Complex
   is
   begin
      return tq.Complex'
--@ line 7
             (
             		mReal
--@ line 8
                    => 	         Left
--@ line 8
                           .	              mReal
--@ line 8
                                  + 	                      Right
--@ line 8
                                         .	                            mReal
--@ line 8
                                               ,
                mImaginary => Left.mImaginary + Right.mImaginary

              );
   end plus;

   function eval return tq.Complex
   is
      mCplex1 : constant tq.Complex
--@ line 16
                                 := tq.Complex'
--@ line 16
                                    (mReal => 2.0,
                                    mImaginary => 3.0);
      mCplex2 : constant tq.Complex
--@ line 18
                                 := tq.Complex'
--@ line 18
                                    (mReal => 4.0,
                                    mImaginary => 4.0);
      sumCplex : tq.Complex
--@ line 20
                        ;
   begin
      sumCplex := External_tq.plus(Left => 
--@ line 22
                       mCplex1, Right => 
--@ line 22
                                mCplex2);

      return sumCplex;
   end eval;

end Internal_tq;
------------------------------------------------------------------------
                     Total  Examiner Simp(U/R)  Checker Review False Undiscgd
Assert or Post:          2      2      0              0      0      0       0
Precondition check:      1      0      0              0      0      0       1
Check statement:         0      0      0              0      0      0       0
Runtime check:           1      0      0              0      0      0       1
Refinement VCs:          0      0      0              0      0      0       0
Inheritance VCs:         0      0      0              0      0      0       0
===============================================================================
Totals:                  4      2      0              0      0      0       2  <<<
% Totals:                      50%     0%             0%     0%     0%     50% <<<
===================== End of Semantic Analysis Summary ========================
