#!/bin/bash

TEST_SUPPORT=`pwd`/../test-support; export TEST_SUPPORT

PATH=`pwd`/../sparkify:$PATH

if [ "`type sparkify 2>/dev/null`" = "" ]; then
  echo "error: you must have sparkify in your PATH"
  exit 1
fi

if [ "`type sparkmake 2>/dev/null`" = "" ]; then
  echo "error: you must have sparkmake in your PATH"
  exit 1
fi

if [ "`type spark 2>/dev/null`" = "" ]; then
  echo "error: you must have spark in your PATH"
  exit 1
fi

if [ "`type sparksimp 2>/dev/null`" = "" ]; then
  echo "error: you must have sparksimp in your PATH"
  exit 1
fi

if [ "`type pogs 2>/dev/null`" = "" ]; then
  echo "error: you must have pogs in your PATH"
  exit 1
fi

my_printf ()
{
  printf "$@"
  printf "$@" >> $log
}

my_cat ()
{
  cat "$@"
  cat "$@" >> $log
}

my_echo ()
{
  echo "$@"
  echo "$@" >> $log
}

log=`pwd`/log
rm -f $log

valid=false

if [ $# -ne 0 ]; then
  if [ "$1" = "-valid" ]; then
    valid=true
  fi
  if [ $# -eq 1 ]; then
    if [ "$1" = "-valid" ]; then
      tests=`ls * | grep ':' | sed 's/://g'`
    else
      tests="$1"
    fi
  elif [ $# -eq 2 ]; then
    tests="$2"
  else
    echo "usage: You can only call $0 with one test or none"
    exit 1
  fi
else
  tests=`ls * | grep ':' | sed 's/://g'`
fi

for d in $tests; do
  cd $d
  my_printf "$d: "

  rm -rf sparkified

  if [ -f test.sh ]; then
    sh test.sh > test.out.tmp 2>&1
  else
    sh test.cmd > test.out.tmp 2>&1
  fi

  if [ -f test.out ]; then
    out=`diff -up test.out test.out.tmp`
    if [ $? -ne 0 ]; then
      if [ -f test.opt ]; then
        my_printf "XFAIL: "
        my_echo `grep XFAIL test.opt | cut -d' ' -f3-`
      else
        if [ "$valid" = "true" ]; then
          cp test.out.tmp test.out
        fi
        my_echo "FAILED, diff in output:"
        my_echo "$out"
      fi
    else
      my_echo "OK"
    fi
  elif [ -s test.out.tmp ]; then
    if [ -f test.opt ]; then
      my_printf "XFAIL: "
      my_echo `grep XFAIL test.opt | cut -d' ' -f3-`
    else
      my_echo "FAILED, unexpected output:"
      my_cat test.out.tmp
    fi
  else
    my_echo "OK"
  fi

  cd ..
done
