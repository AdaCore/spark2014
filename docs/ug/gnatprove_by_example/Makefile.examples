DUMMY:=$(shell mkdir -p flow prove)

.PHONY: gnatprove flow prove results clean force

RESULTS=$(PWD)/results
ALL=$(wildcard examples/*.ad?)
ALL_FLOW_MSG=$(sort $(patsubst examples/%.ads,$(RESULTS)/%.flow,$(patsubst examples/%.adb,$(RESULTS)/%.flow,$(ALL))))
ALL_PROVE_MSG=$(sort $(patsubst examples/%.ads,$(RESULTS)/%.prove,$(patsubst examples/%.adb,$(RESULTS)/%.prove,$(ALL))))

gnatprove: flow prove

flow:
	cp examples/*.gpr flow
	cp examples/illegal.txt flow
	cp examples/spark_mode.txt flow
	cat examples/spark_mode.txt examples/illegal.txt > flow/spark_mode_or_illegal.txt
	-cd flow && gnatprove -f -k -q -j0 -P illegal.gpr --report=all --warnings=on --mode=flow \
	  > flow.results
	cd flow && gnatprove -f -k -q -j0 -P spark_mode.gpr --report=all --warnings=on --mode=flow \
	  >> flow.results
	cd flow && gnatprove -f -k -q -j0 -P no_spark_mode.gpr --report=all --warnings=on --mode=flow \
	  >> flow.results

prove:
	cp examples/*.gpr prove
	echo "" > prove/illegal.txt
	cp examples/spark_mode.txt prove
	cat examples/spark_mode.txt examples/illegal.txt > prove/spark_mode_or_illegal.txt
	cd prove && gnatprove -f -q -j0 -P intro.gpr --report=all --warnings=on --mode=prove \
	  --timeout=5 > prove.results

results: $(ALL_FLOW_MSG) $(ALL_PROVE_MSG)

# The apparently useless use of 'cat' is meant to ignore a possible empty
# result of 'grep'. In that case, force generation of a non-empty output,
# to avoid errors when creating the pdf document.

$(RESULTS)/%.flow: force
	cd $(RESULTS) && grep -e '^$*.ad' ../flow/flow.results | cat > $@
	test -s $@ || echo "no output" > $@

$(RESULTS)/%.prove: force
	cd $(RESULTS) && grep -e '^$*.ad' ../prove/prove.results | cat > $@
	test -s $@ || echo "no output" > $@

clean:
	rm -rf flow prove
