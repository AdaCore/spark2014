(* Module for checking absence of run-time errors and contract cases in the subprogram spec of "nandgate" defined at t1q3b.ads:4, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram_Spec *)
module T1q3b__nandgate__pre
 use import "_gnatprove_standard".Main
 use        "t1q3b__context_in_spec".T1q3b__nandgate__p
 use        "t1q3b__context_in_spec".T1q3b__nandgate__q
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 let pre_check "GP_Subp:t1q3b.ads:4" "GP_Pretty_Ada:precondition for T1Q3B.NandGate"  (t1q3b__nandgate__p : bool) (t1q3b__nandgate__q : bool) (t1q3b__nandgate__r : ref bool) 
 requires { true }
 ensures { true }
  = 
  ( ( abstract (___ignore(True)) ensures {true};
  (any unit
  requires {true} 
  ensures {true} 

  ) );
  ( abstract (___ignore((andb(not ( T1q3b__nandgate__p.p )) (not ( T1q3b__nandgate__q.q ))))) ensures {true};
  (let _temp_standard__t1q3b_0 = (any bool
  ensures {( result = (andb (notb T1q3b__nandgate__p.p) (notb T1q3b__nandgate__q.q)) )} 

  ) in (
   ( abstract (___ignore((andb(T1q3b__nandgate__p.p) (T1q3b__nandgate__q.q)))) ensures {true};
   (let _temp_standard__t1q3b_3 = (any bool
   ensures {( result = (andb T1q3b__nandgate__p.p T1q3b__nandgate__q.q) )} 

   ) in (
    ( abstract (___ignore((andb(T1q3b__nandgate__p.p) (not ( T1q3b__nandgate__q.q ))))) ensures {true};
    (let _temp_standard__t1q3b_2 = (any bool
    ensures {( result = (andb T1q3b__nandgate__p.p (notb T1q3b__nandgate__q.q)) )} 

    ) in (
     ( abstract (___ignore((andb(not ( T1q3b__nandgate__p.p )) (T1q3b__nandgate__q.q)))) ensures {true};
     (let _temp_standard__t1q3b_1 = (any bool
     ensures {( result = (andb (notb T1q3b__nandgate__p.p) T1q3b__nandgate__q.q) )} 

     ) in (
      ( assert { ( "GP_Reason:VC_DISJOINT_CONTRACT_CASES" "GP_Sloc_VC:t1q3b.ads:5:10" "keep_on_simp" ( ( ( ( ( 0 + (if (( _temp_standard__t1q3b_0 = True )) then (
       1) else (
       0)) ) + (if (( _temp_standard__t1q3b_1 = True )) then (
       1) else (
       0)) ) + (if (( _temp_standard__t1q3b_2 = True )) then (
       1) else (
       0)) ) + (if (( _temp_standard__t1q3b_3 = True )) then (
       1) else (
       0)) ) <= 1 ) ) };
      assert { ( "GP_Reason:VC_COMPLETE_CONTRACT_CASES" "GP_Sloc_VC:t1q3b.ads:5:10" "keep_on_simp" ( ( ( ( ( 0 + (if (( _temp_standard__t1q3b_0 = True )) then (
       1) else (
       0)) ) + (if (( _temp_standard__t1q3b_1 = True )) then (
       1) else (
       0)) ) + (if (( _temp_standard__t1q3b_2 = True )) then (
       1) else (
       0)) ) + (if (( _temp_standard__t1q3b_3 = True )) then (
       1) else (
       0)) ) >= 1 ) ) } )))
      )))
     )))
    )))
   ) )
end

(* Module for checking absence of run-time errors and subprogram contract on subprogram body of "nandgate" defined at t1q3b.ads:4, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram_Body *)
module T1q3b__nandgate__def
 use import "_gnatprove_standard".Main
 use        "t1q3b__context_in_spec".T1q3b__nandgate__p
 use        "t1q3b__context_in_spec".T1q3b__nandgate__q
 use        "t1q3b__variables".T1q3b__nandgate__r
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 let def "GP_Subp:t1q3b.ads:4" "GP_Pretty_Ada:T1Q3B.NandGate"  (__void_param : unit) 
 requires { true }
 ensures { true }
  = 
  (let _temp_standard__t1q3b_4 = (any bool
  ensures {( result = (andb (notb T1q3b__nandgate__p.p) (notb T1q3b__nandgate__q.q)) )} 

  ) in (
  (let _temp_standard__t1q3b_7 = (any bool
  ensures {( result = (andb T1q3b__nandgate__p.p T1q3b__nandgate__q.q) )} 

  ) in (
  (let _temp_standard__t1q3b_6 = (any bool
  ensures {( result = (andb T1q3b__nandgate__p.p (notb T1q3b__nandgate__q.q)) )} 

  ) in (
  (let _temp_standard__t1q3b_5 = (any bool
  ensures {( result = (andb (notb T1q3b__nandgate__p.p) T1q3b__nandgate__q.q) )} 

  ) in (
   try
    ( ( "GP_Sloc:t1q3b.adb:7:8" T1q3b__nandgate__r.r := ( not ( (andb(T1q3b__nandgate__p.p) (T1q3b__nandgate__q.q)) ) ) );
    raise Return__exc )
   with
    Return__exc -> ( abstract (___ignore(True)) ensures {true};
    ( ( ( abstract (___ignore((if (_temp_standard__t1q3b_4) then (
     !T1q3b__nandgate__r.r) else (
     True)))) ensures {true};
    assert { ( "GP_Reason:VC_CONTRACT_CASE" "GP_Sloc_VC:t1q3b.ads:5:45" "keep_on_simp" (if (( _temp_standard__t1q3b_4 = True )) then (
     ( !T1q3b__nandgate__r.r = True )) else true) ) } );
    ( abstract (___ignore((if (_temp_standard__t1q3b_5) then (
     !T1q3b__nandgate__r.r) else (
     True)))) ensures {true};
    assert { ( "GP_Reason:VC_CONTRACT_CASE" "GP_Sloc_VC:t1q3b.ads:6:45" "keep_on_simp" (if (( _temp_standard__t1q3b_5 = True )) then (
     ( !T1q3b__nandgate__r.r = True )) else true) ) } ) );
    ( abstract (___ignore((if (_temp_standard__t1q3b_6) then (
     !T1q3b__nandgate__r.r) else (
     True)))) ensures {true};
    assert { ( "GP_Reason:VC_CONTRACT_CASE" "GP_Sloc_VC:t1q3b.ads:7:45" "keep_on_simp" (if (( _temp_standard__t1q3b_6 = True )) then (
     ( !T1q3b__nandgate__r.r = True )) else true) ) } ) );
    ( abstract (___ignore((if (_temp_standard__t1q3b_7) then (
     not ( !T1q3b__nandgate__r.r )) else (
     True)))) ensures {true};
    assert { ( "GP_Reason:VC_CONTRACT_CASE" "GP_Sloc_VC:t1q3b.ads:8:45" "keep_on_simp" (if (( _temp_standard__t1q3b_7 = True )) then (
     not ( ( !T1q3b__nandgate__r.r = True ) )) else true) ) } ) )
   end))
  ))
  ))
  ))

end
