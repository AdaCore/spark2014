(* Module for declaring a program function (and possibly a logic function) for "swap" defined at t1q3a.ads:4, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module T1q3a__swap
 use import "_gnatprove_standard".Main
 use        "_standard__types_in_spec".Standard__integer
 use        "_gnatprove_standard".Integer
 use import "int".Int

 val func
   (t1q3a__swap__x : ref Standard__integer.integer) (t1q3a__swap__y : ref Standard__integer.integer)  :unit
  requires { true }
  ensures { ( ( (Standard__integer.to_int !t1q3a__swap__x) = (Standard__integer.to_int (old !t1q3a__swap__y )) ) /\ ( (Standard__integer.to_int !t1q3a__swap__y) = (Standard__integer.to_int (old !t1q3a__swap__x )) ) ) }
  writes {t1q3a__swap__x, t1q3a__swap__y }

end

(* Module including all necessary axioms for the subprogram "swap" declared at t1q3a.ads:4, created in Gnat2Why.Subprograms.Complete_Subprogram_Spec_Translation *)
module T1q3a__swap__expr_fun_closure
 use import "_gnatprove_standard".Main
 use        T1q3a__swap
 use        "_standard__types_in_spec".Standard__integer
 use        "_gnatprove_standard".Integer
 use import "int".Int

end
