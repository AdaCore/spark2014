(* Module for checking absence of run-time errors and subprogram contract on subprogram body of "nextday_a" defined at t1q3c.ads:6, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram_Body *)
module T1q3c__nextday_a__def
 use import "_gnatprove_standard".Main
 use        "t1q3c__types_in_spec".T1q3c__day
 use        "t1q3c__context_in_spec".T1q3c__nextday_a__today
 use        "t1q3c__variables".T1q3c__nextday_a__tomorrow
 use        "_gnatprove_standard".Integer
 use import "int".Int

 let def "GP_Subp:t1q3c.ads:6" "GP_Pretty_Ada:T1Q3C.NextDay_A"  (__void_param : unit) 
 requires { true }
 ensures { ( "GP_Reason:VC_POSTCONDITION" "GP_Sloc_VC:t1q3c.ads:7:18" "keep_on_simp" ( "GP_Pretty_Ada:Today=Mon and Tomorrow=Tue) or else (Today=Tue and Tomorrow=Wed) or else (Today=Wed and Tomorrow=Thu) or else (Today=Thu and Tomorrow=Fri) or else (Today=Fri and Tomorrow=Sat) or else (Today=Sat and Tomorrow=Sun) or else (Today=Sun and Tomorrow=Mon" "GP_Sloc:t1q3c.ads:7:18" ( ( ( ( ( ( ( ( (T1q3c__day.to_int T1q3c__nextday_a__today.today) = 0 ) /\ ( (T1q3c__day.to_int !T1q3c__nextday_a__tomorrow.tomorrow) = 1 ) ) \/ ( ( (T1q3c__day.to_int T1q3c__nextday_a__today.today) = 1 ) /\ ( (T1q3c__day.to_int !T1q3c__nextday_a__tomorrow.tomorrow) = 2 ) ) ) \/ ( ( (T1q3c__day.to_int T1q3c__nextday_a__today.today) = 2 ) /\ ( (T1q3c__day.to_int !T1q3c__nextday_a__tomorrow.tomorrow) = 3 ) ) ) \/ ( ( (T1q3c__day.to_int T1q3c__nextday_a__today.today) = 3 ) /\ ( (T1q3c__day.to_int !T1q3c__nextday_a__tomorrow.tomorrow) = 4 ) ) ) \/ ( ( (T1q3c__day.to_int T1q3c__nextday_a__today.today) = 4 ) /\ ( (T1q3c__day.to_int !T1q3c__nextday_a__tomorrow.tomorrow) = 5 ) ) ) \/ ( ( (T1q3c__day.to_int T1q3c__nextday_a__today.today) = 5 ) /\ ( (T1q3c__day.to_int !T1q3c__nextday_a__tomorrow.tomorrow) = 6 ) ) ) \/ ( ( (T1q3c__day.to_int T1q3c__nextday_a__today.today) = 6 ) /\ ( (T1q3c__day.to_int !T1q3c__nextday_a__tomorrow.tomorrow) = 0 ) ) ) ) ) }
  = 
  try
   ( ( "GP_Sloc:t1q3c.adb:8:6" (if (( (T1q3c__day.to_int(T1q3c__nextday_a__today.today)) = 6 )) then (
    ( "GP_Sloc:t1q3c.adb:9:18" T1q3c__nextday_a__tomorrow.tomorrow := ( (T1q3c__day.of_int(0)) ) )) else (
    ( "GP_Sloc:t1q3c.adb:11:18" T1q3c__nextday_a__tomorrow.tomorrow := ( (T1q3c__day.of_int(( ( "GP_Reason:VC_RANGE_CHECK" "GP_Sloc_VC:t1q3c.adb:11:30" "keep_on_simp" (T1q3c__day.range_check_((T1q3c__day.to_int(T1q3c__nextday_a__today.today)))) ) + 1 ))) ) ))) );
   raise Return__exc )
  with
   Return__exc -> abstract (___ignore(( ( ( ( ( ( (andb(( (T1q3c__day.to_int(T1q3c__nextday_a__today.today)) = 0 )) (( (T1q3c__day.to_int(!T1q3c__nextday_a__tomorrow.tomorrow)) = 1 ))) || (andb(( (T1q3c__day.to_int(T1q3c__nextday_a__today.today)) = 1 )) (( (T1q3c__day.to_int(!T1q3c__nextday_a__tomorrow.tomorrow)) = 2 ))) ) || (andb(( (T1q3c__day.to_int(T1q3c__nextday_a__today.today)) = 2 )) (( (T1q3c__day.to_int(!T1q3c__nextday_a__tomorrow.tomorrow)) = 3 ))) ) || (andb(( (T1q3c__day.to_int(T1q3c__nextday_a__today.today)) = 3 )) (( (T1q3c__day.to_int(!T1q3c__nextday_a__tomorrow.tomorrow)) = 4 ))) ) || (andb(( (T1q3c__day.to_int(T1q3c__nextday_a__today.today)) = 4 )) (( (T1q3c__day.to_int(!T1q3c__nextday_a__tomorrow.tomorrow)) = 5 ))) ) || (andb(( (T1q3c__day.to_int(T1q3c__nextday_a__today.today)) = 5 )) (( (T1q3c__day.to_int(!T1q3c__nextday_a__tomorrow.tomorrow)) = 6 ))) ) || (andb(( (T1q3c__day.to_int(T1q3c__nextday_a__today.today)) = 6 )) (( (T1q3c__day.to_int(!T1q3c__nextday_a__tomorrow.tomorrow)) = 0 ))) ))) ensures {true}
  end
end

(* Module for checking absence of run-time errors and subprogram contract on subprogram body of "nextday_b" defined at t1q3c.ads:15, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram_Body *)
module T1q3c__nextday_b__def
 use import "_gnatprove_standard".Main
 use        "t1q3c__variables".T1q3c__nextday_b__tomorrow
 use        "t1q3c__types_in_spec".T1q3c__day
 use        "t1q3c__context_in_spec".T1q3c__nextday_b__today
 use        "_gnatprove_standard".Integer
 use import "int".Int

 let def "GP_Subp:t1q3c.ads:15" "GP_Pretty_Ada:T1Q3C.NextDay_B"  (__void_param : unit) 
 requires { true }
 ensures { ( "GP_Reason:VC_POSTCONDITION" "GP_Sloc_VC:t1q3c.ads:16:18" "keep_on_simp" ( "GP_Pretty_Ada:Today=Mon and Tomorrow=Tue) or else (Today=Tue and Tomorrow=Wed) or else (Today=Wed and Tomorrow=Thu) or else (Today=Thu and Tomorrow=Fri) or else (Today=Fri and Tomorrow=Sat) or else (Today=Sat and Tomorrow=Sun) or else (Today=Sun and Tomorrow=Mon" "GP_Sloc:t1q3c.ads:16:18" ( ( ( ( ( ( ( ( (T1q3c__day.to_int T1q3c__nextday_b__today.today) = 0 ) /\ ( (T1q3c__day.to_int !T1q3c__nextday_b__tomorrow.tomorrow) = 1 ) ) \/ ( ( (T1q3c__day.to_int T1q3c__nextday_b__today.today) = 1 ) /\ ( (T1q3c__day.to_int !T1q3c__nextday_b__tomorrow.tomorrow) = 2 ) ) ) \/ ( ( (T1q3c__day.to_int T1q3c__nextday_b__today.today) = 2 ) /\ ( (T1q3c__day.to_int !T1q3c__nextday_b__tomorrow.tomorrow) = 3 ) ) ) \/ ( ( (T1q3c__day.to_int T1q3c__nextday_b__today.today) = 3 ) /\ ( (T1q3c__day.to_int !T1q3c__nextday_b__tomorrow.tomorrow) = 4 ) ) ) \/ ( ( (T1q3c__day.to_int T1q3c__nextday_b__today.today) = 4 ) /\ ( (T1q3c__day.to_int !T1q3c__nextday_b__tomorrow.tomorrow) = 5 ) ) ) \/ ( ( (T1q3c__day.to_int T1q3c__nextday_b__today.today) = 5 ) /\ ( (T1q3c__day.to_int !T1q3c__nextday_b__tomorrow.tomorrow) = 6 ) ) ) \/ ( ( (T1q3c__day.to_int T1q3c__nextday_b__today.today) = 6 ) /\ ( (T1q3c__day.to_int !T1q3c__nextday_b__tomorrow.tomorrow) = 0 ) ) ) ) ) }
  = 
  try
   ( ( "GP_Sloc:t1q3c.adb:19:6" (if (( (T1q3c__day.to_int(T1q3c__nextday_b__today.today)) = 0 )) then (
    ( "GP_Sloc:t1q3c.adb:20:29" T1q3c__nextday_b__tomorrow.tomorrow := ( (T1q3c__day.of_int(1)) ) )) else if (( (T1q3c__day.to_int(T1q3c__nextday_b__today.today)) = 1 )) then (
    ( "GP_Sloc:t1q3c.adb:21:29" T1q3c__nextday_b__tomorrow.tomorrow := ( (T1q3c__day.of_int(2)) ) )) else if (( (T1q3c__day.to_int(T1q3c__nextday_b__today.today)) = 2 )) then (
    ( "GP_Sloc:t1q3c.adb:22:29" T1q3c__nextday_b__tomorrow.tomorrow := ( (T1q3c__day.of_int(3)) ) )) else if (( (T1q3c__day.to_int(T1q3c__nextday_b__today.today)) = 3 )) then (
    ( "GP_Sloc:t1q3c.adb:23:29" T1q3c__nextday_b__tomorrow.tomorrow := ( (T1q3c__day.of_int(4)) ) )) else if (( (T1q3c__day.to_int(T1q3c__nextday_b__today.today)) = 4 )) then (
    ( "GP_Sloc:t1q3c.adb:24:29" T1q3c__nextday_b__tomorrow.tomorrow := ( (T1q3c__day.of_int(5)) ) )) else if (( (T1q3c__day.to_int(T1q3c__nextday_b__today.today)) = 5 )) then (
    ( "GP_Sloc:t1q3c.adb:25:29" T1q3c__nextday_b__tomorrow.tomorrow := ( (T1q3c__day.of_int(6)) ) )) else (
    ( "GP_Sloc:t1q3c.adb:26:29" T1q3c__nextday_b__tomorrow.tomorrow := ( (T1q3c__day.of_int(0)) ) ))) );
   raise Return__exc )
  with
   Return__exc -> abstract (___ignore(( ( ( ( ( ( (andb(( (T1q3c__day.to_int(T1q3c__nextday_b__today.today)) = 0 )) (( (T1q3c__day.to_int(!T1q3c__nextday_b__tomorrow.tomorrow)) = 1 ))) || (andb(( (T1q3c__day.to_int(T1q3c__nextday_b__today.today)) = 1 )) (( (T1q3c__day.to_int(!T1q3c__nextday_b__tomorrow.tomorrow)) = 2 ))) ) || (andb(( (T1q3c__day.to_int(T1q3c__nextday_b__today.today)) = 2 )) (( (T1q3c__day.to_int(!T1q3c__nextday_b__tomorrow.tomorrow)) = 3 ))) ) || (andb(( (T1q3c__day.to_int(T1q3c__nextday_b__today.today)) = 3 )) (( (T1q3c__day.to_int(!T1q3c__nextday_b__tomorrow.tomorrow)) = 4 ))) ) || (andb(( (T1q3c__day.to_int(T1q3c__nextday_b__today.today)) = 4 )) (( (T1q3c__day.to_int(!T1q3c__nextday_b__tomorrow.tomorrow)) = 5 ))) ) || (andb(( (T1q3c__day.to_int(T1q3c__nextday_b__today.today)) = 5 )) (( (T1q3c__day.to_int(!T1q3c__nextday_b__tomorrow.tomorrow)) = 6 ))) ) || (andb(( (T1q3c__day.to_int(T1q3c__nextday_b__today.today)) = 6 )) (( (T1q3c__day.to_int(!T1q3c__nextday_b__tomorrow.tomorrow)) = 0 ))) ))) ensures {true}
  end
end
