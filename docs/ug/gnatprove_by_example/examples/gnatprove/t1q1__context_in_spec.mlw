(* Module for declaring a program function (and possibly a logic function) for "increment" defined at t1q1.ads:4, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module T1q1__increment
 use import "_gnatprove_standard".Main
 use        "_standard__types_in_spec".Standard__integer
 use        "_standard__types_in_spec".Standard__integer
 use        "_gnatprove_standard".Integer
 use import "int".Int

 val func
   (t1q1__increment__x : ref Standard__integer.integer)  :unit
  requires { ( (Standard__integer.to_int !t1q1__increment__x) < 2147483647 ) }
  ensures { ( (Standard__integer.to_int !t1q1__increment__x) = ( (Standard__integer.to_int (old !t1q1__increment__x )) + 1 ) ) }
  writes {t1q1__increment__x }

end

(* Module including all necessary axioms for the subprogram "increment" declared at t1q1.ads:4, created in Gnat2Why.Subprograms.Complete_Subprogram_Spec_Translation *)
module T1q1__increment__expr_fun_closure
 use import "_gnatprove_standard".Main
 use        "_standard__types_in_spec".Standard__integer
 use        "_standard__types_in_spec".Standard__integer
 use        T1q1__increment
 use        "_gnatprove_standard".Integer
 use import "int".Int

end
