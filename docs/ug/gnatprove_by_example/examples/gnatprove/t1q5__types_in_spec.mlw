(* Module for declaring a program function (and possibly a logic function) for "bounded_add" defined at t1q5.ads:4, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module T1q5__bounded_add
 use import "_gnatprove_standard".Main
 use        "_standard__types_in_spec".Standard__integer
 use        "_standard__types_in_spec".Standard__integer
 use        "_gnatprove_standard".Integer
 use import "int".Int

 val func
   (t1q5__bounded_add__x : Standard__integer.integer) (t1q5__bounded_add__y : Standard__integer.integer) (t1q5__bounded_add__z : ref Standard__integer.integer)  :unit
  requires { true }
  ensures { (if (( (old (andb (Integer.bool_le ( -2147483648 ) ( (Standard__integer.to_int t1q5__bounded_add__x) + (Standard__integer.to_int t1q5__bounded_add__y) )) (Integer.bool_le ( (Standard__integer.to_int t1q5__bounded_add__x) + (Standard__integer.to_int t1q5__bounded_add__y) ) 2147483647)) ) = True )) then (
   ( (Standard__integer.to_int !t1q5__bounded_add__z) = ( (Standard__integer.to_int t1q5__bounded_add__x) + (Standard__integer.to_int t1q5__bounded_add__y) ) )) else ((if (( (old (Integer.bool_gt ( -2147483648 ) ( (Standard__integer.to_int t1q5__bounded_add__x) + (Standard__integer.to_int t1q5__bounded_add__y) )) ) = True )) then (
   ( (Standard__integer.to_int !t1q5__bounded_add__z) = ( -2147483648 ) )) else ((if (( (old (Integer.bool_gt ( (Standard__integer.to_int t1q5__bounded_add__x) + (Standard__integer.to_int t1q5__bounded_add__y) ) 2147483647) ) = True )) then (
   ( (Standard__integer.to_int !t1q5__bounded_add__z) = 2147483647 )) else (
   true)))))) }
  writes {t1q5__bounded_add__z }

end
