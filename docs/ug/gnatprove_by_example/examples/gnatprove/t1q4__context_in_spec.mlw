(* Module for defining the value of constant "n" defined at t1q4.ads:4, created in Gnat2Why.Decls.Translate_Constant *)
module T1q4__isqrt__n
 use import "_gnatprove_standard".Main
 use        "_standard__types_in_spec".Standard__natural
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function n 
   :Standard__natural.natural
end

(* Module for declaring a program function (and possibly a logic function) for "isqrt" defined at t1q4.ads:4, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module T1q4__isqrt
 use import "_gnatprove_standard".Main
 use        "_standard__types_in_spec".Standard__integer
 use        "_standard__types_in_spec".Standard__natural
 use        "_gnatprove_standard".Integer
 use import "int".Int

 val func
   (t1q4__isqrt__n : Standard__natural.natural) (t1q4__isqrt__root : ref Standard__natural.natural)  :unit
  requires { true }
  ensures { ( ( ( (Standard__natural.to_int !t1q4__isqrt__root) * (Standard__natural.to_int !t1q4__isqrt__root) ) <= (Standard__natural.to_int t1q4__isqrt__n) ) /\ ( ( ( (Standard__natural.to_int !t1q4__isqrt__root) + 1 ) * ( (Standard__natural.to_int !t1q4__isqrt__root) + 1 ) ) > (Standard__natural.to_int t1q4__isqrt__n) ) ) }
  writes {t1q4__isqrt__root }

end

(* Module including all necessary axioms for the subprogram "isqrt" declared at t1q4.ads:4, created in Gnat2Why.Subprograms.Complete_Subprogram_Spec_Translation *)
module T1q4__isqrt__expr_fun_closure
 use import "_gnatprove_standard".Main
 use        T1q4__isqrt
 use        "_standard__types_in_spec".Standard__integer
 use        "_standard__types_in_spec".Standard__natural
 use        "_gnatprove_standard".Integer
 use import "int".Int

end
