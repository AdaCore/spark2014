aggregate project GNATprove_By_Example is

   package Builder is
      for Global_Configuration_Pragmas use "test.adc";
   end Builder;

   for Project_Files use (
     "abnormal_terminations/test.gpr",
     "account1/test.gpr",
     "account2/test.gpr",
     "account3/test.gpr",
     "account4/test.gpr",
     "account5/test.gpr",
     "account6/test.gpr",
     "account7/test.gpr",
     "account8/test.gpr",
     "addition/test.gpr",
     "addition_rewrite/test.gpr",
     "addition_saturated/test.gpr",
     "aliasing/test.gpr",
     "arith_with_local_subp/test.gpr",
     "assert_disabled/test.gpr",
     "assert_enabled/test.gpr",
     "assert_twice/test.gpr",
     "assume_then_assert/test.gpr",
     "assumptions/test.gpr",
     "bank1/test.gpr",
     "bank2/test.gpr",
     "bank3/test.gpr",
     "bank4/test.gpr",
     "bank5/test.gpr",
     "bank6/test.gpr",
     "bank7/test.gpr",
     "bank8/test.gpr",
     "binary_search_final/search.gpr",
     "binary_search_naive/search.gpr",
     "binary_search_no_loopinv/search.gpr",
     "binary_search_post_assert/search.gpr",
     "binary_search_precise/search.gpr",
     "binary_search_range/search.gpr",
     "check_aliasing/test.gpr",
     "check_param_aliasing/test.gpr",
     "count_arr_zero/test.gpr",
     "counterex/test.gpr",
     "counterex_unprovable/test.gpr",
     "count_vec_zero/test.gpr",
     "data_initialization/test.gpr",
     "diff/test.gpr",
     "diff2/test.gpr",
     "exclude_selected_parts/test.gpr",
     "exclude_unit_body/test.gpr",
     "forgetful_assert/test.gpr",
     "frame_condition/test.gpr",
     "functional/test.gpr",
     "functional_imported/test.gpr",
     "functional_proved/test.gpr",
     "gen_abstract_global/test.gpr",
     "gen_ada_global/test.gpr",
     "gen_imported_global/test.gpr",
     "gen_refined_global/test.gpr",
     "geometry/test.gpr",
     "increment/test.gpr",
     "increment_calls/test.gpr",
     "increment_full/test.gpr",
     "increment_guarded/test.gpr",
     "increment_local/test.gpr",
     "increment_loop/test.gpr",
     "increment_loop_inv/test.gpr",
     "init_arr_index/test.gpr",
     "init_arr_zero/test.gpr",
     "init_data/test.gpr",
     "init_list_zero/test.gpr",
     "init_vec_zero/test.gpr",
     "instance_increment/test.gpr",
     "integrity/test.gpr",
     "integrity_proved/test.gpr",
     "invariants/test.gpr",
     "justifications/test.gpr",
     "linear_search_ada/search.gpr",
     "linear_search_contract/search.gpr",
     "linear_search_final/search.gpr",
     "linear_search_final_cases/search.gpr",
     "linear_search_flow/search.gpr",
     "linear_search_loopinv/search.gpr",
     "linear_search_loopinv_ok/search.gpr",
     "linear_search_no_variant/search.gpr",
     "linear_search_prove/search.gpr",
     "linear_search_spark/search.gpr",
     "logging/test.gpr",
     "logging_discr/test.gpr",
     "logging_in/test.gpr",
     "logging_in_abstract/test.gpr",
     "logging_no_dispatch/test.gpr",
     "logging_out/test.gpr",
     "logging_out_abstract/test.gpr",
     "logging_priv/test.gpr",
     "loop_types/test.gpr",
     "loop_unrolling/test.gpr",
     "map_arr_incr/test.gpr",
     "map_list_incr/test.gpr",
     "map_vec_incr/test.gpr",
     "more_use_geometry/test.gpr",
     "my_find/test.gpr",
     "nonlinear/test.gpr",
     "only_data_dependencies/test.gpr",
     "only_flow_dependencies/test.gpr",
     "ownership_borrowing/test.gpr",
     "ownership_observing/test.gpr",
     "ownership_transfer/test.gpr",
     "ownership_transfer_at_call/test.gpr",
     "perm/test.gpr",
     "possibly_nonreturning/test.gpr",
     "predicates/test.gpr",
     "preserved_components/test.gpr",
     "preserved_fields/test.gpr",
     "range_logging/test.gpr",
     "range_logging_no_dispatch/test.gpr",
     "recursive_subprograms/test.gpr",
     "recursive_subprograms-multiple/test.gpr",
     "recursive_subprograms-mutually/test.gpr",
     "search_arr_max/test.gpr",
     "search_arr_zero/test.gpr",
     "search_list_max/test.gpr",
     "search_list_zero/test.gpr",
     "search_vec_max/test.gpr",
     "search_vec_zero/test.gpr",
     "selected_subprograms/test.gpr",
     "selected_units/test.gpr",
     "semaphores1/test.gpr",
     "semaphores2/test.gpr",
     "simple_loops/test.gpr",
     "simple_loops_cdp/test.gpr",
     "simple_loops_unroll/test.gpr",
     "sort/test.gpr",
     "sums/test.gpr",
     "swap/test.gpr",
     "swap_bad/test.gpr",
     "swap_bad_depends/test.gpr",
     "swap_bad_post/test.gpr",
     "swap_modulo/test.gpr",
     "swap_warn/test.gpr",
     "synchronous_abstractions/test.gpr",
     "synchronous_abstractions_user/test.gpr",
     "terminating_annotations/test.gpr",
     "terminating_loops/test.gpr",
     "uc/test.gpr",
     "update_arr_zero/test.gpr",
     "update_list_zero/test.gpr",
     "update_range_arr_zero/test.gpr",
     "update_range_list_zero/test.gpr",
     "update_range_vec_zero/test.gpr",
     "update_vec_zero/test.gpr",
     "use_generic/test.gpr",
     "use_geometry/test.gpr",
     "use_global/test.gpr",
     "use_logging/test.gpr",
     "use_logging_classwide/test.gpr",
     "validate_arr_zero/test.gpr",
     "validate_full_arr_zero/test.gpr",
     "validate_list_zero/test.gpr",
     "validate_vec_zero/test.gpr",
     "validity/test.gpr",
     "volatile_example_a/test.gpr",
     "volatile_or_not/test.gpr",
     "warn/test.gpr",
     "warn2/test.gpr");

end GNATprove_By_Example;
