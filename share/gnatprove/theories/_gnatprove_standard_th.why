theory Integer_Func
  use import int.Int
  use import bool.Bool

  function bool_eq int int : bool
  function bool_ne int int : bool
  function bool_lt int int : bool
  function bool_le int int : bool
  function bool_gt int int : bool
  function bool_ge int int : bool

  axiom bool_eq_axiom:
    forall x:int.
    forall y:int.
      bool_eq x y = True <-> x = y

  axiom bool_ne_axiom:
    forall x:int.
    forall y:int.
      bool_ne x y = True <-> x <> y

  axiom bool_lt_axiom:
    forall x:int.
    forall y:int.
      bool_lt x y = True <-> x < y

  axiom Bool_int__le_axiom:
    forall x:int.
    forall y:int.
      bool_le x y = True <-> x <= y

  axiom bool_gt_axiom:
    forall x:int.
    forall y:int.
        bool_gt x y = True <-> x > y

  axiom bool_ge_axiom:
    forall x:int.
    forall y:int.
        bool_ge x y = True <-> x >= y

end

theory Array__1__Func

  use import int.Int
  use import bool.Bool

  type t 'a

  function attr__ATTRIBUTE_LENGTH (t 'a) : int
  function attr__ATTRIBUTE_FIRST (t 'a) : int
  function attr__ATTRIBUTE_LAST (t 'a) : int

  function access int (t 'a) : 'a
  function update int (t 'a) 'a : (t 'a)

  function bool_eq (t 'a) (t 'a) : bool

end
