------------------------------------------------------------------------------
--                                                                          --
--                            GNAT2WHY COMPONENTS                           --
--                                                                          --
--                  W H Y - A T R E E - T R A V E R S A L                   --
--                                                                          --
--                                 S p e c                                  --
--                                                                          --
--                       Copyright (C) 2010-2015, AdaCore                   --
--                                                                          --
-- gnat2why is  free  software;  you can redistribute  it and/or  modify it --
-- under terms of the  GNU General Public License as published  by the Free --
-- Software  Foundation;  either version 3,  or (at your option)  any later --
-- version.  gnat2why is distributed  in the hope that  it will be  useful, --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHAN- --
-- TABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public --
-- License for  more details.  You should have  received  a copy of the GNU --
-- General  Public License  distributed with  gnat2why;  see file COPYING3. --
-- If not,  go to  http://www.gnu.org/licenses  for a complete  copy of the --
-- license.                                                                 --
--                                                                          --
-- gnat2why is maintained by AdaCore (http://www.adacore.com)               --
--                                                                          --
------------------------------------------------------------------------------
--  This package is automatically generated by xtree. Do not edit manually.

with Why.Ids; use Why.Ids;

package Why.Atree.Traversal is

   type Traverse_Control is
     (Continue,
      --  Continues the normal depth-first traversal

      Abandon_Children,
      --  Prevents traversal of the current element's children

      Abandon_Siblings,
      --  Prevents traversal of the current element's children and remaining
      --  siblings.

      Terminate_Immediately
      --  Does exactly that
      );

   type Traversal_State is abstract tagged record
      Control : Traverse_Control;
   end record;

   procedure Traverse
     (State : in out Traversal_State'Class;
      Node  : Why_Node_Id);

   procedure Traverse_List
     (State   : in out Traversal_State'Class;
      List_Id : Why_Node_List);

   _@Declare_Traversal_Ops@_

end Why.Atree.Traversal;
