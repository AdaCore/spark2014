------------------------------------------------------------------------------
--                                                                          --
--                            GNAT2WHY COMPONENTS                           --
--                                                                          --
--                     W H Y - A T R E E - T R E E P R                      --
--                                                                          --
--                                 B o d y                                  --
--                                                                          --
--                       Copyright (C) 2010-2015, AdaCore                   --
--                                                                          --
-- gnat2why is  free  software;  you can redistribute  it and/or  modify it --
-- under terms of the  GNU General Public License as published  by the Free --
-- Software  Foundation;  either version 3,  or (at your option)  any later --
-- version.  gnat2why is distributed  in the hope that  it will be  useful, --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHAN- --
-- TABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public --
-- License for  more details.  You should have  received  a copy of the GNU --
-- General  Public License  distributed with  gnat2why;  see file COPYING3. --
-- If not,  go to  http://www.gnu.org/licenses  for a complete  copy of the --
-- license.                                                                 --
--                                                                          --
-- gnat2why is maintained by AdaCore (http://www.adacore.com)               --
--                                                                          --
------------------------------------------------------------------------------
--  This package is automatically generated by xtree. Do not edit manually.

with Outputs;             use Outputs;
with Why.Atree.Accessors; use Why.Atree.Accessors;
with Why.Conversions;     use Why.Conversions;
with Why.Images;          use Why.Images;

package body Why.Atree.Treepr is

   O : constant Output_Id := Stdout;

   ---------
   -- wpn --
   ---------

   procedure wpn (Node : Why_Node_Id) is
   begin
      wpt (Node, 1);
   end wpn;

   ---------
   -- wpt --
   ---------

   procedure wpt (Node : Why_Node_Id; Depth : Nat) is
      TPS : Tree_Printer_State := (Control => Continue, Depth => Depth);
   begin
      Traverse (TPS, Node);
   end wpt;

   _@Implement_Treepr_Traversals@_

end Why.Atree.Treepr;
