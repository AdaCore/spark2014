The submission has improved since the last round but not all of my
concerns have been addressed satisfactory. I would like to see the
following issues fixed.


p.3

> > "Note that the cases above are disjoint and complete, as expected" Is
> > this something checked by SPARK? If not, what happens, if the cases are
> > not disjoint and complete? Please expound and be more clear.
> >
>
> Left for now.
>

Does SPARK check for disjointness/completeness or not? It is not a
problem if it does not check, but there must be a clear statement.


p.4

"Ada 2012 and thus SPARK 2014 have such semantics."

Please say what the semantics is. Here the paper puts a lot of emphasis
on differences in assertion semantics but does not explain the
differences _at all_.


"Successful execution of postcondition -> test successful" Only if
precondition holds!

"An increase in run-time checks gives better robustness testing" This is
not clear. See remarks on robustness testing in previous review.

p.5

"Proof of absence of some run-time exceptions provides for some
robustness testing" Also not clear. See above. You might want to define
robustness testing!


"Related Work on Combined Test and Proof"

I think SPEC# can emit run-time checks for unproven goals and KeY can
generate tests for them.


p.6

"Minimized mode: larger base type (64bits) used when needed"
Please clarify "when needed" and what happens if the value overflows the
64 bit type in this mode. See also previous review.


p.10

"existential quantification is difficult for the automatic provers that
we have available"

This is only true if the existential quantifier appears in positive
polarity in the VCs. Does the problem occur when proving the contract or
when using it? Of course, quantifiers typically appear in both
polarities.  The universal quantifier in the postcondition will become
existential when the contract is used, yet it seems not to be a
problem. In other words, the explanation given here why that particular
quantifier is difficult is not necessarily adequate. Please clarify or
remove.
