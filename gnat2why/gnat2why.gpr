with "gnat2why_c";
with "gnatcoll";

project GNAT2Why is

   for Object_Dir use "obj";
   for Exec_Dir use "../install/bin";

   for Source_Dirs use ("why", ".", "spark", "utils", "..",
                        "flow", "../common", "obj", "gnat_src",
                        "counterexamples");

   for Main use ("gnat1drv.adb");


   type Build_Type is ("Debug", "Devel", "Production", "Coverage");
   --  Debug: all checks enabled
   --  Devel: inexpensive checks enabled, expensive checks disabled
   --  Production: all checks disabled

   Build : Build_Type := External ("Build", "Devel");

   Common_Switches := ("-g");

   package Compiler is
      for Local_Configuration_Pragmas use "gnat.adc";

      case Build is
         when "Debug" | "Devel" =>
            for Switches ("Ada") use
               Common_Switches & ("-gnatg", "-O0", "-gnata", "-gnatVa");
         when "Coverage" =>
            for Switches ("Ada") use
               Common_Switches & ("-O0");
         when "Production" =>
            for Switches ("Ada") use
               Common_Switches & ("-O2", "-gnatpn", "-gnatg");
      end case;
   end Compiler;

   package Builder is
      for Executable ("gnat1drv.adb") use "gnat2why";

      case Build is
         when "Debug" =>
            for Global_Configuration_Pragmas use "debug.adc";
         when "Devel" =>
            for Global_Configuration_Pragmas use "devel.adc";
         when "Coverage" =>
            --  ??? currently coverage requires tampering checks to be disabled
            for Global_Configuration_Pragmas use "coverage.adc";
         when "Production" =>
            null;
      end case;

      for Switches ("Ada") use ("-m");
   end Builder;

   package IDE is
      for VCS_Kind use "Auto";
   end IDE;

   package CodePeer is
      for Switches use ("-j0",
                        "-level", "1",
                        "-gnatws");

      for Excluded_Source_Dirs use ("gnat_src");

      --  Exclude source files leading to false positives
      for Excluded_Source_Files use
        ("assumptions.ads",
         "assumptions.adb",
         "flow.ads",
         "flow-analysis.adb",
         "flow-analysis-sanity.adb",
         "flow-control_flow_graph.adb",
         "flow-data_dependence_graph.adb",
         "graphs.adb",
         "why-atree-sprint.adb",

         --  the following files contain instances of Graphs
         --  leading to false alarms in graphs.adb
         "flow.ads",
         "flow_generated_globals-partial.adb",
         "flow_generated_globals-phase_2.adb",
         "flow_generated_globals-phase_2-visibility.adb",
         "flow_utility.adb",
         "flow_visibility.adb");

   end CodePeer;

   package Coverage is

      for Excluded_Units use ("atree",
                              "debug",
                              "einfo",
                              "lib",
                              "lib.list",
                              "lib.sort",
                              "nmake",
                              "opt",
                              "output",
                              "osint",
                              "osint.c",
                              "par",
                              "par.ch2",
                              "par.ch3",
                              "par.ch4",
                              "par.ch5",
                              "par.ch6",
                              "par.ch7",
                              "par.ch8",
                              "par.ch9",
                              "par.ch10",
                              "par.ch11",
                              "par.ch12",
                              "par.ch13",
                              "par.endh",
                              "par.labl",
                              "par.load",
                              "par.prag",
                              "par.sync",
                              "par.tchk",
                              "par.sco",
                              "par.util",
                              "restrict",
                              "rident",
                              "rtsfind",
                              "scn",
                              "scans",
                              "scil_ll",
                              "sem",
                              "sem_aggr",
                              "sem_attr",
                              "sem_aux",
                              "sem_cat",
                              "sem_ch3",
                              "sem_ch4",
                              "sem_ch6",
                              "sem_ch7",
                              "sem_ch8",
                              "sem_ch10",
                              "sem_ch12",
                              "sem_ch13",
                              "sem_case",
                              "sem_dim",
                              "sem_disp",
                              "sem_dist",
                              "sem_elab",
                              "sem_elim",
                              "sem_eval",
                              "sem_intr",
                              "sem_mech",
                              "sem_prag",
                              "sem_res",
                              "sem_type",
                              "sem_util",
                              "sem_warn",
                              "set_targ",
                              "sinfo",
                              "sinfo.cn",
                              "sinput",
                              "sinput.l",
                              "sprint",
                              "stand",
                              "stringt",
                              "style",
                              "stylesw",
                              "targparm",
                              "tbuild",
                              "types",
                              "ttypes",
                              "uname",
                              "validsw",
                              "warnsw",
                              "why",
                              "why.classes",
                              "why.sinfo"
                              );
   end Coverage;

end GNAT2Why;
