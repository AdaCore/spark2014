Ident: JK1
   Section: introduction
   Page/para: n/a
   Comment: It is visible that the introduction has been written by several
	persons simultaneously; it lacks coherence, there are repetitions. Nothing
	serious though.

Ident: JK2
   Section: 1
   Page/para: 3/3
   Comment: Mixture of test and proof: that's correct, but it is unnecessarily
	restrictive. Can we say something like: Support for proof of only part
	of the program, and combination with other verification methods such as
	testing.

Ident: JK3
   Section: 1
   Page/para: 3/4
   Comment: If one uses pragmas, any Ada compiler can be used, not only an Ada 2012 compiler, right?

Ident: JK4
   Section: 1
   Page/para: 3/5
   Comment: I don't understand this paragraph. Obviously the language needs a
	compiler that implements it! No need to mention GNAT specifically.

Ident: JK5
   Section: 1.2
   Page/para: 4/1-4
   Comment: I think there is no need to mention the tools. SPARK 2014 is a
	language, and exists independently of the tools. I also think it would be OK
	for the language definition to include more than is supported by the first
	release, and it would also be OK for the tool to support more than just what is
	defined in the language definition. This is already the case anyway (GNAT has
	some vendor-specific pragmas).

Ident: JK6
   Section: 7.2.8 & 7.2.9
   Page: 58 - 59
   Comment: I do not feel the need for Refined_Pre and Refined_Post. The same
	effect can be easily achieved by a wrapper subprogram, where the wrapped
	subprogram has the refined pre/post as normal pre/post.