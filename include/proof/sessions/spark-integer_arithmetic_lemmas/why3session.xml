<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="0" name="Coq" version="8.5pl2" timelimit="0" steplimit="0" memlimit="0"/>
<prover id="1" name="CVC4" version="1.5-gnatprove" timelimit="1" steplimit="0" memlimit="0"/>
<file name="../../../obj/gnatprove/spark-integer_arithmetic_lemmas.mlw" proved="true">
<theory name="Spark__integer_arithmetic_lemmas__package_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Spark__integer_arithmetic_lemmas__lemma_div_is_monotonic__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="postcondition" proved="true">
  <proof prover="0" edited="../../../obj/gnatprove/../../proof/Coq/spark-integer_arithmetic_lemmas/Spark__integer_arithmetic_lemmas__lemma_div_is_monotonic__pragargs__cmp.v"><result status="unknown"/></proof>
  <proof prover="1"><result status="valid" steps="440"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Spark__integer_arithmetic_lemmas__lemma_mod_range__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" steps="13"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" steps="13"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Spark__integer_arithmetic_lemmas__lemma_mod_symmetry__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="postcondition" proved="true">
  <proof prover="0" edited="../../../obj/gnatprove/../../proof/Coq/spark-integer_arithmetic_lemmas/Spark__integer_arithmetic_lemmas__lemma_mod_symmetry__pragargs__cmp.v"><result status="valid"/></proof>
  <proof prover="1"><result status="unknown" steps="28"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Spark__integer_arithmetic_lemmas__lemma_mult_is_monotonic__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="postcondition" proved="true">
  <proof prover="0" edited="../../../obj/gnatprove/../../proof/Coq/spark-integer_arithmetic_lemmas/Spark__integer_arithmetic_lemmas__lemma_mult_is_monotonic__pragargs__cmp.v"><result status="unknown"/></proof>
  <proof prover="1"><result status="valid" steps="625"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Spark__integer_arithmetic_lemmas__lemma_mult_is_strictly_monotonic__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="postcondition" proved="true">
  <proof prover="0" edited="../../../obj/gnatprove/../../proof/Coq/spark-integer_arithmetic_lemmas/Spark__integer_arithmetic_lemmas__lemma_mult_is_strictly_monotonic__pragargs__cmp.v"><result status="unknown"/></proof>
  <proof prover="1"><result status="valid" steps="405"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Spark__integer_arithmetic_lemmas__lemma_mult_protect__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" steps="585"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Spark__integer_arithmetic_lemmas__lemma_mult_scale__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" steps="550"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" steps="509"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" steps="141"/></proof>
  </goal>
  <goal name="WP_parameter def.5" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" steps="146"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Spark__integer_arithmetic_lemmas__lemma_mult_then_mod_is_zero__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" steps="409"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
