bad_gen_access.adb:9:14: error: instance of Unchecked_Deallocation with a general access type is not allowed in SPARK
bad_gen_access.adb:9:14: error: violation of aspect SPARK_Mode at line 3
bad_gen_access.adb:14:19: warning: assuming "F" has no effect on global items
bad_gen_access.adb:14:19: warning: no Global contract available for "F"
bad_gen_access.adb:15:19: error: move as part of an allocator or a conversion to an access-to-constant type is not yet supported
bad_gen_access.adb:16:19: warning: assuming "F" has no effect on global items
bad_gen_access.adb:16:19: warning: no Global contract available for "F"
bad_gen_access.adb:24:12: error: conversion from an anonymous access type to a named access type is not allowed in SPARK
bad_gen_access.adb:24:12: error: violation of aspect SPARK_Mode at line 3
ext.ads:7:13: info: implicit aspect Always_Terminates on "F" has been proved, subprogram will terminate
ext.ads:10:20: medium: resource or memory leak might occur [possible explanation: allocator for a general access-to-variable type leaks memory]
ext.ads:11:20: medium: resource or memory leak might occur [possible explanation: allocator for an access-to-constant type leaks memory]
ext.ads:16:37: medium: resource or memory leak might occur [possible explanation: allocator for a general access-to-variable type leaks memory]
ext.ads:18:19: info: assertion proved (CVC5: 1 VC)
ext.ads:18:40: medium: resource or memory leak might occur [possible explanation: allocator for a general access-to-variable type leaks memory]
ext.ads:25:22: medium: resource or memory leak might occur [possible explanation: allocator for a general access-to-variable type leaks memory]
ext.ads:35:13: info: implicit aspect Always_Terminates on "F" has been proved, subprogram will terminate
ext.ads:36:28: medium: resource or memory leak might occur [possible explanation: allocator for an access-to-constant type leaks memory]
ext.ads:37:28: medium: resource or memory leak might occur [possible explanation: allocator for a general access-to-variable type leaks memory]
ext.ads:42:19: info: assertion proved (CVC5: 1 VC)
ext.ads:42:39: medium: resource or memory leak might occur [possible explanation: allocator for an access-to-constant type leaks memory]
ext.ads:43:39: medium: resource or memory leak might occur [possible explanation: allocator for a general access-to-variable type leaks memory]
ext.ads:44:39: medium: resource or memory leak might occur [possible explanation: allocator inside an assertion leaks memory]
ext.ads:54:13: info: implicit aspect Always_Terminates on "F" has been proved, subprogram will terminate
ext.ads:55:29: medium: resource or memory leak might occur [possible explanation: allocator for an access-to-constant type leaks memory]
ext.ads:56:29: medium: resource or memory leak might occur [possible explanation: allocator for a general access-to-variable type leaks memory]
ext.ads:57:29: medium: resource or memory leak might occur [possible explanation: allocator for an access-to-constant type leaks memory]
ext.ads:58:32: medium: resource or memory leak might occur [possible explanation: allocator for an access-to-constant type leaks memory]
ext.ads:59:32: medium: resource or memory leak might occur [possible explanation: allocator for a general access-to-variable type leaks memory]
ext.ads:67:19: info: assertion proved (CVC5: 1 VC)
ext.ads:67:39: medium: resource or memory leak might occur [possible explanation: allocator for an access-to-constant type leaks memory]
ext.ads:68:39: medium: resource or memory leak might occur [possible explanation: allocator for a general access-to-variable type leaks memory]
ext.ads:69:39: medium: resource or memory leak might occur [possible explanation: allocator for an access-to-constant type leaks memory]
ext.ads:70:42: medium: resource or memory leak might occur [possible explanation: allocator for an access-to-constant type leaks memory]
ext.ads:71:42: medium: resource or memory leak might occur [possible explanation: allocator for a general access-to-variable type leaks memory]
ext.ads:72:42: medium: resource or memory leak might occur [possible explanation: allocator inside an assertion leaks memory]
gen_access.adb:7:13: info: implicit aspect Always_Terminates on "F" has been proved, subprogram will terminate
gen_access.adb:9:04: info: absence of resource or memory leak at end of scope proved (CVC5: 1 VC)
gen_access.adb:10:19: warning: assuming "F" has no effect on global items
gen_access.adb:10:19: warning: no Global contract available for "F"
gen_access.adb:11:21: medium: resource or memory leak might occur [possible explanation: conversion to general access type leaks memory]
gen_access.adb:12:21: medium: resource or memory leak might occur [possible explanation: allocator for a general access-to-variable type leaks memory]
gen_access.adb:15:28: warning: assuming "Mk" has no effect on global items
gen_access.adb:15:28: warning: no Global contract available for "Mk"
gen_access.adb:16:19: info: assertion proved (CVC5: 1 VC)
gen_access.adb:16:31: warning: assuming "Mk" has no effect on global items
gen_access.adb:16:31: warning: no Global contract available for "Mk"
gen_access.adb:24:04: info: absence of resource or memory leak at end of scope proved (CVC5: 1 VC)
gen_access.adb:24:24: warning: assuming "Mk" has no effect on global items
gen_access.adb:24:24: warning: no Global contract available for "Mk"
gen_access.adb:25:04: medium: resource or memory leak might occur at end of scope
gen_access.adb:26:04: info: absence of resource or memory leak at end of scope proved (CVC5: 1 VC)
gen_access.adb:26:24: warning: assuming "Mk" has no effect on global items
gen_access.adb:26:24: warning: no Global contract available for "Mk"
gen_access.adb:35:13: info: implicit aspect Always_Terminates on "F" has been proved, subprogram will terminate
gen_access.adb:37:19: info: assertion proved (CVC5: 1 VC)
gen_access.adb:37:22: medium: resource or memory leak might occur [possible explanation: call to allocating function inside an assertion leaks some resource or memory]
gen_access.adb:37:22: warning: assuming "Mk_Arr_1" has no effect on global items
gen_access.adb:37:22: warning: no Global contract available for "Mk_Arr_1"
gen_access.adb:47:13: info: implicit aspect Always_Terminates on "F" has been proved, subprogram will terminate
gen_access.adb:49:19: info: assertion proved (CVC5: 1 VC)
gen_access.adb:49:22: warning: assuming "Mk_Arr_2" has no effect on global items
gen_access.adb:49:22: warning: no Global contract available for "Mk_Arr_2"
gen_access.adb:58:13: info: implicit aspect Always_Terminates on "F" has been proved, subprogram will terminate
gen_access.adb:59:19: info: assertion proved (CVC5: 1 VC)
gen_access.adb:59:22: medium: resource or memory leak might occur [possible explanation: call to allocating function inside an assertion leaks some resource or memory]
gen_access.adb:59:22: warning: assuming "Mk_List" has no effect on global items
gen_access.adb:59:22: warning: no Global contract available for "Mk_List"
gen_access.adb:60:04: info: absence of resource or memory leak at end of scope proved (CVC5: 1 VC)
gen_access.adb:60:17: warning: assuming "Mk_List" has no effect on global items
gen_access.adb:60:17: warning: no Global contract available for "Mk_List"
gen_access.adb:61:04: medium: resource or memory leak might occur at end of scope
gen_access.adb:62:04: medium: resource or memory leak might occur at end of scope
gen_access.adb:62:25: warning: assuming "Mk_List" has no effect on global items
gen_access.adb:62:25: warning: no Global contract available for "Mk_List"
gen_access.adb:63:04: medium: resource or memory leak might occur at end of scope
gen_access.adb:63:25: warning: assuming "Mk_List" has no effect on global items
gen_access.adb:63:25: warning: no Global contract available for "Mk_List"
gen_access.adb:65:04: info: absence of resource or memory leak at end of scope proved (CVC5: 1 VC)
gen_access.adb:65:25: warning: assuming "Mk_List" has no effect on global items
gen_access.adb:65:25: warning: no Global contract available for "Mk_List"
gen_access.adb:67:13: info: implicit aspect Always_Terminates on "At_End" has been proved, subprogram will terminate
gen_access.adb:67:79: info: dynamic accessibility check proved (Trivial)
gen_access.adb:70:13: info: implicit aspect Always_Terminates on "All_Null" has been proved, subprogram will terminate
gen_access.adb:71:47: info: subprogram variant proved (Trivial)
gen_access.adb:71:61: info: pointer dereference check proved (CVC5: 1 VC)
gen_access.adb:75:14: info: postcondition proved (CVC5: 2 VC; Trivial: 1 VC)
gen_access.adb:81:33: info: loop invariant initialization proved (CVC5: 1 VC)
gen_access.adb:81:33: info: loop invariant preservation proved (CVC5: 1 VC)
gen_access.adb:83:13: info: loop invariant initialization proved (CVC5: 2 VC; Trivial: 2 VC)
gen_access.adb:83:13: info: loop invariant preservation proved (CVC5: 2 VC; Trivial: 2 VC)
gen_access.adb:83:37: info: pointer dereference check proved (CVC5: 2 VC)
gen_access.adb:83:73: info: pointer dereference check proved (CVC5: 2 VC)
gen_access.adb:84:11: info: pointer dereference check proved (CVC5: 1 VC)
gen_access.adb:84:14: medium: resource or memory leak might occur
gen_access.adb:85:16: info: pointer dereference check proved (CVC5: 1 VC)
gen_access.adb:92:14: info: postcondition proved (CVC5: 2 VC)
gen_access.adb:96:10: info: precondition proved (CVC5: 2 VC; Trivial: 1 VC)
gen_access.adb:96:10: warning: statement has no effect
gen_access.adb:96:22: info: pointer dereference check proved (CVC5: 1 VC)
gen_access.adb:96:22: warning: "L.N" is set by "Delete" but not used after the call
gen_access.adb:97:14: info: absence of resource or memory leak proved (CVC5: 1 VC)
gen_access.adb:110:13: info: implicit aspect Always_Terminates on "F" has been proved, subprogram will terminate
gen_access.adb:111:19: info: assertion proved (CVC5: 1 VC)
gen_access.adb:111:22: medium: resource or memory leak might occur [possible explanation: call to allocating function inside an assertion leaks some resource or memory]
gen_access.adb:111:22: warning: assuming "Mk_List2" has no effect on global items
gen_access.adb:111:22: warning: no Global contract available for "Mk_List2"
gen_access.adb:112:04: info: absence of resource or memory leak at end of scope proved (CVC5: 1 VC)
gen_access.adb:112:18: warning: assuming "Mk_List2" has no effect on global items
gen_access.adb:112:18: warning: no Global contract available for "Mk_List2"
gen_access.adb:113:04: medium: resource or memory leak might occur at end of scope
gen_access.adb:123:13: info: implicit aspect Always_Terminates on "F" has been proved, subprogram will terminate
gen_access.adb:124:19: info: assertion proved (CVC5: 1 VC)
gen_access.adb:124:22: medium: resource or memory leak might occur [possible explanation: call to allocating function inside an assertion leaks some resource or memory]
gen_access.adb:124:22: warning: assuming "Mk_My_Acc" has no effect on global items
gen_access.adb:124:22: warning: no Global contract available for "Mk_My_Acc"
gen_access.adb:125:04: info: absence of resource or memory leak at end of scope proved (CVC5: 1 VC)
gen_access.adb:125:19: warning: assuming "Mk_My_Acc" has no effect on global items
gen_access.adb:125:19: warning: no Global contract available for "Mk_My_Acc"
gen_access.adb:126:04: medium: resource or memory leak might occur at end of scope
gen_access.adb:129:07: info: pointer dereference check proved (CVC5: 1 VC)
gen_access.adb:129:16: medium: resource or memory leak might occur
gen_access.adb:132:33: info: pointer dereference check proved (CVC5: 1 VC)
gen_access.adb:132:57: info: pointer dereference check proved (CVC5: 1 VC)
gen_access.adb:132:59: info: pointer dereference check proved (CVC5: 1 VC)
gen_access.adb:133:20: info: pointer dereference check proved (CVC5: 1 VC)
gen_access.adb:133:22: info: pointer dereference check proved (CVC5: 1 VC)
gen_access.adb:133:24: info: pointer dereference check proved (CVC5: 1 VC)
gen_access.adb:133:48: info: pointer dereference check proved (CVC5: 1 VC)
gen_access.adb:133:50: info: pointer dereference check proved (CVC5: 1 VC)
gen_access.adb:133:52: info: pointer dereference check proved (CVC5: 1 VC)
gen_access.adb:133:54: info: pointer dereference check proved (CVC5: 1 VC)
gen_access.adb:134:20: info: pointer dereference check proved (CVC5: 1 VC)
gen_access.adb:134:22: info: pointer dereference check proved (CVC5: 1 VC)
gen_access.adb:134:24: info: pointer dereference check proved (CVC5: 1 VC)
gen_access.adb:134:26: info: pointer dereference check proved (CVC5: 1 VC)
gen_access.adb:134:28: info: pointer dereference check proved (CVC5: 1 VC)
gen_access.adb:137:04: info: precondition proved (CVC5: 2 VC; Trivial: 1 VC)
gnatprove: error during flow analysis and proof
