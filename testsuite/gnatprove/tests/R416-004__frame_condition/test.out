check_loop_inv.adb:7:19: info: initialization of "V" proved
check_loop_inv.adb:8:30: info: loop invariant initialization proved (CVC4: 1 VC)
check_loop_inv.adb:8:30: info: loop invariant preservation proved (CVC4: 1 VC)
check_loop_inv.adb:10:10: info: index check proved (CVC4: 2 VC)
check_loop_inv.adb:10:13: info: initialization of "A" proved
check_loop_inv.adb:12:19: info: assertion proved (CVC4: 1 VC)
check_loop_inv.adb:12:19: info: initialization of "A" proved
check_loop_inv.adb:12:19: info: range check proved (CVC4: 4 VC)
check_loop_inv.adb:13:19: info: assertion proved (CVC4: 1 VC)
check_loop_inv.adb:13:19: info: initialization of "A" proved
check_loop_inv.adb:13:19: info: range check proved (CVC4: 4 VC)
check_loop_inv.adb:14:19: info: initialization of "A" proved
check_loop_inv.adb:14:19: info: range check proved (CVC4: 4 VC)
check_loop_inv.adb:14:19: medium: assertion might fail, cannot prove A (11 .. 20) = (11 .. 20 => 1) (e.g. when A = (19 => 2, others => 1)) [possible explanation: loop invariant at line 8 should mention A]
check_loop_inv.adb:17:30: info: loop invariant initialization proved (CVC4: 1 VC)
check_loop_inv.adb:17:30: info: loop invariant preservation proved (CVC4: 1 VC)
check_loop_inv.adb:18:24: info: initialization of "A" proved
check_loop_inv.adb:20:19: info: assertion proved (CVC4: 1 VC)
check_loop_inv.adb:20:19: info: initialization of "A" proved
check_loop_inv.adb:20:19: info: range check proved (CVC4: 4 VC)
check_loop_inv.adb:21:19: info: assertion proved (CVC4: 1 VC)
check_loop_inv.adb:21:19: info: initialization of "A" proved
check_loop_inv.adb:21:19: info: range check proved (CVC4: 4 VC)
check_loop_inv.adb:22:19: info: assertion proved (CVC4: 1 VC)
check_loop_inv.adb:22:19: info: initialization of "A" proved
check_loop_inv.adb:22:19: info: range check proved (CVC4: 4 VC)
check_loop_inv.adb:23:19: info: initialization of "A" proved
check_loop_inv.adb:23:19: info: range check proved (CVC4: 4 VC)
check_loop_inv.adb:23:19: medium: assertion might fail, cannot prove A (21 .. 30) = (21 .. 30 => 2) (e.g. when A = (others => 0)) [possible explanation: loop invariant at line 17 should mention A]
check_loop_inv.adb:26:30: info: loop invariant initialization proved (CVC4: 1 VC)
check_loop_inv.adb:26:30: info: loop invariant preservation proved (CVC4: 1 VC)
check_loop_inv.adb:27:07: info: range check proved (CVC4: 2 VC)
check_loop_inv.adb:27:07: info: range check proved (CVC4: 4 VC)
check_loop_inv.adb:27:29: info: initialization of "A" proved
check_loop_inv.adb:27:29: info: length check proved (CVC4: 4 VC)
check_loop_inv.adb:27:32: info: length check proved (CVC4: 4 VC)
check_loop_inv.adb:27:33: info: range check proved (CVC4: 1 VC)
check_loop_inv.adb:29:19: info: assertion proved (CVC4: 1 VC)
check_loop_inv.adb:29:19: info: initialization of "A" proved
check_loop_inv.adb:29:19: info: range check proved (CVC4: 4 VC)
check_loop_inv.adb:30:19: info: assertion proved (CVC4: 1 VC)
check_loop_inv.adb:30:19: info: initialization of "A" proved
check_loop_inv.adb:30:19: info: range check proved (CVC4: 4 VC)
check_loop_inv.adb:31:19: info: assertion proved (CVC4: 1 VC)
check_loop_inv.adb:31:19: info: initialization of "A" proved
check_loop_inv.adb:31:19: info: range check proved (CVC4: 4 VC)
check_loop_inv.adb:32:19: info: assertion proved (CVC4: 1 VC)
check_loop_inv.adb:32:19: info: initialization of "A" proved
check_loop_inv.adb:32:19: info: range check proved (CVC4: 4 VC)
check_loop_inv.adb:33:19: info: initialization of "A" proved
check_loop_inv.adb:33:19: info: range check proved (CVC4: 4 VC)
check_loop_inv.adb:33:19: medium: assertion might fail, cannot prove A (31 .. 40) = (31 .. 40 => 3) (e.g. when A = (others => 0)) [possible explanation: loop invariant at line 26 should mention A]
