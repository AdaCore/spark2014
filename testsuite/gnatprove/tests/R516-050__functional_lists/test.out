conts-lists.ads:285:29: warning: unused variable "Self", in instantiation at conts-lists-indefinite_unbounded_spark.ads:16, in instantiation at formal_doubly_linked_lists.ads:10, in instantiation at use_lists.ads:5
conts-lists.ads:438:18: info: precondition proved (CVC4: 1 VC), in instantiation at conts-lists-indefinite_unbounded_spark.ads:19, in instantiation at formal_doubly_linked_lists.ads:10, in instantiation at use_lists.ads:5
conts-lists.ads:452:14: medium: precondition might fail, in instantiation at conts-lists-indefinite_unbounded_spark.ads:19, in instantiation at formal_doubly_linked_lists.ads:10, in instantiation at use_lists.ads:5 [possible explanation: subprogram at line 450 should mention Position and Self in a precondition]
conts-lists.ads:458:14: medium: precondition might fail, in instantiation at conts-lists-indefinite_unbounded_spark.ads:19, in instantiation at formal_doubly_linked_lists.ads:10, in instantiation at use_lists.ads:5 [possible explanation: subprogram at line 456 should mention Position and Self in a precondition]
conts-lists.ads:507:19: info: precondition proved (CVC4: 1 VC), in instantiation at conts-lists-indefinite_unbounded_spark.ads:34, in instantiation at formal_doubly_linked_lists.ads:10, in instantiation at use_lists.ads:5
conts-lists.ads:511:19: info: precondition proved (CVC4: 1 VC), in instantiation at conts-lists-indefinite_unbounded_spark.ads:34, in instantiation at formal_doubly_linked_lists.ads:10, in instantiation at use_lists.ads:5
conts-lists.ads:515:19: info: precondition proved (CVC4: 1 VC), in instantiation at conts-lists-indefinite_unbounded_spark.ads:34, in instantiation at formal_doubly_linked_lists.ads:10, in instantiation at use_lists.ads:5
conts-lists.ads:522:19: info: precondition proved (CVC4: 1 VC), in instantiation at conts-lists-indefinite_unbounded_spark.ads:34, in instantiation at formal_doubly_linked_lists.ads:10, in instantiation at use_lists.ads:5
conts-lists.ads:526:19: info: precondition proved (CVC4: 1 VC), in instantiation at conts-lists-indefinite_unbounded_spark.ads:34, in instantiation at formal_doubly_linked_lists.ads:10, in instantiation at use_lists.ads:5
conts.ads:145:31: warning: unused variable "E", in instantiation at conts-lists-indefinite_unbounded_spark.ads:15, in instantiation at formal_doubly_linked_lists.ads:10, in instantiation at use_lists.ads:5
functional_sequences.ads:15:66: medium: range check might fail, in instantiation at formal_doubly_linked_lists.ads:23, in instantiation at use_lists.ads:5
functional_sequences.ads:15:66: medium: range check might fail, in instantiation at formal_doubly_linked_lists.ads:26, in instantiation at use_lists.ads:5
use_lists.adb:3:22: side effects of function "First" are not modeled in SPARK
use_lists.adb:5:14: medium: "L2" is not set
use_lists.adb:5:14: medium: private part of "L2" is not set
use_lists.adb:6:13: side effects of function "Has_Element" are not modeled in SPARK
use_lists.adb:6:30: info: initialization of "Cu" proved
use_lists.adb:8:13: medium: loop invariant might fail after first iteration, cannot prove Cursor_Sequence.Find (Get_Cursor_Model (L1), Cu) = Length (L2) [possible explanation: subprogram at line 2 should mention L1 in a precondition]
use_lists.adb:8:13: medium: loop invariant might fail in first iteration, cannot prove Cursor_Sequence.Find (Get_Cursor_Model (L1), Cu) = Length (L2) [possible explanation: subprogram at line 2 should mention L1 in a precondition]
use_lists.adb:8:35: side effects of function "Get_Cursor_Model" are not modeled in SPARK
use_lists.adb:8:58: info: initialization of "Cu" proved
use_lists.adb:8:64: info: function contract not available for proof ("Length" might not return)
use_lists.adb:8:72: info: initialization of "L2" proved
use_lists.adb:8:72: info: initialization of private part of "L2" proved
use_lists.adb:10:13: info: loop invariant initialization proved (CVC4: 1 VC)
use_lists.adb:10:40: info: function contract not available for proof ("Length" might not return)
use_lists.adb:10:48: info: initialization of "L2" proved
use_lists.adb:10:48: info: initialization of private part of "L2" proved
use_lists.adb:11:18: medium: loop invariant might fail after first iteration, cannot prove Is_Incr (Get (Get_Element_Model (L1), N), Get (Get_Element_Model (L2), N)) (e.g. when N = 0) [possible explanation: subprogram at line 2 should mention L1 in a precondition]
use_lists.adb:11:32: side effects of function "Get_Element_Model" are not modeled in SPARK
use_lists.adb:12:32: side effects of function "Get_Element_Model" are not modeled in SPARK
use_lists.adb:13:13: medium: precondition might fail [possible explanation: subprogram at line 2 should mention L1 in a precondition]
use_lists.adb:13:13: side effects of function "Element" are not modeled in SPARK
use_lists.adb:13:26: info: initialization of "Cu" proved
use_lists.adb:14:13: medium: precondition might fail
use_lists.adb:14:21: info: initialization of "L2" proved
use_lists.adb:14:21: info: initialization of private part of "L2" proved
use_lists.adb:14:25: medium: precondition might fail [possible explanation: subprogram at line 2 should mention L1 in a precondition]
use_lists.adb:14:25: side effects of function "Element" are not modeled in SPARK
use_lists.adb:14:38: info: initialization of "Cu" proved
use_lists.adb:14:42: medium: overflow check might fail [possible explanation: subprogram at line 2 should mention L1 in a precondition]
use_lists.adb:16:13: medium: precondition might fail
use_lists.adb:16:21: info: initialization of "L2" proved
use_lists.adb:16:21: info: initialization of private part of "L2" proved
use_lists.adb:16:25: medium: precondition might fail [possible explanation: subprogram at line 2 should mention L1 in a precondition]
use_lists.adb:16:25: side effects of function "Element" are not modeled in SPARK
use_lists.adb:16:38: info: initialization of "Cu" proved
use_lists.adb:18:16: medium: assertion might fail, cannot prove Get (Get_Element_Model (L2), Length (L2) - 1) = Element (L1, Cu) [possible explanation: subprogram at line 2 should mention L1 in a precondition]
use_lists.adb:18:21: side effects of function "Get_Element_Model" are not modeled in SPARK
use_lists.adb:18:45: info: function contract not available for proof ("Length" might not return)
use_lists.adb:18:53: info: initialization of "L2" proved
use_lists.adb:18:53: info: initialization of private part of "L2" proved
use_lists.adb:18:57: info: range check proved (CVC4: 1 VC)
use_lists.adb:19:18: medium: precondition might fail [possible explanation: subprogram at line 2 should mention L1 in a precondition]
use_lists.adb:19:18: side effects of function "Element" are not modeled in SPARK
use_lists.adb:19:31: info: initialization of "Cu" proved
use_lists.adb:21:25: medium: assertion might fail, cannot prove Is_Incr (Element (L1, Cu), Get (Get_Element_Model (L2), Length (L2) - 1)) [possible explanation: subprogram at line 2 should mention L1 in a precondition]
use_lists.adb:21:34: medium: precondition might fail [possible explanation: subprogram at line 2 should mention L1 in a precondition]
use_lists.adb:21:34: side effects of function "Element" are not modeled in SPARK
use_lists.adb:21:47: info: initialization of "Cu" proved
use_lists.adb:22:30: side effects of function "Get_Element_Model" are not modeled in SPARK
use_lists.adb:22:54: info: function contract not available for proof ("Length" might not return)
use_lists.adb:22:62: info: initialization of "L2" proved
use_lists.adb:22:62: info: initialization of private part of "L2" proved
use_lists.adb:22:66: info: range check proved (CVC4: 1 VC)
use_lists.adb:23:10: medium: precondition might fail
use_lists.adb:23:20: info: initialization of "Cu" proved
use_lists.ads:5:04: info: function contract not available for proof ("Find" might not return)
use_lists.ads:5:04: info: function contract not available for proof ("Find" might not return)
use_lists.ads:5:04: info: function contract not available for proof ("Find" might not return)
use_lists.ads:5:04: info: function contract not available for proof ("Find" might not return)
use_lists.ads:5:04: info: function contract not available for proof ("Find" might not return)
use_lists.ads:5:04: info: function contract not available for proof ("Find" might not return)
use_lists.ads:5:04: info: function contract not available for proof ("Find" might not return)
use_lists.ads:5:04: info: function contract not available for proof ("Find" might not return)
use_lists.ads:5:04: info: function contract not available for proof ("Find" might not return)
use_lists.ads:5:04: info: function contract not available for proof ("Find" might not return)
use_lists.ads:5:04: info: function contract not available for proof ("Get_Cursor_Model" might not return)
use_lists.ads:5:04: info: function contract not available for proof ("Get_Cursor_Model" might not return)
use_lists.ads:5:04: info: function contract not available for proof ("Get_Cursor_Model" might not return)
use_lists.ads:5:04: info: function contract not available for proof ("Get_Cursor_Model" might not return)
use_lists.ads:5:04: info: function contract not available for proof ("Get_Cursor_Model" might not return)
use_lists.ads:5:04: info: function contract not available for proof ("Get_Cursor_Model" might not return)
use_lists.ads:5:04: info: function contract not available for proof ("Get_Cursor_Model" might not return)
use_lists.ads:5:04: info: function contract not available for proof ("Get_Cursor_Model" might not return)
use_lists.ads:5:04: info: function contract not available for proof ("Get_Cursor_Model" might not return)
use_lists.ads:5:04: info: function contract not available for proof ("Get_Cursor_Model" might not return)
use_lists.ads:5:04: info: function contract not available for proof ("Get_Cursor_Model" might not return)
use_lists.ads:5:04: info: function contract not available for proof ("Get_Cursor_Model" might not return)
use_lists.ads:5:04: info: function contract not available for proof ("Get_Element_Model" might not return)
use_lists.ads:5:04: info: function contract not available for proof ("Get_Element_Model" might not return)
use_lists.ads:5:04: info: function contract not available for proof ("Length" might not return)
use_lists.ads:5:04: info: function contract not available for proof ("Length" might not return)
use_lists.ads:5:04: info: function contract not available for proof ("Length" might not return)
use_lists.ads:5:04: info: function contract not available for proof ("Length" might not return)
use_lists.ads:5:04: info: function contract not available for proof ("Length" might not return)
use_lists.ads:5:04: info: function contract not available for proof ("Length" might not return)
use_lists.ads:5:04: info: function contract not available for proof ("Length" might not return)
use_lists.ads:5:04: info: function contract not available for proof ("Length" might not return)
use_lists.ads:5:04: info: function contract not available for proof ("Length" might not return)
use_lists.ads:5:04: info: function contract not available for proof ("Length" might not return)
use_lists.ads:5:04: info: implicit function contract not available for proof ("Capacity" might not return)
use_lists.ads:5:04: info: implicit function contract not available for proof ("Capacity" might not return)
use_lists.ads:5:04: info: implicit function contract not available for proof ("Capacity" might not return)
use_lists.ads:5:04: info: implicit function contract not available for proof ("Capacity" might not return)
use_lists.ads:5:04: info: implicit function contract not available for proof ("Element" might not return)
use_lists.ads:5:04: info: implicit function contract not available for proof ("Element" might not return)
use_lists.ads:5:04: info: implicit function contract not available for proof ("Get" might not return)
use_lists.ads:5:04: info: implicit function contract not available for proof ("Get" might not return)
use_lists.ads:5:04: info: implicit function contract not available for proof ("Get" might not return)
use_lists.ads:5:04: info: implicit function contract not available for proof ("Get" might not return)
use_lists.ads:5:04: info: implicit function contract not available for proof ("Get" might not return)
use_lists.ads:5:04: info: implicit function contract not available for proof ("Get" might not return)
use_lists.ads:5:04: info: implicit function contract not available for proof ("Get" might not return)
use_lists.ads:5:04: info: implicit function contract not available for proof ("Get" might not return)
use_lists.ads:5:04: info: implicit function contract not available for proof ("Get" might not return)
use_lists.ads:5:04: info: implicit function contract not available for proof ("Length" might not return)
use_lists.ads:5:04: info: implicit function contract not available for proof ("Length" might not return)
use_lists.ads:5:04: info: implicit function contract not available for proof ("Length" might not return)
use_lists.ads:5:04: info: implicit function contract not available for proof ("Length" might not return)
use_lists.ads:5:04: info: implicit function contract not available for proof ("Length" might not return)
use_lists.ads:5:04: info: implicit function contract not available for proof ("Length" might not return)
use_lists.ads:5:04: info: implicit function contract not available for proof ("Length" might not return)
use_lists.ads:5:04: info: implicit function contract not available for proof ("Length" might not return)
use_lists.ads:5:04: info: implicit function contract not available for proof ("Length" might not return)
use_lists.ads:5:04: info: implicit function contract not available for proof ("Length" might not return)
use_lists.ads:5:04: info: implicit function contract not available for proof ("Length" might not return)
use_lists.ads:5:04: info: implicit function contract not available for proof ("Length" might not return)
use_lists.ads:5:04: info: implicit function contract not available for proof ("Length" might not return)
use_lists.ads:5:04: info: implicit function contract not available for proof ("Length" might not return)
use_lists.ads:5:04: info: implicit function contract not available for proof ("Length" might not return)
use_lists.ads:5:04: info: implicit function contract not available for proof ("Length" might not return)
use_lists.ads:5:04: info: implicit function contract not available for proof ("Length" might not return)
use_lists.ads:5:04: info: implicit function contract not available for proof ("Length" might not return)
use_lists.ads:5:04: info: implicit function contract not available for proof ("Length" might not return)
use_lists.ads:5:04: info: implicit function contract not available for proof ("Length" might not return)
use_lists.ads:5:04: info: implicit function contract not available for proof ("Length" might not return)
use_lists.ads:5:04: info: implicit function contract not available for proof ("Length" might not return)
use_lists.ads:5:04: info: implicit function contract not available for proof ("Length" might not return)
use_lists.ads:5:04: info: implicit function contract not available for proof ("Length" might not return)
use_lists.ads:5:04: info: implicit function contract not available for proof ("Length" might not return)
use_lists.ads:5:04: info: implicit function contract not available for proof ("Length" might not return)
use_lists.ads:5:04: info: implicit function contract not available for proof ("Length" might not return)
use_lists.ads:5:04: info: in instantiation at conts-lists-indefinite_unbounded_spark.ads:19
use_lists.ads:5:04: info: in instantiation at conts-lists-indefinite_unbounded_spark.ads:19
use_lists.ads:5:04: info: in instantiation at conts-lists-indefinite_unbounded_spark.ads:34
use_lists.ads:5:04: info: in instantiation at conts-lists.ads:369
use_lists.ads:5:04: info: in instantiation at conts-lists.ads:452
use_lists.ads:5:04: info: in instantiation at conts-lists.ads:507
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:10
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:10
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:10
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:15
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:20
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:23
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:23
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:23
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:23
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:23
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:23
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:23
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:23
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:23
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:23
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:23
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:23
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:26
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:26
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:26
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:26
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:26
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:26
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:26
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:26
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:26
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:26
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:26
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:26
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:26
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:26
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:26
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:26
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:26
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:26
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:26
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:26
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:34
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:35
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:36
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:37
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:43
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:44
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:51
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:51
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:53
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:53
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:54
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:54
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:57
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:58
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:59
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:61
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:64
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:64
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:65
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:66
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:66
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:67
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:67
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:68
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:68
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:69
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:69
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:73
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:73
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:77
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:77
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:78
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:79
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:80
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:83
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:83
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:84
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:89
use_lists.ads:5:04: info: in instantiation at formal_doubly_linked_lists.ads:90
use_lists.ads:5:04: info: in instantiation at functional_sequences.ads:14
use_lists.ads:5:04: info: in instantiation at functional_sequences.ads:14
use_lists.ads:5:04: info: in instantiation at functional_sequences.ads:15
use_lists.ads:5:04: info: in instantiation at functional_sequences.ads:15
use_lists.ads:5:04: info: in instantiation at functional_sequences.ads:16
use_lists.ads:5:04: info: in instantiation at functional_sequences.ads:19
use_lists.ads:5:04: info: in instantiation at functional_sequences.ads:19
use_lists.ads:5:04: info: in instantiation at functional_sequences.ads:20
use_lists.ads:5:04: info: in instantiation at functional_sequences.ads:20
use_lists.ads:5:04: info: in instantiation at functional_sequences.ads:21
use_lists.ads:5:04: info: in instantiation at functional_sequences.ads:22
use_lists.ads:5:04: info: in instantiation at functional_sequences.ads:22
use_lists.ads:5:04: info: in instantiation at functional_sequences.ads:23
use_lists.ads:5:04: info: in instantiation at functional_sequences.ads:25
use_lists.ads:5:04: info: in instantiation at functional_sequences.ads:25
use_lists.ads:5:04: info: in instantiation at functional_sequences.ads:28
use_lists.ads:5:04: info: in instantiation at functional_sequences.ads:28
use_lists.ads:5:04: info: in instantiation at functional_sequences.ads:29
use_lists.ads:5:04: info: in instantiation at functional_sequences.ads:29
use_lists.ads:5:04: info: in instantiation at functional_sequences.ads:31
use_lists.ads:5:04: info: in instantiation at functional_sequences.ads:33
use_lists.ads:5:04: info: in instantiation at functional_sequences.ads:34
use_lists.ads:5:04: info: in instantiation at functional_sequences.ads:34
use_lists.ads:5:04: info: in instantiation at functional_sequences.ads:34
use_lists.ads:5:04: info: in instantiation at functional_sequences.ads:36
use_lists.ads:5:04: info: in instantiation at functional_sequences.ads:36
use_lists.ads:5:04: info: in instantiation at functional_sequences.ads:37
use_lists.ads:5:04: info: in instantiation at functional_sequences.ads:37
use_lists.ads:5:04: info: in instantiation at functional_sequences.ads:37
use_lists.ads:5:04: info: in instantiation at functional_sequences.ads:38
use_lists.ads:5:04: info: in instantiation at functional_sequences.ads:38
use_lists.ads:5:04: info: in instantiation at functional_sequences.ads:39
use_lists.ads:5:04: instantiation error at formal_doubly_linked_lists.ads:80
use_lists.ads:5:04: instantiation error at formal_doubly_linked_lists.ads:81
use_lists.ads:5:04: instantiation error at formal_doubly_linked_lists.ads:83
use_lists.ads:5:04: instantiation error at formal_doubly_linked_lists.ads:84
use_lists.ads:5:04: instantiation error at formal_doubly_linked_lists.ads:85
use_lists.ads:5:04: side effects of function "Get_Cursor_Model" are not modeled in SPARK
use_lists.ads:5:04: side effects of function "Get_Cursor_Model" are not modeled in SPARK
use_lists.ads:5:04: side effects of function "Get_Cursor_Model" are not modeled in SPARK
use_lists.ads:5:04: side effects of function "Get_Element_Model" are not modeled in SPARK
use_lists.ads:5:04: side effects of function "Get_Element_Model" are not modeled in SPARK
use_lists.ads:14:65: info: overflow check proved (CVC4: 1 VC)
use_lists.ads:16:32: info: initialization of "L2" proved
use_lists.ads:16:32: info: initialization of private part of "L2" proved
use_lists.ads:17:14: info: function contract not available for proof ("Length" might not return)
use_lists.ads:17:14: medium: postcondition might fail, cannot prove Length (L2) = Length (L1)
use_lists.ads:17:22: info: initialization of "L2" proved
use_lists.ads:17:22: info: initialization of private part of "L2" proved
use_lists.ads:17:28: info: function contract not available for proof ("Length" might not return)
use_lists.ads:18:43: info: function contract not available for proof ("Length" might not return)
use_lists.ads:19:32: side effects of function "Get_Element_Model" are not modeled in SPARK
use_lists.ads:20:32: side effects of function "Get_Element_Model" are not modeled in SPARK
gnatprove: error during flow analysis and proof
