counterex_forall.adb:11:41: info: range check proved (CVC4: 4 VC)
counterex_forall.adb:12:43: info: initialization of "R" proved
counterex_forall.adb:12:43: medium: "R" might not be initialized
counterex_forall.adb:12:43: medium: loop invariant might fail after first iteration, cannot prove R (I) = (I = C + 1) (e.g. when C = 2 and I = 2 and R = (others => True) and X = 2)
counterex_forall.adb:12:43: medium: loop invariant might fail in first iteration, cannot prove R (I) = (I = C + 1) (e.g. when C = 1 and I = 1 and R = (1 => True, others => False) and X = 1)
counterex_forall.adb:12:58: medium: overflow check might fail (e.g. when C = Integer'Last) [possible explanation: subprogram at line 5 should mention C in a precondition]
counterex_forall.adb:14:14: info: initialization of "R" proved
counterex_forall.adb:19:25: info: cannot unroll loop (too many loop iterations)
counterex_forall.adb:21:22: high: "R" is not initialized
counterex_forall.adb:21:28: medium: overflow check might fail (e.g. when R = (others => Integer'Last) and X = 1 and Y = 1) [possible explanation: loop invariant at line 22 should mention R]
counterex_forall.adb:22:36: info: loop invariant preservation proved (CVC4: 1 VC)
counterex_forall.adb:24:41: medium: loop invariant might fail in first iteration, cannot prove I + J < X + Y + 1 (e.g. when I = 1 and J = 2 and X = 1 and Y = 1)
counterex_forall.adb:24:43: info: overflow check proved (CVC4: 2 VC)
counterex_forall.ads:12:22: medium: postcondition might fail, cannot prove Single_Char_Set_Broken'Result (I) = (I > C) (e.g. when C = 0 and I = 0 and Single_Char_Set_Broken'Result = (0 => True, others => False))
counterex_forall.ads:14:30: info: initialization of "R" proved
