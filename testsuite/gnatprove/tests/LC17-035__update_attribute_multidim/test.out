update.ads:22:30: medium: postcondition might fail, cannot prove A(J, K, L) = A'Old(J, J, J)
update.ads:31:19: info: postcondition proved (CVC5: 1 VC; Trivial: 3 VC)
update.ads:38:19: medium: postcondition might fail
update_checks.adb:10:04: warning: analyzing unreferenced procedure "Test1"
update_checks.adb:17:23: info: index check proved (CVC5: 2 VC)
update_checks.adb:17:26: info: index check proved (CVC5: 2 VC)
update_checks.adb:17:29: info: index check proved (CVC5: 2 VC)
update_checks.adb:22:04: warning: analyzing unreferenced procedure "Test2"
update_checks.adb:29:25: medium: array index check might fail [reason for check: result of subtraction must be a valid index into the array] [possible fix: add precondition (X >= -32768 + 1) to subprogram at line 22]
update_checks.adb:29:25: medium: range check might fail, cannot prove lower bound for X - 1 [possible fix: add precondition (X >= IT1'First + 1) to subprogram at line 22]
update_checks.adb:29:32: medium: array index check might fail [reason for check: result of subtraction must be a valid index into the array] [possible fix: add precondition (Y >= -32768 + 1) to subprogram at line 22]
update_checks.adb:29:32: medium: range check might fail, cannot prove lower bound for Y - 1 [possible fix: add precondition (Y >= IT2'First + 1) to subprogram at line 22]
update_checks.adb:29:39: medium: array index check might fail [reason for check: result of addition must be a valid index into the array] [possible fix: add precondition (Z <= 32767 - 1) to subprogram at line 22]
update_checks.adb:29:39: medium: range check might fail, cannot prove upper bound for Z + 1 [possible fix: add precondition (Z <= IT3'Last - 1) to subprogram at line 22]
update_checks.adb:29:55: medium: range check might fail, cannot prove upper bound for New_Val + 1 [reason for check: result of addition must fit in component type] [possible fix: add precondition (New_Val <= ET1'Last - 1) to subprogram at line 22]
update_checks.adb:34:04: warning: analyzing unreferenced procedure "Test3"
update_checks.adb:43:28: info: index check proved (CVC5: 2 VC)
update_checks.adb:43:28: info: range check proved (CVC5: 2 VC)
update_checks.adb:43:35: info: index check proved (CVC5: 2 VC)
update_checks.adb:43:35: info: range check proved (CVC5: 2 VC)
update_checks.adb:43:42: info: index check proved (CVC5: 2 VC)
update_checks.adb:43:42: info: range check proved (CVC5: 2 VC)
update_checks.adb:43:58: info: range check proved (CVC5: 2 VC)
update_checks.adb:49:04: warning: analyzing unreferenced procedure "Test4"
update_checks.adb:56:23: info: index check proved (CVC5: 2 VC)
update_checks.adb:56:27: info: index check proved (CVC5: 2 VC)
update_checks.adb:56:31: info: index check proved (CVC5: 2 VC)
update_checks.adb:56:38: info: index check proved (CVC5: 2 VC)
update_checks.adb:56:42: info: index check proved (CVC5: 2 VC)
update_checks.adb:56:46: info: index check proved (CVC5: 2 VC)
update_checks.adb:61:04: warning: analyzing unreferenced procedure "Test5"
update_checks.adb:68:26: medium: array index check might fail [reason for check: result of subtraction must be a valid index into the array] [possible fix: add precondition (X1 >= -32768 + 1) to subprogram at line 61]
update_checks.adb:68:26: medium: range check might fail, cannot prove lower bound for X1 - 1 [possible fix: add precondition (X1 >= IT1'First + 1) to subprogram at line 61]
update_checks.adb:68:34: medium: array index check might fail [reason for check: result of subtraction must be a valid index into the array] [possible fix: add precondition (Y1 >= -32768 + 1) to subprogram at line 61]
update_checks.adb:68:34: medium: range check might fail, cannot prove lower bound for Y1 - 1 [possible fix: add precondition (Y1 >= IT2'First + 1) to subprogram at line 61]
update_checks.adb:68:42: medium: array index check might fail [reason for check: result of subtraction must be a valid index into the array] [possible fix: add precondition (Z1 >= -32768 + 1) to subprogram at line 61]
update_checks.adb:68:42: medium: range check might fail, cannot prove lower bound for Z1 - 1 [possible fix: add precondition (Z1 >= IT3'First + 1) to subprogram at line 61]
update_checks.adb:69:28: medium: array index check might fail [reason for check: result of addition must be a valid index into the array] [possible fix: add precondition (X2 <= 32767 - 1) to subprogram at line 61]
update_checks.adb:69:28: medium: range check might fail, cannot prove upper bound for X2 + 1 [possible fix: add precondition (X2 <= IT1'Last - 1) to subprogram at line 61]
update_checks.adb:69:36: medium: array index check might fail [reason for check: result of addition must be a valid index into the array] [possible fix: add precondition (Y2 <= 32767 - 1) to subprogram at line 61]
update_checks.adb:69:36: medium: range check might fail, cannot prove upper bound for Y2 + 1 [possible fix: add precondition (Y2 <= IT2'Last - 1) to subprogram at line 61]
update_checks.adb:69:44: medium: array index check might fail [reason for check: result of addition must be a valid index into the array] [possible fix: add precondition (Z2 <= 32767 - 1) to subprogram at line 61]
update_checks.adb:69:44: medium: range check might fail, cannot prove upper bound for Z2 + 1 [possible fix: add precondition (Z2 <= IT3'Last - 1) to subprogram at line 61]
update_checks.adb:69:60: medium: range check might fail, cannot prove upper bound for New_Val + 1 [reason for check: result of addition must fit in component type] [possible fix: add precondition (New_Val <= ET1'Last - 1) to subprogram at line 61]
update_checks.adb:74:04: warning: analyzing unreferenced procedure "Test6"
update_checks.adb:84:29: info: index check proved (CVC5: 2 VC)
update_checks.adb:84:29: info: range check proved (CVC5: 2 VC)
update_checks.adb:84:37: info: index check proved (CVC5: 2 VC)
update_checks.adb:84:37: info: range check proved (CVC5: 2 VC)
update_checks.adb:84:45: info: index check proved (CVC5: 2 VC)
update_checks.adb:84:45: info: range check proved (CVC5: 2 VC)
update_checks.adb:85:31: info: index check proved (CVC5: 2 VC)
update_checks.adb:85:31: info: range check proved (CVC5: 2 VC)
update_checks.adb:85:39: info: index check proved (CVC5: 2 VC)
update_checks.adb:85:39: info: range check proved (CVC5: 2 VC)
update_checks.adb:85:47: info: index check proved (CVC5: 2 VC)
update_checks.adb:85:47: info: range check proved (CVC5: 2 VC)
update_checks.adb:85:63: info: range check proved (CVC5: 2 VC)
update_checks.adb:91:04: warning: analyzing unreferenced procedure "Test7"
update_checks.adb:99:26: medium: array index check might fail [reason for check: result of subtraction must be a valid index into the array] [possible fix: add precondition (X1 >= -32768 + 1) to subprogram at line 91]
update_checks.adb:99:26: medium: range check might fail, cannot prove lower bound for X1 - 1 [possible fix: add precondition (X1 >= IT1'First + 1) to subprogram at line 91]
update_checks.adb:99:34: medium: array index check might fail [reason for check: result of subtraction must be a valid index into the array] [possible fix: add precondition (Y1 >= -32768 + 1) to subprogram at line 91]
update_checks.adb:99:34: medium: range check might fail, cannot prove lower bound for Y1 - 1 [possible fix: add precondition (Y1 >= IT2'First + 1) to subprogram at line 91]
update_checks.adb:99:42: medium: array index check might fail [reason for check: result of subtraction must be a valid index into the array] [possible fix: add precondition (Z1 >= -32768 + 1) to subprogram at line 91]
update_checks.adb:99:42: medium: range check might fail, cannot prove lower bound for Z1 - 1 [possible fix: add precondition (Z1 >= IT3'First + 1) to subprogram at line 91]
update_checks.adb:100:28: medium: array index check might fail [reason for check: result of addition must be a valid index into the array] [possible fix: add precondition (X2 <= 32767 - 1) to subprogram at line 91]
update_checks.adb:100:28: medium: range check might fail, cannot prove upper bound for X2 + 1 [possible fix: add precondition (X2 <= IT1'Last - 1) to subprogram at line 91]
update_checks.adb:100:36: medium: array index check might fail [reason for check: result of addition must be a valid index into the array] [possible fix: add precondition (Y2 <= 32767 - 1) to subprogram at line 91]
update_checks.adb:100:36: medium: range check might fail, cannot prove upper bound for Y2 + 1 [possible fix: add precondition (Y2 <= IT2'Last - 1) to subprogram at line 91]
update_checks.adb:100:44: medium: array index check might fail [reason for check: result of addition must be a valid index into the array] [possible fix: add precondition (Z2 <= 32767 - 1) to subprogram at line 91]
update_checks.adb:100:44: medium: range check might fail, cannot prove upper bound for Z2 + 1 [possible fix: add precondition (Z2 <= IT3'Last - 1) to subprogram at line 91]
update_checks.adb:100:62: medium: range check might fail, cannot prove upper bound for New_Val_1 + 1 [reason for check: result of addition must fit in component type] [possible fix: add precondition (New_Val_1 <= ET1'Last - 1) to subprogram at line 91]
update_checks.adb:101:26: medium: array index check might fail [reason for check: result of addition must be a valid index into the array] [possible fix: add precondition (X3 <= 32767 - 1) to subprogram at line 91]
update_checks.adb:101:26: medium: range check might fail, cannot prove upper bound for X3 + 1 [possible fix: add precondition (X3 <= IT1'Last - 1) to subprogram at line 91]
update_checks.adb:101:34: medium: array index check might fail [reason for check: result of addition must be a valid index into the array] [possible fix: add precondition (Y3 <= 32767 - 1) to subprogram at line 91]
update_checks.adb:101:34: medium: range check might fail, cannot prove upper bound for Y3 + 1 [possible fix: add precondition (Y3 <= IT2'Last - 1) to subprogram at line 91]
update_checks.adb:101:42: medium: array index check might fail [reason for check: result of addition must be a valid index into the array] [possible fix: add precondition (Z3 <= 32767 - 1) to subprogram at line 91]
update_checks.adb:101:42: medium: range check might fail, cannot prove upper bound for Z3 + 1 [possible fix: add precondition (Z3 <= IT3'Last - 1) to subprogram at line 91]
update_checks.adb:101:62: medium: range check might fail, cannot prove lower bound for New_Val_2 - 1 [reason for check: result of subtraction must fit in component type] [possible fix: add precondition (New_Val_2 >= ET1'First + 1) to subprogram at line 91]
update_checks.adb:106:04: warning: analyzing unreferenced procedure "Test8"
update_checks.adb:118:29: info: index check proved (CVC5: 2 VC)
update_checks.adb:118:29: info: range check proved (CVC5: 2 VC)
update_checks.adb:118:37: info: index check proved (CVC5: 2 VC)
update_checks.adb:118:37: info: range check proved (CVC5: 2 VC)
update_checks.adb:118:45: info: index check proved (CVC5: 2 VC)
update_checks.adb:118:45: info: range check proved (CVC5: 2 VC)
update_checks.adb:119:31: info: index check proved (CVC5: 2 VC)
update_checks.adb:119:31: info: range check proved (CVC5: 2 VC)
update_checks.adb:119:39: info: index check proved (CVC5: 2 VC)
update_checks.adb:119:39: info: range check proved (CVC5: 2 VC)
update_checks.adb:119:47: info: index check proved (CVC5: 2 VC)
update_checks.adb:119:47: info: range check proved (CVC5: 2 VC)
update_checks.adb:119:65: info: range check proved (CVC5: 2 VC)
update_checks.adb:120:29: info: index check proved (CVC5: 2 VC)
update_checks.adb:120:29: info: range check proved (CVC5: 2 VC)
update_checks.adb:120:37: info: index check proved (CVC5: 2 VC)
update_checks.adb:120:37: info: range check proved (CVC5: 2 VC)
update_checks.adb:120:45: info: index check proved (CVC5: 2 VC)
update_checks.adb:120:45: info: range check proved (CVC5: 2 VC)
update_checks.adb:120:65: info: range check proved (CVC5: 2 VC)
update_checks.adb:134:26: info: index check proved (CVC5: 2 VC)
update_checks.adb:134:26: info: range check proved (CVC5: 2 VC)
update_checks.adb:134:34: info: index check proved (CVC5: 2 VC)
update_checks.adb:134:34: info: range check proved (CVC5: 2 VC)
update_checks.adb:134:42: info: index check proved (CVC5: 2 VC)
update_checks.adb:134:42: info: range check proved (CVC5: 2 VC)
update_checks.adb:135:28: info: index check proved (CVC5: 2 VC)
update_checks.adb:135:28: info: range check proved (CVC5: 2 VC)
update_checks.adb:135:36: info: index check proved (CVC5: 2 VC)
update_checks.adb:135:36: info: range check proved (CVC5: 2 VC)
update_checks.adb:135:44: info: index check proved (CVC5: 2 VC)
update_checks.adb:135:44: info: range check proved (CVC5: 2 VC)
update_checks.adb:135:62: info: range check proved (CVC5: 2 VC)
update_checks.adb:136:26: info: index check proved (CVC5: 2 VC)
update_checks.adb:136:26: info: range check proved (CVC5: 2 VC)
update_checks.adb:136:34: info: index check proved (CVC5: 2 VC)
update_checks.adb:136:34: info: range check proved (CVC5: 2 VC)
update_checks.adb:136:42: info: index check proved (CVC5: 2 VC)
update_checks.adb:136:42: info: range check proved (CVC5: 2 VC)
update_checks.adb:136:62: info: range check proved (CVC5: 2 VC)
update_checks.ads:26:06: info: postcondition proved (CVC5: 1 VC; Trivial: 3 VC)
update_checks.ads:26:28: info: range check proved (CVC5: 2 VC)
update_checks.ads:26:36: info: range check proved (CVC5: 2 VC)
update_checks.ads:26:44: info: range check proved (CVC5: 2 VC)
update_checks.ads:27:30: info: range check proved (CVC5: 2 VC)
update_checks.ads:27:38: info: range check proved (CVC5: 2 VC)
update_checks.ads:27:46: info: range check proved (CVC5: 2 VC)
update_checks.ads:27:64: info: range check proved (CVC5: 2 VC)
update_checks.ads:28:28: info: range check proved (CVC5: 2 VC)
update_checks.ads:28:36: info: range check proved (CVC5: 2 VC)
update_checks.ads:28:44: info: range check proved (CVC5: 2 VC)
update_checks.ads:28:64: info: range check proved (CVC5: 2 VC)
update_logic_fn.adb:12:29: info: index check proved (CVC5: 2 VC)
update_logic_fn.adb:12:32: info: index check proved (CVC5: 2 VC)
update_logic_fn.adb:12:43: info: index check proved (CVC5: 2 VC)
update_logic_fn.adb:12:46: info: index check proved (CVC5: 2 VC)
update_logic_fn.ads:23:18: info: initialization of "A" proved
update_logic_fn.ads:28:11: info: flow dependencies proved
update_logic_fn.ads:29:14: info: postcondition proved (CVC5: 1 VC)
update_logic_fn.ads:29:37: info: index check proved (CVC5: 2 VC)
update_logic_fn.ads:29:40: info: index check proved (CVC5: 2 VC)
update_logic_fn.ads:29:51: info: index check proved (CVC5: 2 VC)
update_logic_fn.ads:29:54: info: index check proved (CVC5: 2 VC)
update_logic_fn.ads:33:18: info: initialization of "A" proved
update_logic_fn.ads:38:11: info: flow dependencies proved
update_logic_fn.ads:39:14: info: postcondition proved (CVC5: 1 VC)
update_logic_fn.ads:39:37: info: index check proved (CVC5: 2 VC)
update_logic_fn.ads:39:40: info: index check proved (CVC5: 2 VC)
update_logic_fn.ads:39:51: info: index check proved (CVC5: 2 VC)
update_logic_fn.ads:39:54: info: index check proved (CVC5: 2 VC)
update_logic_fn.ads:43:24: info: initialization of "A" proved
update_logic_fn.ads:48:11: info: flow dependencies proved
update_logic_fn.ads:49:14: medium: postcondition might fail
update_logic_fn.ads:49:37: info: index check proved (CVC5: 2 VC)
update_logic_fn.ads:49:40: info: index check proved (CVC5: 2 VC)
update_logic_fn.ads:49:51: info: index check proved (CVC5: 2 VC)
update_logic_fn.ads:49:54: info: index check proved (CVC5: 2 VC)
update_logic_fn.ads:55:18: info: initialization of "A" proved
update_logic_fn.ads:61:11: info: flow dependencies proved
update_logic_fn.ads:62:14: info: postcondition proved (CVC5: 1 VC)
update_logic_fn.ads:63:27: info: index check proved (CVC5: 2 VC)
update_logic_fn.ads:63:30: info: index check proved (CVC5: 2 VC)
update_logic_fn.ads:63:33: info: index check proved (CVC5: 2 VC)
update_logic_fn.ads:64:27: info: index check proved (CVC5: 2 VC)
update_logic_fn.ads:64:30: info: index check proved (CVC5: 2 VC)
update_logic_fn.ads:64:33: info: index check proved (CVC5: 2 VC)
update_logic_fn.ads:68:24: info: initialization of "A" proved
update_logic_fn.ads:74:11: info: flow dependencies proved
update_logic_fn.ads:75:14: medium: postcondition might fail
update_logic_fn.ads:76:27: info: index check proved (CVC5: 2 VC)
update_logic_fn.ads:76:30: info: index check proved (CVC5: 2 VC)
update_logic_fn.ads:76:33: info: index check proved (CVC5: 2 VC)
update_logic_fn.ads:77:27: info: index check proved (CVC5: 2 VC)
update_logic_fn.ads:77:30: info: index check proved (CVC5: 2 VC)
update_logic_fn.ads:77:33: info: index check proved (CVC5: 2 VC)
update_logic_fn.ads:83:18: info: initialization of "A" proved
update_logic_fn.ads:88:11: info: flow dependencies proved
update_logic_fn.ads:90:17: medium: postcondition might fail, cannot prove A = A2'(5 => (7 => V2, others => 1000), others => (others => 1000))
update_logic_fn.ads:97:18: info: initialization of "A" proved
update_logic_fn.ads:102:11: info: flow dependencies proved
update_logic_fn.ads:103:14: info: postcondition proved (CVC5: 7 VC; Trivial: 4 VC)
update_logic_fn.ads:111:18: info: initialization of "A" proved
update_logic_fn.ads:115:11: info: flow dependencies proved
update_logic_fn.ads:116:14: info: postcondition proved (CVC5: 1 VC)
update_logic_fn.ads:116:37: info: index check proved (CVC5: 2 VC)
update_logic_fn.ads:116:40: info: index check proved (CVC5: 2 VC)
update_logic_fn.ads:116:46: info: index check proved (CVC5: 2 VC)
update_logic_fn.ads:116:49: info: index check proved (CVC5: 2 VC)
update_logic_fn.ads:121:18: info: initialization of "A" proved
update_logic_fn.ads:127:19: info: postcondition proved (CVC5: 1 VC; Trivial: 1 VC)
update_logic_fn.ads:128:28: info: index check proved (CVC5: 2 VC)
update_logic_fn.ads:128:31: info: index check proved (CVC5: 2 VC)
update_logic_fn.ads:128:34: info: index check proved (CVC5: 2 VC)
update_logic_fn.ads:128:43: info: index check proved (CVC5: 2 VC)
update_logic_fn.ads:128:47: info: index check proved (CVC5: 2 VC)
update_logic_fn.ads:128:51: info: index check proved (CVC5: 2 VC)
update_logic_fn.ads:129:28: info: index check proved (CVC5: 2 VC)
update_logic_fn.ads:129:32: info: index check proved (CVC5: 2 VC)
update_logic_fn.ads:129:36: info: index check proved (CVC5: 2 VC)
update_logic_fn.ads:133:24: info: initialization of "A" proved
update_logic_fn.ads:140:06: medium: postcondition might fail, cannot prove A = A_3D_Arr'Update ((1, 2, Blue) | (X1, Y1, Z1) => V1, (X2, Y2, Z2) => V2)
update_logic_fn.ads:140:28: info: index check proved (CVC5: 2 VC)
update_logic_fn.ads:140:31: info: index check proved (CVC5: 2 VC)
update_logic_fn.ads:140:34: info: index check proved (CVC5: 2 VC)
update_logic_fn.ads:140:43: info: index check proved (CVC5: 2 VC)
update_logic_fn.ads:140:47: info: index check proved (CVC5: 2 VC)
update_logic_fn.ads:140:51: info: index check proved (CVC5: 2 VC)
update_logic_fn.ads:141:28: info: index check proved (CVC5: 2 VC)
update_logic_fn.ads:141:32: info: index check proved (CVC5: 2 VC)
update_logic_fn.ads:141:36: info: index check proved (CVC5: 2 VC)
