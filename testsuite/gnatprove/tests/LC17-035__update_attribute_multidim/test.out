update.ads:22:30: medium: postcondition might fail, cannot prove A(J, K, L) = A'Old(J, J, J) (e.g. when I = 3 and J = 1 and K = 1 and L = 2)
update.ads:31:19: info: postcondition proved (CVC4: 1 VC)
update.ads:38:19: medium: postcondition might fail, cannot prove A = A'Old'update (e.g. when I = 1 and New_Val = 0)
update_checks.adb:10:04: warning: analyzing unreferenced procedure "Test1"
update_checks.adb:22:04: warning: analyzing unreferenced procedure "Test2"
update_checks.adb:29:25: medium: range check might fail (e.g. when X = 1) [possible explanation: subprogram at line 22 should mention X in a precondition]
update_checks.adb:29:32: medium: range check might fail (e.g. when Y = 1) [possible explanation: subprogram at line 22 should mention Y in a precondition]
update_checks.adb:29:39: medium: range check might fail (e.g. when Z = 10) [possible explanation: subprogram at line 22 should mention Z in a precondition]
update_checks.adb:29:55: medium: range check might fail (e.g. when New_Val = ET1'Last) [possible explanation: subprogram at line 22 should mention New_Val in a precondition]
update_checks.adb:34:04: warning: analyzing unreferenced procedure "Test3"
update_checks.adb:43:28: info: range check proved (CVC4: 1 VC)
update_checks.adb:43:35: info: range check proved (CVC4: 1 VC)
update_checks.adb:43:42: info: range check proved (CVC4: 1 VC)
update_checks.adb:43:58: info: range check proved (CVC4: 1 VC)
update_checks.adb:49:04: warning: analyzing unreferenced procedure "Test4"
update_checks.adb:61:04: warning: analyzing unreferenced procedure "Test5"
update_checks.adb:68:26: medium: range check might fail (e.g. when X1 = 1) [possible explanation: subprogram at line 61 should mention X1 in a precondition]
update_checks.adb:68:34: medium: range check might fail (e.g. when Y1 = 1) [possible explanation: subprogram at line 61 should mention Y1 in a precondition]
update_checks.adb:68:42: medium: range check might fail (e.g. when Z1 = 1) [possible explanation: subprogram at line 61 should mention Z1 in a precondition]
update_checks.adb:69:28: medium: range check might fail (e.g. when X2 = 3) [possible explanation: subprogram at line 61 should mention X2 in a precondition]
update_checks.adb:69:36: medium: range check might fail (e.g. when Y2 = 5) [possible explanation: subprogram at line 61 should mention Y2 in a precondition]
update_checks.adb:69:44: medium: range check might fail (e.g. when Z2 = 10) [possible explanation: subprogram at line 61 should mention Z2 in a precondition]
update_checks.adb:69:60: medium: range check might fail (e.g. when New_Val = ET1'Last) [possible explanation: subprogram at line 61 should mention New_Val in a precondition]
update_checks.adb:74:04: warning: analyzing unreferenced procedure "Test6"
update_checks.adb:84:29: info: range check proved (CVC4: 1 VC)
update_checks.adb:84:37: info: range check proved (CVC4: 1 VC)
update_checks.adb:84:45: info: range check proved (CVC4: 1 VC)
update_checks.adb:85:31: info: range check proved (CVC4: 1 VC)
update_checks.adb:85:39: info: range check proved (CVC4: 1 VC)
update_checks.adb:85:47: info: range check proved (CVC4: 1 VC)
update_checks.adb:85:63: info: range check proved (CVC4: 1 VC)
update_checks.adb:91:04: warning: analyzing unreferenced procedure "Test7"
update_checks.adb:99:26: medium: range check might fail (e.g. when X1 = 1) [possible explanation: subprogram at line 91 should mention X1 in a precondition]
update_checks.adb:99:34: medium: range check might fail (e.g. when Y1 = 1) [possible explanation: subprogram at line 91 should mention Y1 in a precondition]
update_checks.adb:99:42: medium: range check might fail (e.g. when Z1 = 1) [possible explanation: subprogram at line 91 should mention Z1 in a precondition]
update_checks.adb:100:28: medium: range check might fail (e.g. when X2 = 3) [possible explanation: subprogram at line 91 should mention X2 in a precondition]
update_checks.adb:100:36: medium: range check might fail (e.g. when Y2 = 5) [possible explanation: subprogram at line 91 should mention Y2 in a precondition]
update_checks.adb:100:44: medium: range check might fail (e.g. when Z2 = 10) [possible explanation: subprogram at line 91 should mention Z2 in a precondition]
update_checks.adb:100:62: medium: range check might fail (e.g. when New_Val_1 = ET1'Last) [possible explanation: subprogram at line 91 should mention New_Val_1 in a precondition]
update_checks.adb:101:26: medium: range check might fail (e.g. when X3 = 3) [possible explanation: subprogram at line 91 should mention X3 in a precondition]
update_checks.adb:101:34: medium: range check might fail (e.g. when Y3 = 5) [possible explanation: subprogram at line 91 should mention Y3 in a precondition]
update_checks.adb:101:42: medium: range check might fail (e.g. when Z3 = 10) [possible explanation: subprogram at line 91 should mention Z3 in a precondition]
update_checks.adb:101:62: medium: range check might fail (e.g. when New_Val_2 = 0) [possible explanation: subprogram at line 91 should mention New_Val_2 in a precondition]
update_checks.adb:106:04: warning: analyzing unreferenced procedure "Test8"
update_checks.adb:118:29: info: range check proved (CVC4: 1 VC)
update_checks.adb:118:37: info: range check proved (CVC4: 1 VC)
update_checks.adb:118:45: info: range check proved (CVC4: 1 VC)
update_checks.adb:119:31: info: range check proved (CVC4: 1 VC)
update_checks.adb:119:39: info: range check proved (CVC4: 1 VC)
update_checks.adb:119:47: info: range check proved (CVC4: 1 VC)
update_checks.adb:119:65: info: range check proved (CVC4: 1 VC)
update_checks.adb:120:29: info: range check proved (CVC4: 1 VC)
update_checks.adb:120:37: info: range check proved (CVC4: 1 VC)
update_checks.adb:120:45: info: range check proved (CVC4: 1 VC)
update_checks.adb:120:65: info: range check proved (CVC4: 1 VC)
update_checks.adb:134:26: info: range check proved (CVC4: 1 VC)
update_checks.adb:134:34: info: range check proved (CVC4: 1 VC)
update_checks.adb:134:42: info: range check proved (CVC4: 1 VC)
update_checks.adb:135:28: info: range check proved (CVC4: 1 VC)
update_checks.adb:135:36: info: range check proved (CVC4: 1 VC)
update_checks.adb:135:44: info: range check proved (CVC4: 1 VC)
update_checks.adb:135:62: info: range check proved (CVC4: 1 VC)
update_checks.adb:136:26: info: range check proved (CVC4: 1 VC)
update_checks.adb:136:34: info: range check proved (CVC4: 1 VC)
update_checks.adb:136:42: info: range check proved (CVC4: 1 VC)
update_checks.adb:136:62: info: range check proved (CVC4: 1 VC)
update_checks.ads:26:06: info: postcondition proved (CVC4: 1 VC)
update_checks.ads:26:28: info: range check proved (CVC4: 1 VC)
update_checks.ads:26:36: info: range check proved (CVC4: 1 VC)
update_checks.ads:26:44: info: range check proved (CVC4: 1 VC)
update_checks.ads:27:30: info: range check proved (CVC4: 1 VC)
update_checks.ads:27:38: info: range check proved (CVC4: 1 VC)
update_checks.ads:27:46: info: range check proved (CVC4: 1 VC)
update_checks.ads:27:64: info: range check proved (CVC4: 1 VC)
update_checks.ads:28:28: info: range check proved (CVC4: 1 VC)
update_checks.ads:28:36: info: range check proved (CVC4: 1 VC)
update_checks.ads:28:44: info: range check proved (CVC4: 1 VC)
update_checks.ads:28:64: info: range check proved (CVC4: 1 VC)
update_logic_fn.adb:23:16: info: initialization of "A" proved
update_logic_fn.adb:24:16: info: initialization of "A" proved
update_logic_fn.adb:35:16: info: initialization of "A" proved
update_logic_fn.adb:36:16: info: initialization of "A" proved
update_logic_fn.adb:48:23: info: initialization of "A" proved
update_logic_fn.adb:49:19: info: initialization of "A" proved
update_logic_fn.adb:61:23: info: initialization of "A" proved
update_logic_fn.adb:62:19: info: initialization of "A" proved
update_logic_fn.adb:73:16: info: initialization of "A" proved
update_logic_fn.adb:74:16: info: initialization of "A" proved
update_logic_fn.adb:85:16: info: initialization of "A" proved
update_logic_fn.adb:86:16: info: initialization of "A" proved
update_logic_fn.adb:96:16: info: initialization of "A" proved
update_logic_fn.adb:97:16: info: initialization of "A" proved
update_logic_fn.adb:109:22: info: initialization of "A" proved
update_logic_fn.adb:110:22: info: initialization of "A" proved
update_logic_fn.adb:122:22: info: initialization of "A" proved
update_logic_fn.adb:123:22: info: initialization of "A" proved
update_logic_fn.ads:23:18: info: initialization of "A" proved
update_logic_fn.ads:29:14: info: postcondition proved (CVC4: 1 VC)
update_logic_fn.ads:29:15: info: initialization of "A" proved
update_logic_fn.ads:33:18: info: initialization of "A" proved
update_logic_fn.ads:39:14: info: postcondition proved (CVC4: 1 VC)
update_logic_fn.ads:39:15: info: initialization of "A" proved
update_logic_fn.ads:43:24: info: initialization of "A" proved
update_logic_fn.ads:49:14: medium: postcondition might fail, cannot prove A = A_2D_Arr'update (e.g. when V1 = 99 and V2 = 0 and X = 4 and Y = 0)
update_logic_fn.ads:49:15: info: initialization of "A" proved
update_logic_fn.ads:55:18: info: initialization of "A" proved
update_logic_fn.ads:62:14: info: postcondition proved (CVC4: 1 VC)
update_logic_fn.ads:62:15: info: initialization of "A" proved
update_logic_fn.ads:68:24: info: initialization of "A" proved
update_logic_fn.ads:75:14: medium: postcondition might fail, cannot prove A = A3'(others => (others => (others => 1000 ))) 'update (e.g. when V1 = -1 and V2 = 0 and X = 5 and Y = 7)
update_logic_fn.ads:75:15: info: initialization of "A" proved
update_logic_fn.ads:83:18: info: initialization of "A" proved
update_logic_fn.ads:90:17: info: initialization of "A" proved
update_logic_fn.ads:90:17: medium: postcondition might fail, cannot prove A = A2'(5 => (7 => V2, others => 1000), others => (others => 1000)) (e.g. when V2 = 0 and X = 5 and Y = 7)
update_logic_fn.ads:97:18: info: initialization of "A" proved
update_logic_fn.ads:103:14: info: postcondition proved (CVC4: 7 VC)
update_logic_fn.ads:103:42: info: initialization of "A" proved
update_logic_fn.ads:111:18: info: initialization of "A" proved
update_logic_fn.ads:116:14: info: postcondition proved (CVC4: 1 VC)
update_logic_fn.ads:116:15: info: initialization of "A" proved
update_logic_fn.ads:121:18: info: initialization of "A" proved
update_logic_fn.ads:127:19: info: postcondition proved (CVC4: 2 VC)
update_logic_fn.ads:128:06: info: initialization of "A" proved
update_logic_fn.ads:133:24: info: initialization of "A" proved
update_logic_fn.ads:140:06: info: initialization of "A" proved
update_logic_fn.ads:140:06: medium: postcondition might fail, cannot prove A = A_3D_Arr'update (e.g. when V1 = 999 and V2 = 0 and X1 = 1 and X2 = 2 and Y1 = 2 and Y2 = 2 and Z1 = Red and Z2 = Blue)
