a-cofuve.ads:96:06: info: data dependencies proved, in instantiation at formal_vectors.ads:48, in instantiation at use_formal_vectors.ads:10
a-cofuve.ads:232:54: info: overflow check proved (CVC4: 1 VC), in instantiation at formal_vectors.ads:48, in instantiation at use_formal_vectors.ads:10
a-cofuve.ads:237:63: info: range check proved (CVC4: 1 VC), in instantiation at formal_vectors.ads:48, in instantiation at use_formal_vectors.ads:10
a-cofuve.ads:238:59: info: overflow check proved (CVC4: 1 VC), in instantiation at formal_vectors.ads:48, in instantiation at use_formal_vectors.ads:10
a-cofuve.ads:238:76: info: overflow check proved (CVC4: 1 VC), in instantiation at formal_vectors.ads:48, in instantiation at use_formal_vectors.ads:10
a-cofuve.ads:239:30: info: range check proved (CVC4: 1 VC), in instantiation at formal_vectors.ads:48, in instantiation at use_formal_vectors.ads:10
a-cofuve.ads:300:52: info: overflow check proved (CVC4: 1 VC), in instantiation at formal_vectors.ads:48, in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:9:14: info: postcondition proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:16:20: info: overflow check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:21:22: info: pointer dereference check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:21:25: info: range check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:34:38: medium: postcondition might fail, cannot prove Size (V) > V.Top, in instantiation at use_formal_vectors.ads:10 (e.g. when Min_Size = 0 and V = (Top => Natural'Last, Content => (all => (Positive'Last => (all => (all => Integer'Last))))) and V.Content.all'First = Integer'Last and V.Content.all'Last = Integer'Last and V'Old = (Top => Natural'Last, Content => (all => (others => (all => (all => Integer'Last))))))
formal_vectors.adb:40:21: info: overflow check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:44:11: info: predicate check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:44:20: info: absence of memory leak proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:44:23: info: range check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:45:19: info: pointer dereference check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:45:27: info: range check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:49:13: info: absence of memory leak at end of scope proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:50:15: info: range check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:51:13: medium: memory leak might occur at end of scope, in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:53:25: info: pointer dereference check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:53:25: info: pointer dereference check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:53:25: info: range check proved (CVC4: 4 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:53:47: info: pointer dereference check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:53:50: info: range check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:53:59: info: absence of memory leak proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:53:59: info: length check proved (CVC4: 3 VC; Trivial: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:53:74: info: length check proved (CVC4: 3 VC; Trivial: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:53:74: info: pointer dereference check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:53:74: info: pointer dereference check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:54:14: medium: predicate check might fail, in instantiation at use_formal_vectors.ads:10 (e.g. when New_Content.all = (1 => null, 2 => (all => (all => 2))) and New_Content.all'First = 1 and New_Content.all'Last = 2 and V = (Top => 1, Content => ?) and V.Content.all'First = 2 and V.Content.all'Last = 1) [possible fix: subprogram at line 29 should mention V in a precondition]
formal_vectors.adb:54:23: info: absence of memory leak proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:63:14: info: postcondition proved (CVC4: 3 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:63:43: info: pointer dereference check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:63:61: info: pointer dereference check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:66:07: medium: memory leak might occur, in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:67:10: info: absence of memory leak proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:68:12: info: absence of memory leak proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:73:14: info: postcondition proved (CVC4: 4 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:73:65: info: pointer dereference check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:73:83: info: pointer dereference check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:73:112: info: pointer dereference check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:73:128: info: pointer dereference check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:75:07: info: absence of memory leak at end of scope proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:77:10: info: absence of memory leak proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:78:12: info: absence of memory leak proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:84:08: info: pointer dereference check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:84:08: info: predicate check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:84:24: info: overflow check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:84:24: medium: array index check might fail, in instantiation at use_formal_vectors.ads:10 (e.g. when E.all = 0 and V = (Top => 0, Content => (all => (Positive'Last => (all => (all => Integer'Last))))) and V.Content.all'First = Integer'Last and V.Content.all'Last = Integer'Last) [reason for check: result of addition must be a valid index into the array]
formal_vectors.adb:84:29: medium: memory leak might occur, in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:85:08: info: predicate check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:85:22: info: overflow check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:97:24: info: overflow check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:98:08: info: predicate check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:101:33: info: loop invariant initialization proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:101:33: info: loop invariant preservation proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:102:33: info: loop invariant preservation proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:102:33: medium: loop invariant might fail in first iteration, cannot prove E.Content'Length >= E_Top, in instantiation at use_formal_vectors.ads:10 (e.g. when E = (Top => 0, Content => ?) and E.Content.all'First = Integer'Last and E.Content.all'Last = Integer'Last-1 and E_Top = Natural'Last-1)
formal_vectors.adb:102:34: info: pointer dereference check proved (CVC4: 4 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:102:42: info: range check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:104:13: info: loop invariant initialization proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:104:13: info: loop invariant preservation proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:104:41: info: pointer dereference check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:104:51: medium: array index check might fail, in instantiation at use_formal_vectors.ads:10 (e.g. when E = (Top => 0, Content => ?) and E.Content.all'First = 2 and E.Content.all'Last = 1) [reason for check: value must be a valid index into the array]
formal_vectors.adb:106:13: info: loop invariant initialization proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:106:13: info: loop invariant preservation proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:106:48: info: pointer dereference check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:106:58: medium: array index check might fail, in instantiation at use_formal_vectors.ads:10 (e.g. when E = (Top => 0, Content => ?) and E.Content.all'First = Integer'Last and E.Content.all'Last = Integer'Last-1) [reason for check: value must be a valid index into the array]
formal_vectors.adb:106:61: info: pointer dereference check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:106:68: info: precondition proved (CVC4: 4 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:106:80: info: range check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:107:33: info: loop invariant initialization proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:107:33: info: loop invariant preservation proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:109:13: info: loop invariant initialization proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:109:13: info: loop invariant preservation proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:110:23: info: pointer dereference check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:110:33: medium: array index check might fail, in instantiation at use_formal_vectors.ads:10 (e.g. when V = (Top => 1073741823, Content => (all => (others => (all => (all => Integer'Last))))) and V.Content.all'First = 1073741824 and V.Content.all'Last = Integer'Last) [reason for check: value must be a valid index into the array]
formal_vectors.adb:110:36: info: pointer dereference check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:110:43: info: precondition proved (CVC4: 4 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:111:33: info: loop invariant initialization proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:111:33: info: loop invariant preservation proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:111:34: info: pointer dereference check proved (CVC4: 4 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:111:42: info: range check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:111:59: info: overflow check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:113:13: info: loop invariant initialization proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:113:13: info: loop invariant preservation proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:113:32: info: overflow check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:113:45: info: overflow check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:113:57: info: pointer dereference check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:113:67: medium: array index check might fail, in instantiation at use_formal_vectors.ads:10 (e.g. when V = (Top => 0, Content => (all => (2 => (all => (all => 4)), others => (all => (all => 1))))) and V.Content.all'First = 2 and V.Content.all'Last = 4) [reason for check: value must be a valid index into the array]
formal_vectors.adb:115:23: info: pointer dereference check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:115:33: info: index check proved (CVC4: 4 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:115:36: info: pointer dereference check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:115:43: info: precondition proved (CVC4: 4 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:115:57: info: overflow check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:115:57: info: range check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:116:10: info: precondition proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:116:23: info: pointer dereference check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:116:23: info: predicate check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:116:39: info: index check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:116:39: info: overflow check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:116:39: medium: array index check might fail, in instantiation at use_formal_vectors.ads:10 (e.g. when E = (Top => 0, Content => (all => (others => (all => (all => Integer'Last))))) and I = 1 and V = (Top => 0, Content => (all => (Positive'Last => (all => (all => Integer'Last))))) and V.Content.all'First = Integer'Last and V.Content.all'Last = Integer'Last) [reason for check: result of addition must be a valid index into the array]
formal_vectors.adb:116:54: info: pointer dereference check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:116:54: info: predicate check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:116:64: info: index check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:116:64: medium: array index check might fail, in instantiation at use_formal_vectors.ads:10 (e.g. when E = (Top => 0, Content => (all => (2 => (all => (all => 2))))) and E.Content.all'First = 2 and E.Content.all'Last = 2 and I = 1) [reason for check: value must be a valid index into the array]
formal_vectors.adb:118:08: info: predicate check proved (Z3: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:118:22: info: overflow check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:123:07: info: absence of memory leak at end of scope proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:127:33: info: loop invariant initialization proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:127:33: info: loop invariant preservation proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:128:33: info: loop invariant initialization proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:128:33: info: loop invariant preservation proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:128:34: info: pointer dereference check proved (CVC4: 4 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:128:42: info: range check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:130:13: info: loop invariant initialization proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:130:13: info: loop invariant preservation proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:130:41: info: pointer dereference check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:130:51: medium: array index check might fail, in instantiation at use_formal_vectors.ads:10 (e.g. when V = (Top => 1, Content => (all => (others => (all => (all => Integer'Last))))) and V.Content.all'First = 2 and V.Content.all'Last = Integer'Last) [reason for check: value must be a valid index into the array]
formal_vectors.adb:132:13: info: loop invariant initialization proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:132:13: info: loop invariant preservation proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:133:23: info: pointer dereference check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:133:33: medium: array index check might fail, in instantiation at use_formal_vectors.ads:10 (e.g. when V = (Top => 2, Content => (all => (others => (all => (all => 3))))) and V.Content.all'First = 2 and V.Content.all'Last = 4) [reason for check: value must be a valid index into the array]
formal_vectors.adb:133:36: info: pointer dereference check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:133:43: info: precondition proved (CVC4: 4 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:134:33: info: loop invariant initialization proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:134:33: info: loop invariant preservation proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:136:13: info: loop invariant preservation proved (CVC4: 3 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:136:35: info: pointer dereference check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:136:45: medium: array index check might fail, in instantiation at use_formal_vectors.ads:10 (e.g. when I = 1 and V = (Top => 3, Content => (all => (2 => (all => (all => 4)), others => (all => (all => 0))))) and V.Content.all'First = 2 and V.Content.all'Last = 5) [reason for check: value must be a valid index into the array]
formal_vectors.adb:136:48: info: pointer dereference check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:136:83: info: pointer dereference check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:136:90: info: precondition proved (CVC4: 4 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:136:104: info: overflow check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:136:104: info: range check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:137:18: medium: loop invariant might fail in first iteration, cannot prove X.all = E, in instantiation at use_formal_vectors.ads:10 (e.g. when E.all = 0 and J = 1 and X.all = (all => 0))
formal_vectors.adb:137:20: info: pointer dereference check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:139:13: info: loop invariant initialization proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:139:13: info: loop invariant preservation proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:139:28: info: overflow check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:139:37: info: overflow check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:140:23: info: pointer dereference check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:140:33: info: index check proved (CVC4: 4 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:140:36: info: pointer dereference check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:140:43: info: precondition proved (CVC4: 4 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:140:57: info: overflow check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:140:57: info: range check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:142:13: info: loop invariant initialization proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:142:13: info: loop invariant preservation proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:143:23: info: pointer dereference check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:143:33: medium: array index check might fail, in instantiation at use_formal_vectors.ads:10 (e.g. when V = (Top => 1, Content => (all => (others => (all => (all => 3))))) and V.Content.all'First = 2 and V.Content.all'Last = 3) [reason for check: value must be a valid index into the array]
formal_vectors.adb:143:36: info: pointer dereference check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:143:43: info: precondition proved (CVC4: 4 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:143:55: info: range check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:144:10: info: precondition proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:144:17: info: pointer dereference check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:144:17: info: predicate check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:144:27: info: index check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:144:27: medium: array index check might fail, in instantiation at use_formal_vectors.ads:10 (e.g. when J = 1 and V = (Top => 1, Content => (all => (others => (all => (all => 3))))) and V.Content.all'First = 2 and V.Content.all'Last = 3) [reason for check: value must be a valid index into the array]
formal_vectors.adb:146:08: info: pointer dereference check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:146:08: info: predicate check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:146:24: info: overflow check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:146:24: medium: array index check might fail, in instantiation at use_formal_vectors.ads:10 (e.g. when V = (Top => 0, Content => (all => (3 => (all => (all => 3))))) and V.Content.all'First = 3 and V.Content.all'Last = 3) [reason for check: result of addition must be a valid index into the array]
formal_vectors.adb:146:29: medium: memory leak might occur, in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:147:08: info: predicate check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:147:22: info: overflow check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:152:08: info: pointer dereference check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:152:08: info: predicate check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:152:18: medium: array index check might fail, in instantiation at use_formal_vectors.ads:10 (e.g. when E.all = 0 and I = 1 and V = (Top => 1, Content => ?) and V.Content.all'First = 2 and V.Content.all'Last = 1) [reason for check: value must be a valid index into the array]
formal_vectors.adb:152:21: info: pointer dereference check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:152:25: medium: memory leak might occur, in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:158:11: info: predicate check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:158:25: info: range check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:166:11: info: predicate check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:166:25: info: range check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:168:36: info: loop invariant initialization proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:168:36: info: loop invariant preservation proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:169:36: info: loop invariant preservation proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:169:36: medium: loop invariant might fail in first iteration, cannot prove V.Content'Length >= Last (V_Mod), in instantiation at use_formal_vectors.ads:10 (e.g. when V = (Top => 1, Content => ?) and V.Content.all'First = 3 and V.Content.all'Last = 2)
formal_vectors.adb:169:37: info: pointer dereference check proved (CVC4: 4 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:169:45: info: range check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:171:16: info: loop invariant initialization proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:171:16: info: loop invariant preservation proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:171:40: info: overflow check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:172:19: info: pointer dereference check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:172:29: medium: array index check might fail, in instantiation at use_formal_vectors.ads:10 (e.g. when V = (Top => 1, Content => ?) and V.Content.all'First = 3 and V.Content.all'Last = 2) [reason for check: value must be a valid index into the array]
formal_vectors.adb:174:16: info: loop invariant initialization proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:174:16: info: loop invariant preservation proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:175:26: info: pointer dereference check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:175:36: medium: array index check might fail, in instantiation at use_formal_vectors.ads:10 (e.g. when V = (Top => 2, Content => ?) and V.Content.all'First = Integer'Last and V.Content.all'Last = Integer'Last-1) [reason for check: value must be a valid index into the array]
formal_vectors.adb:175:39: info: pointer dereference check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:175:46: info: precondition proved (CVC4: 4 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:177:16: info: loop invariant initialization proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:177:16: info: loop invariant preservation proved (Z3: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:177:36: info: overflow check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:178:26: info: pointer dereference check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:178:36: medium: array index check might fail, in instantiation at use_formal_vectors.ads:10 (e.g. when V = (Top => 3, Content => (all => (2 => (all => (all => 5)), 3 => (all => (all => 5)), others => (all => (all => 2))))) and V.Content.all'First = 2 and V.Content.all'Last = 5) [reason for check: value must be a valid index into the array]
formal_vectors.adb:178:39: info: pointer dereference check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:178:46: info: precondition proved (CVC4: 4 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:178:60: info: overflow check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:178:60: info: range check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:180:16: info: loop invariant initialization proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:180:16: info: loop invariant preservation proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:180:31: info: overflow check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:180:44: info: overflow check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:181:26: info: pointer dereference check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:181:36: medium: array index check might fail, in instantiation at use_formal_vectors.ads:10 (e.g. when V = (Top => 1, Content => ?) and V.Content.all'First = Integer'Last and V.Content.all'Last = Integer'Last-1) [reason for check: value must be a valid index into the array]
formal_vectors.adb:181:39: info: pointer dereference check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:181:46: info: precondition proved (CVC4: 4 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:181:58: info: range check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:182:13: info: precondition proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:182:20: info: pointer dereference check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:182:20: info: predicate check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:182:20: medium: formal parameters "From" and "To" might be aliased (SPARK RM 6.4.2), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:182:30: info: index check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:182:30: medium: array index check might fail, in instantiation at use_formal_vectors.ads:10 (e.g. when J = 1 and V = (Top => 1, Content => (all => (others => (all => (all => 2))))) and V.Content.all'First = 2 and V.Content.all'Last = 3) [reason for check: value must be a valid index into the array]
formal_vectors.adb:182:35: info: pointer dereference check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:182:35: info: predicate check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:182:47: info: index check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:182:47: info: overflow check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:184:10: medium: memory leak might occur, in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:184:17: info: pointer dereference check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:184:17: info: predicate check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:184:33: info: index check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:184:33: info: overflow check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:184:33: medium: array index check might fail, in instantiation at use_formal_vectors.ads:10 (e.g. when V = (Top => 0, Content => ?) and V.Content.all'First = 2 and V.Content.all'Last = 1) [reason for check: result of addition must be a valid index into the array]
formal_vectors.adb:189:14: info: pointer dereference check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:189:24: medium: array index check might fail, in instantiation at use_formal_vectors.ads:10 (e.g. when I = 1 and V = (Top => 1, Content => ?) and V.Content.all'First = 2 and V.Content.all'Last = 1) [reason for check: value must be a valid index into the array]
formal_vectors.adb:189:27: info: pointer dereference check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:195:22: info: refined post proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:196:43: info: precondition proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:196:75: info: pointer dereference check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:196:85: medium: array index check might fail, in instantiation at use_formal_vectors.ads:10 (e.g. when V = (Top => Natural'Last, Content => (all => (Positive'Last => (all => (all => 0)), others => (all => (all => 2))))) and V.Content.all'First = 2 and V.Content.all'Last = Integer'Last) [reason for check: value must be a valid index into the array]
formal_vectors.adb:196:88: info: pointer dereference check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:198:07: info: initialization of "M" proved, in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:201:33: info: loop invariant initialization proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:201:33: info: loop invariant preservation proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:203:13: info: loop invariant initialization proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:203:13: info: loop invariant preservation proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:203:40: info: precondition proved (CVC4: 4 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:203:61: info: pointer dereference check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:203:71: medium: array index check might fail, in instantiation at use_formal_vectors.ads:10 (e.g. when V = (Top => Natural'Last, Content => (all => (Positive'Last-1 => (all => (all => 0)), Positive'Last => (all => (all => Integer'Last))))) and V.Content.all'First = Integer'Last-1 and V.Content.all'Last = Integer'Last) [reason for check: value must be a valid index into the array]
formal_vectors.adb:203:74: info: pointer dereference check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:204:15: info: precondition proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:204:31: info: pointer dereference check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.adb:204:41: medium: array index check might fail, in instantiation at use_formal_vectors.ads:10 (e.g. when I = 1 and V = (Top => 1, Content => ?) and V.Content.all'First = 2 and V.Content.all'Last = 1) [reason for check: value must be a valid index into the array]
formal_vectors.adb:204:44: info: pointer dereference check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.ads:12:09: info: predicate check proved on default value (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.ads:16:41: warning: "E" is not modified, could be of access constant type, in instantiation at use_formal_vectors.ads:10
formal_vectors.ads:18:42: info: overflow check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.ads:19:19: info: precondition proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.ads:19:19: medium: postcondition might fail, cannot prove Element (V, Length (V)) = E, in instantiation at use_formal_vectors.ads:10 (e.g. when E.all = 0 and V = (Top => 1, Content => (all => (1 => (all => (all => 0)), others => (all => (all => 1))))) and V.Content.all'First = 1 and V.Content.all'Last = Integer'Last)
formal_vectors.ads:19:31: info: range check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.ads:22:41: info: overflow check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.ads:23:43: info: overflow check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.ads:26:19: info: precondition proved (CVC4: 4 VC; Trivial: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.ads:26:19: medium: postcondition might fail, cannot prove Range_Shifted (Model (E)'Old, Model (V), 1, Length (E)'Old, Count_Type (Length (V)'old)), in instantiation at use_formal_vectors.ads:10
formal_vectors.ads:27:56: warning: "E" is not modified, could be of access constant type, in instantiation at use_formal_vectors.ads:10
formal_vectors.ads:28:71: info: overflow check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.ads:30:56: warning: "E" is not modified, could be of access constant type, in instantiation at use_formal_vectors.ads:10
formal_vectors.ads:44:14: info: postcondition proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.ads:44:39: info: precondition proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.ads:53:14: info: postcondition proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.ads:66:45: info: pointer dereference check proved (CVC4: 2 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.ads:68:48: info: pointer dereference check proved (CVC4: 1 VC), in instantiation at use_formal_vectors.ads:10
formal_vectors.ads:68:53: medium: array index check might fail, in instantiation at use_formal_vectors.ads:10 [reason for check: value must be a valid index into the array]
use_formal_vectors.ads:6:20: warning: "X" is not modified, could be of access constant type
use_formal_vectors.ads:6:65: info: pointer dereference check proved (CVC4: 1 VC)
