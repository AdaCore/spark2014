from test_support import *

prove_all(opt=["-P", "test.gpr", "-u", "machine_mantissa.adb"])
prove_all(opt=["-P", "test.gpr", "-u", "machine_emin.adb"])
prove_all(opt=["-P", "test.gpr", "-u", "machine_emax.adb"])
prove_all(opt=["-P", "test.gpr", "-u", "denorm.adb"])
prove_all(opt=["-P", "test.gpr", "-u", "machine_rounds.adb"])
prove_all(opt=["-P", "test.gpr", "-u", "machine_overflows.adb"])
prove_all(opt=["-P", "test.gpr", "-u", "signed_zeros.adb"])
prove_all(opt=["-P", "test.gpr", "-u", "exponent.adb"])
prove_all(opt=["-P", "test.gpr", "-u", "fraction.adb"])
prove_all(opt=["-P", "test.gpr", "-u", "compose.adb"])
prove_all(opt=["-P", "test.gpr", "-u", "scaling.adb"])
prove_all(opt=["-P", "test.gpr", "-u", "floor.adb"])
prove_all(opt=["-P", "test.gpr", "-u", "ceiling.adb"])
prove_all(opt=["-P", "test.gpr", "-u", "rounding.adb"])
prove_all(opt=["-P", "test.gpr", "-u", "unbiased_rounding.adb"])
prove_all(opt=["-P", "test.gpr", "-u", "machine_rounding.adb"])
prove_all(opt=["-P", "test.gpr", "-u", "truncation.adb"])
prove_all(opt=["-P", "test.gpr", "-u", "remainder.adb"])
prove_all(opt=["-P", "test.gpr", "-u", "adjacent.adb"])
prove_all(opt=["-P", "test.gpr", "-u", "copy_sign.adb"])
prove_all(opt=["-P", "test.gpr", "-u", "leading_part.adb"])
prove_all(opt=["-P", "test.gpr", "-u", "machine.adb"])
prove_all(opt=["-P", "test.gpr", "-u", "model_mantissa.adb"])
prove_all(opt=["-P", "test.gpr", "-u", "model_emin.adb"])
prove_all(opt=["-P", "test.gpr", "-u", "model_epsilon.adb"])
prove_all(opt=["-P", "test.gpr", "-u", "model_small.adb"])
prove_all(opt=["-P", "test.gpr", "-u", "model.adb"])
prove_all(opt=["-P", "test.gpr", "-u", "safe_first.adb"])
prove_all(opt=["-P", "test.gpr", "-u", "safe_last.adb"])
