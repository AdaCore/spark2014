traversal.adb:11:13: info: implicit aspect Always_Terminates on "Get_Fst" has been proved, subprogram will terminate
traversal.adb:11:69: info: pointer dereference check proved (CVC5: 1 VC)
traversal.adb:14:13: info: implicit aspect Always_Terminates on "Id" has been proved, subprogram will terminate
traversal.adb:14:63: info: dynamic accessibility check proved (Trivial)
traversal.adb:16:04: info: absence of resource or memory leak at end of scope proved (CVC5: 1 VC)
traversal.adb:17:04: info: absence of resource or memory leak at end of scope proved (CVC5: 1 VC)
traversal.adb:18:04: info: absence of resource or memory leak at end of scope proved (CVC5: 1 VC)
traversal.adb:21:29: info: precondition proved (CVC5: 1 VC)
traversal.adb:23:09: info: pointer dereference check proved (CVC5: 1 VC)
traversal.adb:26:19: medium: assertion might fail (e.g. when X.all = (Fst => new Integer'(4), Snd => new Integer'(2)))
traversal.adb:26:20: info: pointer dereference check proved (CVC5: 1 VC)
traversal.adb:26:25: info: pointer dereference check proved (CVC5: 1 VC)
walker.adb:9:04: info: absence of resource or memory leak at end of scope proved (CVC5: 1 VC)
walker.adb:9:04: info: initialization of "X" proved
walker.adb:11:10: info: absence of resource or memory leak proved (CVC5: 1 VC)
walker.adb:12:10: info: absence of resource or memory leak proved (CVC5: 1 VC)
walker.adb:17:09: info: pointer dereference check proved (CVC5: 1 VC)
walker.adb:19:19: medium: assertion might fail (e.g. when X = (Fst => new Integer'(3), Snd => new Integer'(2)))
walker.adb:19:25: info: pointer dereference check proved (CVC5: 1 VC)
