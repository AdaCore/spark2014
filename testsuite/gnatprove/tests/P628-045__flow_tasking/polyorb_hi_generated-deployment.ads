--------------------------------------------------------
--  This file was automatically generated by Ocarina  --
--  Do NOT hand-modify this file, as your             --
--  changes will be lost when you re-run Ocarina      --
--------------------------------------------------------
pragma Style_Checks
 ("NM32766");


package PolyORB_HI_Generated.Deployment is

  pragma Preelaborate;

  --  For each node in the distributed application add an enumerator

  type Node_Type is
   (node_a_K);

  --  Representation clause to have consistent positions for enumerators

  for Node_Type use
   (node_a_K =>
     1);

  --  Size of Node_Type fixed to 8 bits

  for Node_Type'Size use 8;

  Max_Node_Image_Size : constant Standard.Integer :=
   8;

  --  Maximal Node_Image size for this node

  --  Node Image

  subtype UT_Deployment_Node_A_Node_Type_Range is
   Node_Type range Node_Type'First .. Node_Type'Last;

  subtype UT_Deployment_Node_A_1_Max_Node_Image_Size is
   Integer range 1 .. Max_Node_Image_Size;

  subtype UT_Deployment_Node_A_Node_Image_Component is
   Standard.String
     (UT_Deployment_Node_A_1_Max_Node_Image_Size);

  type UT_Deployment_Node_A_Node_Image_Array is
   array (UT_Deployment_Node_A_Node_Type_Range)
     of UT_Deployment_Node_A_Node_Image_Component;

  Node_Image : constant UT_Deployment_Node_A_Node_Image_Array :=
   UT_Deployment_Node_A_Node_Image_Array'
     (node_a_K =>
       "node_a_K");

  My_Node : constant Node_Type :=
   node_a_K;

  --  For each thread in the distributed application nodes, add an enumerator

  type Entity_Type is
   (node_a_Task1_K,
    node_a_Task2_K);

  --  Representation clause to have consistent positions for enumerators

  for Entity_Type use
   (node_a_Task1_K =>
     1,
    node_a_Task2_K =>
     2);

  --  Size of Entity_Type fixed to 8 bits

  for Entity_Type'Size use 8;

  --  Entity Table

  subtype UT_Deployment_Node_A_Entity_Type_Range is
   Entity_Type range Entity_Type'First .. Entity_Type'Last;

  type UT_Deployment_Node_A_Entity_Table_Array is
   array (UT_Deployment_Node_A_Entity_Type_Range)
     of Node_Type;

  Entity_Table : constant UT_Deployment_Node_A_Entity_Table_Array :=
   UT_Deployment_Node_A_Entity_Table_Array'
     (node_a_Task1_K =>
       node_a_K,
      node_a_Task2_K =>
       node_a_K);

  Max_Entity_Image_Size : constant Standard.Integer :=
   14;

  --  Maximal Entity_Image size for this node

  --  Entity Image

  subtype UT_Deployment_Node_A_1_Max_Entity_Image_Size is
   Integer range 1 .. Max_Entity_Image_Size;

  subtype UT_Deployment_Node_A_Entity_Image_Component is
   Standard.String
     (UT_Deployment_Node_A_1_Max_Entity_Image_Size);

  type UT_Deployment_Node_A_Entity_Image_Array is
   array (UT_Deployment_Node_A_Entity_Type_Range)
     of UT_Deployment_Node_A_Entity_Image_Component;

  Entity_Image : constant UT_Deployment_Node_A_Entity_Image_Array :=
   UT_Deployment_Node_A_Entity_Image_Array'
     (node_a_Task1_K =>
       "node_a_Task1_K",
      node_a_Task2_K =>
       "node_a_Task2_K");

end PolyORB_HI_Generated.Deployment;
