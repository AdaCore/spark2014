 medium: range check might fail, cannot prove lower bound for Result + X
--> counterex_unprovable.adb:20:27
   20 |             Result := Result + X;
      |                       ~~~~~~~^~~
      + e.g. when Result = -91
      and X = -10
      + reason for check: result of addition must fit in the target type of the assignment
      + possible fix: loop at line 19 should mention Result in a loop invariant
   19 |          while J <= 2 loop
      |                       ^

 medium: postcondition might fail
--> counterex_unprovable.ads:13:14
   13 |         Post => X = 2 * X'Old;
      |                 ^~~~~~~~~~~~~
      + e.g. when X'Old = 0
      + possible fix: add or complete related loop invariants or postconditions

 medium: postcondition might fail
--> counterex_unprovable.ads:17:14
   17 |         Post => X = 2 * X'Old;
      |                 ^~~~~~~~~~~~~
      + e.g. when X'Old = -1
      + possible fix: add or complete related loop invariants or postconditions
