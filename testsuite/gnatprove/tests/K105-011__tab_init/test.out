tab_init.adb:5:19: high: overflow check might fail, cannot prove lower bound for A*I (e.g. when A = -650752621 and I = 4 and T = (others => -650752621)) [reason for check: result of multiplication must fit in a 32-bits machine integer] [possible fix: subprogram at tab_init.ads:5 should mention A in a precondition]
tab_init.adb:6:33: info: loop invariant initialization proved (CVC5: 1 VC)
tab_init.adb:6:33: info: loop invariant preservation proved (CVC5: 1 VC)
tab_init.adb:6:64: medium: "T" might not be initialized
tab_init.adb:6:66: info: index check proved (CVC5: 4 VC)
tab_init.adb:6:72: info: overflow check proved (CVC5: 4 VC)
tab_init.adb:7:25: info: assertion proved (CVC5: 1 VC)
tab_init.adb:7:25: medium: "T" might not be initialized
tab_init.adb:7:33: info: overflow check proved (altergo: 2 VC)
tab_init.ads:5:21: medium: "T" might not be initialized in "Init" [reason for check: OUT parameter should be fully initialized on return] [possible fix: initialize "T" on all paths, make "T" an IN OUT parameter or annotate it with aspect Relaxed_Initialization]
