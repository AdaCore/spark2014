main.adb:20:12: info: implicit aspect Always_Terminates on overriding operator "*" has been proved, subprogram will terminate
main.adb:20:68: medium: overflow check might fail, cannot prove lower bound for Left.A * Right.A (e.g. when Left = (A => 2) and Right = (A => -1073741825)) [reason for check: result of multiplication must fit in a 32-bits machine integer] [possible fix: add precondition (Left.A * Right.A >= Integer'First) to subprogram at line 20]
main.adb:22:12: info: implicit aspect Always_Terminates on overriding operator "*" has been proved, subprogram will terminate
main.adb:23:19: high: overflow check might fail, cannot prove lower bound for Left.A * Right.A (e.g. when Left.A = -1073741825 and Left.B = 0 and Left.C = 0 and Left.D = 0 and Left.E = 0 and Right.A = 2 and Right.B = 0 and Right.C = 0 and Right.D = 0 and Right.E = 0) [reason for check: result of multiplication must fit in a 32-bits machine integer] [possible fix: add precondition (Left.A * Right.A >= Integer'First) to subprogram at line 22]
main.adb:24:19: medium: overflow check might fail, cannot prove lower bound for Left.B * Right.B [reason for check: result of multiplication must fit in a 32-bits machine integer] [possible fix: add precondition (Left.B * Right.B >= Integer'First) to subprogram at line 22]
main.adb:25:19: medium: overflow check might fail, cannot prove lower bound for Left.C * Right.C [reason for check: result of multiplication must fit in a 32-bits machine integer] [possible fix: add precondition (Left.C * Right.C >= Integer'First) to subprogram at line 22]
main.adb:26:19: medium: overflow check might fail, cannot prove lower bound for Left.D * Right.D [reason for check: result of multiplication must fit in a 32-bits machine integer] [possible fix: add precondition (Left.D * Right.D >= Integer'First) to subprogram at line 22]
main.adb:27:19: medium: overflow check might fail, cannot prove lower bound for Left.E * Right.E [reason for check: result of multiplication must fit in a 32-bits machine integer] [possible fix: add precondition (Left.E * Right.E >= Integer'First) to subprogram at line 22]
main.adb:28:19: high: overflow check might fail, cannot prove lower bound for Left.F * Right.F (e.g. when Left.A = 0 and Left.B = 0 and Left.C = 0 and Left.D = 0 and Left.E = 0 and Right.A = 0 and Right.B = 0 and Right.C = 0 and Right.D = 0 and Right.E = 0) [reason for check: result of multiplication must fit in a 32-bits machine integer] [possible fix: add precondition (Left.F * Right.F >= Integer'First) to subprogram at line 22]
main.adb:30:12: info: implicit aspect Always_Terminates on overriding operator "*" has been proved, subprogram will terminate
main.adb:31:14: high: overflow check might fail, cannot prove lower bound for Left.A * Right.A (e.g. when Left = (A => -1073741825, B => 0, C => (A => -1073741825), D => (A => -1073741825)) and Right = (A => 2, B => 0, C => (A => -1073741825), D => (A => -1073741825))) [reason for check: result of multiplication must fit in a 32-bits machine integer] [possible fix: add precondition (Left.A * Right.A >= Integer'First) to subprogram at line 30]
main.adb:32:14: high: overflow check might fail, cannot prove lower bound for Left.B * Right.B (e.g. when Left = (A => 0, B => -1073741825, C => (A => 0), D => (A => 0)) and Right = (A => 0, B => 2, C => (A => 0), D => (A => 0))) [reason for check: result of multiplication must fit in a 32-bits machine integer] [possible fix: add precondition (Left.B * Right.B >= Integer'First) to subprogram at line 30]
main.adb:36:12: info: implicit aspect Always_Terminates on overriding operator "*" has been proved, subprogram will terminate
main.adb:37:26: high: overflow check might fail, cannot prove lower bound for Left.A.A * Right.A.A (e.g. when Left = (A => (A => -1073741825)) and Right = (A => (A => 2))) [reason for check: result of multiplication must fit in a 32-bits machine integer] [possible fix: add precondition (Left.A.A * Right.A.A >= Integer'First) to subprogram at line 36]
main.adb:39:12: info: implicit aspect Always_Terminates on "Test_1" has been proved, subprogram will terminate
main.adb:42:20: high: assertion might fail (e.g. when Res = (A => 0))
main.adb:46:12: info: implicit aspect Always_Terminates on "Test_2" has been proved, subprogram will terminate
main.adb:49:20: high: assertion might fail (e.g. when Res.A = 0 and Res.B = 0 and Res.C = 0 and Res.D = 0 and Res.E = 0)
main.adb:53:12: info: implicit aspect Always_Terminates on "Test_3" has been proved, subprogram will terminate
main.adb:56:20: high: assertion might fail (e.g. when Res = (A => 0, B => 0, C => (A => -1), D => (A => 0)))
main.adb:60:12: info: implicit aspect Always_Terminates on "Test_4" has been proved, subprogram will terminate
main.adb:63:20: high: assertion might fail (e.g. when Res = (A => (A => 0)))
