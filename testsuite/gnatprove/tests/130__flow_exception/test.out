callee1.adb:2:08: info: data dependencies proved
callee1.adb:15:07: info: initialization of "By_C" proved
callee1.adb:16:07: high: "By_R.C" is not initialized in "Test" [reason for check: OUT parameter should be fully initialized on return] [possible fix: initialize "By_R.C" on all paths, make "By_R" an IN OUT parameter or annotate it with aspect Relaxed_Initialization]
callee1.adb:16:07: warning: unused variable "By_R"
callee1.adb:17:07: info: initialization of "By_U" proved
callee1.adb:19:45: info: exceptional case proved (Trivial: 1 VC)
callee1.adb:30:04: info: only expected exception raised (CVC5: 1 VC)
callee2.adb:2:08: info: data dependencies proved
callee2.adb:15:07: info: initialization of "By_C" proved
callee2.adb:16:07: warning: unused initial value of "By_C2"
callee2.adb:17:07: high: "By_R.C" is not initialized in "Test" [reason for check: OUT parameter should be fully initialized on return] [possible fix: initialize "By_R.C" on all paths, make "By_R" an IN OUT parameter or annotate it with aspect Relaxed_Initialization]
callee2.adb:17:07: warning: unused variable "By_R"
callee2.adb:18:07: info: initialization of "By_U" proved
callee2.adb:20:45: info: exceptional case proved (Trivial: 1 VC)
callee2.adb:23:14: warning: unused assignment
callee2.adb:33:04: info: only expected exception raised (CVC5: 1 VC)
cases1.adb:2:08: info: data dependencies proved
cases1.adb:8:34: info: exceptional case proved (CVC5: 1 VC)
cases1.adb:9:34: medium: exceptional case might fail [possible fix: subprogram at line 6 should mention B in a precondition]
cases1.adb:10:11: info: data dependencies proved
cases1.adb:19:25: info: assertion proved (CVC5: 1 VC)
cases1.adb:24:04: high: "A" is not initialized
cases1.adb:24:04: high: "B" is not initialized
cases1.adb:24:04: info: only expected exception raised (CVC5: 1 VC)
choice1.adb:1:33: info: initialization of "Y" proved
choice1.adb:2:16: info: postcondition proved (CVC5: 2 VC)
choice1.adb:3:08: info: flow dependencies proved
choice1.adb:9:40: info: exceptional case proved (CVC5: 1 VC)
choice1.adb:9:52: info: exceptional case proved (CVC5: 1 VC)
choice1.adb:20:04: info: only expected exception raised (CVC5: 1 VC)
choice1.adb:21:04: medium: unexpected exception might be raised
copy1.adb:1:34: info: initialization of "Z" proved
copy1.adb:2:08: info: flow dependencies proved
copy1.adb:13:04: info: only expected exception raised (CVC5: 1 VC)
copy2.adb:1:34: info: initialization of "Z" proved
copy2.adb:2:08: info: flow dependencies proved
copy2.adb:15:04: info: only expected exception raised (CVC5: 1 VC)
copy3.adb:2:08: info: flow dependencies proved
copy3.adb:13:04: info: only expected exception raised (CVC5: 1 VC)
copy3.adb:16:16: high: "Z" is not initialized
depends1.adb:2:08: info: data dependencies proved
depends1.adb:16:04: info: only expected exception raised (CVC5: 1 VC)
depends2.adb:2:08: info: data dependencies proved
depends2.adb:5:50: info: exceptional case proved (Trivial: 1 VC)
depends2.adb:6:11: info: flow dependencies proved
depends2.adb:18:04: info: only expected exception raised (CVC5: 1 VC)
depends2.adb:21:22: info: assertion proved (CVC5: 1 VC)
depends3.adb:2:08: info: data dependencies proved
depends3.adb:4:33: info: initialization of "Y" proved
depends3.adb:5:50: info: exceptional case proved (Trivial: 1 VC)
depends3.adb:6:11: info: flow dependencies proved
depends3.adb:18:04: info: only expected exception raised (CVC5: 1 VC)
depends3.adb:21:22: info: assertion proved (CVC5: 1 VC)
depends4.adb:2:08: info: data dependencies proved
depends4.adb:9:50: info: exceptional case proved (Trivial: 1 VC)
depends4.adb:10:11: info: flow dependencies proved
depends4.adb:22:04: info: only expected exception raised (CVC5: 1 VC)
depends4.adb:25:22: high: "Z.C" is not initialized
depends4.adb:25:22: medium: assertion might fail
depends5.adb:2:08: info: data dependencies proved
depends5.adb:8:33: info: initialization of "Y" proved
depends5.adb:9:50: info: exceptional case proved (Trivial: 1 VC)
depends5.adb:10:11: info: flow dependencies proved
depends5.adb:22:04: info: only expected exception raised (CVC5: 1 VC)
depends5.adb:25:22: high: "Z.C" is not initialized
depends5.adb:25:22: medium: assertion might fail
effect.adb:5:45: info: exceptional case proved (CVC5: 1 VC)
effect1.adb:1:33: info: initialization of "Y" proved
effect1.adb:2:08: info: flow dependencies proved
effect1.adb:4:20: info: initialization of "A" proved
effect1.adb:6:34: info: exceptional case proved (Trivial: 1 VC)
effect1.adb:7:34: info: exceptional case proved (Trivial: 1 VC)
effect1.adb:8:11: info: flow dependencies proved
effect1.adb:14:07: warning: statement has no effect
effect1.adb:24:04: info: only expected exception raised (CVC5: 1 VC)
effect2.adb:1:24: info: data dependencies proved
effect2.adb:6:06: info: flow dependencies proved
effect2.adb:7:14: info: postcondition proved (CVC5: 1 VC)
effect2.adb:8:33: info: exceptional case proved (CVC5: 1 VC)
effect2.adb:17:35: info: initialization of "Y" proved
effect2.adb:18:06: info: flow dependencies proved
effect2.adb:19:14: info: postcondition proved (CVC5: 2 VC)
effect2.adb:23:07: info: only expected exception raised (CVC5: 1 VC)
global1.adb:1:33: info: initialization of "Z" proved
global1.adb:2:08: info: flow dependencies proved
global1.adb:4:04: info: initialization of "Proxy" proved
global1.adb:16:04: info: only expected exception raised (CVC5: 1 VC)
global_havoc.adb:1:11: warning: subprogram "Global_Havoc" has no effect
global_havoc.adb:12:21: info: initialization of "X" proved
global_havoc.adb:13:39: info: exceptional case proved (Trivial: 1 VC)
global_havoc.adb:25:12: info: data dependencies proved
global_havoc.adb:25:45: medium: "G.C" might not be initialized
global_havoc.adb:28:07: info: only expected exception raised (CVC5: 1 VC)
global_havoc.adb:31:25: high: "G.C" is not an input in the Global contract of subprogram "Test" at line 23
global_havoc.adb:31:25: high: "G.C" is not initialized
global_havoc.adb:31:25: high: either make "G.C" an input in the Global contract or initialize it before use
global_havoc.adb:31:25: medium: assertion might fail
global_havoc.adb:34:04: info: precondition proved (Trivial: 1 VC)
inout1.adb:1:32: info: initialization of "Z" proved
inout1.adb:2:03: info: flow dependencies proved
inout1.adb:15:20: medium: "Proxy.C" might not be initialized in "Test" [reason for check: OUT parameter should be fully initialized on return] [possible fix: initialize "Proxy.C" on all paths, make "Proxy" an IN OUT parameter or annotate it with aspect Relaxed_Initialization]
inout1.adb:17:07: info: only expected exception raised (CVC5: 1 VC)
inout1.adb:20:07: info: no contextual analysis of "Test" (exception handler)
inout1.adb:21:15: high: "Proxy.C" is not initialized
inout1.adb:27:10: warning: "Proxy" is set by "Test" but not used after the call
main.adb:1:20: warning: unused variable "B"
main.adb:1:36: info: initialization of "Z" proved
main.adb:2:08: medium: missing dependency "null => B"
main.adb:2:29: medium: incorrect dependency "Z => B"
main.adb:3:34: medium: postcondition might fail, cannot prove Z = 1
main.adb:19:07: medium: "By_Copy" might not be initialized in "Try" [reason for check: OUT parameter should be initialized on return] [possible fix: initialize "By_Copy" on all paths or make "By_Copy" an IN OUT parameter]
main.adb:20:07: high: "By_Reference.C" is not initialized in "Try" [reason for check: OUT parameter should be fully initialized on return] [possible fix: initialize "By_Reference.C" on all paths, make "By_Reference" an IN OUT parameter or annotate it with aspect Relaxed_Initialization]
main.adb:20:07: warning: unused variable "By_Reference"
main.adb:21:07: info: initialization of "Unspecified" proved
main.adb:23:19: info: postcondition proved (Trivial: 1 VC)
main.adb:24:50: info: exceptional case proved (CVC5: 1 VC)
main.adb:24:77: info: exceptional case proved (CVC5: 1 VC)
main.adb:37:04: info: initialization of "By_R" proved
main.adb:41:19: medium: assertion might fail [possible fix: subprogram at line 1 should mention A in a precondition]
main.adb:41:21: info: division check proved (CVC5: 1 VC)
main.adb:42:04: info: only expected exception raised (CVC5: 1 VC)
main.adb:42:04: info: precondition proved (Trivial: 1 VC)
main.adb:45:14: info: overflow check proved (CVC5: 2 VC)
main.adb:47:12: medium: overflow check might fail, cannot prove upper bound for - Integer (By_C) [reason for check: result of negation must fit in a 32-bits machine integer] [possible fix: postcondition of call at line 42 should mention By_Copy (for argument By_C)]
main.adb:51:12: high: "By_U.C" is not initialized
main.adb:51:19: medium: overflow check might fail, cannot prove lower bound for By_U.C + By_R.C [reason for check: result of addition must fit in a 32-bits machine integer]
main.adb:51:28: medium: overflow check might fail, cannot prove lower bound for By_U.C + By_R.C + Integer (By_C) [reason for check: result of addition must fit in a 32-bits machine integer]
main.adb:51:39: high: "By_C" is not initialized
main0.adb:1:31: info: initialization of "Y" proved
main0.adb:2:08: info: data dependencies proved
main0.adb:2:32: info: postcondition proved (CVC5: 2 VC)
main2.adb:6:06: info: flow dependencies proved
main2.adb:7:14: info: postcondition proved (CVC5: 1 VC)
main2.adb:8:33: info: exceptional case proved (CVC5: 1 VC)
main2.adb:17:35: info: initialization of "Y" proved
main2.adb:18:06: info: flow dependencies proved
main2.adb:19:14: info: postcondition proved (CVC5: 2 VC)
main2.adb:23:07: info: only expected exception raised (CVC5: 1 VC)
reclaim_call_1.adb:3:04: medium: resource or memory leak might occur at end of scope
reclaim_call_1.adb:13:09: info: pointer dereference check proved (CVC5: 1 VC)
reclaim_call_1.adb:14:07: info: only expected exception raised (CVC5: 1 VC)
reclaim_call_1.adb:17:12: info: pointer dereference check proved (CVC5: 1 VC)
reclaim_call_1.adb:19:06: info: pointer dereference check proved (CVC5: 1 VC)
reclaim_call_2.adb:3:04: medium: resource or memory leak might occur at end of scope
reclaim_call_2.adb:14:15: info: pointer dereference check proved (CVC5: 1 VC)
reclaim_call_2.adb:14:19: info: division check proved (CVC5: 1 VC)
reclaim_call_2.adb:15:15: info: pointer dereference check proved (CVC5: 1 VC)
reclaim_call_2.adb:16:13: info: only expected exception raised (CVC5: 1 VC)
reclaim_call_2.adb:18:15: info: pointer dereference check proved (CVC5: 1 VC)
reclaim_call_2.adb:23:25: info: assertion proved (CVC5: 1 VC)
reclaim_call_2.adb:23:27: info: pointer dereference check proved (CVC5: 1 VC)
reclaim_call_3.adb:3:04: medium: resource or memory leak might occur at end of scope
reclaim_call_3.adb:15:15: info: pointer dereference check proved (CVC5: 1 VC)
reclaim_call_3.adb:15:19: info: division check proved (CVC5: 1 VC)
reclaim_call_3.adb:16:15: info: pointer dereference check proved (CVC5: 1 VC)
reclaim_call_3.adb:17:13: info: only expected exception raised (CVC5: 1 VC)
reclaim_call_3.adb:19:15: info: pointer dereference check proved (CVC5: 1 VC)
reclaim_call_3.adb:23:15: info: pointer dereference check proved (CVC5: 1 VC)
reclaim_call_3.adb:27:25: info: assertion proved (CVC5: 1 VC)
reclaim_call_3.adb:27:27: info: pointer dereference check proved (CVC5: 1 VC)
reclaim_raise_1.adb:3:04: medium: resource or memory leak might occur at end of scope
reclaim_raise_1.adb:8:09: info: pointer dereference check proved (CVC5: 1 VC)
reclaim_raise_1.adb:12:12: info: pointer dereference check proved (CVC5: 1 VC)
reclaim_raise_1.adb:14:06: info: pointer dereference check proved (CVC5: 1 VC)
reclaim_raise_2.adb:3:04: medium: resource or memory leak might occur at end of scope
reclaim_raise_2.adb:9:15: info: pointer dereference check proved (CVC5: 1 VC)
reclaim_raise_2.adb:9:19: info: division check proved (CVC5: 1 VC)
reclaim_raise_2.adb:10:15: info: pointer dereference check proved (CVC5: 1 VC)
reclaim_raise_2.adb:13:15: info: pointer dereference check proved (CVC5: 1 VC)
reclaim_raise_2.adb:18:25: info: assertion proved (CVC5: 1 VC)
reclaim_raise_2.adb:18:27: info: pointer dereference check proved (CVC5: 1 VC)
reclaim_raise_3.adb:3:04: medium: resource or memory leak might occur at end of scope
reclaim_raise_3.adb:9:15: info: pointer dereference check proved (CVC5: 1 VC)
reclaim_raise_3.adb:9:19: info: division check proved (CVC5: 1 VC)
reclaim_raise_3.adb:10:15: info: pointer dereference check proved (CVC5: 1 VC)
reclaim_raise_3.adb:12:18: info: pointer dereference check proved (CVC5: 1 VC)
reclaim_raise_3.adb:12:22: info: division check proved (CVC5: 1 VC)
reclaim_raise_3.adb:13:15: info: pointer dereference check proved (CVC5: 1 VC)
reclaim_raise_3.adb:16:15: info: pointer dereference check proved (CVC5: 1 VC)
reclaim_raise_3.adb:20:15: info: pointer dereference check proved (CVC5: 1 VC)
reclaim_raise_3.adb:24:25: info: assertion proved (CVC5: 1 VC)
reclaim_raise_3.adb:24:27: info: pointer dereference check proved (CVC5: 1 VC)
ref1.adb:1:30: info: initialization of "Z" proved
ref1.adb:2:08: info: flow dependencies proved
ref1.adb:15:04: info: initialization of "Proxy" proved
ref1.adb:20:04: info: only expected exception raised (CVC5: 1 VC)
unspecified1.adb:1:38: info: initialization of "Z" proved
unspecified1.adb:2:08: info: flow dependencies proved
unspecified1.adb:20:04: info: only expected exception raised (CVC5: 1 VC)
unspecified1.adb:24:12: high: "Proxy.C" is not initialized
