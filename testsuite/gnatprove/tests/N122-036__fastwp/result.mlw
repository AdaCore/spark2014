module Result
   use import int.Int
   use import ref.Ref

   val postplusplus (x : ref int) : int
      requires { true }
      writes { x }
      ensures { result = old !x /\ !x = old !x + 1 }

   val preplusplus (x : ref int) : int
      requires { true }
      ensures { result = !x /\ !x = old !x + 1 }
      writes { x }

(* Valid *)

    let test1 (x : ref int)
      requires { true }
      ensures { result = 1 /\ !x = 2 }
      =
      x := 1;
      postplusplus x

(* Unknown *)

    let test2 (x : ref int)
      requires { true }
      ensures { result = 2 /\ !x = 2 }
      =
      x := 1;
      postplusplus x


(* Valid *)

    let test3 (x : ref int)
      requires { true }
      ensures { result = 2 /\ !x = 2 }
      =
      x := 1;
      preplusplus x

(* Unknown *)

    let test4 (x : ref int)
      requires { true }
      ensures { result = 1 /\ !x = 2 }
      =
      x := 1;
      preplusplus x
end
