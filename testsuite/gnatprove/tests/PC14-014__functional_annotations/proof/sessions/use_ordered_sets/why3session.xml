<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="0" name="Z3" version="4.5.1-gnatprove" timelimit="10" steplimit="0" memlimit="0"/>
<prover id="1" name="CVC4" version="1.6-gnatprove" timelimit="60" steplimit="0" memlimit="0"/>
<file name="../../../gnatprove/use_ordered_sets.mlw">
<theory name="Use_ordered_sets__package_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__package_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__Olt__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__equivalent_elements__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__set__default_checks" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__length__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__package_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__m__package_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__m__set__default_checks" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__m__private_key__default_checks" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__m__iter_first__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__m__iter_has_element__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__m__iter_next__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__m__iter_element__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__m__contains__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__m__length__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__m__Ole__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__m__Oeq__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__m__is_empty__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__m__included_except__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__m__includes_intersection__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__m__included_in_union__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__m__is_singleton__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__m__not_in_both__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__m__no_overlap__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__m__intersection__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__m__num_overlaps__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__m__add__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__m__remove__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__m__union__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="7402"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="9485"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__e__package_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__e__sequence__default_checks" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__e__length__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__e__last__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__e__get__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__e__first__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__e__Oeq__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__e__Olt__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__e__Ole__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__e__contains__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__e__constant_range__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__e__equal_except__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__e__equal_except__2__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__e__range_equal__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__e__range_shifted__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="4766"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="5005"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="5389"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="6000"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="5824"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__e__set__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__e__add__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__e__add__2__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="1212"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__e__remove__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__e__iter_first__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__e__iter_has_element__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__e__iter_next__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__e_bigger_than_range__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__e_smaller_than_range__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__e_is_find__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__find__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__e_elements_included__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__e_elements_included__2__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__e_elements_included__3__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__p__package_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__p__map__default_checks" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__p__private_key__default_checks" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__p__iter_first__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__p__iter_has_element__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__p__iter_next__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__p__iter_element__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__p__has_key__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__p__has_witness__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__p__witness__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__p__w_get__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__p__get__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__p__length__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__p__Ole__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__p__Oeq__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__p__is_empty__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__p__keys_included__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__p__same_keys__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__p__keys_included_except__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__p__keys_included_except__2__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__p__elements_equal_except__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__p__elements_equal_except__2__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__p__add__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__p__set__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__p_positions_shifted__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__mapping_preserved__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__mapping_preserved_except__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__model__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__elements__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__positions__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__formal_model__lift_abstraction_level__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__Oeq__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__equivalent_sets__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__to_set__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__is_empty__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__clear__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__assign__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__copy__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__has_element__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__element__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__replace_element__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__move__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__contains__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__insert__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__insert__2__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__include__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__replace__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__exclude__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__delete__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__delete__2__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__first_element__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__delete_first__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__last_element__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__delete_last__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__intersection__2__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__union__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="21505"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="26684"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__union__2__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="15381"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__intersection__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__difference__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__difference__2__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__symmetric_difference__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="26610"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="28190"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="29246"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__symmetric_difference__2__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="15381"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__overlap__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__is_subset__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__first__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__last__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__next__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="21892"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__next__2__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="21896"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__previous__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="21584"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__previous__2__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="21588"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__find__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__floor__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="17267"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_sets__ceiling__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="17307"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_contains__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" steps="6537"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" steps="24541"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__my_find__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" steps="28328"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="26119"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="8652"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="32479"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="2273"/></proof>
  </goal>
  <goal name="WP_parameter def.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="2351"/></proof>
  </goal>
  <goal name="WP_parameter def.6" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" steps="36559"/></proof>
  </goal>
  <goal name="WP_parameter def.7" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" steps="45543"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__f__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="784"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__apply_f__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" steps="34143"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" steps="36636"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" steps="34690"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="precondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="unknown" steps="456"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="precondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="unknown" steps="456"/></proof>
  </goal>
  <goal name="WP_parameter def.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="10264"/></proof>
  </goal>
  <goal name="WP_parameter def.6" expl="precondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="unknown" steps="453"/></proof>
  </goal>
  <goal name="WP_parameter def.7" expl="VC for def" proved="true">
  <proof prover="0"><result status="valid" steps="2710"/></proof>
  </goal>
  <goal name="WP_parameter def.8" expl="precondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="unknown" steps="1044"/></proof>
  </goal>
  <goal name="WP_parameter def.9" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="10542"/></proof>
  </goal>
  <goal name="WP_parameter def.10" expl="precondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="unknown" steps="1040"/></proof>
  </goal>
  <goal name="WP_parameter def.11" expl="precondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="unknown" steps="425"/></proof>
  </goal>
  <goal name="WP_parameter def.12" expl="precondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="unknown" steps="2928"/></proof>
  </goal>
  <goal name="WP_parameter def.13" expl="precondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="timeout"/></proof>
  </goal>
  <goal name="WP_parameter def.14" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" steps="51292"/></proof>
  </goal>
  <goal name="WP_parameter def.15" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" steps="112267"/></proof>
  </goal>
  <goal name="WP_parameter def.16" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" steps="76501"/></proof>
  </goal>
  <goal name="WP_parameter def.17" expl="VC for def" proved="true">
  <proof prover="0"><result status="valid" steps="3377"/></proof>
  </goal>
  <goal name="WP_parameter def.18" expl="VC for def" proved="true">
  <proof prover="0"><result status="valid" steps="3679"/></proof>
  </goal>
  <goal name="WP_parameter def.19" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="45005"/></proof>
  </goal>
  <goal name="WP_parameter def.20" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="45053"/></proof>
  </goal>
  <goal name="WP_parameter def.21" expl="VC for def" proved="true">
  <proof prover="0"><result status="valid" steps="3753"/></proof>
  </goal>
  <goal name="WP_parameter def.22" expl="VC for def" proved="true">
  <proof prover="0"><result status="valid" steps="4035"/></proof>
  </goal>
  <goal name="WP_parameter def.23" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="48702"/></proof>
  </goal>
  <goal name="WP_parameter def.24" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="48750"/></proof>
  </goal>
  <goal name="WP_parameter def.25" expl="VC for def" proved="true">
  <proof prover="0"><result status="valid" steps="3859"/></proof>
  </goal>
  <goal name="WP_parameter def.26" expl="VC for def" proved="true">
  <proof prover="0"><result status="valid" steps="4141"/></proof>
  </goal>
  <goal name="WP_parameter def.27" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="50466"/></proof>
  </goal>
  <goal name="WP_parameter def.28" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="50514"/></proof>
  </goal>
  <goal name="WP_parameter def.29" expl="postcondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="timeout"/></proof>
  <transf name="split_disj" >
   <goal name="WP_parameter def.29.0" expl="postcondition">
   <proof prover="0" timelimit="60"><result status="timeout"/></proof>
   <proof prover="1"><result status="unknown" steps="9644"/></proof>
   </goal>
   <goal name="WP_parameter def.29.1" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" steps="65"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter def.30" expl="postcondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="timeout"/></proof>
  <transf name="split_disj" >
   <goal name="WP_parameter def.30.0" expl="postcondition">
   <proof prover="0" timelimit="60"><result status="timeout"/></proof>
   <proof prover="1"><result status="timeout"/></proof>
   </goal>
   <goal name="WP_parameter def.30.1" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" steps="61"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__are_disjoint__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" steps="29081"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="26705"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="8526"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="32874"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="2201"/></proof>
  </goal>
  <goal name="WP_parameter def.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="2280"/></proof>
  </goal>
  <goal name="WP_parameter def.6" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" steps="34178"/></proof>
  </goal>
  <goal name="WP_parameter def.7" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" steps="46312"/></proof>
  </goal>
  <goal name="WP_parameter def.8" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" steps="34463"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__are_disjoint_2__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" steps="26828"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="24458"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="8158"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="30621"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="2103"/></proof>
  </goal>
  <goal name="WP_parameter def.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="2182"/></proof>
  </goal>
  <goal name="WP_parameter def.6" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" steps="32115"/></proof>
  </goal>
  <goal name="WP_parameter def.7" expl="VC for def" proved="true">
  <proof prover="0"><result status="valid" steps="2487"/></proof>
  </goal>
  <goal name="WP_parameter def.8" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" steps="82036"/></proof>
  </goal>
  <goal name="WP_parameter def.9" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" steps="30697"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__prop__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__union_prop__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="30054"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="VC for def" proved="true">
  <proof prover="0"><result status="valid" steps="2440"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="VC for def" proved="true">
  <proof prover="0"><result status="valid" steps="2724"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="34571"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="34619"/></proof>
  </goal>
  <goal name="WP_parameter def.5" expl="VC for def" proved="true">
  <proof prover="0"><result status="valid" steps="2842"/></proof>
  </goal>
  <goal name="WP_parameter def.6" expl="VC for def" proved="true">
  <proof prover="0"><result status="valid" steps="3138"/></proof>
  </goal>
  <goal name="WP_parameter def.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="39080"/></proof>
  </goal>
  <goal name="WP_parameter def.8" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="39128"/></proof>
  </goal>
  <goal name="WP_parameter def.9" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="31737"/></proof>
  </goal>
  <goal name="WP_parameter def.10" expl="VC for def" proved="true">
  <proof prover="0"><result status="valid" steps="2871"/></proof>
  </goal>
  <goal name="WP_parameter def.11" expl="VC for def" proved="true">
  <proof prover="0"><result status="valid" steps="3173"/></proof>
  </goal>
  <goal name="WP_parameter def.12" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="38614"/></proof>
  </goal>
  <goal name="WP_parameter def.13" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="38662"/></proof>
  </goal>
  <goal name="WP_parameter def.14" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" steps="43745"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__move__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" steps="2446"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" steps="34130"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" steps="33724"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" steps="33734"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" steps="34878"/></proof>
  </goal>
  <goal name="WP_parameter def.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="36130"/></proof>
  </goal>
  <goal name="WP_parameter def.6" expl="precondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="unknown" steps="528"/></proof>
  </goal>
  <goal name="WP_parameter def.7" expl="precondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="unknown" steps="2380"/></proof>
  </goal>
  <goal name="WP_parameter def.8" expl="precondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="timeout"/></proof>
  </goal>
  <goal name="WP_parameter def.9" expl="loop invariant preservation">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="highfailure"/></proof>
  </goal>
  <goal name="WP_parameter def.10" expl="loop invariant preservation">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="timeout"/></proof>
  </goal>
  <goal name="WP_parameter def.11" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" steps="53153"/></proof>
  </goal>
  <goal name="WP_parameter def.12" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" steps="72008"/></proof>
  </goal>
  <goal name="WP_parameter def.13" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" steps="97697"/></proof>
  </goal>
  <goal name="WP_parameter def.14" expl="postcondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="timeout"/></proof>
  <transf name="split_disj" >
   <goal name="WP_parameter def.14.0" expl="postcondition">
   <proof prover="0" timelimit="60"><result status="timeout"/></proof>
   <proof prover="1"><result status="timeout"/></proof>
   </goal>
   <goal name="WP_parameter def.14.1" expl="postcondition" proved="true">
   <proof prover="0" timelimit="60"><result status="valid" steps="50428"/></proof>
   <proof prover="1"><result status="unknown" steps="354"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter def.15" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" steps="48041"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__move_2__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" steps="31277"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" steps="2342"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" steps="30505"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" steps="7641"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="precondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="unknown" steps="480"/></proof>
  </goal>
  <goal name="WP_parameter def.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="34237"/></proof>
  </goal>
  <goal name="WP_parameter def.6" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="8180"/></proof>
  </goal>
  <goal name="WP_parameter def.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="35667"/></proof>
  </goal>
  <goal name="WP_parameter def.8" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="9178"/></proof>
  </goal>
  <goal name="WP_parameter def.9" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="35277"/></proof>
  </goal>
  <goal name="WP_parameter def.10" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="34299"/></proof>
  </goal>
  <goal name="WP_parameter def.11" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="32844"/></proof>
  </goal>
  <goal name="WP_parameter def.12" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="36122"/></proof>
  </goal>
  <goal name="WP_parameter def.13" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="9332"/></proof>
  </goal>
  <goal name="WP_parameter def.14" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="35783"/></proof>
  </goal>
  <goal name="WP_parameter def.15" expl="precondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="unknown" steps="427"/></proof>
  </goal>
  <goal name="WP_parameter def.16" expl="precondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="unknown" steps="16217"/></proof>
  </goal>
  <goal name="WP_parameter def.17" expl="precondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="timeout"/></proof>
  </goal>
  <goal name="WP_parameter def.18" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" steps="42204"/></proof>
  </goal>
  <goal name="WP_parameter def.19" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" steps="60529"/></proof>
  </goal>
  <goal name="WP_parameter def.20" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" steps="106255"/></proof>
  </goal>
  <goal name="WP_parameter def.21" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" steps="79308"/></proof>
  </goal>
  <goal name="WP_parameter def.22" expl="postcondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="timeout"/></proof>
  <transf name="split_disj" >
   <goal name="WP_parameter def.22.0" expl="postcondition">
   <proof prover="0" timelimit="60"><result status="timeout"/></proof>
   <proof prover="1"><result status="timeout"/></proof>
   </goal>
   <goal name="WP_parameter def.22.1" expl="postcondition" proved="true">
   <proof prover="0" timelimit="60"><result status="valid" steps="46439"/></proof>
   <proof prover="1"><result status="unknown" steps="354"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter def.23" expl="postcondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="timeout"/></proof>
  <transf name="split_disj" >
   <goal name="WP_parameter def.23.0" expl="postcondition">
   <proof prover="0" timelimit="60"><result status="timeout"/></proof>
   <proof prover="1"><result status="timeout"/></proof>
   </goal>
   <goal name="WP_parameter def.23.1" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" steps="111"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter def.24" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" steps="46473"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__move_3__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" steps="32692"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" steps="31551"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" steps="33438"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="precondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="unknown" steps="455"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="precondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="unknown" steps="456"/></proof>
  </goal>
  <goal name="WP_parameter def.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="9549"/></proof>
  </goal>
  <goal name="WP_parameter def.6" expl="precondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="unknown" steps="439"/></proof>
  </goal>
  <goal name="WP_parameter def.7" expl="VC for def" proved="true">
  <proof prover="0"><result status="valid" steps="2584"/></proof>
  </goal>
  <goal name="WP_parameter def.8" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="9827"/></proof>
  </goal>
  <goal name="WP_parameter def.9" expl="precondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="unknown" steps="2625"/></proof>
  </goal>
  <goal name="WP_parameter def.10" expl="precondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="unknown" steps="425"/></proof>
  </goal>
  <goal name="WP_parameter def.11" expl="precondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="unknown" steps="2549"/></proof>
  </goal>
  <goal name="WP_parameter def.12" expl="precondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="timeout"/></proof>
  </goal>
  <goal name="WP_parameter def.13" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" steps="53250"/></proof>
  </goal>
  <goal name="WP_parameter def.14" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" steps="64918"/></proof>
  </goal>
  <goal name="WP_parameter def.15" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" steps="64106"/></proof>
  </goal>
  <goal name="WP_parameter def.16" expl="postcondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="timeout"/></proof>
  <transf name="split_disj" >
   <goal name="WP_parameter def.16.0" expl="postcondition">
   <proof prover="0" timelimit="60"><result status="timeout"/></proof>
   <proof prover="1"><result status="timeout"/></proof>
   </goal>
   <goal name="WP_parameter def.16.1" expl="postcondition" proved="true">
   <proof prover="0" timelimit="60"><result status="valid" steps="46976"/></proof>
   <proof prover="1"><result status="unknown" steps="373"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter def.17" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" steps="39960"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__move_4__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" steps="32692"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" steps="31633"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="precondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="unknown" steps="455"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="precondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="unknown" steps="456"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="9333"/></proof>
  </goal>
  <goal name="WP_parameter def.5" expl="precondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="unknown" steps="439"/></proof>
  </goal>
  <goal name="WP_parameter def.6" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="10346"/></proof>
  </goal>
  <goal name="WP_parameter def.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="38876"/></proof>
  </goal>
  <goal name="WP_parameter def.8" expl="precondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="unknown" steps="425"/></proof>
  </goal>
  <goal name="WP_parameter def.9" expl="precondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="unknown" steps="3096"/></proof>
  </goal>
  <goal name="WP_parameter def.10" expl="precondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="timeout"/></proof>
  </goal>
  <goal name="WP_parameter def.11" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" steps="55122"/></proof>
  </goal>
  <goal name="WP_parameter def.12" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" steps="90256"/></proof>
  </goal>
  <goal name="WP_parameter def.13" expl="postcondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="timeout"/></proof>
  <transf name="split_disj" >
   <goal name="WP_parameter def.13.0" expl="postcondition">
   <proof prover="0" timelimit="60"><result status="timeout"/></proof>
   <proof prover="1"><result status="timeout"/></proof>
   </goal>
   <goal name="WP_parameter def.13.1" expl="postcondition" proved="true">
   <proof prover="0" timelimit="60"><result status="valid" steps="46989"/></proof>
   <proof prover="1"><result status="unknown" steps="373"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter def.14" expl="postcondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="timeout"/></proof>
  <transf name="split_disj" >
   <goal name="WP_parameter def.14.0" expl="postcondition">
   <proof prover="0" timelimit="60"><result status="timeout"/></proof>
   <proof prover="1"><result status="timeout"/></proof>
   </goal>
   <goal name="WP_parameter def.14.1" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" steps="114"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter def.15" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" steps="39140"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__double_size__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="VC for def" proved="true">
  <proof prover="0"><result status="valid" steps="2630"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="VC for def" proved="true">
  <proof prover="0"><result status="valid" steps="2932"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="38930"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="38978"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="3012"/></proof>
  </goal>
  <goal name="WP_parameter def.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="3094"/></proof>
  </goal>
  <goal name="WP_parameter def.6" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" steps="9701"/></proof>
  </goal>
  <goal name="WP_parameter def.7" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" steps="37270"/></proof>
  </goal>
  <goal name="WP_parameter def.8" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" steps="37256"/></proof>
  </goal>
  <goal name="WP_parameter def.9" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" steps="9779"/></proof>
  </goal>
  <goal name="WP_parameter def.10" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" steps="9765"/></proof>
  </goal>
  <goal name="WP_parameter def.11" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" steps="38195"/></proof>
  </goal>
  <goal name="WP_parameter def.12" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="42308"/></proof>
  </goal>
  <goal name="WP_parameter def.13" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="3004"/></proof>
  </goal>
  <goal name="WP_parameter def.14" expl="precondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="unknown" steps="523"/></proof>
  </goal>
  <goal name="WP_parameter def.15" expl="precondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="timeout"/></proof>
  </goal>
  <goal name="WP_parameter def.16" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="42832"/></proof>
  </goal>
  <goal name="WP_parameter def.17" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="40486"/></proof>
  </goal>
  <goal name="WP_parameter def.18" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="43487"/></proof>
  </goal>
  <goal name="WP_parameter def.19" expl="precondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="timeout"/></proof>
  </goal>
  <goal name="WP_parameter def.20" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="3378"/></proof>
  </goal>
  <goal name="WP_parameter def.21" expl="precondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="timeout"/></proof>
  </goal>
  <goal name="WP_parameter def.22" expl="precondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="timeout"/></proof>
  </goal>
  <goal name="WP_parameter def.23" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="11879"/></proof>
  </goal>
  <goal name="WP_parameter def.24" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="48001"/></proof>
  </goal>
  <goal name="WP_parameter def.25" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="47510"/></proof>
  </goal>
  <goal name="WP_parameter def.26" expl="precondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="timeout"/></proof>
  </goal>
  <goal name="WP_parameter def.27" expl="precondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="unknown" steps="447"/></proof>
  </goal>
  <goal name="WP_parameter def.28" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="43505"/></proof>
  </goal>
  <goal name="WP_parameter def.29" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="42698"/></proof>
  </goal>
  <goal name="WP_parameter def.30" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="42948"/></proof>
  </goal>
  <goal name="WP_parameter def.31" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="41099"/></proof>
  </goal>
  <goal name="WP_parameter def.32" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="44892"/></proof>
  </goal>
  <goal name="WP_parameter def.33" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="44630"/></proof>
  </goal>
  <goal name="WP_parameter def.34" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="44129"/></proof>
  </goal>
  <goal name="WP_parameter def.35" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="43892"/></proof>
  </goal>
  <goal name="WP_parameter def.36" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="42328"/></proof>
  </goal>
  <goal name="WP_parameter def.37" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="42047"/></proof>
  </goal>
  <goal name="WP_parameter def.38" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="40163"/></proof>
  </goal>
  <goal name="WP_parameter def.39" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="43985"/></proof>
  </goal>
  <goal name="WP_parameter def.40" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="43671"/></proof>
  </goal>
  <goal name="WP_parameter def.41" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="44007"/></proof>
  </goal>
  <goal name="WP_parameter def.42" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="43829"/></proof>
  </goal>
  <goal name="WP_parameter def.43" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="43919"/></proof>
  </goal>
  <goal name="WP_parameter def.44" expl="precondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="unknown" steps="426"/></proof>
  </goal>
  <goal name="WP_parameter def.45" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="43286"/></proof>
  </goal>
  <goal name="WP_parameter def.46" expl="precondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="unknown" steps="450"/></proof>
  </goal>
  <goal name="WP_parameter def.47" expl="precondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="unknown" steps="404"/></proof>
  </goal>
  <goal name="WP_parameter def.48" expl="precondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="timeout"/></proof>
  </goal>
  <goal name="WP_parameter def.49" expl="assertion">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="timeout"/></proof>
  </goal>
  <goal name="WP_parameter def.50" expl="precondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="timeout"/></proof>
  </goal>
  <goal name="WP_parameter def.51" expl="precondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="timeout"/></proof>
  </goal>
  <goal name="WP_parameter def.52" expl="precondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="timeout"/></proof>
  </goal>
  <goal name="WP_parameter def.53" expl="precondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="timeout"/></proof>
  </goal>
  <goal name="WP_parameter def.54" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="12002"/></proof>
  </goal>
  <goal name="WP_parameter def.55" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="49675"/></proof>
  </goal>
  <goal name="WP_parameter def.56" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" steps="53497"/></proof>
  </goal>
  <goal name="WP_parameter def.57" expl="loop invariant preservation">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="timeout"/></proof>
  </goal>
  <goal name="WP_parameter def.58" expl="loop invariant preservation">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="timeout"/></proof>
  </goal>
  <goal name="WP_parameter def.59" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" steps="84741"/></proof>
  </goal>
  <goal name="WP_parameter def.60" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" steps="64310"/></proof>
  </goal>
  <goal name="WP_parameter def.61" expl="loop invariant preservation">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="timeout"/></proof>
  </goal>
  <goal name="WP_parameter def.62" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="3802"/></proof>
  </goal>
  <goal name="WP_parameter def.63" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="53698"/></proof>
  </goal>
  <goal name="WP_parameter def.64" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="157651"/></proof>
  </goal>
  <goal name="WP_parameter def.65" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="51235"/></proof>
  </goal>
  <goal name="WP_parameter def.66" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="51217"/></proof>
  </goal>
  <goal name="WP_parameter def.67" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="52839"/></proof>
  </goal>
  <goal name="WP_parameter def.68" expl="precondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="timeout"/></proof>
  <transf name="split_disj" >
   <goal name="WP_parameter def.68.0" expl="precondition">
   <proof prover="0" timelimit="60"><result status="timeout"/></proof>
   <proof prover="1"><result status="timeout"/></proof>
   </goal>
   <goal name="WP_parameter def.68.1" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" steps="14"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter def.69" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="4180"/></proof>
  </goal>
  <goal name="WP_parameter def.70" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="60366"/></proof>
  </goal>
  <goal name="WP_parameter def.71" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="14793"/></proof>
  </goal>
  <goal name="WP_parameter def.72" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="56758"/></proof>
  </goal>
  <goal name="WP_parameter def.73" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="53694"/></proof>
  </goal>
  <goal name="WP_parameter def.74" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="56963"/></proof>
  </goal>
  <goal name="WP_parameter def.75" expl="precondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="timeout"/></proof>
  <transf name="split_disj" >
   <goal name="WP_parameter def.75.0" expl="precondition">
   <proof prover="0" timelimit="60"><result status="timeout"/></proof>
   <proof prover="1"><result status="timeout"/></proof>
   </goal>
   <goal name="WP_parameter def.75.1" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" steps="14"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter def.76" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="51318"/></proof>
  </goal>
  <goal name="WP_parameter def.77" expl="postcondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="timeout"/></proof>
  <transf name="split_disj" >
   <goal name="WP_parameter def.77.0" expl="postcondition">
   <proof prover="0" timelimit="60"><result status="timeout"/></proof>
   <proof prover="1"><result status="timeout"/></proof>
   </goal>
   <goal name="WP_parameter def.77.1" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" steps="5"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter def.78" expl="postcondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="timeout"/></proof>
  <transf name="split_disj" >
   <goal name="WP_parameter def.78.0" expl="postcondition">
   <proof prover="0" timelimit="60"><result status="timeout"/></proof>
   <proof prover="1"><result status="highfailure"/></proof>
   </goal>
   <goal name="WP_parameter def.78.1" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" steps="14"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter def.79" expl="postcondition">
  <proof prover="0" timelimit="60"><result status="timeout"/></proof>
  <proof prover="1"><result status="timeout"/></proof>
  <transf name="split_disj" >
   <goal name="WP_parameter def.79.0" expl="postcondition">
   <proof prover="0" timelimit="60"><result status="timeout"/></proof>
   <proof prover="1"><result status="timeout"/></proof>
   </goal>
   <goal name="WP_parameter def.79.1" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" steps="14"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__insert_count__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="27579"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="35249"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="44004"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="50994"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="66870"/></proof>
  </goal>
  <goal name="WP_parameter def.5" expl="VC for def" proved="true">
  <proof prover="0"><result status="valid" steps="4048"/></proof>
  </goal>
  <goal name="WP_parameter def.6" expl="VC for def" proved="true">
  <proof prover="0"><result status="valid" steps="4350"/></proof>
  </goal>
  <goal name="WP_parameter def.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="50251"/></proof>
  </goal>
  <goal name="WP_parameter def.8" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="50299"/></proof>
  </goal>
  <goal name="WP_parameter def.9" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="54560"/></proof>
  </goal>
  <goal name="WP_parameter def.10" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" steps="96597"/></proof>
  </goal>
  <goal name="WP_parameter def.11" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" steps="2118526"/></proof>
  </goal>
  <goal name="WP_parameter def.12" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" steps="155136"/></proof>
  </goal>
  <goal name="WP_parameter def.13" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" steps="178632"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__q__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__from_elements_to_model__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="5344"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="19004"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="VC for def" proved="true">
  <proof prover="0"><result status="valid" steps="1326"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" steps="20270"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__from_model_to_elements__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="VC for def" proved="true">
  <proof prover="0"><result status="valid" steps="1306"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="5448"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="19336"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" steps="17217"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__from_elements_to_cursors__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="6762"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="23895"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="VC for def" proved="true">
  <proof prover="0"><result status="valid" steps="1798"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="5874"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" steps="22592"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__from_cursors_to_elements__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="VC for def" proved="true">
  <proof prover="0"><result status="valid" steps="1778"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="5760"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="7088"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="24928"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" steps="23710"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__from_model_to_cursors__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="VC for def" proved="true">
  <proof prover="0"><result status="valid" steps="1788"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="VC for def" proved="true">
  <proof prover="0"><result status="valid" steps="1808"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="5864"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" steps="22674"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Use_ordered_sets__from_cursors_to_model__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="VC for def" proved="true">
  <proof prover="0"><result status="valid" steps="1778"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="5760"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="VC for def" proved="true">
  <proof prover="0"><result status="valid" steps="1886"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" steps="29335"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
