bar.adb:4:18: info: unrolling loop
bar.adb:5:25: medium: assertion might fail (e.g. when X = False)
bar.ads:3:13: info: implicit aspect Always_Terminates on "Ident" has been proved, subprogram will terminate
bar.ads:4:13: info: implicit aspect Always_Terminates on "Bizarre" has been proved, subprogram will terminate
bar.ads:4:55: medium: predicate check might fail (e.g. when X = False) [possible fix: subprogram at line 4 should mention X in a precondition]
bar.ads:5:14: warning: subprogram "P" has no effect
foo.ads:30:07: info: range check proved (CVC5: 2 VC)
foo.ads:33:38: info: range check proved (CVC5: 2 VC)
foo.ads:35:13: info: implicit aspect Always_Terminates on "Get_Element" has been proved, subprogram will terminate
foo.ads:36:23: info: index check proved (CVC5: 2 VC)
foo.ads:38:13: info: implicit aspect Always_Terminates on "Get_Elem_1" has been proved, subprogram will terminate
foo.ads:38:62: medium: predicate check might fail (e.g. when CPU_ID = 0)
foo.ads:44:13: info: implicit aspect Always_Terminates on "Get_Elem_2" has been proved, subprogram will terminate
foo.ads:44:58: medium: array index check might fail (e.g. when States = (Max_ID => ?, States => (others => 0)) and States.States'First = 0 and States.States'Last = 3) [reason for check: value must be a valid index into the array]
