example_recursive.adb:16:26: info: postcondition proved (CVC4: 1 VC; Z3: 1 VC), in inherited contract at example_recursive.adb:40
example_recursive.adb:16:26: info: postcondition proved (CVC4: 2 VC)
example_recursive.adb:16:40: info: predicate check proved (Trivial: 1 VC)
example_recursive.adb:16:55: info: predicate check proved (Trivial: 1 VC)
example_recursive.adb:39:33: info: predicate check proved (Trivial: 1 VC)
example_recursive.adb:54:18: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:55:18: info: subprogram variant proved (CVC4: 1 VC)
example_recursive.adb:55:47: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:55:47: info: tag check proved (CVC4: 1 VC)
example_recursive.adb:55:65: info: range check proved (CVC4: 2 VC)
example_recursive.adb:57:06: info: data dependencies proved
example_recursive.adb:66:06: info: data dependencies proved
example_recursive.adb:68:14: info: postcondition proved (CVC4: 1 VC)
example_recursive.adb:74:10: info: precondition proved (CVC4: 10 VC)
example_recursive.adb:74:10: info: subprogram variant proved (CVC4: 1 VC)
example_recursive.adb:74:53: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:74:53: info: tag check proved (CVC4: 1 VC)
example_recursive.adb:74:72: info: range check proved (CVC4: 2 VC)
example_recursive.adb:74:80: info: range check proved (CVC4: 2 VC)
example_recursive.adb:80:09: info: data dependencies proved
example_recursive.adb:86:18: info: precondition proved (CVC4: 5 VC)
example_recursive.adb:86:18: info: subprogram variant proved (CVC4: 1 VC)
example_recursive.adb:86:46: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:86:46: info: tag check proved (CVC4: 1 VC)
example_recursive.adb:86:64: info: range check proved (CVC4: 2 VC)
example_recursive.adb:88:06: info: data dependencies proved
example_recursive.adb:98:06: info: data dependencies proved
example_recursive.adb:100:15: info: precondition proved (CVC4: 5 VC)
example_recursive.adb:101:15: info: precondition proved (CVC4: 5 VC)
example_recursive.adb:102:14: info: postcondition proved (CVC4: 2 VC)
example_recursive.adb:102:14: info: precondition proved (CVC4: 5 VC)
example_recursive.adb:108:10: info: precondition proved (CVC4: 10 VC)
example_recursive.adb:111:10: info: precondition proved (CVC4: 14 VC)
example_recursive.adb:111:10: info: subprogram variant proved (CVC4: 1 VC)
example_recursive.adb:111:51: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:111:51: info: tag check proved (CVC4: 1 VC)
example_recursive.adb:111:78: info: range check proved (CVC4: 2 VC)
example_recursive.adb:120:06: info: data dependencies proved
example_recursive.adb:122:16: info: precondition proved (Trivial: 1 VC)
example_recursive.adb:123:22: info: precondition proved (CVC4: 5 VC)
example_recursive.adb:124:47: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:124:61: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:125:14: info: postcondition proved (CVC4: 5 VC)
example_recursive.adb:131:10: info: precondition proved (CVC4: 6 VC; Trivial: 1 VC; altergo: 1 VC)
example_recursive.adb:131:10: info: subprogram variant proved (CVC4: 1 VC)
example_recursive.adb:131:50: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:131:50: info: tag check proved (CVC4: 1 VC)
example_recursive.adb:131:69: info: range check proved (CVC4: 2 VC)
example_recursive.adb:140:06: info: data dependencies proved
example_recursive.adb:142:16: info: precondition proved (Trivial: 1 VC)
example_recursive.adb:143:22: info: precondition proved (CVC4: 5 VC)
example_recursive.adb:144:47: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:144:61: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:145:14: info: postcondition proved (CVC4: 4 VC)
example_recursive.adb:145:15: info: precondition proved (Trivial: 1 VC)
example_recursive.adb:145:34: info: precondition proved (CVC4: 5 VC)
example_recursive.adb:145:60: info: precondition proved (CVC4: 5 VC)
example_recursive.adb:149:10: info: precondition proved (CVC4: 6 VC; Trivial: 1 VC; altergo: 1 VC)
example_recursive.adb:149:10: info: subprogram variant proved (CVC4: 1 VC)
example_recursive.adb:149:50: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:149:50: info: tag check proved (CVC4: 1 VC)
example_recursive.adb:149:69: info: range check proved (CVC4: 2 VC)
example_recursive.adb:151:07: info: precondition proved (CVC4: 6 VC; Trivial: 1 VC; altergo: 1 VC)
example_recursive.adb:159:06: info: data dependencies proved
example_recursive.adb:161:15: info: precondition proved (CVC4: 5 VC)
example_recursive.adb:162:19: info: precondition proved (CVC4: 5 VC)
example_recursive.adb:164:16: info: precondition proved (Trivial: 1 VC)
example_recursive.adb:165:16: info: precondition proved (Trivial: 1 VC)
example_recursive.adb:166:16: info: precondition proved (Trivial: 1 VC)
example_recursive.adb:167:34: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:167:48: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:168:15: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:169:32: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:169:32: info: tag check proved (CVC4: 1 VC)
example_recursive.adb:170:28: info: overflow check proved (CVC4: 2 VC)
example_recursive.adb:171:14: info: postcondition proved (CVC4: 5 VC)
example_recursive.adb:171:33: info: overflow check proved (CVC4: 2 VC)
example_recursive.adb:175:10: info: precondition proved (CVC4: 7 VC; Trivial: 1 VC)
example_recursive.adb:177:10: info: precondition proved (CVC4: 24 VC; Trivial: 1 VC)
example_recursive.adb:177:10: info: subprogram variant proved (CVC4: 1 VC)
example_recursive.adb:177:47: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:177:47: info: tag check proved (CVC4: 1 VC)
example_recursive.adb:177:75: info: range check proved (CVC4: 2 VC)
example_recursive.adb:187:06: info: data dependencies proved
example_recursive.adb:189:15: info: precondition proved (CVC4: 5 VC)
example_recursive.adb:190:19: info: precondition proved (CVC4: 5 VC)
example_recursive.adb:192:16: info: precondition proved (Trivial: 1 VC)
example_recursive.adb:193:16: info: precondition proved (Trivial: 1 VC)
example_recursive.adb:194:16: info: precondition proved (Trivial: 1 VC)
example_recursive.adb:195:34: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:195:48: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:196:15: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:197:32: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:197:32: info: tag check proved (CVC4: 1 VC)
example_recursive.adb:198:28: info: overflow check proved (CVC4: 2 VC)
example_recursive.adb:199:14: info: postcondition proved (CVC4: 3 VC)
example_recursive.adb:199:15: info: precondition proved (Trivial: 1 VC)
example_recursive.adb:199:35: info: precondition proved (CVC4: 5 VC)
example_recursive.adb:199:64: info: precondition proved (CVC4: 5 VC)
example_recursive.adb:200:17: info: precondition proved (CVC4: 5 VC)
example_recursive.adb:200:35: info: overflow check proved (CVC4: 2 VC)
example_recursive.adb:204:10: info: precondition proved (CVC4: 7 VC; Trivial: 1 VC)
example_recursive.adb:206:10: info: precondition proved (CVC4: 24 VC; Trivial: 1 VC)
example_recursive.adb:206:10: info: subprogram variant proved (CVC4: 1 VC)
example_recursive.adb:206:47: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:206:47: info: tag check proved (CVC4: 1 VC)
example_recursive.adb:206:75: info: range check proved (CVC4: 2 VC)
example_recursive.adb:208:07: info: precondition proved (CVC4: 24 VC; Trivial: 1 VC)
example_recursive.adb:212:07: info: precondition proved (Trivial: 1 VC)
example_recursive.adb:213:13: info: precondition proved (CVC4: 5 VC)
example_recursive.adb:214:19: info: precondition proved (CVC4: 5 VC)
example_recursive.adb:215:09: info: data dependencies proved
example_recursive.adb:222:06: info: data dependencies proved
example_recursive.adb:226:15: info: precondition proved (CVC4: 2 VC)
example_recursive.adb:228:28: info: overflow check proved (CVC4: 2 VC)
example_recursive.adb:233:41: info: overflow check proved (CVC4: 2 VC)
example_recursive.adb:235:16: info: precondition proved (Trivial: 1 VC)
example_recursive.adb:236:16: info: precondition proved (Trivial: 1 VC)
example_recursive.adb:238:16: info: precondition proved (Trivial: 1 VC)
example_recursive.adb:239:26: info: precondition proved (CVC4: 4 VC; Z3: 1 VC)
example_recursive.adb:240:24: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:240:42: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:242:16: info: precondition proved (Trivial: 1 VC)
example_recursive.adb:242:39: info: precondition proved (CVC4: 5 VC)
example_recursive.adb:242:39: medium: postcondition might fail, cannot prove Reachable (Address (L1.Values), L1.Length, A, Memory) = (Reachable (Address (L1.Values)'Old, L1.Length'Old, A, Memory'Old) or else Reachable (Address (L2.Values), L2.Length, A, Memory'old))
example_recursive.adb:243:19: info: precondition proved (CVC4: 4 VC; Z3: 1 VC)
example_recursive.adb:244:27: info: precondition proved (CVC4: 5 VC)
example_recursive.adb:258:39: info: loop invariant initialization proved (CVC4: 1 VC)
example_recursive.adb:258:39: info: loop invariant preservation proved (CVC4: 1 VC)
example_recursive.adb:259:39: info: loop invariant initialization proved (CVC4: 5 VC)
example_recursive.adb:259:39: info: loop invariant preservation proved (CVC4: 5 VC)
example_recursive.adb:260:39: info: loop invariant initialization proved (CVC4: 2 VC)
example_recursive.adb:260:39: info: loop invariant preservation proved (CVC4: 2 VC)
example_recursive.adb:260:39: info: precondition proved (CVC4: 10 VC)
example_recursive.adb:261:27: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:261:27: info: tag check proved (CVC4: 1 VC)
example_recursive.adb:263:54: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:263:54: info: tag check proved (CVC4: 1 VC)
example_recursive.adb:265:22: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:266:22: info: precondition proved (CVC4: 24 VC; Trivial: 1 VC)
example_recursive.adb:267:22: info: precondition proved (CVC4: 24 VC; Trivial: 1 VC)
example_recursive.adb:268:45: info: overflow check proved (CVC4: 2 VC)
example_recursive.adb:272:16: info: precondition proved (CVC4: 14 VC)
example_recursive.adb:272:91: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:272:91: info: tag check proved (CVC4: 1 VC)
example_recursive.adb:273:29: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:273:29: info: tag check proved (CVC4: 1 VC)
example_recursive.adb:274:27: info: range check proved (CVC4: 2 VC)
example_recursive.adb:280:04: info: initialization of "L1" proved
example_recursive.adb:281:04: info: initialization of "L2" proved
example_recursive.adb:287:19: info: assertion proved (CVC4: 1 VC)
example_recursive.adb:289:07: info: assertion proved (CVC4: 1 VC; Trivial: 1 VC)
example_recursive.adb:289:07: info: precondition proved (Trivial: 1 VC)
example_recursive.adb:290:13: info: precondition proved (CVC4: 5 VC)
example_recursive.adb:291:59: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:291:59: info: tag check proved (CVC4: 1 VC)
example_recursive.adb:291:100: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:291:100: info: tag check proved (CVC4: 1 VC)
example_recursive.adb:291:115: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:291:115: info: tag check proved (CVC4: 1 VC)
example_recursive.adb:296:19: info: assertion proved (CVC4: 1 VC)
example_recursive.adb:297:04: medium: precondition might fail, cannot prove Valid_List (L1)
example_tagged_obj.adb:14:26: info: postcondition proved (CVC4: 2 VC)
example_tagged_obj.adb:14:26: info: postcondition proved (CVC4: 2 VC), in inherited contract at example_tagged_obj.adb:32
example_tagged_obj.adb:14:40: info: predicate check proved (Trivial: 1 VC)
example_tagged_obj.adb:14:55: info: predicate check proved (Trivial: 1 VC)
example_tagged_obj.adb:31:33: info: predicate check proved (Trivial: 1 VC)
example_tagged_obj.adb:37:04: info: initialization of "X1" proved
example_tagged_obj.adb:38:04: info: initialization of "X2" proved
example_tagged_obj.adb:39:04: info: initialization of "X3" proved
example_tagged_obj.adb:40:04: info: initialization of "X1_B" proved
example_tagged_obj.adb:43:14: info: postcondition proved (CVC4: 2 VC)
example_tagged_obj.adb:53:14: info: postcondition proved (CVC4: 5 VC; Trivial: 1 VC)
example_tagged_obj.adb:53:14: info: precondition proved (CVC4: 1 VC)
example_tagged_obj.adb:53:26: info: precondition proved (CVC4: 1 VC)
example_tagged_obj.adb:53:44: info: precondition proved (CVC4: 1 VC)
example_tagged_obj.adb:53:56: info: precondition proved (CVC4: 1 VC)
example_tagged_obj.adb:54:14: info: precondition proved (Trivial: 1 VC)
example_tagged_obj.adb:55:14: info: precondition proved (Trivial: 1 VC)
example_tagged_obj.adb:56:14: info: precondition proved (Trivial: 1 VC)
example_tagged_obj.adb:57:60: info: precondition proved (CVC4: 1 VC)
example_tagged_obj.adb:57:78: info: precondition proved (CVC4: 1 VC)
example_tagged_obj.adb:59:38: info: precondition proved (CVC4: 1 VC)
example_tagged_obj.adb:61:07: info: precondition proved (CVC4: 1 VC)
example_tagged_obj.adb:61:18: info: precondition proved (CVC4: 1 VC)
example_tagged_obj.adb:62:07: info: precondition proved (CVC4: 1 VC)
example_tagged_obj.adb:68:50: info: precondition proved (CVC4: 1 VC)
example_tagged_obj.adb:71:09: info: postcondition proved (CVC4: 5 VC; Trivial: 1 VC)
example_tagged_obj.adb:71:09: info: precondition proved (CVC4: 1 VC)
example_tagged_obj.adb:71:39: info: precondition proved (CVC4: 1 VC)
example_tagged_obj.adb:71:39: info: tag check proved (CVC4: 1 VC)
example_tagged_obj.adb:71:67: info: precondition proved (CVC4: 1 VC)
example_tagged_obj.adb:71:67: info: tag check proved (CVC4: 1 VC)
example_tagged_obj.adb:72:14: info: precondition proved (Trivial: 1 VC)
example_tagged_obj.adb:73:14: info: precondition proved (Trivial: 1 VC)
example_tagged_obj.adb:74:14: info: precondition proved (Trivial: 1 VC)
example_tagged_obj.adb:75:42: info: precondition proved (CVC4: 1 VC)
example_tagged_obj.adb:75:60: info: precondition proved (CVC4: 1 VC)
example_tagged_obj.adb:78:43: info: precondition proved (CVC4: 1 VC)
example_tagged_obj.adb:78:54: info: null exclusion check proved (CVC4: 1 VC)
example_tagged_obj.adb:80:07: info: tag check proved (CVC4: 1 VC)
example_tagged_obj.adb:80:24: info: pointer dereference check proved (CVC4: 1 VC)
example_tagged_obj.adb:88:19: info: assertion proved (CVC4: 1 VC)
example_tagged_obj.adb:88:26: info: precondition proved (CVC4: 1 VC)
example_tagged_obj.adb:88:26: info: tag check proved (CVC4: 1 VC)
example_tagged_obj.adb:90:04: info: precondition proved (CVC4: 2 VC)
example_tagged_obj.adb:91:19: info: assertion proved (CVC4: 1 VC)
example_tagged_obj.adb:91:26: info: precondition proved (CVC4: 1 VC)
example_tagged_obj.adb:91:26: info: tag check proved (CVC4: 1 VC)
example_tagged_obj.adb:92:19: info: assertion proved (CVC4: 1 VC)
example_tagged_obj.adb:92:26: info: precondition proved (CVC4: 1 VC)
example_tagged_obj.adb:92:26: info: tag check proved (CVC4: 1 VC)
example_tagged_obj.adb:93:19: info: assertion proved (CVC4: 1 VC)
example_tagged_obj.adb:93:26: info: precondition proved (CVC4: 1 VC)
example_tagged_obj.adb:93:26: info: tag check proved (CVC4: 1 VC)
example_tagged_obj.adb:94:19: info: assertion proved (CVC4: 1 VC)
example_tagged_obj.adb:94:26: info: precondition proved (CVC4: 1 VC)
example_tagged_obj.adb:94:26: info: tag check proved (CVC4: 1 VC)
example_tagged_obj.adb:95:04: info: precondition proved (CVC4: 2 VC)
example_tagged_obj.adb:96:19: info: assertion proved (CVC4: 1 VC)
example_tagged_obj.adb:96:26: info: precondition proved (CVC4: 1 VC)
example_tagged_obj.adb:96:26: info: tag check proved (CVC4: 1 VC)
example_tagged_obj.adb:97:19: info: assertion proved (CVC4: 1 VC)
example_tagged_obj.adb:97:26: info: precondition proved (CVC4: 1 VC)
example_tagged_obj.adb:97:26: info: tag check proved (CVC4: 1 VC)
example_untagged_obj.adb:15:04: info: initialization of "X1" proved
example_untagged_obj.adb:16:04: info: initialization of "X2" proved
example_untagged_obj.adb:17:04: info: initialization of "X3" proved
example_untagged_obj.adb:18:04: info: initialization of "X1_B" proved
example_untagged_obj.adb:21:14: info: postcondition proved (CVC4: 2 VC)
example_untagged_obj.adb:31:14: info: postcondition proved (CVC4: 5 VC; Trivial: 1 VC)
example_untagged_obj.adb:31:14: info: precondition proved (CVC4: 1 VC)
example_untagged_obj.adb:31:26: info: precondition proved (CVC4: 1 VC)
example_untagged_obj.adb:31:44: info: precondition proved (CVC4: 1 VC)
example_untagged_obj.adb:31:56: info: precondition proved (CVC4: 1 VC)
example_untagged_obj.adb:32:14: info: precondition proved (Trivial: 1 VC)
example_untagged_obj.adb:33:14: info: precondition proved (Trivial: 1 VC)
example_untagged_obj.adb:34:14: info: precondition proved (Trivial: 1 VC)
example_untagged_obj.adb:35:60: info: precondition proved (CVC4: 1 VC)
example_untagged_obj.adb:35:78: info: precondition proved (CVC4: 1 VC)
example_untagged_obj.adb:37:32: info: precondition proved (CVC4: 1 VC)
example_untagged_obj.adb:39:07: info: precondition proved (CVC4: 1 VC)
example_untagged_obj.adb:39:18: info: precondition proved (CVC4: 1 VC)
example_untagged_obj.adb:40:07: info: precondition proved (CVC4: 1 VC)
example_untagged_obj.adb:45:14: info: postcondition proved (CVC4: 4 VC; Trivial: 1 VC)
example_untagged_obj.adb:45:14: info: precondition proved (CVC4: 1 VC)
example_untagged_obj.adb:45:27: info: precondition proved (CVC4: 1 VC)
example_untagged_obj.adb:46:14: info: precondition proved (Trivial: 1 VC)
example_untagged_obj.adb:47:14: info: precondition proved (Trivial: 1 VC)
example_untagged_obj.adb:48:14: info: precondition proved (Trivial: 1 VC)
example_untagged_obj.adb:49:42: info: precondition proved (CVC4: 1 VC)
example_untagged_obj.adb:49:60: info: precondition proved (CVC4: 1 VC)
example_untagged_obj.adb:52:37: info: precondition proved (CVC4: 1 VC)
example_untagged_obj.adb:52:48: info: null exclusion check proved (CVC4: 1 VC)
example_untagged_obj.adb:54:16: info: pointer dereference check proved (CVC4: 1 VC)
example_untagged_obj.adb:61:19: info: assertion proved (CVC4: 1 VC)
example_untagged_obj.adb:61:19: info: precondition proved (CVC4: 1 VC)
example_untagged_obj.adb:63:04: info: precondition proved (CVC4: 2 VC)
example_untagged_obj.adb:64:19: info: assertion proved (CVC4: 1 VC)
example_untagged_obj.adb:64:19: info: precondition proved (CVC4: 1 VC)
example_untagged_obj.adb:65:19: info: assertion proved (CVC4: 1 VC)
example_untagged_obj.adb:65:19: info: precondition proved (CVC4: 1 VC)
example_untagged_obj.adb:66:19: info: assertion proved (CVC4: 1 VC)
example_untagged_obj.adb:66:19: info: precondition proved (CVC4: 1 VC)
example_untagged_obj.adb:67:19: info: assertion proved (CVC4: 1 VC)
example_untagged_obj.adb:67:19: info: precondition proved (CVC4: 1 VC)
example_untagged_obj.adb:68:04: info: precondition proved (CVC4: 1 VC)
example_untagged_obj.adb:69:19: info: assertion proved (CVC4: 1 VC)
example_untagged_obj.adb:69:19: info: precondition proved (CVC4: 1 VC)
example_untagged_obj.adb:70:19: info: assertion proved (CVC4: 1 VC)
example_untagged_obj.adb:70:19: info: precondition proved (CVC4: 1 VC)
pointers_with_aliasing.ads:14:13: info: subprogram "Check_No_Deep_Objects" will terminate, terminating annotation has been proved, in instantiation at example_recursive.adb:20
pointers_with_aliasing.ads:14:13: info: subprogram "Check_No_Deep_Objects" will terminate, terminating annotation has been proved, in instantiation at example_tagged_obj.adb:18
pointers_with_aliasing.ads:14:13: info: subprogram "Check_No_Deep_Objects" will terminate, terminating annotation has been proved, in instantiation at example_untagged_obj.adb:10
pointers_with_aliasing.ads:54:04: info: initialization of "Memory" proved, in instantiation at example_recursive.adb:20
pointers_with_aliasing.ads:54:04: info: initialization of "Memory" proved, in instantiation at example_tagged_obj.adb:18
pointers_with_aliasing.ads:54:04: info: initialization of "Memory" proved, in instantiation at example_untagged_obj.adb:10
pointers_with_aliasing.ads:114:13: info: subprogram "At_End" will terminate, terminating annotation has been proved, in instantiation at example_recursive.adb:20
pointers_with_aliasing.ads:114:13: info: subprogram "At_End" will terminate, terminating annotation has been proved, in instantiation at example_tagged_obj.adb:18
pointers_with_aliasing.ads:114:13: info: subprogram "At_End" will terminate, terminating annotation has been proved, in instantiation at example_untagged_obj.adb:10
pointers_with_aliasing.ads:115:07: info: dynamic accessibility check proved (Trivial), in instantiation at example_recursive.adb:20
pointers_with_aliasing.ads:115:07: info: dynamic accessibility check proved (Trivial), in instantiation at example_tagged_obj.adb:18
pointers_with_aliasing.ads:115:07: info: dynamic accessibility check proved (Trivial), in instantiation at example_untagged_obj.adb:10
pointers_with_aliasing.ads:119:13: info: subprogram "At_End" will terminate, terminating annotation has been proved, in instantiation at example_recursive.adb:20
pointers_with_aliasing.ads:119:13: info: subprogram "At_End" will terminate, terminating annotation has been proved, in instantiation at example_tagged_obj.adb:18
pointers_with_aliasing.ads:119:13: info: subprogram "At_End" will terminate, terminating annotation has been proved, in instantiation at example_untagged_obj.adb:10
pointers_with_aliasing.ads:120:07: info: dynamic accessibility check proved (Trivial), in instantiation at example_recursive.adb:20
pointers_with_aliasing.ads:120:07: info: dynamic accessibility check proved (Trivial), in instantiation at example_tagged_obj.adb:18
pointers_with_aliasing.ads:120:07: info: dynamic accessibility check proved (Trivial), in instantiation at example_untagged_obj.adb:10
pointers_with_aliasing.ads:126:27: info: pointer dereference check proved (CVC4: 1 VC), in instantiation at example_recursive.adb:20
pointers_with_aliasing.ads:126:27: info: pointer dereference check proved (CVC4: 1 VC), in instantiation at example_tagged_obj.adb:18
pointers_with_aliasing.ads:126:27: info: pointer dereference check proved (CVC4: 1 VC), in instantiation at example_untagged_obj.adb:10
