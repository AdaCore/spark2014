example_recursive.adb:16:26: info: postcondition proved (CVC4: 2 VC)
example_recursive.adb:16:40: info: predicate check proved (Trivial: 1 VC)
example_recursive.adb:16:55: info: predicate check proved (Trivial: 1 VC)
example_recursive.adb:39:43: info: predicate check proved (Trivial: 1 VC)
example_recursive.adb:42:17: info: postcondition is stronger than class-wide postcondition (CVC4: 2 VC)
example_recursive.adb:43:18: medium: postcondition might fail, cannot prove "="'Result = (Witness (O1) = Witness (O2))
example_recursive.adb:43:32: info: predicate check proved (Trivial: 1 VC)
example_recursive.adb:43:47: info: predicate check proved (Trivial: 1 VC)
example_recursive.adb:51:13: info: assertion proved (CVC4: 1 VC; Trivial: 1 VC)
example_recursive.adb:51:16: info: predicate check proved (Trivial: 1 VC)
example_recursive.adb:51:31: info: predicate check proved (Trivial: 1 VC)
example_recursive.adb:68:18: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:69:18: info: subprogram variant proved (CVC4: 1 VC)
example_recursive.adb:69:47: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:69:47: info: tag check proved (CVC4: 1 VC)
example_recursive.adb:69:65: info: range check proved (CVC4: 2 VC)
example_recursive.adb:71:06: info: data dependencies proved
example_recursive.adb:80:06: info: data dependencies proved
example_recursive.adb:82:14: info: postcondition proved (CVC4: 1 VC)
example_recursive.adb:88:10: info: precondition proved (CVC4: 10 VC)
example_recursive.adb:88:10: info: subprogram variant proved (CVC4: 1 VC)
example_recursive.adb:88:53: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:88:53: info: tag check proved (CVC4: 1 VC)
example_recursive.adb:88:72: info: range check proved (CVC4: 2 VC)
example_recursive.adb:88:80: info: range check proved (CVC4: 2 VC)
example_recursive.adb:94:09: info: data dependencies proved
example_recursive.adb:100:18: info: precondition proved (CVC4: 5 VC)
example_recursive.adb:100:18: info: subprogram variant proved (CVC4: 1 VC)
example_recursive.adb:100:46: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:100:46: info: tag check proved (CVC4: 1 VC)
example_recursive.adb:100:64: info: range check proved (CVC4: 2 VC)
example_recursive.adb:102:06: info: data dependencies proved
example_recursive.adb:112:06: info: data dependencies proved
example_recursive.adb:114:15: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:115:15: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:116:14: info: postcondition proved (CVC4: 1 VC)
example_recursive.adb:116:14: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:122:10: info: precondition proved (CVC4: 2 VC)
example_recursive.adb:125:10: info: precondition proved (CVC4: 4 VC)
example_recursive.adb:125:10: info: subprogram variant proved (CVC4: 1 VC)
example_recursive.adb:125:51: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:125:51: info: tag check proved (CVC4: 1 VC)
example_recursive.adb:125:78: info: range check proved (CVC4: 1 VC)
example_recursive.adb:134:06: info: data dependencies proved
example_recursive.adb:136:16: info: precondition proved (Trivial: 1 VC)
example_recursive.adb:137:22: info: precondition proved (CVC4: 5 VC)
example_recursive.adb:138:47: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:138:61: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:139:14: info: postcondition proved (CVC4: 5 VC)
example_recursive.adb:145:10: info: subprogram variant proved (CVC4: 1 VC)
example_recursive.adb:145:10: medium: precondition might fail, cannot prove Get (M1, A) = Get (M2, A)
example_recursive.adb:145:50: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:145:50: info: tag check proved (CVC4: 1 VC)
example_recursive.adb:145:69: info: range check proved (CVC4: 2 VC)
example_recursive.adb:154:06: info: data dependencies proved
example_recursive.adb:156:16: info: precondition proved (Trivial: 1 VC)
example_recursive.adb:157:22: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:158:47: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:158:61: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:159:14: info: postcondition proved (CVC4: 2 VC)
example_recursive.adb:159:44: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:159:70: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:163:10: info: subprogram variant proved (CVC4: 1 VC)
example_recursive.adb:163:10: medium: precondition might fail, cannot prove Get (M1, A) = Get (M2, A)
example_recursive.adb:163:50: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:163:50: info: tag check proved (CVC4: 1 VC)
example_recursive.adb:163:69: info: range check proved (CVC4: 1 VC)
example_recursive.adb:165:07: info: precondition proved (CVC4: 2 VC; Trivial: 1 VC; Z3: 1 VC)
example_recursive.adb:173:06: info: data dependencies proved
example_recursive.adb:175:15: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:176:19: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:181:15: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:182:32: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:182:32: info: tag check proved (CVC4: 1 VC)
example_recursive.adb:183:28: info: overflow check proved (CVC4: 1 VC)
example_recursive.adb:184:14: medium: postcondition might fail
example_recursive.adb:184:33: info: overflow check proved (CVC4: 1 VC)
example_recursive.adb:188:10: info: precondition proved (CVC4: 3 VC; Trivial: 1 VC)
example_recursive.adb:190:10: info: precondition proved (CVC4: 11 VC)
example_recursive.adb:190:10: info: subprogram variant proved (CVC4: 1 VC)
example_recursive.adb:190:47: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:190:47: info: tag check proved (CVC4: 1 VC)
example_recursive.adb:190:75: info: range check proved (CVC4: 1 VC)
example_recursive.adb:191:25: info: assertion proved (CVC4: 1 VC)
example_recursive.adb:191:44: info: overflow check proved (CVC4: 1 VC)
example_recursive.adb:201:06: info: data dependencies proved
example_recursive.adb:203:15: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:204:19: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:209:15: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:210:32: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:210:32: info: tag check proved (CVC4: 1 VC)
example_recursive.adb:211:28: info: overflow check proved (CVC4: 1 VC)
example_recursive.adb:212:44: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:212:44: medium: postcondition might fail, cannot prove Reachable (L1, N1 + N2, A, M2) = (Reachable (L1, N1, A, M1) or Reachable (L2, N2, A, M1))
example_recursive.adb:212:62: info: overflow check proved (CVC4: 1 VC)
example_recursive.adb:213:16: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:213:45: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:217:10: info: precondition proved (CVC4: 3 VC; Trivial: 1 VC)
example_recursive.adb:219:10: info: precondition proved (CVC4: 11 VC)
example_recursive.adb:219:10: info: subprogram variant proved (CVC4: 1 VC)
example_recursive.adb:219:47: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:219:47: info: tag check proved (CVC4: 1 VC)
example_recursive.adb:219:75: info: range check proved (CVC4: 1 VC)
example_recursive.adb:221:07: info: precondition proved (CVC4: 11 VC)
example_recursive.adb:225:07: info: precondition proved (Trivial: 1 VC)
example_recursive.adb:226:13: info: precondition proved (CVC4: 5 VC)
example_recursive.adb:227:19: info: precondition proved (CVC4: 5 VC)
example_recursive.adb:228:09: info: data dependencies proved
example_recursive.adb:233:33: info: precondition proved (CVC4: 5 VC)
example_recursive.adb:240:07: info: precondition proved (CVC4: 5 VC)
example_recursive.adb:249:06: info: data dependencies proved
example_recursive.adb:253:15: info: precondition proved (CVC4: 2 VC)
example_recursive.adb:255:28: info: overflow check proved (CVC4: 1 VC)
example_recursive.adb:260:41: info: overflow check proved (CVC4: 1 VC)
example_recursive.adb:262:45: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:262:45: medium: postcondition might fail, cannot prove Reachable (Address (L1.Values), L1.Length, A, Memory) = (Reachable (Address (L1.Values)'Old, L1.Length'Old, A, Memory'Old) or Reachable (Address (L2.Values), L2.Length, A, Memory'old))
example_recursive.adb:263:19: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:264:22: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:269:43: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:283:39: info: loop invariant initialization proved (CVC4: 1 VC)
example_recursive.adb:283:39: info: loop invariant preservation proved (CVC4: 1 VC)
example_recursive.adb:284:39: info: loop invariant initialization proved (CVC4: 1 VC)
example_recursive.adb:284:39: info: loop invariant preservation proved (CVC4: 1 VC)
example_recursive.adb:285:39: info: loop invariant initialization proved (CVC4: 1 VC)
example_recursive.adb:285:39: info: loop invariant preservation proved (CVC4: 1 VC)
example_recursive.adb:285:39: info: precondition proved (CVC4: 2 VC)
example_recursive.adb:286:27: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:286:27: info: tag check proved (CVC4: 1 VC)
example_recursive.adb:288:54: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:288:54: info: tag check proved (CVC4: 1 VC)
example_recursive.adb:290:22: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:291:22: info: precondition proved (CVC4: 11 VC)
example_recursive.adb:292:22: info: precondition proved (CVC4: 11 VC)
example_recursive.adb:293:45: info: overflow check proved (CVC4: 1 VC)
example_recursive.adb:297:16: info: precondition proved (CVC4: 4 VC)
example_recursive.adb:297:91: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:297:91: info: tag check proved (CVC4: 1 VC)
example_recursive.adb:298:29: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:298:29: info: tag check proved (CVC4: 1 VC)
example_recursive.adb:299:27: info: range check proved (CVC4: 1 VC)
example_recursive.adb:306:47: info: initialization of "L" proved
example_recursive.adb:307:14: info: postcondition proved (CVC4: 10 VC; Trivial: 6 VC)
example_recursive.adb:307:31: info: range check proved (CVC4: 2 VC)
example_recursive.adb:309:41: info: precondition proved (CVC4: 1 VC)
example_recursive.adb:313:07: info: initialization of "M" proved
example_recursive.adb:319:10: info: precondition proved (CVC4: 14 VC; Trivial: 2 VC)
example_recursive.adb:320:30: info: precondition proved (CVC4: 2 VC)
example_recursive.adb:320:30: info: tag check proved (CVC4: 2 VC)
example_recursive.adb:320:64: info: overflow check proved (CVC4: 4 VC)
example_recursive.adb:320:64: info: range check proved (CVC4: 4 VC)
example_recursive.adb:321:10: info: precondition proved (CVC4: 14 VC; Trivial: 2 VC)
example_recursive.adb:322:30: info: precondition proved (CVC4: 2 VC)
example_recursive.adb:322:30: info: tag check proved (CVC4: 2 VC)
example_recursive.adb:322:64: info: overflow check proved (CVC4: 4 VC)
example_recursive.adb:322:64: info: range check proved (CVC4: 4 VC)
example_recursive.adb:324:13: info: loop invariant initialization proved (CVC4: 5 VC)
example_recursive.adb:324:13: info: loop invariant preservation proved (CVC4: 5 VC)
example_recursive.adb:324:57: info: overflow check proved (CVC4: 4 VC)
example_recursive.adb:324:61: info: overflow check proved (CVC4: 4 VC)
example_recursive.adb:324:61: info: range check proved (CVC4: 4 VC)
example_recursive.adb:326:13: info: loop invariant initialization proved (CVC4: 3 VC; Trivial: 2 VC)
example_recursive.adb:326:13: info: loop invariant preservation proved (CVC4: 3 VC; Trivial: 2 VC)
example_recursive.adb:327:13: info: precondition proved (CVC4: 10 VC)
example_recursive.adb:327:66: info: overflow check proved (CVC4: 4 VC)
example_recursive.adb:327:70: info: overflow check proved (CVC4: 4 VC)
example_recursive.adb:327:70: info: range check proved (CVC4: 4 VC)
example_recursive.adb:329:13: info: loop invariant initialization proved (CVC4: 3 VC; Trivial: 2 VC)
example_recursive.adb:329:13: info: loop invariant preservation proved (CVC4: 3 VC; Trivial: 2 VC)
example_recursive.adb:331:13: info: loop invariant initialization proved (CVC4: 2 VC; Trivial: 2 VC)
example_recursive.adb:331:13: info: loop invariant preservation proved (CVC4: 2 VC; Trivial: 2 VC)
example_recursive.adb:333:25: info: range check proved (CVC4: 2 VC)
example_recursive.adb:336:04: info: initialization of "L1" proved
example_recursive.adb:337:04: info: initialization of "L2" proved
example_recursive.adb:341:04: medium: precondition might fail, cannot prove Valid_List (L1)
example_tagged_obj.adb:14:26: info: postcondition proved (CVC4: 2 VC)
example_tagged_obj.adb:14:26: info: postcondition proved (CVC4: 2 VC), in inherited contract at example_tagged_obj.adb:32
example_tagged_obj.adb:14:40: info: predicate check proved (Trivial: 1 VC)
example_tagged_obj.adb:14:55: info: predicate check proved (Trivial: 1 VC)
example_tagged_obj.adb:31:33: info: predicate check proved (Trivial: 1 VC)
example_tagged_obj.adb:37:04: info: initialization of "X1" proved
example_tagged_obj.adb:38:04: info: initialization of "X2" proved
example_tagged_obj.adb:39:04: info: initialization of "X3" proved
example_tagged_obj.adb:40:04: info: initialization of "X1_B" proved
example_tagged_obj.adb:43:14: info: postcondition proved (CVC4: 2 VC)
example_tagged_obj.adb:53:14: info: postcondition proved (CVC4: 10 VC; Trivial: 6 VC)
example_tagged_obj.adb:53:14: info: precondition proved (CVC4: 1 VC)
example_tagged_obj.adb:53:26: info: precondition proved (CVC4: 1 VC)
example_tagged_obj.adb:53:44: info: precondition proved (CVC4: 1 VC)
example_tagged_obj.adb:53:56: info: precondition proved (CVC4: 1 VC)
example_tagged_obj.adb:58:38: info: precondition proved (CVC4: 1 VC)
example_tagged_obj.adb:60:07: info: precondition proved (CVC4: 1 VC)
example_tagged_obj.adb:60:18: info: precondition proved (CVC4: 1 VC)
example_tagged_obj.adb:61:07: info: precondition proved (CVC4: 1 VC)
example_tagged_obj.adb:67:50: info: precondition proved (CVC4: 1 VC)
example_tagged_obj.adb:70:09: info: postcondition proved (CVC4: 10 VC; Trivial: 6 VC)
example_tagged_obj.adb:70:09: info: precondition proved (CVC4: 1 VC)
example_tagged_obj.adb:70:39: info: precondition proved (CVC4: 1 VC)
example_tagged_obj.adb:70:39: info: tag check proved (CVC4: 1 VC)
example_tagged_obj.adb:70:67: info: precondition proved (CVC4: 1 VC)
example_tagged_obj.adb:70:67: info: tag check proved (CVC4: 1 VC)
example_tagged_obj.adb:76:43: info: precondition proved (CVC4: 1 VC)
example_tagged_obj.adb:76:54: info: null exclusion check proved (CVC4: 1 VC)
example_tagged_obj.adb:78:07: info: tag check proved (CVC4: 1 VC)
example_tagged_obj.adb:78:24: info: pointer dereference check proved (CVC4: 1 VC)
example_tagged_obj.adb:86:19: info: assertion proved (CVC4: 1 VC)
example_tagged_obj.adb:86:26: info: precondition proved (CVC4: 1 VC)
example_tagged_obj.adb:86:26: info: tag check proved (CVC4: 1 VC)
example_tagged_obj.adb:88:04: info: precondition proved (CVC4: 2 VC)
example_tagged_obj.adb:89:19: info: assertion proved (CVC4: 1 VC)
example_tagged_obj.adb:89:26: info: precondition proved (CVC4: 1 VC)
example_tagged_obj.adb:89:26: info: tag check proved (CVC4: 1 VC)
example_tagged_obj.adb:90:19: info: assertion proved (CVC4: 1 VC)
example_tagged_obj.adb:90:26: info: precondition proved (CVC4: 1 VC)
example_tagged_obj.adb:90:26: info: tag check proved (CVC4: 1 VC)
example_tagged_obj.adb:91:19: info: assertion proved (CVC4: 1 VC)
example_tagged_obj.adb:91:26: info: precondition proved (CVC4: 1 VC)
example_tagged_obj.adb:91:26: info: tag check proved (CVC4: 1 VC)
example_tagged_obj.adb:92:19: info: assertion proved (CVC4: 1 VC)
example_tagged_obj.adb:92:26: info: precondition proved (CVC4: 1 VC)
example_tagged_obj.adb:92:26: info: tag check proved (CVC4: 1 VC)
example_tagged_obj.adb:93:04: info: precondition proved (CVC4: 2 VC)
example_tagged_obj.adb:94:19: info: assertion proved (CVC4: 1 VC)
example_tagged_obj.adb:94:26: info: precondition proved (CVC4: 1 VC)
example_tagged_obj.adb:94:26: info: tag check proved (CVC4: 1 VC)
example_tagged_obj.adb:95:19: info: assertion proved (CVC4: 1 VC)
example_tagged_obj.adb:95:26: info: precondition proved (CVC4: 1 VC)
example_tagged_obj.adb:95:26: info: tag check proved (CVC4: 1 VC)
example_untagged_obj.adb:15:04: info: initialization of "X1" proved
example_untagged_obj.adb:16:04: info: initialization of "X2" proved
example_untagged_obj.adb:17:04: info: initialization of "X3" proved
example_untagged_obj.adb:18:04: info: initialization of "X1_B" proved
example_untagged_obj.adb:21:14: info: postcondition proved (CVC4: 2 VC)
example_untagged_obj.adb:31:14: info: postcondition proved (CVC4: 9 VC; Trivial: 5 VC)
example_untagged_obj.adb:31:14: info: precondition proved (CVC4: 1 VC)
example_untagged_obj.adb:31:26: info: precondition proved (CVC4: 1 VC)
example_untagged_obj.adb:31:44: info: precondition proved (CVC4: 1 VC)
example_untagged_obj.adb:31:56: info: precondition proved (CVC4: 1 VC)
example_untagged_obj.adb:36:32: info: precondition proved (CVC4: 1 VC)
example_untagged_obj.adb:38:07: info: precondition proved (CVC4: 1 VC)
example_untagged_obj.adb:38:18: info: precondition proved (CVC4: 1 VC)
example_untagged_obj.adb:39:07: info: precondition proved (CVC4: 1 VC)
example_untagged_obj.adb:44:14: info: postcondition proved (CVC4: 8 VC; Trivial: 5 VC)
example_untagged_obj.adb:44:14: info: precondition proved (CVC4: 1 VC)
example_untagged_obj.adb:44:27: info: precondition proved (CVC4: 1 VC)
example_untagged_obj.adb:50:37: info: precondition proved (CVC4: 1 VC)
example_untagged_obj.adb:50:48: info: null exclusion check proved (CVC4: 1 VC)
example_untagged_obj.adb:52:16: info: pointer dereference check proved (CVC4: 1 VC)
example_untagged_obj.adb:59:19: info: assertion proved (CVC4: 1 VC)
example_untagged_obj.adb:59:19: info: precondition proved (CVC4: 1 VC)
example_untagged_obj.adb:61:04: info: precondition proved (CVC4: 2 VC)
example_untagged_obj.adb:62:19: info: assertion proved (CVC4: 1 VC)
example_untagged_obj.adb:62:19: info: precondition proved (CVC4: 1 VC)
example_untagged_obj.adb:63:19: info: assertion proved (CVC4: 1 VC)
example_untagged_obj.adb:63:19: info: precondition proved (CVC4: 1 VC)
example_untagged_obj.adb:64:19: info: assertion proved (CVC4: 1 VC)
example_untagged_obj.adb:64:19: info: precondition proved (CVC4: 1 VC)
example_untagged_obj.adb:65:19: info: assertion proved (CVC4: 1 VC)
example_untagged_obj.adb:65:19: info: precondition proved (CVC4: 1 VC)
example_untagged_obj.adb:66:04: info: precondition proved (CVC4: 1 VC)
example_untagged_obj.adb:67:19: info: assertion proved (CVC4: 1 VC)
example_untagged_obj.adb:67:19: info: precondition proved (CVC4: 1 VC)
example_untagged_obj.adb:68:19: info: assertion proved (CVC4: 1 VC)
example_untagged_obj.adb:68:19: info: precondition proved (CVC4: 1 VC)
pointers_with_aliasing.ads:15:13: info: subprogram "Check_No_Deep_Objects" will terminate, terminating annotation has been proved, in instantiation at example_recursive.adb:20
pointers_with_aliasing.ads:15:13: info: subprogram "Check_No_Deep_Objects" will terminate, terminating annotation has been proved, in instantiation at example_tagged_obj.adb:18
pointers_with_aliasing.ads:15:13: info: subprogram "Check_No_Deep_Objects" will terminate, terminating annotation has been proved, in instantiation at example_untagged_obj.adb:10
pointers_with_aliasing.ads:36:16: info: subprogram "None" will terminate, terminating annotation has been proved, in instantiation at example_recursive.adb:20
pointers_with_aliasing.ads:36:16: info: subprogram "None" will terminate, terminating annotation has been proved, in instantiation at example_tagged_obj.adb:18
pointers_with_aliasing.ads:36:16: info: subprogram "None" will terminate, terminating annotation has been proved, in instantiation at example_untagged_obj.adb:10
pointers_with_aliasing.ads:39:16: info: subprogram "Only" will terminate, terminating annotation has been proved, in instantiation at example_recursive.adb:20
pointers_with_aliasing.ads:39:16: info: subprogram "Only" will terminate, terminating annotation has been proved, in instantiation at example_tagged_obj.adb:18
pointers_with_aliasing.ads:39:16: info: subprogram "Only" will terminate, terminating annotation has been proved, in instantiation at example_untagged_obj.adb:10
pointers_with_aliasing.ads:43:16: info: subprogram "Writes" will terminate, terminating annotation has been proved, in instantiation at example_recursive.adb:20
pointers_with_aliasing.ads:43:16: info: subprogram "Writes" will terminate, terminating annotation has been proved, in instantiation at example_tagged_obj.adb:18
pointers_with_aliasing.ads:43:16: info: subprogram "Writes" will terminate, terminating annotation has been proved, in instantiation at example_untagged_obj.adb:10
pointers_with_aliasing.ads:48:18: info: precondition proved (CVC4: 1 VC), in instantiation at example_recursive.adb:20
pointers_with_aliasing.ads:48:18: info: precondition proved (CVC4: 1 VC), in instantiation at example_tagged_obj.adb:18
pointers_with_aliasing.ads:48:18: info: precondition proved (CVC4: 1 VC), in instantiation at example_untagged_obj.adb:10
pointers_with_aliasing.ads:48:32: info: precondition proved (CVC4: 1 VC), in instantiation at example_recursive.adb:20
pointers_with_aliasing.ads:48:32: info: precondition proved (CVC4: 1 VC), in instantiation at example_tagged_obj.adb:18
pointers_with_aliasing.ads:48:32: info: precondition proved (CVC4: 1 VC), in instantiation at example_untagged_obj.adb:10
pointers_with_aliasing.ads:51:16: info: subprogram "Allocates" will terminate, terminating annotation has been proved, in instantiation at example_recursive.adb:20
pointers_with_aliasing.ads:51:16: info: subprogram "Allocates" will terminate, terminating annotation has been proved, in instantiation at example_tagged_obj.adb:18
pointers_with_aliasing.ads:51:16: info: subprogram "Allocates" will terminate, terminating annotation has been proved, in instantiation at example_untagged_obj.adb:10
pointers_with_aliasing.ads:60:16: info: subprogram "Deallocates" will terminate, terminating annotation has been proved, in instantiation at example_recursive.adb:20
pointers_with_aliasing.ads:60:16: info: subprogram "Deallocates" will terminate, terminating annotation has been proved, in instantiation at example_tagged_obj.adb:18
pointers_with_aliasing.ads:60:16: info: subprogram "Deallocates" will terminate, terminating annotation has been proved, in instantiation at example_untagged_obj.adb:10
pointers_with_aliasing.ads:72:04: info: initialization of "Memory" proved, in instantiation at example_recursive.adb:20
pointers_with_aliasing.ads:72:04: info: initialization of "Memory" proved, in instantiation at example_tagged_obj.adb:18
pointers_with_aliasing.ads:72:04: info: initialization of "Memory" proved, in instantiation at example_untagged_obj.adb:10
pointers_with_aliasing.ads:132:13: info: subprogram "At_End" will terminate, terminating annotation has been proved, in instantiation at example_recursive.adb:20
pointers_with_aliasing.ads:132:13: info: subprogram "At_End" will terminate, terminating annotation has been proved, in instantiation at example_tagged_obj.adb:18
pointers_with_aliasing.ads:132:13: info: subprogram "At_End" will terminate, terminating annotation has been proved, in instantiation at example_untagged_obj.adb:10
pointers_with_aliasing.ads:133:07: info: dynamic accessibility check proved (Trivial), in instantiation at example_recursive.adb:20
pointers_with_aliasing.ads:133:07: info: dynamic accessibility check proved (Trivial), in instantiation at example_tagged_obj.adb:18
pointers_with_aliasing.ads:133:07: info: dynamic accessibility check proved (Trivial), in instantiation at example_untagged_obj.adb:10
pointers_with_aliasing.ads:137:13: info: subprogram "At_End" will terminate, terminating annotation has been proved, in instantiation at example_recursive.adb:20
pointers_with_aliasing.ads:137:13: info: subprogram "At_End" will terminate, terminating annotation has been proved, in instantiation at example_tagged_obj.adb:18
pointers_with_aliasing.ads:137:13: info: subprogram "At_End" will terminate, terminating annotation has been proved, in instantiation at example_untagged_obj.adb:10
pointers_with_aliasing.ads:138:07: info: dynamic accessibility check proved (Trivial), in instantiation at example_recursive.adb:20
pointers_with_aliasing.ads:138:07: info: dynamic accessibility check proved (Trivial), in instantiation at example_tagged_obj.adb:18
pointers_with_aliasing.ads:138:07: info: dynamic accessibility check proved (Trivial), in instantiation at example_untagged_obj.adb:10
pointers_with_aliasing.ads:144:28: info: pointer dereference check proved (CVC4: 1 VC), in instantiation at example_recursive.adb:20
pointers_with_aliasing.ads:144:28: info: pointer dereference check proved (CVC4: 1 VC), in instantiation at example_tagged_obj.adb:18
pointers_with_aliasing.ads:144:28: info: pointer dereference check proved (CVC4: 1 VC), in instantiation at example_untagged_obj.adb:10
