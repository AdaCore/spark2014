aggs.ads:8:28: info: in default value of box association at aggs.adb:7
aggs.ads:8:28: info: range check proved (CVC5: 2 VC)
aggs.ads:23:21: info: initialization of "X" proved
aggs.ads:24:11: info: flow dependencies proved
aggs.ads:25:22: info: postcondition proved (CVC5: 1 VC)
aggs.ads:27:21: info: initialization of "X" proved
aggs.ads:28:11: info: flow dependencies proved
aggs.ads:29:22: info: postcondition proved (CVC5: 1 VC)
aggs.ads:31:21: info: initialization of "X" proved
aggs.ads:32:11: info: flow dependencies proved
aggs.ads:34:21: info: initialization of "X" proved
aggs.ads:35:11: info: flow dependencies proved
aggs.ads:36:22: info: postcondition proved (CVC5: 1 VC)
aggs.ads:40:28: info: in default value of box association at aggs.adb:19
aggs.ads:40:28: info: in default value of private type at aggs.ads:10
aggs.ads:40:28: info: range check proved (CVC5: 2 VC)
aggs.ads:40:28: info: range check proved (CVC5: 2 VC)
dynval.adb:1:11: warning: subprogram "Dynval" has no effect
dynval.adb:4:12: info: range check proved (CVC5: 2 VC)
dynval.adb:5:61: high: in default value at dynval.adb:6
dynval.adb:5:61: high: range check might fail, cannot prove lower bound for 5 (e.g. when L = 6 and U = 6) [reason for check: default component value must fit in the component type]
dynval.adb:5:61: medium: range check might fail, cannot prove lower bound for 5 [reason for check: default component value must fit in the component type]
dynval.adb:8:06: info: length check proved (CVC5: 3 VC; Trivial: 1 VC)
dynval.adb:8:10: info: index check proved (CVC5: 2 VC)
