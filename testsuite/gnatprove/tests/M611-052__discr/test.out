a-cofove.ads:596:57: info: range check proved (CVC4: 1 VC), in instantiation at list.ads:8
a-cofove.ads:724:23: info: precondition proved (CVC4: 1 VC), in instantiation at list.ads:8
a-cofove.ads:727:38: info: range check proved (CVC4: 1 VC), in instantiation at list.ads:8
a-cofove.ads:760:14: info: precondition proved (CVC4: 1 VC), in instantiation at list.ads:8
a-cofove.ads:764:35: info: range check proved (CVC4: 1 VC), in instantiation at list.ads:8
a-cofuve.ads:230:54: info: overflow check proved (CVC4: 1 VC), in instantiation at a-cofove.ads:96, in instantiation at list.ads:8
a-cofuve.ads:235:63: info: range check proved (CVC4: 1 VC), in instantiation at a-cofove.ads:96, in instantiation at list.ads:8
a-cofuve.ads:236:59: info: overflow check proved (CVC4: 1 VC), in instantiation at a-cofove.ads:96, in instantiation at list.ads:8
a-cofuve.ads:236:76: info: overflow check proved (CVC4: 1 VC), in instantiation at a-cofove.ads:96, in instantiation at list.ads:8
a-cofuve.ads:237:30: info: range check proved (CVC4: 1 VC), in instantiation at a-cofove.ads:96, in instantiation at list.ads:8
a-cofuve.ads:298:52: info: overflow check proved (CVC4: 1 VC), in instantiation at a-cofove.ads:96, in instantiation at list.ads:8
list.adb:12:26: info: range check proved (CVC4: 1 VC)
list.adb:14:07: info: initialization of private part of "Res" proved
list.adb:14:14: info: initialization of private part of "Res" proved
list.adb:16:10: medium: precondition might fail (e.g. when S = (Top => 1, Content => (others => 1), others => ?) and S.Content'First = 1 and S.Content'Last = 1)
list.adb:16:16: medium: private part of "S" might not be initialized
list.adb:16:19: info: precondition proved (CVC4: 2 VC)
list.adb:16:31: info: range check proved (CVC4: 1 VC)
list.adb:20:10: medium: precondition might fail
list.adb:20:18: info: initialization of private part of "Res" proved
list.adb:20:23: medium: precondition might fail (e.g. when S = (Top => 0, Content => (others => 1), others => ?) and S.Content'First = 1 and S.Content'Last = 1)
list.adb:20:28: medium: private part of "S" might not be initialized
list.adb:21:10: medium: precondition might fail (e.g. when S = (Top => 0, Content => (others => 1), others => ?) and S.Content'First = 1 and S.Content'Last = 1)
list.adb:21:15: medium: private part of "S" might not be initialized
list.adb:22:33: info: loop invariant initialization proved (CVC4: 1 VC)
list.adb:22:54: medium: loop invariant might fail after first iteration, cannot prove Element (Res, J) = Element (L, Last_Index (L) - J + 1) (e.g. when I = 100 and J = 100)
list.adb:22:54: medium: precondition might fail
list.adb:22:63: info: initialization of private part of "Res" proved
list.adb:22:68: info: range check proved (CVC4: 1 VC)
list.adb:22:73: info: precondition proved (CVC4: 2 VC)
list.adb:22:104: info: range check proved (CVC4: 1 VC)
list.ads:9:38: info: range check proved (CVC4: 1 VC)
list.ads:12:14: info: postcondition proved (Z3: 1 VC)
list.ads:13:17: info: precondition proved (CVC4: 2 VC)
list.ads:13:29: info: range check proved (CVC4: 1 VC)
list.ads:13:34: medium: precondition might fail
list.ads:13:79: info: overflow check proved (CVC4: 1 VC)
list.ads:13:83: info: overflow check proved (CVC4: 1 VC)
list.ads:13:83: info: range check proved (CVC4: 1 VC)
stack.adb:4:47: info: range check proved (CVC4: 1 VC)
stack.adb:4:47: medium: range check might fail (e.g. when S = (N => 0, Top => 1, Content => (others => 0)) and S.Content'First = 1 and S.Content'Last = 0)
stack.adb:5:55: info: range check proved (CVC4: 1 VC)
stack.adb:5:55: medium: range check might fail (e.g. when S = (N => 0, Top => 2, Content => (others => 0)) and S.Content'First = 1 and S.Content'Last = 0)
stack.adb:20:22: info: range check proved (CVC4: 1 VC)
stack.adb:21:19: info: index check proved (CVC4: 2 VC)
stack.adb:32:22: info: range check proved (CVC4: 1 VC)
stack.ads:23:14: info: precondition proved (CVC4: 1 VC)
stack.ads:23:14: medium: postcondition might fail, cannot prove Top (S) = X (e.g. when S = (Top => 1, Content => (others => 0), others => ?) and S.Content'First = 1 and S.Content'Last = 1 and X = 0)
stack.ads:27:14: info: postcondition proved (CVC4: 1 VC)
stack.ads:37:07: info: range check proved (CVC4: 2 VC)
