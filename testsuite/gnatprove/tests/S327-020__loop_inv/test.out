lp.adb:19:11: info: index check proved (CVC5: 2 VC)
lp.adb:19:23: info: cannot unroll loop (too many loop iterations)
lp.adb:20:40: info: index check proved (CVC5: 2 VC)
lp.adb:21:22: info: index check proved (CVC5: 2 VC)
lp.adb:35:22: info: assertion proved (CVC5: 2 VC)
lp.adb:36:11: info: index check proved (CVC5: 2 VC; Z3: 2 VC)
lp.adb:37:33: info: loop invariant initialization proved (CVC5: 2 VC)
lp.adb:37:33: info: loop invariant preservation proved (CVC5: 2 VC)
lp.adb:38:33: info: loop invariant initialization proved (CVC5: 2 VC)
lp.adb:38:33: info: loop invariant preservation proved (CVC5: 2 VC)
lp.adb:38:38: info: index check proved (CVC5: 2 VC; Z3: 2 VC)
lp.adb:39:37: medium: overflow check might fail, cannot prove upper bound for 2 ** P [reason for check: result of exponentiation must fit in a 128-bits machine integer]
lp.adb:39:37: medium: range check might fail [reason for check: result of exponentiation must be convertible to the target type of the conversion]
lp.adb:39:40: info: index check proved (CVC5: 2 VC)
lp.adb:40:22: info: index check proved (CVC5: 2 VC)
lp.adb:54:22: info: assertion proved (CVC5: 2 VC)
lp.adb:54:51: medium: overflow check might fail, cannot prove upper bound for 2 ** K [reason for check: result of exponentiation must fit in a 128-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit Ada.Numerics.Big_Numerics.Big_Integers]
lp.adb:54:51: medium: range check might fail [reason for check: result of exponentiation must be convertible to the target type of the conversion]
lp.adb:55:11: info: index check proved (CVC5: 2 VC; Z3: 2 VC)
lp.adb:56:33: info: loop invariant initialization proved (CVC5: 2 VC)
lp.adb:56:33: info: loop invariant preservation proved (CVC5: 2 VC)
lp.adb:56:62: medium: overflow check might fail, cannot prove upper bound for 2 ** K [reason for check: result of exponentiation must fit in a 128-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit Ada.Numerics.Big_Numerics.Big_Integers]
lp.adb:56:62: medium: range check might fail [reason for check: result of exponentiation must be convertible to the target type of the conversion]
lp.adb:57:33: info: loop invariant initialization proved (CVC5: 2 VC)
lp.adb:57:33: info: loop invariant preservation proved (CVC5: 2 VC)
lp.adb:57:39: medium: overflow check might fail, cannot prove upper bound for 2 ** P [reason for check: result of exponentiation must fit in a 128-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit Ada.Numerics.Big_Numerics.Big_Integers]
lp.adb:57:39: medium: range check might fail [reason for check: result of exponentiation must be convertible to the target type of the conversion]
lp.adb:57:42: info: index check proved (CVC5: 2 VC; Z3: 2 VC)
lp.adb:58:37: medium: overflow check might fail, cannot prove upper bound for 2 ** P [reason for check: result of exponentiation must fit in a 128-bits machine integer]
lp.adb:58:37: medium: range check might fail [reason for check: result of exponentiation must be convertible to the target type of the conversion]
lp.adb:58:40: info: index check proved (CVC5: 2 VC)
lp.adb:59:22: info: index check proved (CVC5: 2 VC)
