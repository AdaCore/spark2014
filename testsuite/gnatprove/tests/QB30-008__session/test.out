== Number of root goals ==
  total: 1  proved: 0

== Number of sub goals ==
  total: 12  proved: 9

== Goals not proved ==
  +-- file [../add__addtwo.gnat-json]
    +-- theory Add__addtwo__subprogram_def
      +-- goal def'vc
        +-- transformation split_goal_wp_conj
          +-- goal def'vc.0
            +-- transformation introduce_premises
              +-- goal def'vc.0.0
          +-- goal def'vc.1
  
== Goals proved by only one prover ==
  +-- file [../add__addtwo.gnat-json]
    +-- theory Add__addtwo__subprogram_def
      +-- goal def'vc
        +-- transformation split_goal_wp_conj
          +-- goal def'vc.2: CVC5 0.0.7-gnatprove
          +-- goal def'vc.3: CVC5 0.0.7-gnatprove
          +-- goal def'vc.4: Trivial 1.0 (trivial)
          +-- goal def'vc.5: CVC5 0.0.7-gnatprove
          +-- goal def'vc.6: CVC5 0.0.7-gnatprove
          +-- goal def'vc.7: CVC5 0.0.7-gnatprove
          +-- goal def'vc.8: CVC5 0.0.7-gnatprove
          +-- goal def'vc.9: Trivial 1.0 (trivial)
          +-- goal def'vc.10: CVC5 0.0.7-gnatprove
  
== Statistics per prover: number of proofs, time (minimum/maximum/average) in seconds ==
  CVC5 0.0.7-gnatprove:   7   0.00   0.00   0.00
  Trivial 1.0 (trivial):   2   0.00   0.00   0.00
  
add.adb:5:16: info: overflow check proved (CVC5: 2 VC)
add.ads:2:13: info: implicit aspect Always_Terminates on "AddTwo" has been proved, subprogram will terminate
add.ads:3:47: high: overflow check might fail, cannot prove lower bound for X + Y (e.g. when X = Integer'First and Y = -1) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit SPARK.Big_Integers]
add.ads:3:62: info: overflow check proved (CVC5: 2 VC)
add.ads:4:29: info: postcondition proved (CVC5: 1 VC)
add.ads:4:47: info: overflow check proved (CVC5: 2 VC)
