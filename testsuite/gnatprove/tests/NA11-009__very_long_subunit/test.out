very_longs-divide.adb:15:12: info: range check proved (CVC4: 2 VC)
very_longs-divide.adb:19:12: info: range check proved (CVC4: 2 VC)
very_longs-divide.adb:26:04: info: initialization of "N" proved
very_longs-divide.adb:27:04: info: initialization of "M" proved
very_longs-divide.adb:28:04: info: initialization of "Shift_Distance" proved
very_longs-divide.adb:29:04: info: initialization of "U" proved
very_longs-divide.adb:29:48: medium: range check might fail, cannot prove upper bound for Dividend.Length + 1 (e.g. when Dividend = (Length => Digit_Index_Type'Last, Long_Digits => (others => 1)) and Dividend.Long_Digits'First = 1 and Dividend.Long_Digits'Last = 65536)
very_longs-divide.adb:30:04: info: initialization of "V" proved
very_longs-divide.adb:30:39: info: range check proved (CVC4: 2 VC)
very_longs-divide.adb:31:04: info: initialization of "Q_Hat" proved
very_longs-divide.adb:32:04: info: initialization of "Current_Borrow" proved
very_longs-divide.adb:42:27: info: unrolling loop
very_longs-divide.adb:52:30: info: initialization of "Result" proved
very_longs-divide.adb:54:08: info: flow dependencies proved
very_longs-divide.adb:58:07: info: initialization of "New_Overflow" proved
very_longs-divide.adb:59:07: info: initialization of "Overflow_Mask" proved
very_longs-divide.adb:61:26: info: length check proved (CVC4: 3 VC; Trivial: 1 VC)
very_longs-divide.adb:61:29: info: length check proved (CVC4: 3 VC; Trivial: 1 VC)
very_longs-divide.adb:63:41: info: cannot unroll loop (too many loop iterations)
very_longs-divide.adb:64:57: info: index check proved (CVC4: 2 VC)
very_longs-divide.adb:65:29: info: index check proved (CVC4: 2 VC)
very_longs-divide.adb:65:65: info: index check proved (CVC4: 2 VC)
very_longs-divide.adb:66:29: info: index check proved (CVC4: 2 VC)
very_longs-divide.adb:66:54: info: index check proved (CVC4: 2 VC)
very_longs-divide.adb:69:44: info: index check proved (CVC4: 2 VC)
very_longs-divide.adb:75:11: info: flow dependencies proved
very_longs-divide.adb:78:07: info: initialization of "New_Overflow" proved
very_longs-divide.adb:79:07: info: initialization of "Overflow_Mask" proved
very_longs-divide.adb:82:41: info: cannot unroll loop (too many loop iterations)
very_longs-divide.adb:83:57: info: index check proved (CVC4: 2 VC)
very_longs-divide.adb:84:29: info: index check proved (CVC4: 2 VC)
very_longs-divide.adb:84:65: info: index check proved (CVC4: 2 VC)
very_longs-divide.adb:85:29: info: index check proved (CVC4: 2 VC)
very_longs-divide.adb:85:54: info: index check proved (CVC4: 2 VC)
very_longs-divide.adb:93:11: info: flow dependencies proved
very_longs-divide.adb:96:07: info: initialization of "New_Overflow" proved
very_longs-divide.adb:97:07: info: initialization of "Overflow_Mask" proved
very_longs-divide.adb:100:49: info: cannot unroll loop (too many loop iterations)
very_longs-divide.adb:101:45: info: index check proved (CVC4: 2 VC)
very_longs-divide.adb:102:29: info: index check proved (CVC4: 2 VC)
very_longs-divide.adb:102:66: info: index check proved (CVC4: 2 VC)
very_longs-divide.adb:103:29: info: index check proved (CVC4: 2 VC)
very_longs-divide.adb:104:31: info: index check proved (CVC4: 2 VC)
very_longs-divide.adb:111:08: info: data dependencies proved
very_longs-divide.adb:111:49: info: initialization of "Q_Hat" proved
very_longs-divide.adb:112:08: info: flow dependencies proved
very_longs-divide.adb:113:28: info: overflow check proved (CVC4: 2 VC)
very_longs-divide.adb:115:07: info: initialization of "Temporary_Digit" proved
very_longs-divide.adb:116:07: info: initialization of "R_Hat" proved
very_longs-divide.adb:119:44: info: index check proved (CVC4: 2 VC)
very_longs-divide.adb:119:44: info: overflow check proved (CVC4: 2 VC)
very_longs-divide.adb:119:81: info: overflow check proved (CVC4: 2 VC)
very_longs-divide.adb:119:85: info: index check proved (CVC4: 2 VC)
very_longs-divide.adb:120:32: medium: divide by zero might fail (e.g. when N = 2 and V = (Length => ?, Long_Digits => (others => 0)) and V.Long_Digits'First = 1 and V.Long_Digits'Last = 2) [possible fix: precondition of subprogram at line 109 should mention V]
very_longs-divide.adb:120:61: info: index check proved (CVC4: 2 VC)
very_longs-divide.adb:123:32: medium: divide by zero might fail (e.g. when N = 2 and V = (Length => ?, Long_Digits => (others => 0)) and V.Long_Digits'First = 1 and V.Long_Digits'Last = 2) [possible fix: precondition of subprogram at line 109 should mention V]
very_longs-divide.adb:123:63: info: index check proved (CVC4: 2 VC)
very_longs-divide.adb:127:47: info: index check proved (CVC4: 2 VC)
very_longs-divide.adb:128:56: info: overflow check proved (CVC4: 2 VC)
very_longs-divide.adb:128:61: info: index check proved (CVC4: 2 VC)
very_longs-divide.adb:131:54: info: index check proved (CVC4: 2 VC)
very_longs-divide.adb:136:50: info: index check proved (CVC4: 2 VC)
very_longs-divide.adb:137:59: info: overflow check proved (CVC4: 2 VC)
very_longs-divide.adb:137:64: info: index check proved (CVC4: 2 VC)
very_longs-divide.adb:147:08: info: data dependencies proved
very_longs-divide.adb:147:53: info: initialization of "Current_Borrow" proved
very_longs-divide.adb:148:08: info: flow dependencies proved
very_longs-divide.adb:150:07: info: initialization of "Carry" proved
very_longs-divide.adb:151:07: info: initialization of "Product" proved
very_longs-divide.adb:152:07: info: initialization of "Temporary_Digit" proved
very_longs-divide.adb:153:07: info: initialization of "Future_Borrow" proved
very_longs-divide.adb:157:11: info: range check proved (CVC4: 2 VC)
very_longs-divide.adb:157:58: info: cannot unroll loop (dynamic loop bounds)
very_longs-divide.adb:158:56: info: index check proved (CVC4: 2 VC)
very_longs-divide.adb:162:43: info: overflow check proved (CVC4: 2 VC)
very_longs-divide.adb:162:59: medium: array index check might fail (e.g. when Divisor_Index = 1 and J = 3 and U = (Length => ?, Long_Digits => (others => 0)) and U.Long_Digits'First = 1 and U.Long_Digits'Last = 2) [reason for check: result of subtraction must be a valid index into the array] [possible fix: subprogram at line 145 should mention J in a precondition]
very_longs-divide.adb:169:26: info: overflow check proved (CVC4: 2 VC)
very_longs-divide.adb:169:42: info: index check proved (CVC4: 2 VC)
very_longs-divide.adb:170:49: info: overflow check proved (CVC4: 2 VC)
very_longs-divide.adb:170:65: info: index check proved (CVC4: 2 VC)
very_longs-divide.adb:170:108: info: range check proved (CVC4: 2 VC)
very_longs-divide.adb:175:39: info: overflow check proved (CVC4: 2 VC)
very_longs-divide.adb:175:39: medium: array index check might fail (e.g. when J = 1 and N = 2 and U = (Length => ?, Long_Digits => (others => 102)) and U.Long_Digits'First = 1 and U.Long_Digits'Last = 2) [reason for check: result of addition must be a valid index into the array] [possible fix: subprogram at line 145 should mention J and N in a precondition]
very_longs-divide.adb:180:23: info: index check proved (CVC4: 2 VC)
very_longs-divide.adb:180:23: info: overflow check proved (CVC4: 2 VC)
very_longs-divide.adb:181:46: info: index check proved (CVC4: 2 VC)
very_longs-divide.adb:181:46: info: overflow check proved (CVC4: 2 VC)
very_longs-divide.adb:181:79: info: range check proved (CVC4: 2 VC)
very_longs-divide.adb:187:08: info: data dependencies proved
very_longs-divide.adb:188:08: info: flow dependencies proved
very_longs-divide.adb:191:07: info: initialization of "Carry" proved
very_longs-divide.adb:192:07: info: initialization of "Sum" proved
very_longs-divide.adb:194:28: medium: array index check might fail (e.g. when J = 2 and Q_Hat = 0 and Quotient = (Length => ?, Long_Digits => (1 => 0)) and Quotient.Long_Digits'First = 1 and Quotient.Long_Digits'Last = 1) [reason for check: value must be a valid index into the array] [possible fix: subprogram at line 185 should mention J in a precondition]
very_longs-divide.adb:194:40: medium: range check might fail (e.g. when Q_Hat = 256) [reason for check: value must be convertible to the target type of the conversion] [possible fix: subprogram at line 185 should mention Q_Hat in a precondition]
very_longs-divide.adb:198:31: info: index check proved (CVC4: 2 VC)
very_longs-divide.adb:198:58: info: index check proved (CVC4: 2 VC)
very_longs-divide.adb:200:14: info: range check proved (CVC4: 2 VC)
very_longs-divide.adb:200:61: info: cannot unroll loop (dynamic loop bounds)
very_longs-divide.adb:201:49: info: overflow check proved (CVC4: 2 VC)
very_longs-divide.adb:201:65: medium: array index check might fail (e.g. when Divisor_Index = 1 and J = 3 and U = (Length => ?, Long_Digits => (others => 128)) and U.Long_Digits'First = 1 and U.Long_Digits'Last = 2) [reason for check: result of subtraction must be a valid index into the array] [possible fix: subprogram at line 185 should mention J in a precondition]
very_longs-divide.adb:202:47: info: index check proved (CVC4: 2 VC)
very_longs-divide.adb:203:29: info: overflow check proved (CVC4: 2 VC)
very_longs-divide.adb:203:45: info: index check proved (CVC4: 2 VC)
very_longs-divide.adb:206:26: info: index check proved (CVC4: 2 VC)
very_longs-divide.adb:206:26: info: overflow check proved (CVC4: 2 VC)
very_longs-divide.adb:206:50: info: overflow check proved (CVC4: 2 VC)
very_longs-divide.adb:206:50: medium: array index check might fail (e.g. when J = 1 and N = 2 and U = (Length => ?, Long_Digits => (1 => 128, 2 => 0)) and U.Long_Digits'First = 1 and U.Long_Digits'Last = 2) [reason for check: result of addition must be a valid index into the array] [possible fix: subprogram at line 185 should mention J and N in a precondition]
very_longs-divide.adb:211:26: info: length check proved (CVC4: 3 VC; Trivial: 1 VC)
very_longs-divide.adb:211:29: info: length check proved (CVC4: 3 VC; Trivial: 1 VC)
very_longs-divide.adb:212:26: info: length check proved (CVC4: 3 VC; Trivial: 1 VC)
very_longs-divide.adb:212:29: info: length check proved (CVC4: 3 VC; Trivial: 1 VC)
very_longs-divide.adb:215:09: medium: range check might fail, cannot prove upper bound for Number_Of_Digits(Divisor) (e.g. when Divisor = (Length => 1, Long_Digits => (1 => 0)) and Divisor.Long_Digits'First = 1 and Divisor.Long_Digits'Last = 1) [reason for check: value must fit in the target type of the assignment] [possible fix: you should consider adding a postcondition to function Number_Of_Digits or turning it into an expression function]
very_longs-divide.adb:216:25: info: range check proved (CVC4: 2 VC)
very_longs-divide.adb:219:22: info: precondition proved (CVC4: 1 VC)
very_longs-divide.adb:219:61: info: index check proved (CVC4: 2 VC)
very_longs-divide.adb:220:04: info: precondition proved (CVC4: 1 VC)
very_longs-divide.adb:221:09: info: discriminant check proved (CVC4: 1 VC)
very_longs-divide.adb:225:08: info: range check proved (CVC4: 2 VC)
very_longs-divide.adb:225:51: info: overflow check proved (CVC4: 2 VC)
very_longs-divide.adb:225:55: info: cannot unroll loop (too many loop iterations)
very_longs-divide.adb:227:07: info: precondition proved (CVC4: 2 VC)
very_longs-divide.adb:227:10: info: range check proved (CVC4: 2 VC)
very_longs-divide.adb:230:10: info: range check proved (CVC4: 2 VC)
very_longs-divide.adb:233:10: info: range check proved (CVC4: 2 VC)
very_longs-divide.adb:239:08: info: range check proved (CVC4: 2 VC)
very_longs-divide.adb:239:55: info: cannot unroll loop (dynamic loop bounds)
very_longs-divide.adb:240:29: info: index check proved (CVC4: 2 VC)
very_longs-divide.adb:240:61: info: index check proved (CVC4: 2 VC)
very_longs.adb:33:54: info: initialization of "Digit" proved
very_longs.adb:33:73: info: initialization of "Valid" proved
very_longs.adb:34:11: info: flow dependencies proved
very_longs.adb:50:28: info: initialization of "Result" proved
very_longs.adb:50:52: info: initialization of "Carry" proved
very_longs.adb:52:08: info: flow dependencies proved
very_longs.adb:55:07: info: initialization of "L_Digit" proved
very_longs.adb:56:07: info: initialization of "R_Digit" proved
very_longs.adb:57:07: info: initialization of "Sum" proved
very_longs.adb:59:26: info: length check proved (CVC4: 3 VC; Trivial: 1 VC)
very_longs.adb:59:29: info: length check proved (CVC4: 3 VC; Trivial: 1 VC)
very_longs.adb:61:36: info: cannot unroll loop (too many loop iterations)
very_longs.adb:62:48: info: index check proved (CVC4: 2 VC)
very_longs.adb:63:48: info: index check proved (CVC4: 2 VC)
very_longs.adb:66:29: info: index check proved (CVC4: 2 VC)
very_longs.adb:73:28: info: initialization of "Result" proved
very_longs.adb:73:52: info: initialization of "Borrow" proved
very_longs.adb:75:08: info: flow dependencies proved
very_longs.adb:78:07: info: initialization of "L_Digit" proved
very_longs.adb:79:07: info: initialization of "R_Digit" proved
very_longs.adb:80:07: info: initialization of "Difference" proved
very_longs.adb:82:26: info: length check proved (CVC4: 3 VC; Trivial: 1 VC)
very_longs.adb:82:29: info: length check proved (CVC4: 3 VC; Trivial: 1 VC)
very_longs.adb:84:36: info: cannot unroll loop (too many loop iterations)
very_longs.adb:85:51: info: index check proved (CVC4: 2 VC)
very_longs.adb:86:51: info: index check proved (CVC4: 2 VC)
very_longs.adb:93:29: info: index check proved (CVC4: 2 VC)
very_longs.adb:109:07: info: initialization of "Result" proved
very_longs.adb:109:26: info: range check proved (CVC4: 2 VC)
very_longs.adb:110:07: info: initialization of "Temp" proved
very_longs.adb:112:21: info: assertion proved (CVC4: 1 VC)
very_longs.adb:113:26: info: length check proved (CVC4: 3 VC; Trivial: 1 VC)
very_longs.adb:113:29: info: length check proved (CVC4: 3 VC; Trivial: 1 VC)
very_longs.adb:115:45: info: cannot unroll loop (too many loop iterations)
very_longs.adb:116:29: info: index check proved (CVC4: 2 VC)
very_longs.adb:116:50: info: division check proved (CVC4: 1 VC)
very_longs.adb:116:50: info: range check proved (CVC4: 1 VC)
very_longs.adb:117:23: info: division check proved (CVC4: 1 VC)
very_longs.adb:126:07: info: initialization of "Index" proved
very_longs.adb:127:07: info: initialization of "String_Index" proved
very_longs.adb:128:07: info: initialization of "H_Digit" proved
very_longs.adb:129:07: info: initialization of "L_Digit" proved
very_longs.adb:130:07: info: initialization of "H_Okay" proved
very_longs.adb:131:07: info: initialization of "L_Okay" proved
very_longs.adb:133:26: info: length check proved (CVC4: 3 VC; Trivial: 1 VC)
very_longs.adb:133:29: info: length check proved (CVC4: 3 VC; Trivial: 1 VC)
very_longs.adb:136:34: info: range check proved (CVC4: 2 VC)
very_longs.adb:137:29: info: range check proved (CVC4: 2 VC)
very_longs.adb:140:13: info: loop invariant initialization proved (CVC4: 1 VC)
very_longs.adb:140:13: info: loop invariant preservation proved (CVC4: 1 VC)
very_longs.adb:140:37: info: overflow check proved (CVC4: 4 VC)
very_longs.adb:140:37: info: range check proved (CVC4: 4 VC)
very_longs.adb:140:63: info: overflow check proved (CVC4: 4 VC)
very_longs.adb:140:73: info: overflow check proved (CVC4: 4 VC)
very_longs.adb:142:31: medium: array index check might fail (e.g. when Number = (others => 'NUL') and Number'First = 3 and Number'Last = 4 and String_Index = 1) [reason for check: value must be a valid index into the array]
very_longs.adb:143:44: info: index check proved (CVC4: 2 VC)
very_longs.adb:143:44: info: overflow check proved (CVC4: 2 VC)
very_longs.adb:148:29: info: index check proved (CVC4: 2 VC)
very_longs.adb:150:25: info: range check proved (CVC4: 2 VC)
very_longs.adb:151:39: info: overflow check proved (CVC4: 2 VC)
very_longs.adb:163:44: info: cannot unroll loop (too many loop iterations)
very_longs.adb:164:27: info: index check proved (CVC4: 2 VC)
very_longs.adb:164:46: info: index check proved (CVC4: 2 VC)
very_longs.adb:168:27: info: index check proved (CVC4: 2 VC)
very_longs.adb:168:46: info: index check proved (CVC4: 2 VC)
very_longs.adb:180:17: info: precondition proved (CVC4: 1 VC)
very_longs.adb:186:21: info: precondition proved (CVC4: 1 VC)
very_longs.adb:192:21: info: precondition proved (CVC4: 1 VC)
very_longs.adb:200:13: medium: refined postcondition might fail, cannot prove Number.Long_Digits(Number_Of_Digits'Result) /= 0 (e.g. when Number = (Length => 2, Long_Digits => (1 => 0, 2 => 1)) and Number.Long_Digits'First = 1 and Number.Long_Digits'Last = 2 and Number_Of_Digits'Result = 3)
very_longs.adb:200:48: medium: array index check might fail (e.g. when Number = (Length => 2, Long_Digits => (1 => 0, 2 => 1)) and Number.Long_Digits'First = 1 and Number.Long_Digits'Last = 2 and Number_Of_Digits'Result = 3) [reason for check: value must be a valid index into the array]
very_longs.adb:202:32: info: index check proved (CVC4: 2 VC)
very_longs.adb:208:36: info: index check proved (CVC4: 4 VC)
very_longs.adb:209:31: info: range check proved (CVC4: 4 VC)
very_longs.adb:213:16: info: loop invariant initialization proved (CVC4: 1 VC; Trivial: 1 VC)
very_longs.adb:213:16: info: loop invariant preservation proved (CVC4: 1 VC; Trivial: 1 VC)
very_longs.adb:214:75: info: index check proved (CVC4: 4 VC)
very_longs.adb:226:07: info: initialization of "Result" proved
very_longs.adb:226:28: info: range check proved (CVC4: 2 VC)
very_longs.adb:227:07: info: initialization of "L_Digit" proved
very_longs.adb:228:07: info: initialization of "R_Digit" proved
very_longs.adb:229:07: info: initialization of "Sum" proved
very_longs.adb:230:07: info: initialization of "Carry" proved
very_longs.adb:232:26: info: length check proved (CVC4: 3 VC; Trivial: 1 VC)
very_longs.adb:232:29: info: length check proved (CVC4: 3 VC; Trivial: 1 VC)
very_longs.adb:234:36: info: cannot unroll loop (too many loop iterations)
very_longs.adb:235:48: info: index check proved (CVC4: 2 VC)
very_longs.adb:236:48: info: index check proved (CVC4: 2 VC)
very_longs.adb:239:29: info: index check proved (CVC4: 2 VC)
very_longs.adb:246:07: info: initialization of "Result" proved
very_longs.adb:246:31: info: range check proved (CVC4: 2 VC)
very_longs.adb:247:07: info: initialization of "L_Digit" proved
very_longs.adb:248:07: info: initialization of "R_Digit" proved
very_longs.adb:249:07: info: initialization of "Difference" proved
very_longs.adb:250:07: info: initialization of "Borrow" proved
very_longs.adb:252:26: info: length check proved (CVC4: 3 VC; Trivial: 1 VC)
very_longs.adb:252:29: info: length check proved (CVC4: 3 VC; Trivial: 1 VC)
very_longs.adb:254:36: info: cannot unroll loop (too many loop iterations)
very_longs.adb:255:51: info: index check proved (CVC4: 2 VC)
very_longs.adb:256:51: info: index check proved (CVC4: 2 VC)
very_longs.adb:263:29: info: index check proved (CVC4: 2 VC)
very_longs.adb:274:07: info: initialization of "Result" proved
very_longs.adb:274:27: info: range check proved (CVC4: 2 VC)
very_longs.adb:275:07: info: initialization of "L_Digit" proved
very_longs.adb:276:07: info: initialization of "R_Digit" proved
very_longs.adb:277:07: info: initialization of "T_Digit" proved
very_longs.adb:278:07: info: initialization of "Temp" proved
very_longs.adb:279:07: info: initialization of "Carry" proved
very_longs.adb:282:26: info: length check proved (CVC4: 3 VC; Trivial: 1 VC)
very_longs.adb:282:29: info: length check proved (CVC4: 3 VC; Trivial: 1 VC)
very_longs.adb:285:36: info: cannot unroll loop (too many loop iterations)
very_longs.adb:287:39: info: cannot unroll loop (too many loop iterations)
very_longs.adb:288:51: info: index check proved (CVC4: 2 VC)
very_longs.adb:289:51: info: index check proved (CVC4: 2 VC)
very_longs.adb:290:18: info: overflow check proved (CVC4: 2 VC)
very_longs.adb:291:61: info: overflow check proved (CVC4: 2 VC)
very_longs.adb:291:65: info: index check proved (CVC4: 2 VC)
very_longs.adb:293:37: info: overflow check proved (CVC4: 2 VC)
very_longs.adb:293:41: info: index check proved (CVC4: 2 VC)
very_longs.adb:303:07: info: initialization of "Result" proved
very_longs.adb:303:36: medium: range check might fail, cannot prove upper bound for L.Length + R.Length (e.g. when L = (Length => 1, Long_Digits => (1 => 0)) and L.Long_Digits'First = 1 and L.Long_Digits'Last = 1 and R = (Length => Digit_Index_Type'Last, Long_Digits => (others => 0)) and R.Long_Digits'First = 1 and R.Long_Digits'Last = 65536) [possible fix: subprogram at very_longs.ads:61 should mention L and R in a precondition]
very_longs.adb:304:07: info: initialization of "L_Digit" proved
very_longs.adb:305:07: info: initialization of "R_Digit" proved
very_longs.adb:306:07: info: initialization of "T_Digit" proved
very_longs.adb:307:07: info: initialization of "Temp" proved
very_longs.adb:308:07: info: initialization of "Carry" proved
very_longs.adb:311:26: info: length check proved (CVC4: 3 VC; Trivial: 1 VC)
very_longs.adb:311:29: info: length check proved (CVC4: 3 VC; Trivial: 1 VC)
very_longs.adb:314:36: info: cannot unroll loop (too many loop iterations)
very_longs.adb:316:39: info: cannot unroll loop (too many loop iterations)
very_longs.adb:317:52: info: index check proved (CVC4: 2 VC)
very_longs.adb:318:52: info: index check proved (CVC4: 2 VC)
very_longs.adb:319:59: info: overflow check proved (CVC4: 2 VC)
very_longs.adb:319:63: info: index check proved (CVC4: 2 VC)
very_longs.adb:321:34: info: overflow check proved (CVC4: 2 VC)
very_longs.adb:321:38: info: index check proved (CVC4: 2 VC)
very_longs.adb:324:38: info: index check proved (CVC4: 2 VC)
very_longs.adb:324:38: info: overflow check proved (CVC4: 2 VC)
very_longs.ads:14:20: info: postcondition proved (CVC4: 1 VC)
very_longs.ads:17:36: info: initialization of "Result" proved
very_longs.ads:18:36: info: initialization of "Valid" proved
very_longs.ads:20:10: info: flow dependencies proved
very_longs.ads:21:23: info: range check proved (CVC4: 2 VC)
very_longs.ads:46:18: info: postcondition proved (CVC4: 1 VC)
very_longs.ads:52:18: info: postcondition proved (CVC4: 1 VC)
very_longs.ads:58:18: info: postcondition proved (CVC4: 1 VC)
very_longs.ads:62:19: info: postcondition proved (CVC4: 1 VC)
very_longs.ads:67:22: info: initialization of "Quotient" proved
very_longs.ads:68:22: info: initialization of "Remainder" proved
very_longs.ads:70:10: info: flow dependencies proved
very_longs.ads:86:10: info: range check proved (CVC4: 2 VC)
very_longs.ads:90:68: info: index check proved (CVC4: 2 VC)
