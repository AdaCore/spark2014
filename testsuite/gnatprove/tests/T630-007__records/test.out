mutable_discrs.adb:7:25: info: range check proved (CVC5: 1 VC)
mutable_discrs.adb:14:04: info: range check proved (CVC5: 2 VC)
mutable_discrs.adb:21:04: warning: initialization of "Y" has no effect
mutable_discrs.adb:21:13: info: discriminant check proved (CVC5: 1 VC)
mutable_discrs.adb:22:04: warning: initialization of "A" has no effect
mutable_discrs.adb:26:04: warning: assuming "Do_Something" always returns
mutable_discrs.adb:26:04: warning: assuming "Do_Something" has no effect on global items
mutable_discrs.adb:26:04: warning: no Global contract available for "Do_Something"
mutable_discrs.adb:26:04: warning: no returning annotation available for "Do_Something"
mutable_discrs.adb:26:18: info: discriminant check proved (CVC5: 1 VC)
mutable_discrs.adb:27:19: info: assertion proved (CVC5: 1 VC)
mutable_discrs.adb:28:04: warning: assuming "Do_Something_2" always returns
mutable_discrs.adb:28:04: warning: assuming "Do_Something_2" has no effect on global items
mutable_discrs.adb:28:04: warning: no Global contract available for "Do_Something_2"
mutable_discrs.adb:28:04: warning: no returning annotation available for "Do_Something_2"
mutable_discrs.adb:28:04: warning: statement has no effect
mutable_discrs.adb:28:20: warning: "Y" is set by "Do_Something_2" but not used after the call
mutable_discrs.adb:29:19: info: assertion proved (Trivial)
mutable_discrs.adb:30:04: warning: assuming "Do_Something_3" always returns
mutable_discrs.adb:30:04: warning: assuming "Do_Something_3" has no effect on global items
mutable_discrs.adb:30:04: warning: no Global contract available for "Do_Something_3"
mutable_discrs.adb:30:04: warning: no returning annotation available for "Do_Something_3"
mutable_discrs.adb:30:04: warning: statement has no effect
mutable_discrs.adb:30:20: info: length check proved (CVC5: 3 VC; Trivial: 1 VC)
mutable_discrs.adb:30:20: warning: "A" is set by "Do_Something_3" but not used after the call
mutable_discrs.adb:31:19: medium: assertion might fail
tagged_type.adb:20:19: info: assertion proved (CVC5: 1 VC)
