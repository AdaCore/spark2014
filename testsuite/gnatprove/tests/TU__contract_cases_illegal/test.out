
raised SYSTEM.ASSERTIONS.ASSERT_FAILURE : contract cases overlap for subprogram overlapping_conditions

raised SYSTEM.ASSERTIONS.ASSERT_FAILURE : failed contract case at contract_cases_illegal_2.ads:34
contract_cases_illegal.ads:14:11: others must be the last choice in contract cases
contract_cases_illegal.ads:23:40: attribute "Old" must appear in the consequence of a contract case
contract_cases_illegal.ads:24:30: attribute "Old" must appear in the consequence of a contract case
contract_cases_illegal.ads:32:11: warning: contract cases do not mention result
contract_cases_illegal.ads:32:39: attribute "Result" must appear in the consequence of a contract case
contract_cases_illegal.ads:32:61: warning: contract case does not check the outcome of calling "Func"
contract_cases_illegal_2.ads:28:55: info: initialization of "C" proved
contract_cases_illegal_2.ads:29:11: medium: contract cases might not be complete (e.g. when A = 0 and B = 0)
contract_cases_illegal_2.ads:29:11: medium: contract cases might not be disjoint (e.g. when A = 1 and B = 0)
contract_cases_illegal_2.ads:29:36: medium: contract case might fail (e.g. when A = 1 and B = 0 and C = 0)
contract_cases_illegal_2.ads:29:39: info: initialization of "C" proved
contract_cases_illegal_2.ads:30:36: info: contract case proved (CVC4: 2 VC)
contract_cases_illegal_2.ads:30:39: info: initialization of "C" proved
contract_cases_illegal_2.ads:32:51: info: initialization of "C" proved
contract_cases_illegal_2.ads:33:11: info: disjoint contract cases proved (CVC4: 1 VC)
contract_cases_illegal_2.ads:33:11: medium: contract cases might not be complete (e.g. when A = 0 and B = 0)
contract_cases_illegal_2.ads:33:36: medium: contract case might fail (e.g. when A = -1 and B = 0 and C = -1)
contract_cases_illegal_2.ads:33:39: info: initialization of "C" proved
contract_cases_illegal_2.ads:34:36: medium: contract case might fail (e.g. when A = 1 and B = 0 and C = 0)
contract_cases_illegal_2.ads:34:39: info: initialization of "C" proved
