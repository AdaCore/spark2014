simple.adb:7:22: medium: assertion might fail [possible fix: subprogram at simple.ads:13 should mention Alice and Bob in a precondition]
simple.adb:8:24: high: overflow check might fail, cannot prove upper bound for Alice.Age + Bob.Age (e.g. when Alice = (Age => 79, Height => 1310359911, Name => "VP") and Bob = (Age => 110, Height => 102129283, Name => "xY")) [reason for check: result of addition must fit in a 8-bits machine integer] [possible fix: add precondition (Alice.Age <= 127 - Bob.Age) to subprogram at simple.ads:13]
simple.adb:8:24: high: range check might fail, cannot prove upper bound for Alice.Age + Bob.Age (e.g. when Alice = (Age => 79, Height => 1310359911, Name => "VP") and Bob = (Age => 110, Height => 102129283, Name => "xY")) [reason for check: returned value must fit in the result type of the function] [possible fix: add precondition (Alice.Age <= Lifetime'Last - Bob.Age) to subprogram at simple.ads:13]
simple.adb:14:31: info: cannot unroll loop (too many loop iterations) [info-unrolling-inlining]
simple.adb:15:33: medium: overflow check might fail, cannot prove upper bound for Total_Age + Integer (T.People (N).Age) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: loop at line 14 should mention Total_Age in a loop invariant]
simple.adb:17:22: high: assertion might fail (e.g. when Total_Age = 1321) [possible fix: loop at line 14 should mention Total_Age in a loop invariant]
simple.ads:22:14: warning: subprogram "Check_Town" has no effect
simple.adb:22:29: info: cannot unroll loop (too many loop iterations) [info-unrolling-inlining]
simple.adb:23:25: high: assertion might fail (e.g. when N = 2 and R = (Size => ?, Data => (1 => -89084396, 2 => 42, 3 => 973711627, 4 => 99, 5 => -88939281))) [possible fix: subprogram at simple.ads:30 should mention R in a precondition]
simple.ads:30:14: warning: subprogram "Check_Record" has no effect
