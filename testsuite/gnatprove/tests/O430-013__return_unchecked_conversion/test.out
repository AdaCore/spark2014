prover_crash.adb:10:17: info: implicit function contract might not be available on calls from enclosing unit
prover_crash.adb:10:17: info: imprecise handling of Unchecked_Conversion (type is unsuitable as target for unchecked conversion)
prover_crash.adb:10:17: info: types in unchecked conversion have the same size (Trivial)
prover_crash.adb:11:39: info: type is suitable as source for unchecked conversion (Trivial)
prover_crash.adb:11:46: high: type is unsuitable as a target for unchecked conversion [possible explanation: floating-point types have invalid bit patterns for SPARK]
prover_crash.adb:14:23: high: range check might fail, cannot prove upper bound for X + Y (e.g. when X = Myint'Last and Y = 1) [reason for check: input value must fit in parameter type] [possible fix: add precondition (X <= Source'Last - Y) to subprogram at prover_crash.ads:11]
prover_crash.ads:11:13: info: implicit aspect Always_Terminates on "Crash" has been proved, subprogram will terminate
prover_crash.ads:11:13: info: implicit function contract might not be available on implicit recursive calls
