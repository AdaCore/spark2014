camera_motion.adb:8:54: medium: overflow check might fail, cannot prove upper bound for -Filter_Type'last [reason for check: result of negation must fit in a 32-bits machine integer]
camera_motion.adb:9:54: medium: overflow check might fail, cannot prove upper bound for -Filter_Type'last [reason for check: result of negation must fit in a 32-bits machine integer]
camera_motion.adb:20:13: info: add a contract to analyze it separately from calling contexts
camera_motion.adb:20:13: info: local subprogram "Sqrt" only analyzed in the context of calls
camera_motion.adb:22:07: info: initialization of "s_new" proved
camera_motion.adb:22:07: info: initialization of "s_new" proved, in call inlined at camera_motion.adb:151
camera_motion.adb:22:07: info: initialization of "s_new" proved, in call inlined at camera_motion.adb:151, in call inlined at camera_motion.adb:240
camera_motion.adb:22:07: info: initialization of "s_new" proved, in call inlined at camera_motion.adb:287
camera_motion.adb:22:07: info: initialization of "s_new" proved, in call inlined at camera_motion.adb:288
camera_motion.adb:25:26: medium: overflow check might fail, cannot prove upper bound for s_old + (v / s_old), in call inlined at camera_motion.adb:151, in call inlined at camera_motion.adb:240 [reason for check: result of addition must fit in a 32-bits machine integer]
camera_motion.adb:25:26: medium: overflow check might fail, cannot prove upper bound for s_old + (v / s_old), in call inlined at camera_motion.adb:287 [reason for check: result of addition must fit in a 32-bits machine integer]
camera_motion.adb:25:26: medium: overflow check might fail, cannot prove upper bound for s_old + (v / s_old), in call inlined at camera_motion.adb:288 [reason for check: result of addition must fit in a 32-bits machine integer]
camera_motion.adb:25:31: info: division check proved (CVC4: 20 VC), in call inlined at camera_motion.adb:151, in call inlined at camera_motion.adb:240
camera_motion.adb:25:31: info: division check proved (CVC4: 20 VC), in call inlined at camera_motion.adb:287
camera_motion.adb:25:31: info: division check proved (CVC4: 20 VC), in call inlined at camera_motion.adb:288
camera_motion.adb:25:41: info: division check proved (CVC4: 20 VC), in call inlined at camera_motion.adb:151, in call inlined at camera_motion.adb:240
camera_motion.adb:25:41: info: division check proved (CVC4: 20 VC), in call inlined at camera_motion.adb:287
camera_motion.adb:25:41: info: division check proved (CVC4: 20 VC), in call inlined at camera_motion.adb:288
camera_motion.adb:29:14: info: range check proved (CVC4: 2 VC), in call inlined at camera_motion.adb:151, in call inlined at camera_motion.adb:240
camera_motion.adb:29:14: info: range check proved (CVC4: 2 VC), in call inlined at camera_motion.adb:287
camera_motion.adb:29:14: info: range check proved (CVC4: 2 VC), in call inlined at camera_motion.adb:288
camera_motion.adb:33:13: info: add a contract to analyze it separately from calling contexts
camera_motion.adb:33:13: info: local subprogram "Product_Sum" only analyzed in the context of calls
camera_motion.adb:38:07: info: initialization of "x" proved
camera_motion.adb:38:07: info: initialization of "x" proved, in call inlined at camera_motion.adb:184
camera_motion.adb:38:10: info: initialization of "y" proved
camera_motion.adb:38:10: info: initialization of "y" proved, in call inlined at camera_motion.adb:184
camera_motion.adb:41:26: medium: overflow check might fail, cannot prove upper bound for Filter_Row + Integer (Row), in call inlined at camera_motion.adb:184 [reason for check: result of addition must fit in a 32-bits machine integer]
camera_motion.adb:48:29: medium: overflow check might fail, cannot prove upper bound for Filter_Col + Integer (Col), in call inlined at camera_motion.adb:184 [reason for check: result of addition must fit in a 32-bits machine integer]
camera_motion.adb:54:24: medium: overflow check might fail, cannot prove lower bound for Sum + Filter (Filter_Row, Filter_Col) * Integer (Image (y, x)), in call inlined at camera_motion.adb:184 [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: subprogram at line 174 should mention Filter and Image in a precondition]
camera_motion.adb:54:58: medium: overflow check might fail, cannot prove lower bound for Filter (Filter_Row, Filter_Col) * Integer (Image (y, x)), in call inlined at camera_motion.adb:184 [reason for check: result of multiplication must fit in a 32-bits machine integer] [possible fix: subprogram at line 174 should mention Filter and Image in a precondition]
camera_motion.adb:54:76: info: index check proved (CVC4: 2 VC), in call inlined at camera_motion.adb:184
camera_motion.adb:54:79: info: index check proved (CVC4: 2 VC), in call inlined at camera_motion.adb:184
camera_motion.adb:76:27: info: range check proved (CVC4: 2 VC), in instantiation at camera_motion.adb:80
camera_motion.adb:85:07: info: initialization of "v1" proved
camera_motion.adb:85:11: info: initialization of "v2" proved
camera_motion.adb:87:07: medium: "Result" might not be initialized
camera_motion.adb:87:14: info: range check proved (CVC4: 2 VC)
camera_motion.adb:88:38: info: cannot unroll loop (too many loop iterations)
camera_motion.adb:89:41: info: cannot unroll loop (too many loop iterations)
camera_motion.adb:91:39: medium: array index check might fail [reason for check: value must be a valid index into the array]
camera_motion.adb:91:44: medium: array index check might fail [reason for check: value must be a valid index into the array]
camera_motion.adb:92:50: info: overflow check proved (CVC4: 2 VC)
camera_motion.adb:92:58: info: overflow check proved (CVC4: 2 VC)
camera_motion.adb:100:07: info: initialization of "v" proved
camera_motion.adb:102:07: medium: "Result" might not be initialized
camera_motion.adb:102:14: info: range check proved (CVC4: 2 VC)
camera_motion.adb:103:37: info: cannot unroll loop (too many loop iterations)
camera_motion.adb:104:40: info: cannot unroll loop (too many loop iterations)
camera_motion.adb:106:52: info: overflow check proved (CVC4: 2 VC)
camera_motion.adb:113:13: info: add a contract to analyze it separately from calling contexts
camera_motion.adb:113:13: info: local subprogram "Get_Image_Statistics" only analyzed in the context of calls
camera_motion.adb:114:07: info: initialization of "v" proved
camera_motion.adb:114:07: info: initialization of "v" proved, in call inlined at camera_motion.adb:240
camera_motion.adb:115:07: warning: initialization of "Min" has no effect, in call inlined at camera_motion.adb:240
camera_motion.adb:116:07: warning: initialization of "Max" has no effect, in call inlined at camera_motion.adb:240
camera_motion.adb:119:07: info: initialization of "Mean" proved
camera_motion.adb:119:07: info: initialization of "Mean" proved, in call inlined at camera_motion.adb:240
camera_motion.adb:126:13: warning: statement has no effect, in call inlined at camera_motion.adb:240
camera_motion.adb:127:20: warning: unused assignment, in call inlined at camera_motion.adb:240
camera_motion.adb:129:13: warning: statement has no effect, in call inlined at camera_motion.adb:240
camera_motion.adb:130:20: warning: unused assignment, in call inlined at camera_motion.adb:240
camera_motion.adb:132:24: medium: overflow check might fail, cannot prove upper bound for Sum + Natural (v), in call inlined at camera_motion.adb:240 [reason for check: result of addition must fit in a 32-bits machine integer]
camera_motion.adb:133:28: medium: overflow check might fail, cannot prove upper bound for Count + 1, in call inlined at camera_motion.adb:240 [reason for check: result of addition must fit in a 32-bits machine integer]
camera_motion.adb:137:19: medium: divide by zero might fail, in call inlined at camera_motion.adb:240
camera_motion.adb:143:32: medium: overflow check might fail, cannot prove upper bound for Var_Sum + (Integer (v) - Mean) ** 2, in call inlined at camera_motion.adb:240 [reason for check: result of addition must fit in a 32-bits machine integer]
camera_motion.adb:143:32: medium: range check might fail, cannot prove lower bound for Var_Sum + (Integer (v) - Mean) ** 2, in call inlined at camera_motion.adb:240 [reason for check: result of addition must fit in the target type of the assignment]
camera_motion.adb:143:55: medium: overflow check might fail, cannot prove upper bound for (Integer (v) - Mean) ** 2, in call inlined at camera_motion.adb:240 [reason for check: result of exponentiation must fit in a 32-bits machine integer]
camera_motion.adb:147:14: info: initialization of "Result" proved
camera_motion.adb:148:21: warning: unused assignment, in call inlined at camera_motion.adb:240
camera_motion.adb:149:21: warning: unused assignment, in call inlined at camera_motion.adb:240
camera_motion.adb:150:35: medium: range check might fail, cannot prove lower bound for Mean, in call inlined at camera_motion.adb:240 [reason for check: value must be convertible to the target type of the conversion]
camera_motion.adb:151:37: medium: range check might fail, cannot prove upper bound for Sqrt (Var_Sum / Count), in call inlined at camera_motion.adb:240 [reason for check: value must be convertible to the target type of the conversion]
camera_motion.adb:151:51: medium: divide by zero might fail, in call inlined at camera_motion.adb:240
camera_motion.adb:158:07: info: initialization of "v" proved
camera_motion.adb:160:07: medium: "Result" might not be initialized
camera_motion.adb:160:14: info: range check proved (CVC4: 2 VC)
camera_motion.adb:161:37: info: cannot unroll loop (too many loop iterations)
camera_motion.adb:162:40: info: cannot unroll loop (too many loop iterations)
camera_motion.adb:179:07: info: initialization of "Sum" proved
camera_motion.adb:181:07: medium: "Result" might not be initialized
camera_motion.adb:181:14: info: range check proved (CVC4: 2 VC)
camera_motion.adb:182:37: info: cannot unroll loop (too many loop iterations)
camera_motion.adb:183:40: info: cannot unroll loop (too many loop iterations)
camera_motion.adb:184:28: medium: overflow check might fail, cannot prove upper bound for Bias + Product_Sum (Filter, Image, Col, Row) [reason for check: result of addition must fit in a 32-bits machine integer]
camera_motion.adb:184:30: info: cannot unroll loop (too many loop iterations)
camera_motion.adb:184:30: info: cannot unroll loop (too many loop iterations)
camera_motion.adb:184:30: info: in inlined body at line 40
camera_motion.adb:184:30: info: in inlined body at line 47
camera_motion.adb:184:58: medium: range check might fail, cannot prove upper bound for Col [reason for check: default component value must fit in the type]
camera_motion.adb:184:63: medium: range check might fail, cannot prove upper bound for Row [reason for check: default component value must fit in the type]
camera_motion.adb:199:09: info: predicate check proved (CVC4: 2 VC)
camera_motion.adb:204:07: warning: initialization of "Erode_3x3" has no effect
camera_motion.adb:205:09: info: predicate check proved (CVC4: 2 VC)
camera_motion.adb:213:07: info: initialization of "Edge_Ref" proved
camera_motion.adb:213:07: info: range check proved (CVC4: 2 VC)
camera_motion.adb:214:07: info: initialization of "Edge_New" proved
camera_motion.adb:214:07: info: range check proved (CVC4: 2 VC)
camera_motion.adb:215:07: info: initialization of "Diff_Image" proved
camera_motion.adb:215:07: info: range check proved (CVC4: 2 VC)
camera_motion.adb:216:07: info: initialization of "Result_Image" proved
camera_motion.adb:216:07: info: range check proved (CVC4: 2 VC)
camera_motion.adb:218:07: info: initialization of "Diff" proved
camera_motion.adb:219:07: info: initialization of "vx" proved
camera_motion.adb:219:11: info: initialization of "vy" proved
camera_motion.adb:224:07: warning: initialization of "Weighted_Mean_X" has no effect
camera_motion.adb:225:07: warning: initialization of "Weighted_Mean_Y" has no effect
camera_motion.adb:228:07: warning: initialization of "Weighted_Stddev_X" has no effect
camera_motion.adb:229:07: warning: initialization of "Weighted_Stddev_Y" has no effect
camera_motion.adb:230:07: info: initialization of "Stats" proved
camera_motion.adb:233:16: info: length check proved (CVC4: 6 VC; Trivial: 1 VC)
camera_motion.adb:233:19: medium: length check might fail [reason for check: array must be of the appropriate length] [possible fix: subprogram at camera_motion.ads:15 should mention Ref_Image in a precondition]
camera_motion.adb:234:16: info: length check proved (CVC4: 6 VC; Trivial: 1 VC)
camera_motion.adb:234:19: medium: length check might fail [reason for check: array must be of the appropriate length] [possible fix: subprogram at camera_motion.ads:15 should mention New_Image in a precondition]
camera_motion.adb:237:18: info: length check proved (CVC4: 6 VC; Trivial: 1 VC)
camera_motion.adb:237:21: medium: length check might fail [reason for check: array must be of the appropriate length] [possible fix: you should consider adding a postcondition to function Difference_Image or turning it into an expression function]
camera_motion.adb:240:16: info: cannot unroll loop (too many loop iterations)
camera_motion.adb:240:16: info: cannot unroll loop (too many loop iterations)
camera_motion.adb:240:16: info: cannot unroll loop (too many loop iterations)
camera_motion.adb:240:16: info: cannot unroll loop (too many loop iterations)
camera_motion.adb:240:16: info: in inlined body at line 123
camera_motion.adb:240:16: info: in inlined body at line 124
camera_motion.adb:240:16: info: in inlined body at line 140
camera_motion.adb:240:16: info: in inlined body at line 141
camera_motion.adb:240:16: info: in inlined body at line 151
camera_motion.adb:240:16: info: in inlined body at line 24
camera_motion.adb:240:16: info: unrolling loop
camera_motion.adb:243:20: info: length check proved (CVC4: 6 VC; Trivial: 1 VC)
camera_motion.adb:243:23: medium: length check might fail [reason for check: array must be of the appropriate length] [possible fix: you should consider adding a postcondition to function Clip_Image or turning it into an expression function]
camera_motion.adb:243:46: medium: range check might fail, cannot prove upper bound for Stats.Mean + Stats.StdDev [reason for check: input value must fit in parameter type]
camera_motion.adb:246:37: info: cannot unroll loop (too many loop iterations)
camera_motion.adb:247:46: info: cannot unroll loop (too many loop iterations)
camera_motion.adb:248:44: medium: array index check might fail [reason for check: value must be a valid index into the array]
camera_motion.adb:248:49: medium: array index check might fail [reason for check: value must be a valid index into the array]
camera_motion.adb:249:34: medium: overflow check might fail, cannot prove upper bound for Diff_Sum + Diff [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: loop at line 247 should mention Diff and Diff_Sum in a loop invariant]
camera_motion.adb:251:40: medium: overflow check might fail, cannot prove upper bound for Sum_Weights + Diff [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: loop at line 247 should mention Diff and Sum_Weights in a loop invariant]
camera_motion.adb:252:46: medium: overflow check might fail, cannot prove upper bound for Weighted_Sum_X + (Integer (Col) * Diff) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: loop at line 247 should mention Diff and Weighted_Sum_X in a loop invariant]
camera_motion.adb:252:63: medium: overflow check might fail, cannot prove upper bound for Integer (Col) * Diff [reason for check: result of multiplication must fit in a 32-bits machine integer] [possible fix: loop at line 247 should mention Diff in a loop invariant]
camera_motion.adb:253:46: medium: overflow check might fail, cannot prove upper bound for Weighted_Sum_Y + (Integer (Row) * Diff) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: loop at line 247 should mention Diff and Weighted_Sum_Y in a loop invariant]
camera_motion.adb:253:63: medium: overflow check might fail, cannot prove upper bound for Integer (Row) * Diff [reason for check: result of multiplication must fit in a 32-bits machine integer] [possible fix: loop at line 247 should mention Diff in a loop invariant]
camera_motion.adb:258:59: medium: overflow check might fail, cannot prove lower bound for Integer (Ref_Image'Last (2)) - Integer (Ref_Image'first) [reason for check: result of subtraction must fit in a 32-bits machine integer]
camera_motion.adb:258:92: info: division check proved (CVC4: 1 VC)
camera_motion.adb:259:59: medium: overflow check might fail, cannot prove lower bound for Integer (Ref_Image'Last (1)) - Integer (Ref_Image'first) [reason for check: result of subtraction must fit in a 32-bits machine integer]
camera_motion.adb:259:92: info: division check proved (CVC4: 1 VC)
camera_motion.adb:261:44: info: division check proved (CVC4: 1 VC)
camera_motion.adb:261:44: medium: overflow check might fail, cannot prove upper bound for Weighted_Sum_X / Sum_Weights [reason for check: result of division must fit in a 32-bits machine integer] [possible fix: loop at line 246 should mention Sum_Weights and Weighted_Sum_X in a loop invariant]
camera_motion.adb:262:44: info: division check proved (CVC4: 1 VC)
camera_motion.adb:262:44: medium: overflow check might fail, cannot prove upper bound for Weighted_Sum_Y / Sum_Weights [reason for check: result of division must fit in a 32-bits machine integer] [possible fix: loop at line 246 should mention Sum_Weights and Weighted_Sum_Y in a loop invariant]
camera_motion.adb:266:37: info: cannot unroll loop (too many loop iterations)
camera_motion.adb:267:46: info: cannot unroll loop (too many loop iterations)
camera_motion.adb:268:19: info: overflow check proved (CVC4: 2 VC)
camera_motion.adb:268:38: medium: overflow check might fail, cannot prove upper bound for Integer (Col) - Weighted_Mean_X [reason for check: result of subtraction must fit in a 32-bits machine integer]
camera_motion.adb:269:19: info: overflow check proved (CVC4: 2 VC)
camera_motion.adb:269:38: medium: overflow check might fail, cannot prove upper bound for Integer (Row) - Weighted_Mean_Y [reason for check: result of subtraction must fit in a 32-bits machine integer]
camera_motion.adb:271:46: medium: overflow check might fail, cannot prove upper bound for Weighted_Var_X + Natural_64 (vx * vx * Integer (Result_Image (Row, Col))) [reason for check: result of addition must fit in a 64-bits machine integer] [possible fix: loop at line 267 should mention vx and Weighted_Var_X in a loop invariant]
camera_motion.adb:272:30: medium: overflow check might fail, cannot prove upper bound for vx * vx [reason for check: result of multiplication must fit in a 32-bits machine integer] [possible fix: loop at line 267 should mention vx in a loop invariant]
camera_motion.adb:272:35: info: range check proved (CVC4: 2 VC)
camera_motion.adb:272:35: medium: overflow check might fail, cannot prove upper bound for vx * vx * Integer (Result_Image (Row, Col)) [reason for check: result of multiplication must fit in a 32-bits machine integer] [possible fix: loop at line 267 should mention vx in a loop invariant]
camera_motion.adb:272:60: medium: array index check might fail [reason for check: value must be a valid index into the array]
camera_motion.adb:272:65: medium: array index check might fail [reason for check: value must be a valid index into the array]
camera_motion.adb:273:46: medium: overflow check might fail, cannot prove upper bound for Weighted_Var_Y + Natural_64 (vy * vy * Integer (Result_Image (Row, Col))) [reason for check: result of addition must fit in a 64-bits machine integer] [possible fix: loop at line 267 should mention vy and Weighted_Var_Y in a loop invariant]
camera_motion.adb:274:30: medium: overflow check might fail, cannot prove upper bound for vy * vy [reason for check: result of multiplication must fit in a 32-bits machine integer] [possible fix: loop at line 267 should mention vy in a loop invariant]
camera_motion.adb:274:35: info: range check proved (CVC4: 2 VC)
camera_motion.adb:274:35: medium: overflow check might fail, cannot prove upper bound for vy * vy * Integer (Result_Image (Row, Col)) [reason for check: result of multiplication must fit in a 32-bits machine integer] [possible fix: loop at line 267 should mention vy in a loop invariant]
camera_motion.adb:274:60: info: index check proved (CVC4: 2 VC)
camera_motion.adb:274:65: info: index check proved (CVC4: 2 VC)
camera_motion.adb:282:43: info: division check proved (CVC4: 1 VC)
camera_motion.adb:282:57: medium: range check might fail, cannot prove lower bound for Sum_Weights [reason for check: value must be convertible to the target type of the conversion] [possible fix: loop at line 246 should mention Sum_Weights in a loop invariant]
camera_motion.adb:283:43: info: division check proved (CVC4: 1 VC)
camera_motion.adb:283:57: info: range check proved (CVC4: 2 VC)
camera_motion.adb:287:28: info: in inlined body at line 24
camera_motion.adb:287:28: info: unrolling loop
camera_motion.adb:287:43: medium: range check might fail, cannot prove upper bound for Weighted_Var_X [reason for check: value must be convertible to the target type of the conversion] [possible fix: loop at line 266 should mention Weighted_Var_X in a loop invariant]
camera_motion.adb:288:28: info: in inlined body at line 24
camera_motion.adb:288:28: info: unrolling loop
camera_motion.adb:288:43: medium: range check might fail, cannot prove upper bound for Weighted_Var_Y [reason for check: value must be convertible to the target type of the conversion] [possible fix: loop at line 266 should mention Weighted_Var_Y in a loop invariant]
camera_motion.adb:291:14: info: initialization of "Motion" proved
camera_motion.adb:293:31: medium: range check might fail, cannot prove lower bound for Weighted_Mean_X [reason for check: value must fit in the target type of the assignment]
camera_motion.adb:294:31: medium: range check might fail, cannot prove lower bound for Weighted_Mean_Y [reason for check: value must fit in the target type of the assignment]
camera_motion.adb:295:31: medium: range check might fail, cannot prove upper bound for Weighted_Stddev_X [reason for check: value must fit in the target type of the assignment]
camera_motion.adb:296:31: medium: range check might fail, cannot prove upper bound for Weighted_Stddev_Y [reason for check: value must fit in the target type of the assignment]
