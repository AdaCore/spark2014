x86.adb:21:17: warning: subprogram "Prove_Post" has no effect
x86.adb:36:40: info: initialization of "N2" proved
x86.adb:36:40: info: initialization of "N2" proved, in call inlined at x86.adb:99
x86.adb:36:40: medium: assertion might fail, cannot prove N2 <= var2_range_size, in call inlined at x86.adb:99
x86.adb:45:22: medium: assertion might fail, in call inlined at x86.adb:99
x86.adb:45:37: info: initialization of "N1" proved
x86.adb:45:37: info: initialization of "N1" proved, in call inlined at x86.adb:99
x86.adb:46:41: info: initialization of "N2" proved
x86.adb:46:41: info: initialization of "N2" proved, in call inlined at x86.adb:99
x86.adb:49:19: medium: assertion might fail, in call inlined at x86.adb:99 (e.g. when var1 = 0 and var1_range_size = 0 and var2 = 0 and var2_range_size = 0)
x86.adb:54:16: info: loop invariant initialization proved, in call inlined at x86.adb:99
x86.adb:55:20: medium: loop invariant might fail after first iteration, cannot prove for all M in 0 .. N => var1 /= (var2-var1_range_size + M)) or (for some i in 0 .. var1_range_size => (for some j in 0 .. var2_range_size => (var1 + i) = (var2 + j, in call inlined at x86.adb:99 (e.g. when N = 18446744073709551615 and var1 = 0 and var1_range_size = 18446744073709551614 and var2 = 9223372036854775806 and var2_range_size = 1)
x86.adb:60:13: medium: assertion might fail, in call inlined at x86.adb:99 (e.g. when var1 = 1 and var1_range_size = 2 and var2 = 2 and var2_range_size = 18446744073709551612)
x86.adb:65:16: info: loop invariant initialization proved, in call inlined at x86.adb:99
x86.adb:69:32: medium: loop invariant might fail after first iteration, cannot prove var1 + i /= var2 + J, in call inlined at x86.adb:99 (e.g. when var1 = 446905400684293120 and var2 = 8287045561320598528)
x86.adb:72:52: info: range check proved, in call inlined at x86.adb:99
x86.adb:74:37: medium: assertion might fail, cannot prove N in 0 .. var1_range_size+var2_range_size, in call inlined at x86.adb:99
x86.adb:75:22: info: assertion proved, in call inlined at x86.adb:99
x86.adb:77:34: medium: assertion might fail, cannot prove var1 + N1 /= var2 + N2, in call inlined at x86.adb:99
x86.adb:78:19: info: loop invariant initialization proved, in call inlined at x86.adb:99
x86.adb:79:47: medium: loop invariant might fail after first iteration, cannot prove var1 + N1 /= var2 + J, in call inlined at x86.adb:99 (e.g. when N1 = 0 and var1 = 8 and var2 = 9223372036854775816)
x86.adb:82:57: medium: assertion might fail, cannot prove var1 + N1 /= var2 + J, in call inlined at x86.adb:99 (e.g. when N1 = 0 and var1 = 0 and var2 = 9223372036854775808)
x86.adb:86:42: medium: assertion might fail, cannot prove var1 + i) /= (var2 + j, in call inlined at x86.adb:99 (e.g. when var1 = 3026418949592973312 and var2 = 3026418949592973312)
x86.adb:89:37: medium: assertion might fail, cannot prove var1 + i) /= (var2 + j, in call inlined at x86.adb:99 (e.g. when var1 = 0 and var2 = 9223372036854775808)
x86.adb:94:34: medium: assertion might fail, cannot prove var1 + i) /= (var2 + j, in call inlined at x86.adb:99 (e.g. when var1 = 0 and var2 = 9223372036854775808)
x86.ads:16:14: medium: postcondition might fail, cannot prove InRange64'Result = (for some N in Unsigned64 range 0 .. range_size => (var = (bottom + N
x86.ads:16:44: info: range check proved
x86.ads:22:14: info: postcondition proved
