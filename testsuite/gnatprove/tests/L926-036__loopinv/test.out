counters.adb:13:18: medium: overflow check might fail, cannot prove upper bound for C.T + 1 [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: subprogram at counters.ads:11 should mention C in a precondition]
counters.adb:18:21: high: overflow check might fail, cannot prove upper bound for C.C + 1 (e.g. when C = (C => Integer'Last, T => 1, others => ?)) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: subprogram at counters.ads:11 should mention C in a precondition]
counters.adb:21:24: high: overflow check might fail, cannot prove lower bound for C.C - 1 (e.g. when C = (C => Integer'First, T => 1, others => ?)) [reason for check: result of subtraction must fit in a 32-bits machine integer] [possible fix: subprogram at counters.ads:11 should mention C in a precondition]
counters.adb:23:24: high: overflow check might fail, cannot prove upper bound for C.C + 1 (e.g. when C = (C => Integer'Last, T => 1, others => ?)) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: subprogram at counters.ads:11 should mention C in a precondition]
counters.adb:26:21: high: overflow check might fail, cannot prove lower bound for C.C - 1 (e.g. when C = (C => Integer'First, T => 1, others => ?)) [reason for check: result of subtraction must fit in a 32-bits machine integer] [possible fix: subprogram at counters.ads:11 should mention C in a precondition]
counters.adb:29:24: high: overflow check might fail, cannot prove upper bound for C.C + 1 (e.g. when C = (C => Integer'Last, T => 1, others => ?)) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: subprogram at counters.ads:11 should mention C in a precondition]
counters.adb:31:24: high: overflow check might fail, cannot prove lower bound for C.C - 1 (e.g. when C = (C => Integer'First, T => 1, others => ?)) [reason for check: result of subtraction must fit in a 32-bits machine integer] [possible fix: subprogram at counters.ads:11 should mention C in a precondition]
counters.ads:14:13: info: implicit aspect Always_Terminates on "Value" has been proved, subprogram will terminate
