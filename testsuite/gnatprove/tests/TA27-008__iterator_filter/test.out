test_fold.adb:12:14: info: postcondition proved (CVC4: 4 VC)
test_fold.adb:12:42: info: index check proved (CVC4: 2 VC)
test_fold.adb:12:60: info: index check proved (CVC4: 2 VC)
test_fold.adb:14:16: info: index check proved (CVC4: 2 VC)
test_fold.adb:14:36: info: index check proved (CVC4: 2 VC)
test_fold.adb:14:56: info: index check proved (CVC4: 2 VC)
test_fold.adb:20:13: info: loop invariant initialization proved (CVC4: 3 VC)
test_fold.adb:20:13: info: loop invariant preservation proved (CVC4: 3 VC)
test_fold.adb:21:18: info: index check proved (CVC4: 4 VC)
test_fold.adb:21:45: info: index check proved (CVC4: 4 VC)
test_fold.adb:21:65: info: index check proved (CVC4: 4 VC)
test_fold.adb:26:14: info: postcondition proved (CVC4: 4 VC)
test_fold.adb:26:42: info: index check proved (CVC4: 2 VC)
test_fold.adb:26:60: info: index check proved (CVC4: 2 VC)
test_fold.adb:28:16: info: index check proved (CVC4: 2 VC)
test_fold.adb:28:36: info: index check proved (CVC4: 2 VC)
test_fold.adb:28:56: info: index check proved (CVC4: 2 VC)
test_fold.adb:34:13: info: loop invariant initialization proved (CVC4: 3 VC)
test_fold.adb:34:13: info: loop invariant preservation proved (CVC4: 3 VC)
test_fold.adb:35:18: info: index check proved (CVC4: 4 VC)
test_fold.adb:35:45: info: index check proved (CVC4: 4 VC)
test_fold.adb:35:65: info: index check proved (CVC4: 4 VC)
test_fold.adb:41:14: info: postcondition proved (CVC4: 4 VC)
test_fold.adb:41:42: info: index check proved (CVC4: 2 VC)
test_fold.adb:41:60: info: index check proved (CVC4: 2 VC)
test_fold.adb:43:16: info: index check proved (CVC4: 2 VC)
test_fold.adb:43:36: info: index check proved (CVC4: 2 VC)
test_fold.adb:43:56: info: index check proved (CVC4: 2 VC)
test_fold.adb:46:31: info: index check proved (CVC4: 10 VC)
test_fold.adb:46:60: info: index check proved (CVC4: 10 VC)
test_fold.adb:46:70: info: unrolling loop
test_fold.adb:47:13: info: index check proved (CVC4: 10 VC)
test_fold.adb:53:31: medium: divide by zero might fail (e.g. when I = 20)
test_fold.adb:53:31: medium: divide by zero might fail (e.g. when I = 30)
test_fold.adb:53:46: info: cannot unroll loop (too many loop iterations)
test_fold.adb:61:33: info: loop invariant initialization proved (CVC4: 1 VC)
test_fold.adb:61:33: info: loop invariant preservation proved (CVC4: 1 VC)
test_fold.adb:61:35: info: division check proved (CVC4: 2 VC)
test_fold.adb:67:19: info: assertion proved (CVC4: 1 VC; Trivial: 1 VC)
test_fold.adb:67:47: info: division check proved (CVC4: 1 VC)
test_fold.adb:67:62: info: division check proved (CVC4: 1 VC)
test_fold.adb:68:19: info: assertion proved (CVC4: 1 VC)
test_fold.adb:68:48: info: division check proved (CVC4: 1 VC)
test_fold.adb:68:63: info: division check proved (CVC4: 1 VC)
test_fold.adb:70:28: info: division check proved (CVC4: 2 VC)
test_fold.adb:70:38: info: cannot unroll loop (too many loop iterations)
test_fold.adb:72:22: info: assertion proved (CVC4: 1 VC)
test_fold.adb:72:24: info: division check proved (CVC4: 1 VC)
