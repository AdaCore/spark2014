update_list_zero.adb:8:13: info: precondition proved

update_list_zero.adb:8:13: medium: postcondition might fail, cannot prove Element (Model (L), I) = (if (Get ((Model (L'Old)), I)) <= Threshold then 0 else (Get ((Model (L'Old)), I)))
    8>|            Element (Model (L), I) =
    9 |             (if Element (Model (L'Old), I) <= Threshold then 0
   10 |              else Element (Model (L'Old), I)))
  possible fix: you should consider adding a postcondition to function Get or turning it into an expression function in its unit spec
update_list_zero.adb:9:18: info: precondition proved
update_list_zero.adb:10:20: info: precondition proved
update_list_zero.adb:15:30: info: loop invariant initialization proved
update_list_zero.adb:15:30: info: loop invariant preservation proved
update_list_zero.adb:17:10: info: loop invariant initialization proved
update_list_zero.adb:17:29: info: precondition proved
update_list_zero.adb:18:13: info: precondition proved

update_list_zero.adb:18:13: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove Element (Model (L), I) = (if (Get ((Model (L'Loop_Entry)), I)) <= Threshold then 0 else (Get ((Model (L'Loop_Entry)), I)))
   18>|            Element (Model (L), I) =
   19 |             (if Element (Model (L'Loop_Entry), I) <= Threshold then 0
   20 |              else Element (Model (L'Loop_Entry), I)));
  possible fix: you should consider adding a postcondition to function Get or turning it into an expression function in its unit spec
update_list_zero.adb:19:18: info: precondition proved

update_list_zero.adb:20:20: medium: precondition might fail
   20 |              else Element (Model (L'Loop_Entry), I)));
      |                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
update_list_zero.adb:22:10: info: loop invariant initialization proved
update_list_zero.adb:22:24: info: precondition proved
update_list_zero.adb:23:13: info: precondition proved

update_list_zero.adb:23:13: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove Element (Model (L), I) = Element (Model (L'Loop_Entry), I)
   23 |            Element (Model (L), I) = Element (Model (L'Loop_Entry), I));
      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  possible fix: you should consider adding a postcondition to function Get or turning it into an expression function in its unit spec
update_list_zero.adb:23:33: info: range check proved
update_list_zero.adb:23:38: info: precondition proved
update_list_zero.adb:23:69: info: range check proved
update_list_zero.adb:24:10: info: precondition proved
update_list_zero.adb:25:10: info: precondition proved
update_list_zero.adb:27:07: info: precondition proved
