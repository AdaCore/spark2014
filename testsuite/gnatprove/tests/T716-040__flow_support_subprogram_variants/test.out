foo.adb:6:10: info: subprogram variant proved (CVC5: 1 VC)
foo.adb:6:38: info: range check proved (CVC5: 2 VC)
foo.adb:10:14: info: terminating annotation on "Recursive_Proc_W_Variant_Terminating" has been proved, subprogram will terminate
foo.adb:10:14: warning: subprogram "Recursive_Proc_W_Variant_Terminating" has no effect
foo.adb:17:10: info: subprogram variant proved (CVC5: 1 VC)
foo.adb:17:50: info: range check proved (CVC5: 2 VC)
foo.adb:21:04: warning: analyzing unreferenced procedure "Call_To_Recursive_W_Variant_A"
foo.adb:21:14: info: terminating annotation on "Call_To_Recursive_W_Variant_A" has been proved, subprogram will terminate
foo.adb:21:14: warning: subprogram "Call_To_Recursive_W_Variant_A" has no effect
foo.adb:26:04: warning: analyzing unreferenced procedure "Call_To_Recursive_W_Variant_B"
foo.adb:26:14: warning: subprogram "Call_To_Recursive_W_Variant_B" has no effect
foo.adb:29:18: medium: terminating annotation on "Call_To_Recursive_W_Variant_B" could be incorrect, loop might be nonterminating
foo.adb:34:14: info: terminating annotation on "Mutually_A" has been proved, subprogram will terminate
foo.adb:35:06: info: data dependencies proved
foo.adb:40:06: info: data dependencies proved
foo.adb:46:10: info: subprogram variant proved (CVC5: 1 VC)
foo.adb:46:24: info: range check proved (CVC5: 2 VC)
foo.adb:53:10: info: subprogram variant proved (CVC5: 1 VC)
foo.adb:53:24: info: range check proved (CVC5: 2 VC)
foo.adb:58:06: info: data dependencies proved
foo.adb:61:14: info: terminating annotation on "Mutually_D" has been proved, subprogram will terminate
foo.adb:62:06: info: data dependencies proved
foo.adb:68:10: medium: subprogram variant might fail [possible explanation: mutually recursive subprograms should have compatible variants]
foo.adb:68:24: info: range check proved (CVC5: 2 VC)
foo.adb:75:10: medium: subprogram variant might fail [possible explanation: mutually recursive subprograms should have compatible variants]
foo.adb:75:24: info: range check proved (CVC5: 2 VC)
foo.adb:80:06: info: data dependencies proved
foo.adb:82:14: info: terminating annotation on "Mutually_F" has been proved, subprogram will terminate
foo.adb:83:06: info: data dependencies proved
foo.adb:90:10: medium: subprogram variant might fail [possible explanation: mutually recursive subprograms should have compatible variants]
foo.adb:90:24: info: range check proved (CVC5: 2 VC)
foo.adb:97:10: medium: subprogram variant might fail [possible explanation: mutually recursive subprograms should have compatible variants]
foo.adb:97:24: info: range check proved (CVC5: 2 VC)
foo.adb:102:06: info: data dependencies proved
foo.adb:105:06: info: data dependencies proved
foo.adb:112:10: medium: subprogram variant might fail [possible explanation: mutually recursive subprograms should have compatible variants]
foo.adb:112:24: info: range check proved (CVC5: 2 VC)
foo.adb:122:10: medium: subprogram variant might fail [possible explanation: mutually recursive subprograms should have compatible variants]
foo.adb:122:10: medium: terminating annotation on "Mutually_H" could be incorrect, call to "Mutually_G" might be nonterminating
foo.adb:122:24: info: range check proved (CVC5: 2 VC)
foo.adb:128:06: info: data dependencies proved
foo.adb:131:06: info: data dependencies proved
foo.adb:138:10: info: subprogram variant proved (CVC5: 1 VC)
foo.adb:138:24: info: range check proved (CVC5: 2 VC)
foo.adb:148:10: info: subprogram variant proved (CVC5: 1 VC)
foo.adb:148:10: medium: terminating annotation on "Mutually_J" could be incorrect, call to "Mutually_I" might be nonterminating
foo.adb:148:24: info: range check proved (CVC5: 2 VC)
foo.adb:152:14: info: terminating annotation on "Invisible_Call_To_Nonterminating" has been proved, subprogram will terminate
foo.adb:152:14: warning: subprogram "Invisible_Call_To_Nonterminating" has no effect
foo.adb:153:24: info: data dependencies proved
foo.adb:154:64: info: data dependencies proved
foo.adb:155:24: info: data dependencies proved
foo.adb:157:07: info: no contextual analysis of "Invisible_Call_To_Nonterminating" (nested subprogram)
foo.adb:158:28: medium: terminating annotation on "B" could be incorrect, call to "C" might be nonterminating
foo.adb:170:13: info: implicit function contract might not be available on recursive calls
foo.adb:170:13: info: terminating annotation on "Subnested_Package" has been proved, subprogram will terminate
foo.adb:174:16: info: implicit function contract might not be available on recursive calls or calls from enclosing unit
foo.adb:177:52: info: subprogram variant proved (CVC5: 1 VC)
foo.adb:177:73: info: range check proved (CVC5: 2 VC)
foo.adb:186:17: info: subprogram variant proved (CVC5: 1 VC)
foo.adb:186:24: info: range check proved (CVC5: 2 VC)
foo.adb:190:13: info: implicit function contract might not be available on recursive calls
foo.adb:195:10: info: no contextual analysis of "Aux" (nested package declaration)
foo.adb:196:52: medium: subprogram variant might fail [possible explanation: mutually recursive subprograms should have compatible variants]
foo.adb:196:84: info: range check proved (CVC5: 2 VC)
foo.adb:205:10: medium: terminating annotation on "Subnested_Package_Wo_Variant" could be incorrect, call to "Aux" might be nonterminating
foo.adb:205:17: medium: subprogram variant might fail [possible explanation: mutually recursive subprograms should have compatible variants]
foo.adb:205:24: info: range check proved (CVC5: 2 VC)
foo.adb:209:13: info: implicit function contract might not be available on recursive calls
foo.adb:209:13: info: terminating annotation on "Function_W_Nested_Package" has been proved, subprogram will terminate
foo.adb:214:49: info: subprogram variant proved (CVC5: 1 VC)
foo.adb:214:78: info: range check proved (CVC5: 2 VC)
foo.ads:3:14: warning: subprogram "Recursive_Proc_W_Variant" has no effect
