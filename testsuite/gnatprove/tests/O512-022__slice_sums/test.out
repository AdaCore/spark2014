slice_sums.adb:7:07: info: initialization of "Result" proved
slice_sums.adb:8:07: info: initialization of "Current_Slice" proved
slice_sums.adb:9:07: info: initialization of "Current_Sum" proved
slice_sums.adb:13:11: info: range check proved (CVC4: 2 VC)
slice_sums.adb:15:13: info: loop invariant initialization proved (CVC4: 1 VC)
slice_sums.adb:15:13: info: loop invariant preservation proved (CVC4: 1 VC)
slice_sums.adb:15:21: info: range check proved (CVC4: 4 VC)
slice_sums.adb:15:59: info: overflow check proved (CVC4: 4 VC)
slice_sums.adb:16:24: info: range check proved (CVC4: 4 VC)
slice_sums.adb:17:32: info: implicit function contract not available for proof ("Sum" might not return)
slice_sums.adb:17:32: info: precondition proved (CVC4: 2 VC)
slice_sums.adb:19:13: info: loop invariant initialization proved (CVC4: 3 VC; Trivial: 1 VC)
slice_sums.adb:19:13: info: loop invariant preservation proved (CVC4: 3 VC; Trivial: 1 VC)
slice_sums.adb:22:26: info: implicit function contract not available for proof ("Sum" might not return)
slice_sums.adb:22:26: info: precondition proved (CVC4: 2 VC)
slice_sums.adb:24:14: info: range check proved (CVC4: 2 VC)
slice_sums.adb:26:16: info: loop invariant initialization proved (CVC4: 2 VC)
slice_sums.adb:26:16: info: loop invariant preservation proved (CVC4: 2 VC)
slice_sums.adb:26:25: info: range check proved (CVC4: 4 VC)
slice_sums.adb:26:63: info: overflow check proved (CVC4: 4 VC)
slice_sums.adb:27:30: info: range check proved (CVC4: 4 VC)
slice_sums.adb:28:36: info: implicit function contract not available for proof ("Sum" might not return)
slice_sums.adb:28:36: info: precondition proved (CVC4: 2 VC)
slice_sums.adb:30:27: info: range check proved (CVC4: 4 VC)
slice_sums.adb:30:65: info: overflow check proved (CVC4: 4 VC)
slice_sums.adb:31:35: info: implicit function contract not available for proof ("Sum" might not return)
slice_sums.adb:31:35: info: precondition proved (CVC4: 2 VC)
slice_sums.adb:33:16: info: loop invariant initialization proved (CVC4: 3 VC; Trivial: 1 VC)
slice_sums.adb:33:16: info: loop invariant preservation proved (CVC4: 3 VC; Trivial: 1 VC)
slice_sums.adb:36:29: info: implicit function contract not available for proof ("Sum" might not return)
slice_sums.adb:36:29: info: precondition proved (CVC4: 2 VC)
slice_sums.adb:38:44: info: range check proved (CVC4: 2 VC)
slice_sums.adb:38:48: info: range check proved (CVC4: 2 VC)
slice_sums.adb:39:28: info: precondition proved (CVC4: 1 VC)
slice_sums.adb:42:27: info: range check proved (CVC4: 2 VC)
slice_sums.adb:57:07: info: initialization of "Current_Lo" proved
slice_sums.adb:58:07: info: initialization of "Result" proved
slice_sums.adb:63:41: info: range check proved (CVC4: 2 VC)
slice_sums.adb:66:14: info: range check proved (CVC4: 2 VC)
slice_sums.adb:68:16: info: loop invariant initialization proved (CVC4: 4 VC)
slice_sums.adb:68:16: info: loop invariant preservation proved (CVC4: 4 VC)
slice_sums.adb:71:43: info: overflow check proved (CVC4: 4 VC)
slice_sums.adb:71:57: info: overflow check proved (CVC4: 4 VC)
slice_sums.adb:73:16: medium: loop invariant might fail in first iteration (e.g. when Current_Hi = 1 and Current_Lo = 1 and Current_Sum = 0 and X = (1 => 0) and X'First = 1 and X'Last = 1) [possible fix: you should consider adding a postcondition to function Sum or turning it into an expression function in its unit spec]
slice_sums.adb:73:16: medium: loop invariant might not be preserved by an arbitrary iteration (e.g. when Current_Hi = 3 and Current_Lo = 2 and Current_Sum = 0 and X = (others => 0) and X'First = 2 and X'Last = 3) [possible fix: you should consider adding a postcondition to function Sum or turning it into an expression function in its unit spec]
slice_sums.adb:73:30: info: implicit function contract not available for proof ("Sum" might not return)
slice_sums.adb:73:30: info: precondition proved (CVC4: 2 VC)
slice_sums.adb:74:36: info: overflow check proved (CVC4: 4 VC)
slice_sums.adb:74:36: info: range check proved (CVC4: 4 VC)
slice_sums.adb:76:16: info: loop invariant initialization proved (CVC4: 3 VC; Trivial: 1 VC)
slice_sums.adb:76:16: info: loop invariant preservation proved (CVC4: 3 VC; Trivial: 1 VC)
slice_sums.adb:79:29: info: implicit function contract not available for proof ("Sum" might not return)
slice_sums.adb:79:29: info: precondition proved (CVC4: 2 VC)
slice_sums.adb:81:16: info: loop invariant initialization proved (CVC4: 1 VC)
slice_sums.adb:81:24: info: range check proved (CVC4: 4 VC)
slice_sums.adb:81:70: info: overflow check proved (CVC4: 4 VC)
slice_sums.adb:82:30: info: range check proved (CVC4: 4 VC)
slice_sums.adb:82:76: info: overflow check proved (CVC4: 4 VC)
slice_sums.adb:83:24: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove Max_Sum >= Sum (X, Slice_Bounds'(Lo_Index, Hi_Index)) (e.g. when Hi_Index = 2 and Lo_Index = 4 and Max_Sum = 0 and X = (others => 0) and X'First = 2 and X'Last = 5) [possible fix: you should consider adding a postcondition to function Sum or turning it into an expression function in its unit spec]
slice_sums.adb:83:36: info: implicit function contract not available for proof ("Sum" might not return)
slice_sums.adb:83:36: info: precondition proved (CVC4: 2 VC)
slice_sums.adb:86:16: info: loop invariant initialization proved (CVC4: 1 VC)
slice_sums.adb:86:24: info: range check proved (CVC4: 4 VC)
slice_sums.adb:87:18: info: implicit function contract not available for proof ("Sum" might not return)
slice_sums.adb:87:18: info: precondition proved (CVC4: 2 VC)
slice_sums.adb:87:18: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove Sum (X, Slice_Bounds'(Lo_Index, Current_Lo - 1)) <= 0 (e.g. when Current_Lo = 3 and Lo_Index = 2 and X = (others => -1) and X'First = 2 and X'Last = 3) [possible fix: you should consider adding a postcondition to function Sum or turning it into an expression function in its unit spec]
slice_sums.adb:89:16: info: loop invariant initialization proved (CVC4: 1 VC)
slice_sums.adb:89:16: info: loop invariant preservation proved (CVC4: 1 VC)
slice_sums.adb:89:24: info: range check proved (CVC4: 4 VC)
slice_sums.adb:89:73: info: overflow check proved (CVC4: 4 VC)
slice_sums.adb:90:18: info: implicit function contract not available for proof ("Sum" might not return)
slice_sums.adb:90:18: info: precondition proved (CVC4: 2 VC)
slice_sums.adb:92:40: info: overflow check proved (CVC4: 2 VC)
slice_sums.adb:94:27: info: range check proved (CVC4: 2 VC)
slice_sums.adb:96:29: info: range check proved (CVC4: 2 VC)
slice_sums.adb:99:44: info: overflow check proved (CVC4: 2 VC)
slice_sums.adb:99:44: info: range check proved (CVC4: 2 VC)
slice_sums.ads:6:14: info: postcondition proved (CVC4: 4 VC; Trivial: 1 VC)
slice_sums.ads:10:31: info: range check proved (CVC4: 2 VC)
slice_sums.ads:11:34: info: range check proved (CVC4: 2 VC)
slice_sums.ads:12:31: info: implicit function contract not available for proof ("Sum" might not return)
slice_sums.ads:12:31: info: precondition proved (CVC4: 1 VC)
slice_sums.ads:13:37: info: implicit function contract not available for proof ("Sum" might not return)
slice_sums.ads:13:37: info: precondition proved (CVC4: 1 VC)
slice_sums.ads:14:23: info: implicit function contract not available for proof ("Sum" might not return)
slice_sums.ads:14:23: info: precondition proved (CVC4: 1 VC)
slice_sums.ads:21:31: info: range check proved (CVC4: 2 VC)
slice_sums.ads:22:34: info: range check proved (CVC4: 2 VC)
slice_sums.ads:23:30: medium: postcondition might fail, cannot prove Sum (X, Maximal_Sum_Slice_Bounds_2'Result) >= Sum (X, Slice_Bounds'(Lo, Hi)) (e.g. when Hi = 2 and Lo = 3 and Maximal_Sum_Slice_Bounds_2'Result = (Lo => 3, Hi => 3) and X = (others => 1) and X'First = 2 and X'Last = 3)
slice_sums.ads:23:31: info: implicit function contract not available for proof ("Sum" might not return)
slice_sums.ads:23:31: info: precondition proved (CVC4: 1 VC)
slice_sums.ads:24:37: info: implicit function contract not available for proof ("Sum" might not return)
slice_sums.ads:24:37: info: precondition proved (CVC4: 1 VC)
slice_sums.ads:25:23: info: implicit function contract not available for proof ("Sum" might not return)
slice_sums.ads:25:23: info: precondition proved (CVC4: 1 VC)
sums.ads:2:04: warning: External Axiomatizations are not supported anymore, ignored
