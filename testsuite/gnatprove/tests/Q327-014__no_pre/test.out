dispatch.adb:5:24: info: overflow check proved (CVC4: 2 VC)
dispatch.adb:10:24: high: overflow check might fail, cannot prove upper bound for X.F + 1 (e.g. when X = (F => Integer'Last)) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: add precondition (X.F <= Integer'Last - 1) to subprogram at dispatch.ads:10]
dispatch.adb:16:27: info: overflow check proved (CVC4: 2 VC)
dispatch.adb:18:10: warning: unreachable code (CVC4: 1 VC)
dispatch.adb:24:24: info: overflow check proved (CVC4: 2 VC)
dispatch.adb:29:24: info: overflow check proved (CVC4: 2 VC)
dispatch.adb:35:27: info: overflow check proved (CVC4: 2 VC)
dispatch.adb:37:10: warning: unreachable code (CVC4: 1 VC)
dispatch.ads:8:19: info: postcondition proved (CVC4: 1 VC)
dispatch.ads:8:39: info: overflow check proved (CVC4: 2 VC)
dispatch.ads:13:19: info: postcondition proved (CVC4: 1 VC)
dispatch.ads:13:40: info: overflow check proved (CVC4: 2 VC)
dispatch.ads:18:41: medium: overflow check might fail, cannot prove upper bound for X.F + 1 [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit Ada.Numerics.Big_Numerics.Big_Integers]
dispatch.ads:19:20: info: postcondition is stronger than class-wide postcondition (CVC4: 1 VC)
dispatch.ads:19:20: info: postcondition proved (CVC4: 1 VC; Trivial: 1 VC)
dispatch.ads:19:73: info: overflow check proved (CVC4: 2 VC)
dispatch.ads:23:20: info: postcondition proved (CVC4: 1 VC)
dispatch.ads:23:41: medium: overflow check might fail, cannot prove upper bound for X.F + 1 [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit Ada.Numerics.Big_Numerics.Big_Integers]
dispatch.ads:27:20: info: postcondition proved (Trivial: 1 VC)
dispatch.ads:27:20: medium: postcondition might be weaker than class-wide postcondition
dispatch.ads:28:41: medium: overflow check might fail, cannot prove upper bound for X.F + 1 [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit Ada.Numerics.Big_Numerics.Big_Integers]
dispatch.ads:33:20: info: postcondition proved (CVC4: 1 VC; Trivial: 1 VC)
dispatch.ads:33:73: info: overflow check proved (CVC4: 2 VC)
dispatch.ads:35:10: info: postcondition is stronger than class-wide postcondition (CVC4: 1 VC; Trivial: 1 VC)
dispatch.ads:35:30: info: contract case proved (CVC4: 1 VC; Trivial: 1 VC)
dispatch.ads:35:54: info: overflow check proved (CVC4: 2 VC)
dispatch.ads:36:30: info: contract case proved (CVC4: 1 VC; Trivial: 1 VC)
dispatch.ads:36:33: warning: unreachable branch (CVC4: 1 VC)
