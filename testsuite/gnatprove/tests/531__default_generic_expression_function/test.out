formal_expr_func_default.adb:8:21: high: overflow check might fail, cannot prove upper bound for Copy_With_Square (Item : T) return T is (Item * Item), in instantiation at formal_expr_func_default.adb:54 (e.g. when Item = Integer'Last) [reason for check: result of multiplication must fit in a 32-bits machine integer]
formal_expr_func_default.adb:8:21: info: implicit aspect Always_Terminates on "Copy_With_Square" has been proved, subprogram will terminate, in instantiation at formal_expr_func_default.adb:54
formal_expr_func_default.adb:18:16: info: implicit aspect Always_Terminates on "Is_Empty" has been proved, subprogram will terminate, in instantiation at formal_expr_func_default.adb:54
formal_expr_func_default.adb:37:25: high: range check might fail, cannot prove upper bound for S.Top + 1, in instantiation at formal_expr_func_default.adb:54 (e.g. when S = (Top => Stack_Range'Last, Contents => (others => 0))) [reason for check: result of addition must fit in the target type of the assignment] [possible fix: subprogram at line 14 should mention S in a precondition]
formal_expr_func_default.adb:38:23: info: index check proved (CVC5: 2 VC), in instantiation at formal_expr_func_default.adb:54
formal_expr_func_default.adb:43:25: high: range check might fail, cannot prove lower bound for S.Top - 1, in instantiation at formal_expr_func_default.adb:54 (e.g. when S = (Top => 0, Contents => (others => 0))) [reason for check: result of subtraction must fit in the target type of the assignment] [possible fix: subprogram at line 16 should mention S in a precondition]
formal_expr_func_default.adb:44:53: info: index check proved (CVC5: 2 VC), in instantiation at formal_expr_func_default.adb:54
formal_expr_func_default.adb:61:20: info: unrolling loop [info-unrolling-inlining]
formal_expr_func_default.adb:62:13: medium: "Int_Stack" might not be initialized
formal_expr_func_default.adb:67:10: info: initialization of "Val" proved
formal_expr_func_default.adb:70:23: warning: references to the "Image" attribute are handled in an imprecise way, so nothing will be known about the evaluation of the attribute reference apart from a bound on its length [imprecise-image]
