diff.adb:13:28: info: overflow check proved (CVC4: 2 VC)
diff.adb:13:28: info: range check proved (CVC4: 2 VC)
diff.adb:15:22: info: assertion proved (CVC4: 1 VC)
diff.adb:22:28: medium: overflow check might fail (e.g. when J = 0 and X = 1) [reason for check: result of exponentiation must fit in a 64-bits machine integer]
diff.adb:24:22: medium: assertion might fail
diff.adb:31:34: info: overflow check proved (CVC4: 2 VC)
diff.adb:31:34: info: range check proved (CVC4: 2 VC)
diff.adb:33:22: info: assertion proved (CVC4: 1 VC)
diff.adb:33:32: info: overflow check proved (CVC4: 2 VC)
diff.adb:34:22: info: assertion proved (CVC4: 1 VC)
diff.adb:34:23: info: overflow check proved (CVC4: 2 VC)
diff.adb:35:22: info: assertion proved (CVC4: 1 VC)
diff.adb:42:34: medium: overflow check might fail (e.g. when J = 0 and Pow2_J = 1) [reason for check: result of exponentiation must fit in a 64-bits machine integer]
diff.adb:44:22: info: assertion proved (CVC4: 1 VC)
diff.adb:44:32: medium: overflow check might fail [reason for check: result of exponentiation must fit in a 64-bits machine integer]
diff.adb:45:22: info: assertion proved (CVC4: 1 VC)
diff.adb:45:23: info: overflow check proved (CVC4: 2 VC)
diff.adb:46:22: medium: assertion might fail (e.g. when Pow2_J = 1)
diff.adb:59:34: info: overflow check proved (CVC4: 2 VC)
diff.adb:59:34: info: range check proved (CVC4: 2 VC)
diff.adb:60:34: info: division check proved (CVC4: 1 VC)
diff.adb:60:34: info: range check proved (CVC4: 2 VC)
diff.adb:62:22: info: assertion proved (CVC4: 1 VC)
diff.adb:62:28: info: overflow check proved (CVC4: 2 VC)
diff.adb:63:22: info: assertion proved (CVC4: 1 VC)
diff.adb:70:34: medium: overflow check might fail (e.g. when J = 0 and Pow2_J = 1) [reason for check: result of exponentiation must fit in a 64-bits machine integer]
diff.adb:71:34: info: division check proved (CVC4: 1 VC)
diff.adb:73:22: info: assertion proved (CVC4: 1 VC)
diff.adb:73:28: medium: overflow check might fail [reason for check: result of exponentiation must fit in a 64-bits machine integer]
diff.adb:74:22: medium: assertion might fail (e.g. when J = 1 and Y = 1)
diff2.adb:11:28: info: overflow check proved (CVC4: 1 VC)
diff2.adb:13:22: medium: assertion might fail (e.g. when X = 1)
diff2.adb:20:34: info: overflow check proved (CVC4: 1 VC)
diff2.adb:22:22: info: assertion proved (CVC4: 1 VC)
diff2.adb:22:32: info: overflow check proved (CVC4: 1 VC)
diff2.adb:23:22: info: assertion proved (CVC4: 1 VC)
diff2.adb:23:23: info: overflow check proved (CVC4: 2 VC)
diff2.adb:24:22: medium: assertion might fail (e.g. when Pow2_J = 1)
diff2.adb:36:34: info: overflow check proved (CVC4: 1 VC)
diff2.adb:37:34: info: division check proved (CVC4: 1 VC)
diff2.adb:39:22: info: assertion proved (CVC4: 1 VC)
diff2.adb:39:28: info: overflow check proved (CVC4: 1 VC)
diff2.adb:40:22: medium: assertion might fail (e.g. when J = 1 and Y = 1)
diff3.adb:11:29: info: overflow check proved (CVC4: 1 VC)
diff3.adb:12:22: medium: assertion might fail (e.g. when X = 1)
diff3.adb:13:29: medium: overflow check might fail (e.g. when J = 127 and Y = 0) [reason for check: result of exponentiation must fit in a 128-bits machine integer]
diff3.adb:13:33: info: overflow check proved (CVC4: 4 VC)
diff3.adb:21:35: info: overflow check proved (CVC4: 1 VC)
diff3.adb:23:22: info: assertion proved (CVC4: 1 VC)
diff3.adb:23:32: info: overflow check proved (CVC4: 1 VC)
diff3.adb:24:22: info: assertion proved (CVC4: 1 VC)
diff3.adb:24:23: medium: overflow check might fail, cannot prove upper bound for 2**J (e.g. when J = 0) [reason for check: result of exponentiation must fit in a 128-bits machine integer]
diff3.adb:25:22: medium: assertion might fail (e.g. when Pow2_J = 1)
diff3.adb:36:35: info: overflow check proved (CVC4: 1 VC)
diff3.adb:37:35: info: division check proved (CVC4: 1 VC)
diff3.adb:39:22: info: assertion proved (CVC4: 1 VC)
diff3.adb:39:28: info: overflow check proved (CVC4: 1 VC)
diff3.adb:40:22: medium: assertion might fail (e.g. when J = 1 and Y = 1)
