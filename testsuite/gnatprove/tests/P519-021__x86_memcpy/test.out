memcpy.adb:17:39: info: range check proved (CVC4: 1 VC)
memcpy.adb:19:07: warning: initialization of "saved_ra" has no effect
memcpy.adb:19:35: info: range check proved (CVC4: 1 VC)
memcpy.adb:20:07: warning: initialization of "ra0" has no effect
memcpy.adb:20:29: info: range check proved (CVC4: 1 VC)
memcpy.adb:21:07: warning: initialization of "ra1" has no effect
memcpy.adb:21:29: info: range check proved (CVC4: 1 VC)
memcpy.adb:22:07: warning: initialization of "ra2" has no effect
memcpy.adb:22:29: info: range check proved (CVC4: 1 VC)
memcpy.adb:23:07: warning: initialization of "ra3" has no effect
memcpy.adb:23:29: info: range check proved (CVC4: 1 VC)
memcpy.adb:24:07: warning: initialization of "ra4" has no effect
memcpy.adb:24:29: info: range check proved (CVC4: 1 VC)
memcpy.adb:25:07: warning: initialization of "ra5" has no effect
memcpy.adb:25:29: info: range check proved (CVC4: 1 VC)
memcpy.adb:26:07: warning: initialization of "ra6" has no effect
memcpy.adb:26:29: info: range check proved (CVC4: 1 VC)
memcpy.adb:27:07: warning: initialization of "ra7" has no effect
memcpy.adb:27:29: info: range check proved (CVC4: 1 VC)
memcpy.adb:28:36: info: range check proved (CVC4: 1 VC)
memcpy.adb:29:36: info: range check proved (CVC4: 1 VC)
memcpy.adb:30:36: info: range check proved (CVC4: 1 VC)
memcpy.adb:88:26: warning: unused assignment
memcpy.adb:89:27: warning: unused assignment
memcpy.adb:90:30: warning: unused assignment
memcpy.adb:110:16: medium: precondition might fail, cannot prove X86.InSafeRegion64(i,X86.RSP+8) [possible explanation: precondition of subprogram at memcpy.ads:24 should mention RBP]
memcpy.adb:110:16: warning: unused assignment to "RAX"
memcpy.adb:131:16: medium: precondition might fail, cannot prove X86.InSafeRegion64(i,X86.RSP+8) [possible explanation: precondition of subprogram at memcpy.ads:24 should mention RBP]
memcpy.adb:131:16: warning: unused assignment to "RAX"
memcpy.adb:151:21: info: assertion proved (CVC4: 1 VC)
memcpy.adb:152:21: medium: assertion might fail, cannot prove X86.Memory(SaveStackPtr) = SaveMem(SaveStackPtr)
memcpy.adb:160:21: medium: assertion might fail, cannot prove X86.RBP = saved_rbp [possible explanation: precondition of subprogram at memcpy.ads:24 should mention RBP]
memcpy.adb:164:12: medium: assertion might fail, cannot prove X86.Memory(i) = SaveMem(i)
memcpy.adb:171:39: info: range check proved (CVC4: 1 VC)
memcpy.adb:172:39: info: range check proved (CVC4: 1 VC)
memcpy.adb:173:39: info: range check proved (CVC4: 1 VC)
memcpy.adb:175:36: info: range check proved (CVC4: 1 VC)
memcpy.adb:176:35: info: range check proved (CVC4: 1 VC)
memcpy.adb:189:28: info: division check proved (CVC4: 2 VC)
memcpy.adb:207:32: info: loop invariant initialization proved (CVC4: 1 VC)
memcpy.adb:207:32: info: loop invariant preservation proved (CVC4: 1 VC)
memcpy.adb:210:32: info: loop invariant initialization proved (CVC4: 1 VC; Trivial: 1 VC)
memcpy.adb:210:32: info: loop invariant preservation proved (CVC4: 1 VC; Trivial: 1 VC)
memcpy.adb:216:32: info: loop invariant initialization proved (CVC4: 1 VC)
memcpy.adb:216:32: medium: loop invariant might fail after first iteration, cannot prove saved_rbp_16 = X86.ReadMem64(X86.RBP - 16)
memcpy.adb:217:32: info: loop invariant initialization proved (CVC4: 1 VC)
memcpy.adb:217:32: medium: loop invariant might fail after first iteration, cannot prove saved_rbp_72 = X86.ReadMem64(X86.RBP - 72)
memcpy.adb:219:32: info: loop invariant initialization proved (CVC4: 1 VC)
memcpy.adb:219:32: info: loop invariant preservation proved (CVC4: 1 VC)
memcpy.adb:219:59: info: division check proved (CVC4: 2 VC)
memcpy.adb:222:32: info: loop invariant initialization proved (CVC4: 1 VC)
memcpy.adb:222:32: medium: loop invariant might fail after first iteration, cannot prove X86.ReadMem64(X86.RBP) = saved_rbp
memcpy.adb:223:32: info: loop invariant initialization proved (CVC4: 1 VC)
memcpy.adb:223:32: medium: loop invariant might fail after first iteration, cannot prove X86.ReadMem64(X86.RSP+8) = saved_ra
memcpy.adb:242:23: warning: unused assignment
memcpy.adb:243:23: warning: unused assignment
memcpy.adb:262:23: warning: unused assignment
memcpy.adb:263:23: warning: unused assignment
memcpy.adb:271:24: info: assertion proved (CVC4: 1 VC)
memcpy.adb:274:24: info: assertion proved (CVC4: 1 VC; Trivial: 1 VC)
memcpy.adb:280:24: info: assertion proved (CVC4: 1 VC)
memcpy.adb:281:24: info: assertion proved (CVC4: 1 VC)
memcpy.adb:283:24: info: assertion proved (CVC4: 1 VC)
memcpy.adb:283:51: info: division check proved (CVC4: 1 VC)
memcpy.adb:285:24: medium: assertion might fail, cannot prove X86.InRange64(X86.RDX, saved_rbp_16, saved_rbp_72) [possible explanation: loop invariant at line 207 should mention RDX]
memcpy.adb:286:24: medium: assertion might fail, cannot prove X86.InRange64(X86.RDX+1, saved_rbp_16, saved_rbp_72) [possible explanation: loop invariant at line 207 should mention RDX]
memcpy.adb:287:24: medium: assertion might fail, cannot prove X86.InRange64(X86.RDX+2, saved_rbp_16, saved_rbp_72) [possible explanation: loop invariant at line 207 should mention RDX]
memcpy.adb:288:24: medium: assertion might fail, cannot prove X86.InRange64(X86.RDX+3, saved_rbp_16, saved_rbp_72) [possible explanation: loop invariant at line 207 should mention RDX]
memcpy.adb:289:24: medium: assertion might fail, cannot prove X86.InRange64(X86.RDX+4, saved_rbp_16, saved_rbp_72) [possible explanation: loop invariant at line 207 should mention RDX]
memcpy.adb:290:24: medium: assertion might fail, cannot prove X86.InRange64(X86.RDX+5, saved_rbp_16, saved_rbp_72) [possible explanation: loop invariant at line 207 should mention RDX]
memcpy.adb:291:24: medium: assertion might fail, cannot prove X86.InRange64(X86.RDX+6, saved_rbp_16, saved_rbp_72) [possible explanation: loop invariant at line 207 should mention RDX]
memcpy.adb:292:24: medium: assertion might fail, cannot prove X86.InRange64(X86.RDX+7, saved_rbp_16, saved_rbp_72) [possible explanation: loop invariant at line 207 should mention RDX]
memcpy.adb:309:21: info: assertion proved (CVC4: 1 VC; Trivial: 1 VC)
memcpy.adb:314:21: medium: assertion might fail, cannot prove saved_rbp_16 = X86.ReadMem64(X86.RBP - 16)
memcpy.adb:315:21: medium: assertion might fail, cannot prove saved_rbp_72 = X86.ReadMem64(X86.RBP - 72)
memcpy.adb:317:21: medium: assertion might fail, cannot prove X86.ReadMem64(X86.RBP-8) >= X86.ReadMem64(X86.RBP - 72)/8
memcpy.adb:317:76: info: division check proved (CVC4: 1 VC)
memcpy.adb:319:21: medium: assertion might fail, cannot prove X86.ReadMem64(X86.RBP) = saved_rbp
memcpy.adb:320:21: medium: assertion might fail, cannot prove X86.ReadMem64(X86.RSP+8) = saved_ra
memcpy.adb:326:35: info: range check proved (CVC4: 1 VC)
memcpy.adb:327:35: info: range check proved (CVC4: 1 VC)
memcpy.adb:328:39: info: range check proved (CVC4: 1 VC)
memcpy.adb:330:36: info: range check proved (CVC4: 1 VC)
memcpy.adb:331:35: info: range check proved (CVC4: 1 VC)
memcpy.adb:353:32: info: loop invariant initialization proved (CVC4: 1 VC)
memcpy.adb:353:32: info: loop invariant preservation proved (CVC4: 1 VC)
memcpy.adb:356:32: info: loop invariant initialization proved (CVC4: 1 VC; Trivial: 1 VC)
memcpy.adb:356:32: info: loop invariant preservation proved (CVC4: 1 VC; Trivial: 1 VC)
memcpy.adb:362:32: info: loop invariant initialization proved (CVC4: 1 VC)
memcpy.adb:362:32: medium: loop invariant might fail after first iteration, cannot prove saved_32 = X86.ReadMem64(X86.RBP - 32)
memcpy.adb:363:32: info: loop invariant initialization proved (CVC4: 1 VC)
memcpy.adb:363:32: medium: loop invariant might fail after first iteration, cannot prove saved_72 = X86.ReadMem64(X86.RBP - 72)
memcpy.adb:365:32: info: loop invariant initialization proved (CVC4: 1 VC)
memcpy.adb:365:32: info: loop invariant preservation proved (CVC4: 1 VC)
memcpy.adb:369:32: info: loop invariant initialization proved (CVC4: 1 VC)
memcpy.adb:369:32: medium: loop invariant might fail after first iteration, cannot prove X86.ReadMem64(X86.RBP) = saved_rbp
memcpy.adb:371:32: info: loop invariant initialization proved (CVC4: 1 VC)
memcpy.adb:371:32: medium: loop invariant might fail after first iteration, cannot prove X86.ReadMem64(X86.RSP+8) = saved_ra
memcpy.adb:385:23: warning: unused assignment
memcpy.adb:386:23: warning: unused assignment
memcpy.adb:401:23: warning: unused assignment
memcpy.adb:402:23: warning: unused assignment
memcpy.adb:411:24: info: assertion proved (CVC4: 1 VC)
memcpy.adb:414:24: info: assertion proved (CVC4: 1 VC; Trivial: 1 VC)
memcpy.adb:420:24: info: assertion proved (CVC4: 1 VC)
memcpy.adb:421:24: info: assertion proved (CVC4: 1 VC)
memcpy.adb:423:24: info: assertion proved (CVC4: 1 VC)
memcpy.adb:426:24: medium: assertion might fail, cannot prove X86.InRange64(X86.RDX, saved_32, saved_72) [possible explanation: loop invariant at line 353 should mention RDX]
memcpy.adb:444:21: info: assertion proved (CVC4: 1 VC; Trivial: 1 VC)
memcpy.adb:449:21: medium: assertion might fail, cannot prove saved_32 = X86.ReadMem64(X86.RBP - 32)
memcpy.adb:450:21: medium: assertion might fail, cannot prove saved_72 = X86.ReadMem64(X86.RBP - 72)
memcpy.adb:452:21: info: assertion proved (CVC4: 1 VC)
memcpy.adb:452:76: info: division check proved (CVC4: 1 VC)
memcpy.adb:454:21: medium: assertion might fail, cannot prove X86.ReadMem64(X86.RBP) = saved_rbp
memcpy.adb:455:21: medium: assertion might fail, cannot prove X86.ReadMem64(X86.RSP+8) = saved_ra
memcpy.adb:463:10: warning: initialization of "saved_ra" has no effect
memcpy.adb:463:38: info: range check proved (CVC4: 1 VC)
memcpy.adb:464:10: warning: initialization of "SaveStackPtr" has no effect
memcpy.adb:464:42: info: range check proved (CVC4: 1 VC)
memcpy.adb:465:10: warning: initialization of "ra0" has no effect
memcpy.adb:465:32: info: range check proved (CVC4: 1 VC)
memcpy.adb:466:10: warning: initialization of "ra1" has no effect
memcpy.adb:466:32: info: range check proved (CVC4: 1 VC)
memcpy.adb:467:10: warning: initialization of "ra2" has no effect
memcpy.adb:467:32: info: range check proved (CVC4: 1 VC)
memcpy.adb:468:10: warning: initialization of "ra3" has no effect
memcpy.adb:468:32: info: range check proved (CVC4: 1 VC)
memcpy.adb:469:10: warning: initialization of "ra4" has no effect
memcpy.adb:469:32: info: range check proved (CVC4: 1 VC)
memcpy.adb:470:10: warning: initialization of "ra5" has no effect
memcpy.adb:470:32: info: range check proved (CVC4: 1 VC)
memcpy.adb:471:10: warning: initialization of "ra6" has no effect
memcpy.adb:471:32: info: range check proved (CVC4: 1 VC)
memcpy.adb:472:10: warning: initialization of "ra7" has no effect
memcpy.adb:472:32: info: range check proved (CVC4: 1 VC)
memcpy.adb:485:23: warning: unused assignment
memcpy.adb:486:23: warning: unused assignment
memcpy.adb:505:13: warning: statement has no effect
memcpy.adb:505:13: warning: unused assignment to "RCX"
memcpy.adb:523:18: warning: unused assignment
memcpy.adb:526:18: warning: unused assignment
memcpy.adb:529:18: warning: unused assignment
memcpy.adb:532:13: warning: statement has no effect
memcpy.adb:532:13: warning: unused assignment to "RDI"
memcpy.adb:535:13: warning: statement has no effect
memcpy.adb:535:13: warning: unused assignment to "RAX"
memcpy.adb:543:18: warning: unused assignment
memcpy.adb:546:18: warning: unused assignment
memcpy.adb:574:10: info: precondition proved (CVC4: 1 VC; Trivial: 1 VC)
memcpy.adb:574:10: warning: unused assignment to "RAX"
memcpy.adb:574:10: warning: unused assignment to "RSI"
memcpy.adb:574:10: warning: unused assignment to "RSP"
memcpy.adb:590:18: warning: unused assignment
memcpy.adb:591:10: warning: statement has no effect
memcpy.adb:591:10: warning: unused assignment to "RSP"
memcpy.ads:17:06: info: data dependencies proved
memcpy.ads:18:14: info: postcondition proved (CVC4: 1 VC)
memcpy.ads:21:06: info: data dependencies proved
memcpy.ads:22:14: info: postcondition proved (CVC4: 1 VC)
memcpy.ads:25:06: info: data dependencies proved
memcpy.ads:25:28: low: unused global "Dummy_Var"
memcpy.ads:25:28: warning: "Dummy_Var" is not modified, could be INPUT
memcpy.ads:25:54: low: unused global "Exit_Called"
memcpy.ads:25:54: warning: "Exit_Called" is not modified, could be INPUT
memcpy.ads:25:71: warning: unused initial value of "CarryFlag"
memcpy.ads:26:31: warning: unused initial value of "OverflowFlag"
memcpy.ads:26:49: warning: unused initial value of "SignFlag"
memcpy.ads:26:63: warning: unused initial value of "ZeroFlag"
memcpy.ads:27:31: warning: unused initial value of "RAX"
memcpy.ads:27:61: low: unused global "RBX"
memcpy.ads:27:61: warning: "RBX" is not modified, could be INPUT
memcpy.ads:28:51: warning: "RSI" is not modified, could be INPUT
memcpy.ads:28:61: warning: "RDI" is not modified, could be INPUT
memcpy.ads:29:31: low: unused global "R8"
memcpy.ads:29:31: warning: "R8" is not modified, could be INPUT
memcpy.ads:29:40: low: unused global "R9"
memcpy.ads:29:40: warning: "R9" is not modified, could be INPUT
memcpy.ads:29:49: low: unused global "R10"
memcpy.ads:29:49: warning: "R10" is not modified, could be INPUT
memcpy.ads:29:59: low: unused global "R11"
memcpy.ads:29:59: warning: "R11" is not modified, could be INPUT
memcpy.ads:30:31: low: unused global "R12"
memcpy.ads:30:31: warning: "R12" is not modified, could be INPUT
memcpy.ads:30:41: low: unused global "R13"
memcpy.ads:30:41: warning: "R13" is not modified, could be INPUT
memcpy.ads:30:51: low: unused global "R14"
memcpy.ads:30:51: warning: "R14" is not modified, could be INPUT
memcpy.ads:30:61: low: unused global "R15"
memcpy.ads:30:61: warning: "R15" is not modified, could be INPUT
memcpy.ads:31:31: low: unused global "StackAddressSize"
memcpy.ads:31:53: low: unused global "FS"
memcpy.ads:31:61: low: unused global "GS"
memcpy.ads:35:14: info: postcondition proved (CVC4: 11 VC; Trivial: 1 VC)
memcpy.ads:52:06: info: data dependencies proved
memcpy.ads:53:31: info: initialization of "RAX" proved
memcpy.ads:53:40: info: initialization of "CarryFlag" proved
memcpy.ads:53:55: info: initialization of "SignFlag" proved
memcpy.ads:53:69: info: initialization of "OverflowFlag" proved
memcpy.ads:53:87: info: initialization of "ZeroFlag" proved
memcpy.ads:66:06: medium: postcondition might fail, cannot prove X86.Memory(X86.RBP'Old-16) = X86.Memory'Old(X86.RBP'Old-16)
memcpy.ads:86:92: info: division check proved (CVC4: 1 VC)
memcpy.ads:111:06: info: data dependencies proved
memcpy.ads:112:31: info: initialization of "ZeroFlag" proved
memcpy.ads:112:45: info: initialization of "SignFlag" proved
memcpy.ads:112:59: info: initialization of "CarryFlag" proved
memcpy.ads:112:75: info: initialization of "OverflowFlag" proved
memcpy.ads:113:61: warning: unused initial value of "RAX"
memcpy.ads:129:06: medium: postcondition might fail, cannot prove X86.Memory(X86.RBP'Old-32+4) = X86.Memory'Old(X86.RBP'Old-32+4)
memcpy.ads:169:09: info: data dependencies proved
memcpy.ads:170:52: warning: unused initial value of "SignFlag"
memcpy.ads:170:66: warning: unused initial value of "ZeroFlag"
memcpy.ads:171:44: warning: unused initial value of "RCX"
memcpy.ads:171:54: warning: unused initial value of "RDX"
memcpy.ads:178:09: medium: postcondition might fail, cannot prove X86.Memory(X86.RSP'Old) = X86.Memory'Old(X86.RSP'old)
