my_map.adb:14:36: info: pointer dereference check proved (altergo: 1 VC)
my_map.adb:15:35: info: null exclusion check proved (CVC5: 1 VC)
my_map.adb:15:49: info: pointer dereference check proved (CVC5: 1 VC)
my_map.adb:15:56: info: pointer dereference check proved (CVC5: 1 VC)
my_map.adb:16:35: info: subprogram variant proved (Trivial)
my_map.adb:16:47: info: pointer dereference check proved (altergo: 1 VC)
my_map.adb:26:13: info: absence of resource or memory leak at end of scope proved (CVC5: 1 VC)
my_map.adb:28:15: info: absence of resource or memory leak proved (altergo: 1 VC)
my_map.adb:31:19: info: absence of resource or memory leak at end of scope proved (CVC5: 1 VC)
my_map.adb:32:19: info: absence of resource or memory leak at end of scope proved (CVC5: 1 VC)
my_map.adb:32:44: info: pointer dereference check proved (CVC5: 1 VC)
my_map.adb:34:21: info: absence of resource or memory leak proved (altergo: 1 VC)
my_map.adb:34:25: info: pointer dereference check proved (CVC5: 1 VC)
my_map.adb:35:20: info: pointer dereference check proved (altergo: 1 VC)
my_map.adb:35:26: info: absence of resource or memory leak proved (altergo: 1 VC)
my_map.adb:37:19: info: absence of resource or memory leak proved (Trivial: 1 VC; altergo: 1 VC)
my_map.adb:48:10: info: loop variant proved (Trivial)
my_map.adb:49:33: info: loop invariant initialization proved (CVC5: 1 VC; altergo: 1 VC)
my_map.adb:49:33: info: loop invariant preservation proved (altergo: 2 VC)
my_map.adb:50:14: info: pointer dereference check proved (CVC5: 1 VC)
my_map.adb:53:16: info: pointer dereference check proved (CVC5: 1 VC)
my_map.adb:62:10: info: loop variant proved (Trivial)
my_map.adb:63:33: info: loop invariant initialization proved (CVC5: 1 VC)
my_map.adb:63:33: info: loop invariant preservation proved (altergo: 1 VC)
my_map.adb:65:13: info: loop invariant initialization proved (CVC5: 1 VC; Trivial: 1 VC; altergo: 1 VC)
my_map.adb:65:13: info: loop invariant preservation proved (Trivial: 1 VC; Z3: 1 VC; altergo: 1 VC)
my_map.adb:67:22: info: precondition proved (CVC5: 2 VC)
my_map.adb:67:59: info: precondition proved (altergo: 2 VC)
my_map.adb:69:14: info: pointer dereference check proved (altergo: 1 VC)
my_map.adb:70:14: info: pointer dereference check proved (altergo: 1 VC)
my_map.adb:70:21: info: pointer dereference check proved (CVC5: 1 VC)
my_map.adb:73:16: info: pointer dereference check proved (altergo: 1 VC)
my_map.adb:83:17: info: postcondition proved (CVC5: 2 VC; Trivial: 2 VC; Z3: 3 VC)
my_map.adb:83:37: info: pointer dereference check proved (altergo: 1 VC)
my_map.adb:86:14: medium: resource or memory leak might occur at end of scope
my_map.adb:86:42: medium: resource or memory leak might occur [possible explanation: call to allocating function inside an assertion leaks some resource or memory]
my_map.adb:89:44: info: pointer dereference check proved (CVC5: 1 VC)
my_map.adb:89:70: info: range check proved (CVC5: 2 VC)
my_map.adb:90:34: info: precondition proved (altergo: 1 VC)
my_map.adb:90:50: info: range check proved (CVC5: 2 VC)
my_map.adb:90:55: info: precondition proved (altergo: 1 VC)
my_map.adb:90:75: info: range check proved (CVC5: 1 VC; altergo: 1 VC)
my_map.adb:91:37: info: pointer dereference check proved (CVC5: 1 VC)
my_map.adb:91:67: info: range check proved (CVC5: 2 VC)
my_map.adb:92:30: info: pointer dereference check proved (CVC5: 1 VC)
my_map.adb:93:53: info: pointer dereference check proved (CVC5: 1 VC)
my_map.adb:94:24: info: precondition proved (altergo: 1 VC)
my_map.adb:94:41: info: pointer dereference check proved (CVC5: 1 VC)
my_map.adb:94:50: info: pointer dereference check proved (CVC5: 1 VC)
my_map.adb:94:57: info: pointer dereference check proved (CVC5: 1 VC)
my_map.adb:97:37: info: pointer dereference check proved (altergo: 1 VC)
my_map.adb:99:16: info: absence of resource or memory leak at end of scope proved (CVC5: 1 VC)
my_map.adb:99:40: info: null exclusion check proved (altergo: 1 VC)
my_map.adb:99:54: info: pointer dereference check proved (altergo: 1 VC)
my_map.adb:99:61: info: pointer dereference check proved (altergo: 1 VC)
my_map.adb:101:18: info: absence of resource or memory leak proved (altergo: 1 VC)
my_map.adb:101:40: info: pointer dereference check proved (CVC5: 1 VC)
my_map.adb:108:07: medium: resource or memory leak might occur at end of scope
my_map.adb:109:07: info: initialization of "R" proved
my_map.adb:109:07: medium: resource or memory leak might occur at end of scope
my_map.adb:113:33: info: loop invariant initialization proved (altergo: 1 VC)
my_map.adb:113:33: info: loop invariant preservation proved (altergo: 1 VC)
my_map.adb:114:33: info: loop invariant initialization proved (altergo: 1 VC)
my_map.adb:114:33: info: loop invariant preservation proved (Z3: 1 VC)
my_map.adb:119:13: info: loop invariant initialization proved (altergo: 1 VC)
my_map.adb:119:13: info: loop invariant preservation proved (Z3: 1 VC)
my_map.adb:119:44: info: pointer dereference check proved (CVC5: 1 VC; altergo: 1 VC)
my_map.adb:119:86: info: range check proved (CVC5: 1 VC; altergo: 3 VC)
my_map.adb:121:13: info: loop invariant initialization proved (Trivial: 1 VC; altergo: 1 VC)
my_map.adb:121:13: info: loop invariant preservation proved (Trivial: 1 VC; Z3: 1 VC)
my_map.adb:122:31: info: pointer dereference check proved (altergo: 2 VC)
my_map.adb:122:73: info: range check proved (CVC5: 3 VC; altergo: 1 VC)
my_map.adb:124:13: info: loop invariant initialization proved (altergo: 1 VC)
my_map.adb:124:13: info: loop invariant preservation proved (Z3: 1 VC)
my_map.adb:124:44: info: pointer dereference check proved (CVC5: 2 VC)
my_map.adb:125:36: info: range check proved (CVC5: 2 VC; altergo: 2 VC)
my_map.adb:125:77: info: range check proved (CVC5: 3 VC; altergo: 1 VC)
my_map.adb:127:13: info: loop invariant initialization proved (CVC5: 1 VC; altergo: 1 VC)
my_map.adb:127:13: info: loop invariant preservation proved (Z3: 2 VC)
my_map.adb:127:44: info: pointer dereference check proved (CVC5: 1 VC; altergo: 1 VC)
my_map.adb:128:40: info: range check proved (CVC5: 2 VC; altergo: 2 VC)
my_map.adb:129:23: info: precondition proved (CVC5: 1 VC; altergo: 1 VC)
my_map.adb:129:55: info: range check proved (CVC5: 2 VC; altergo: 2 VC)
my_map.adb:129:60: info: precondition proved (altergo: 2 VC)
my_map.adb:129:76: info: range check proved (altergo: 4 VC)
my_map.adb:130:23: info: precondition proved (CVC5: 1 VC; altergo: 1 VC)
my_map.adb:130:55: info: range check proved (altergo: 4 VC)
my_map.adb:130:60: info: precondition proved (CVC5: 1 VC; Z3: 1 VC)
my_map.adb:130:92: info: range check proved (CVC5: 1 VC; altergo: 3 VC)
my_map.adb:135:13: info: loop invariant initialization proved (CVC5: 1 VC)
my_map.adb:135:13: info: loop invariant preservation proved (Z3: 1 VC)
my_map.adb:135:28: info: pointer dereference check proved (CVC5: 2 VC)
my_map.adb:135:59: info: range check proved (altergo: 4 VC)
my_map.adb:137:13: info: loop invariant initialization proved (Trivial: 1 VC; altergo: 1 VC)
my_map.adb:137:13: info: loop invariant preservation proved (Trivial: 1 VC; Z3: 1 VC)
my_map.adb:138:31: info: pointer dereference check proved (altergo: 2 VC)
my_map.adb:138:62: info: range check proved (CVC5: 2 VC; altergo: 2 VC)
my_map.adb:140:13: info: loop invariant initialization proved (altergo: 1 VC)
my_map.adb:140:13: info: loop invariant preservation proved (Z3: 1 VC)
my_map.adb:140:33: info: pointer dereference check proved (CVC5: 2 VC)
my_map.adb:140:59: info: range check proved (CVC5: 2 VC; altergo: 2 VC)
my_map.adb:140:84: info: range check proved (CVC5: 1 VC; altergo: 3 VC)
my_map.adb:142:13: info: loop invariant initialization proved (altergo: 2 VC)
my_map.adb:142:13: info: loop invariant preservation proved (Z3: 2 VC)
my_map.adb:142:33: info: pointer dereference check proved (altergo: 2 VC)
my_map.adb:143:38: info: range check proved (CVC5: 2 VC; altergo: 2 VC)
my_map.adb:143:46: info: precondition proved (CVC5: 2 VC)
my_map.adb:143:67: info: range check proved (CVC5: 2 VC; altergo: 2 VC)
my_map.adb:143:72: info: precondition proved (altergo: 2 VC)
my_map.adb:143:88: info: range check proved (CVC5: 2 VC; altergo: 2 VC)
my_map.adb:144:21: info: precondition proved (CVC5: 2 VC)
my_map.adb:144:42: info: range check proved (CVC5: 1 VC; altergo: 3 VC)
my_map.adb:144:47: info: precondition proved (CVC5: 1 VC; Z3: 1 VC)
my_map.adb:144:63: info: range check proved (CVC5: 1 VC; altergo: 3 VC)
my_map.adb:146:10: info: precondition proved (altergo: 1 VC)
my_map.adb:148:14: info: pointer dereference check proved (altergo: 1 VC)
my_map.adb:149:14: info: pointer dereference check proved (altergo: 1 VC)
my_map.adb:149:21: info: pointer dereference check proved (CVC5: 1 VC)
my_map.adb:152:16: info: pointer dereference check proved (CVC5: 1 VC)
my_map.adb:154:07: info: assertion proved (Z3: 1 VC)
my_map.adb:161:10: info: loop variant proved (Trivial)
my_map.adb:162:33: info: loop invariant initialization proved (CVC5: 1 VC; altergo: 1 VC)
my_map.adb:162:33: info: loop invariant preservation proved (CVC5: 1 VC; altergo: 1 VC)
my_map.adb:163:33: info: loop invariant initialization proved (CVC5: 1 VC)
my_map.adb:163:33: info: loop invariant preservation proved (altergo: 1 VC)
my_map.adb:163:33: info: precondition proved (CVC5: 1 VC; Z3: 1 VC)
my_map.adb:163:54: info: precondition proved (CVC5: 1 VC; altergo: 1 VC)
my_map.adb:164:14: info: pointer dereference check proved (altergo: 1 VC)
my_map.adb:165:21: info: null exclusion check proved (CVC5: 1 VC)
my_map.adb:165:21: info: pointer dereference check proved (altergo: 1 VC)
my_map.adb:167:16: info: pointer dereference check proved (altergo: 1 VC)
my_map.adb:169:07: info: only expected exception raised (CVC5: 1 VC)
my_map.adb:176:10: info: loop variant proved (Trivial)
my_map.adb:177:33: info: loop invariant initialization proved (altergo: 1 VC)
my_map.adb:177:33: info: loop invariant preservation proved (CVC5: 1 VC)
my_map.adb:178:33: info: loop invariant initialization proved (altergo: 1 VC)
my_map.adb:178:33: info: loop invariant preservation proved (CVC5: 1 VC)
my_map.adb:178:33: info: precondition proved (CVC5: 2 VC)
my_map.adb:178:54: info: precondition proved (CVC5: 2 VC)
my_map.adb:180:13: info: loop invariant initialization proved (CVC5: 1 VC; Trivial: 1 VC; altergo: 1 VC)
my_map.adb:180:13: info: loop invariant preservation proved (Trivial: 1 VC; Z3: 1 VC; altergo: 1 VC)
my_map.adb:182:22: info: precondition proved (altergo: 2 VC)
my_map.adb:182:59: info: precondition proved (CVC5: 2 VC)
my_map.adb:184:14: info: pointer dereference check proved (altergo: 1 VC)
my_map.adb:185:21: info: null exclusion check proved (CVC5: 1 VC)
my_map.adb:185:21: info: pointer dereference check proved (CVC5: 1 VC)
my_map.adb:187:16: info: pointer dereference check proved (altergo: 1 VC)
my_map.adb:189:07: info: only expected exception raised (Z3: 1 VC)
my_map.ads:13:13: info: function contract might not be available on recursive calls
my_map.ads:13:13: info: implicit terminating annotation on "Model_Contains" has been proved, subprogram will terminate
my_map.ads:16:14: info: postcondition proved (Trivial: 1 VC)
my_map.ads:19:13: info: implicit function contract might not be available on recursive calls
my_map.ads:19:13: info: implicit terminating annotation on "Model_Value" has been proved, subprogram will terminate
my_map.ads:25:13: info: implicit terminating annotation on "At_End_Borrow" has been proved, subprogram will terminate
my_map.ads:26:07: info: dynamic accessibility check proved (Trivial)
my_map.ads:30:13: info: implicit terminating annotation on "At_End_Borrow" has been proved, subprogram will terminate
my_map.ads:31:07: info: dynamic accessibility check proved (Trivial)
my_map.ads:35:13: info: implicit terminating annotation on "Contains" has been proved, subprogram will terminate
my_map.ads:36:14: info: postcondition proved (Z3: 1 VC; altergo: 1 VC)
my_map.ads:40:14: info: postcondition proved (Z3: 2 VC)
my_map.ads:40:45: info: precondition proved (altergo: 1 VC)
my_map.ads:44:14: info: postcondition proved (Trivial: 1 VC; Z3: 5 VC)
my_map.ads:44:45: info: precondition proved (altergo: 1 VC)
my_map.ads:47:14: medium: resource or memory leak might occur at end of scope
my_map.ads:47:42: medium: resource or memory leak might occur [possible explanation: call to allocating function inside an assertion leaks some resource or memory]
my_map.ads:49:44: info: pointer dereference check proved (altergo: 1 VC)
my_map.ads:49:70: info: range check proved (CVC5: 1 VC; altergo: 1 VC)
my_map.ads:52:14: medium: resource or memory leak might occur at end of scope
my_map.ads:52:42: medium: resource or memory leak might occur [possible explanation: call to allocating function inside an assertion leaks some resource or memory]
my_map.ads:54:30: info: pointer dereference check proved (altergo: 1 VC)
my_map.ads:54:60: info: range check proved (CVC5: 1 VC; altergo: 1 VC)
my_map.ads:55:40: info: precondition proved (altergo: 1 VC)
my_map.ads:55:56: info: range check proved (altergo: 2 VC)
my_map.ads:55:61: info: precondition proved (altergo: 1 VC)
my_map.ads:55:81: info: range check proved (altergo: 2 VC)
my_map.ads:57:13: info: implicit terminating annotation on "Constant_Access" has been proved, subprogram will terminate
my_map.ads:59:14: info: postcondition proved (altergo: 1 VC)
my_map.ads:59:14: info: precondition proved (altergo: 1 VC)
my_map.ads:59:58: info: pointer dereference check proved (CVC5: 1 VC)
my_map.ads:61:13: info: implicit terminating annotation on "Reference" has been proved, subprogram will terminate
my_map.ads:63:14: info: postcondition proved (CVC5: 1 VC; Z3: 2 VC)
my_map.ads:63:14: info: precondition proved (altergo: 1 VC)
my_map.ads:63:52: info: pointer dereference check proved (altergo: 1 VC)
my_map.ads:65:12: info: precondition proved (altergo: 1 VC)
my_map.ads:65:82: info: pointer dereference check proved (altergo: 1 VC)
my_map.ads:69:13: info: during checks for quantification at my_map.ads:108
my_map.ads:69:13: info: implicit terminating annotation on "First" has been proved, subprogram will terminate
my_map.ads:69:13: info: precondition proved (Trivial: 1 VC)
my_map.ads:71:13: info: implicit terminating annotation on "Has_Element" has been proved, subprogram will terminate
my_map.ads:74:13: info: during checks for quantification at my_map.ads:108
my_map.ads:74:13: info: implicit terminating annotation on "Has_Element_No_Rec_Wrapper" has been proved, subprogram will terminate
my_map.ads:74:13: info: precondition proved (Trivial: 1 VC)
my_map.ads:77:13: info: implicit function contract might not be available on recursive calls
my_map.ads:77:13: info: implicit terminating annotation on "Next" has been proved, subprogram will terminate
my_map.ads:81:13: info: during checks for quantification at my_map.ads:108
my_map.ads:81:13: info: implicit terminating annotation on "Next_No_Rec_Wrapper" has been proved, subprogram will terminate
my_map.ads:81:13: info: precondition proved (altergo: 2 VC)
my_map.ads:82:07: info: precondition proved (CVC5: 1 VC; altergo: 1 VC)
my_map.ads:86:13: info: during checks for quantification at my_map.ads:108
my_map.ads:86:13: info: implicit terminating annotation on "Element" has been proved, subprogram will terminate
my_map.ads:86:13: info: precondition proved (altergo: 2 VC)
my_map.ads:90:13: info: function contract might not be available on recursive calls
my_map.ads:90:13: info: implicit terminating annotation on "Deep_Copy" has been proved, subprogram will terminate
my_map.ads:94:08: info: postcondition proved (Trivial: 1 VC; Z3: 1 VC; altergo: 4 VC)
my_map.ads:97:27: info: pointer dereference check proved (CVC5: 1 VC)
my_map.ads:97:68: info: range check proved (CVC5: 2 VC)
my_map.ads:99:42: info: pointer dereference check proved (altergo: 1 VC)
my_map.ads:99:68: info: range check proved (CVC5: 1 VC; altergo: 1 VC)
my_map.ads:100:23: info: precondition proved (altergo: 1 VC)
my_map.ads:100:39: info: range check proved (CVC5: 1 VC; altergo: 1 VC)
my_map.ads:100:44: info: precondition proved (CVC5: 1 VC)
my_map.ads:100:75: info: range check proved (CVC5: 2 VC)
my_map.ads:103:14: info: postcondition proved (CVC5: 1 VC)
my_map.ads:110:07: info: in default value of private type at my_map.ads:4
my_map.ads:110:07: info: null exclusion check proved (altergo: 1 VC)
my_map.ads:115:26: info: subprogram variant justified
my_map.ads:115:41: info: pointer dereference check proved (CVC5: 1 VC)
my_map.ads:121:11: info: pointer dereference check proved (CVC5: 1 VC)
my_map.ads:121:26: info: pointer dereference check proved (altergo: 1 VC)
my_map.ads:121:33: info: pointer dereference check proved (CVC5: 1 VC)
my_map.ads:121:42: info: precondition proved (CVC5: 1 VC)
my_map.ads:121:42: info: subprogram variant proved (Trivial)
my_map.ads:121:56: info: pointer dereference check proved (altergo: 1 VC)
my_map.ads:127:28: info: subprogram variant proved (Trivial)
my_map.ads:127:52: info: range check proved (CVC5: 2 VC)
my_map.ads:129:26: info: precondition proved (CVC5: 1 VC; altergo: 1 VC)
my_map.ads:129:26: info: subprogram variant proved (Trivial)
my_map.ads:129:39: info: pointer dereference check proved (CVC5: 1 VC)
my_map.ads:131:18: info: pointer dereference check proved (altergo: 1 VC)
my_map.ads:133:33: info: pointer dereference check proved (CVC5: 1 VC)
my_map.ads:133:42: info: precondition proved (CVC5: 1 VC)
my_map.ads:133:63: info: range check proved (CVC5: 1 VC; altergo: 1 VC)
use_my_map.adb:5:14: info: postcondition proved (Z3: 2 VC)
use_my_map.adb:5:45: info: precondition proved (altergo: 1 VC)
use_my_map.adb:8:38: info: precondition proved (altergo: 1 VC)
use_my_map.adb:10:09: info: pointer dereference check proved (altergo: 1 VC)
