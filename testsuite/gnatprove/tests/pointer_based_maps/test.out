my_map.adb:32:13: info: absence of memory leak at end of scope proved (CVC4: 1 VC)
my_map.adb:34:15: info: absence of memory leak proved (CVC4: 1 VC)
my_map.adb:37:19: info: absence of memory leak at end of scope proved (CVC4: 1 VC)
my_map.adb:38:19: info: absence of memory leak at end of scope proved (CVC4: 1 VC)
my_map.adb:38:44: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:40:21: info: absence of memory leak proved (CVC4: 1 VC)
my_map.adb:40:25: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:41:20: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:41:26: info: absence of memory leak proved (CVC4: 1 VC)
my_map.adb:43:19: info: absence of memory leak proved (CVC4: 1 VC; Trivial: 1 VC)
my_map.adb:54:33: info: loop invariant initialization proved (CVC4: 2 VC)
my_map.adb:54:33: info: loop invariant preservation proved (CVC4: 2 VC)
my_map.adb:55:14: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:58:16: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:67:33: info: loop invariant initialization proved (CVC4: 1 VC)
my_map.adb:67:33: info: loop invariant preservation proved (CVC4: 1 VC)
my_map.adb:69:10: info: loop invariant initialization proved (CVC4: 2 VC; Trivial: 2 VC)
my_map.adb:69:10: info: loop invariant preservation proved (CVC4: 2 VC; Trivial: 2 VC)
my_map.adb:70:19: info: precondition proved (CVC4: 2 VC)
my_map.adb:70:40: info: precondition proved (CVC4: 2 VC)
my_map.adb:72:14: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:73:14: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:73:21: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:76:16: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:86:17: info: postcondition proved (CVC4: 2 VC)
my_map.adb:86:37: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:89:14: medium: memory leak might occur at end of scope
my_map.adb:92:25: info: precondition proved (Trivial: 1 VC)
my_map.adb:92:44: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:92:70: info: range check proved (CVC4: 1 VC)
my_map.adb:93:34: info: precondition proved (CVC4: 1 VC)
my_map.adb:93:50: info: range check proved (CVC4: 1 VC)
my_map.adb:93:55: info: precondition proved (CVC4: 1 VC)
my_map.adb:93:75: info: range check proved (CVC4: 1 VC)
my_map.adb:94:22: info: precondition proved (Trivial: 1 VC)
my_map.adb:94:37: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:94:67: info: range check proved (CVC4: 1 VC)
my_map.adb:95:30: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:96:53: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:97:24: info: precondition proved (CVC4: 1 VC)
my_map.adb:97:41: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:97:50: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:97:57: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:100:37: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:102:16: info: absence of memory leak at end of scope proved (CVC4: 1 VC)
my_map.adb:102:40: info: null exclusion check proved (CVC4: 1 VC)
my_map.adb:102:54: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:102:61: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:104:18: info: absence of memory leak proved (CVC4: 1 VC)
my_map.adb:104:40: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:111:07: medium: memory leak might occur at end of scope
my_map.adb:112:07: info: initialization of "R" proved
my_map.adb:112:07: medium: memory leak might occur at end of scope
my_map.adb:116:33: info: loop invariant initialization proved (CVC4: 1 VC)
my_map.adb:116:33: info: loop invariant preservation proved (CVC4: 1 VC)
my_map.adb:117:33: info: loop invariant initialization proved (CVC4: 1 VC)
my_map.adb:117:33: info: loop invariant preservation proved (CVC4: 1 VC)
my_map.adb:122:13: info: loop invariant initialization proved (CVC4: 1 VC; Trivial: 1 VC)
my_map.adb:122:13: info: loop invariant preservation proved (CVC4: 1 VC; Trivial: 1 VC)
my_map.adb:122:25: info: precondition proved (Trivial: 2 VC)
my_map.adb:122:40: info: pointer dereference check proved (CVC4: 2 VC)
my_map.adb:122:66: info: range check proved (CVC4: 2 VC)
my_map.adb:124:13: info: loop invariant initialization proved (CVC4: 1 VC; Trivial: 2 VC)
my_map.adb:124:13: info: loop invariant preservation proved (CVC4: 1 VC; Trivial: 2 VC)
my_map.adb:125:16: info: precondition proved (Trivial: 2 VC)
my_map.adb:125:31: info: pointer dereference check proved (CVC4: 2 VC)
my_map.adb:125:57: info: range check proved (CVC4: 2 VC)
my_map.adb:127:13: info: loop invariant initialization proved (CVC4: 1 VC; Trivial: 1 VC)
my_map.adb:127:13: info: loop invariant preservation proved (Trivial: 1 VC; Z3: 1 VC)
my_map.adb:127:25: info: precondition proved (Trivial: 2 VC)
my_map.adb:127:40: info: pointer dereference check proved (CVC4: 2 VC)
my_map.adb:127:66: info: range check proved (CVC4: 2 VC)
my_map.adb:127:91: info: range check proved (CVC4: 2 VC)
my_map.adb:129:13: info: loop invariant initialization proved (CVC4: 2 VC; Trivial: 1 VC)
my_map.adb:129:13: info: loop invariant preservation proved (Trivial: 1 VC; Z3: 2 VC)
my_map.adb:129:25: info: precondition proved (Trivial: 2 VC)
my_map.adb:129:40: info: pointer dereference check proved (CVC4: 2 VC)
my_map.adb:130:50: info: range check proved (CVC4: 2 VC)
my_map.adb:130:58: info: precondition proved (CVC4: 2 VC)
my_map.adb:130:74: info: range check proved (CVC4: 2 VC)
my_map.adb:130:79: info: precondition proved (CVC4: 2 VC)
my_map.adb:130:95: info: range check proved (CVC4: 2 VC)
my_map.adb:131:33: info: precondition proved (CVC4: 2 VC)
my_map.adb:131:49: info: range check proved (CVC4: 2 VC)
my_map.adb:131:54: info: precondition proved (CVC4: 1 VC; Z3: 1 VC)
my_map.adb:131:70: info: range check proved (CVC4: 2 VC)
my_map.adb:136:13: info: loop invariant initialization proved (CVC4: 1 VC)
my_map.adb:136:13: info: loop invariant preservation proved (altergo: 1 VC)
my_map.adb:136:13: info: precondition proved (Trivial: 2 VC)
my_map.adb:136:28: info: pointer dereference check proved (CVC4: 2 VC)
my_map.adb:136:59: info: range check proved (CVC4: 2 VC)
my_map.adb:138:13: info: loop invariant initialization proved (CVC4: 1 VC; Trivial: 1 VC)
my_map.adb:138:13: info: loop invariant preservation proved (CVC4: 1 VC; Trivial: 1 VC)
my_map.adb:139:16: info: precondition proved (Trivial: 2 VC)
my_map.adb:139:31: info: pointer dereference check proved (CVC4: 2 VC)
my_map.adb:139:62: info: range check proved (CVC4: 2 VC)
my_map.adb:141:13: info: loop invariant initialization proved (CVC4: 1 VC)
my_map.adb:141:13: info: loop invariant preservation proved (Z3: 1 VC)
my_map.adb:141:13: info: precondition proved (Trivial: 2 VC)
my_map.adb:141:33: info: pointer dereference check proved (CVC4: 2 VC)
my_map.adb:141:59: info: range check proved (CVC4: 2 VC)
my_map.adb:141:84: info: range check proved (CVC4: 2 VC)
my_map.adb:143:13: info: loop invariant initialization proved (CVC4: 2 VC)
my_map.adb:143:13: info: loop invariant preservation proved (Z3: 2 VC)
my_map.adb:143:13: info: precondition proved (Trivial: 2 VC)
my_map.adb:143:33: info: pointer dereference check proved (CVC4: 2 VC)
my_map.adb:144:38: info: range check proved (CVC4: 2 VC)
my_map.adb:144:46: info: precondition proved (CVC4: 2 VC)
my_map.adb:144:67: info: range check proved (CVC4: 2 VC)
my_map.adb:144:72: info: precondition proved (CVC4: 2 VC)
my_map.adb:144:88: info: range check proved (CVC4: 2 VC)
my_map.adb:145:21: info: precondition proved (CVC4: 2 VC)
my_map.adb:145:42: info: range check proved (CVC4: 2 VC)
my_map.adb:145:47: info: precondition proved (CVC4: 1 VC; Z3: 1 VC)
my_map.adb:145:63: info: range check proved (CVC4: 2 VC)
my_map.adb:147:10: info: precondition proved (CVC4: 1 VC)
my_map.adb:149:14: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:150:14: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:150:21: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:153:16: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:155:07: info: assertion proved (CVC4: 1 VC)
my_map.adb:162:33: info: loop invariant initialization proved (CVC4: 2 VC)
my_map.adb:162:33: info: loop invariant preservation proved (CVC4: 2 VC)
my_map.adb:163:33: info: loop invariant initialization proved (CVC4: 1 VC)
my_map.adb:163:33: info: loop invariant preservation proved (CVC4: 1 VC)
my_map.adb:163:33: info: precondition proved (CVC4: 2 VC)
my_map.adb:163:54: info: precondition proved (CVC4: 2 VC)
my_map.adb:164:14: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:165:21: info: null exclusion check proved (CVC4: 1 VC)
my_map.adb:165:21: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:167:16: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:169:07: info: raise statement or expression proved unreachable (CVC4: 1 VC)
my_map.adb:176:33: info: loop invariant initialization proved (CVC4: 1 VC)
my_map.adb:176:33: info: loop invariant preservation proved (CVC4: 1 VC)
my_map.adb:177:33: info: loop invariant initialization proved (CVC4: 1 VC)
my_map.adb:177:33: info: loop invariant preservation proved (CVC4: 1 VC)
my_map.adb:177:33: info: precondition proved (CVC4: 2 VC)
my_map.adb:177:54: info: precondition proved (CVC4: 2 VC)
my_map.adb:179:13: info: loop invariant initialization proved (CVC4: 2 VC; Trivial: 2 VC)
my_map.adb:179:13: info: loop invariant preservation proved (CVC4: 2 VC; Trivial: 2 VC)
my_map.adb:180:22: info: precondition proved (CVC4: 2 VC)
my_map.adb:180:43: info: precondition proved (CVC4: 2 VC)
my_map.adb:182:14: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:183:21: info: null exclusion check proved (CVC4: 1 VC)
my_map.adb:183:21: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:185:16: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:187:07: info: raise statement or expression proved unreachable (CVC4: 1 VC)
my_map.ads:12:13: medium: subprogram "Model_Contains" might not terminate, terminating annotation could be incorrect
my_map.ads:17:13: info: implicit function contract might not be available on recursive calls
my_map.ads:17:13: medium: subprogram "Model_Value" might not terminate, terminating annotation could be incorrect
my_map.ads:23:21: warning: unused variable "Borrower"
my_map.ads:28:21: warning: unused variable "Borrower"
my_map.ads:34:14: info: postcondition proved (CVC4: 2 VC)
my_map.ads:38:14: info: postcondition proved (CVC4: 2 VC)
my_map.ads:38:45: info: precondition proved (CVC4: 1 VC)
my_map.ads:42:14: info: postcondition proved (CVC4: 3 VC)
my_map.ads:42:45: info: precondition proved (CVC4: 1 VC)
my_map.ads:45:14: medium: memory leak might occur at end of scope
my_map.ads:47:15: info: precondition proved (Trivial: 1 VC)
my_map.ads:47:44: info: pointer dereference check proved (CVC4: 1 VC)
my_map.ads:47:70: info: range check proved (CVC4: 1 VC)
my_map.ads:48:26: info: precondition proved (Trivial: 1 VC)
my_map.ads:48:41: info: pointer dereference check proved (CVC4: 1 VC)
my_map.ads:48:71: info: range check proved (CVC4: 1 VC)
my_map.ads:49:51: info: precondition proved (CVC4: 1 VC)
my_map.ads:49:67: info: range check proved (CVC4: 1 VC)
my_map.ads:49:72: info: precondition proved (CVC4: 1 VC)
my_map.ads:49:92: info: range check proved (CVC4: 1 VC)
my_map.ads:53:14: info: postcondition proved (CVC4: 1 VC)
my_map.ads:53:14: info: precondition proved (CVC4: 1 VC)
my_map.ads:53:58: info: pointer dereference check proved (CVC4: 1 VC)
my_map.ads:57:14: info: postcondition proved (CVC4: 3 VC; Trivial: 1 VC)
my_map.ads:57:14: info: precondition proved (CVC4: 1 VC)
my_map.ads:57:52: info: pointer dereference check proved (CVC4: 1 VC)
my_map.ads:59:18: info: precondition proved (CVC4: 1 VC)
my_map.ads:59:56: info: pointer dereference check proved (CVC4: 1 VC)
my_map.ads:63:13: info: subprogram "First" will terminate, terminating annotation has been proved
my_map.ads:66:13: medium: subprogram "Has_Element" might not terminate, terminating annotation could be incorrect
my_map.ads:69:13: info: implicit function contract might not be available on recursive calls
my_map.ads:69:13: medium: subprogram "Next" might not terminate, terminating annotation could be incorrect
my_map.ads:73:13: info: subprogram "Element" will terminate, terminating annotation has been proved
my_map.ads:90:14: info: postcondition proved (CVC4: 1 VC)
my_map.ads:102:41: info: pointer dereference check proved (CVC4: 1 VC)
my_map.ads:105:11: info: pointer dereference check proved (CVC4: 1 VC)
my_map.ads:105:26: info: pointer dereference check proved (CVC4: 1 VC)
my_map.ads:105:33: info: pointer dereference check proved (CVC4: 1 VC)
my_map.ads:105:42: info: precondition proved (CVC4: 1 VC)
my_map.ads:105:56: info: pointer dereference check proved (CVC4: 1 VC)
my_map.ads:111:52: info: range check proved (CVC4: 1 VC)
my_map.ads:113:26: info: precondition proved (CVC4: 1 VC)
my_map.ads:113:39: info: pointer dereference check proved (CVC4: 1 VC)
my_map.ads:115:18: info: pointer dereference check proved (CVC4: 1 VC)
my_map.ads:117:33: info: pointer dereference check proved (CVC4: 1 VC)
my_map.ads:117:42: info: precondition proved (CVC4: 1 VC)
my_map.ads:117:63: info: range check proved (CVC4: 1 VC)
use_my_map.adb:5:14: info: postcondition proved (altergo: 2 VC)
use_my_map.adb:5:45: info: precondition proved (CVC4: 1 VC)
use_my_map.adb:8:38: info: precondition proved (CVC4: 1 VC)
use_my_map.adb:10:09: info: pointer dereference check proved (CVC4: 1 VC)
