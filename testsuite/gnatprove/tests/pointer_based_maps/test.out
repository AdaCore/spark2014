my_map.adb:14:10: medium: "Deep_Copy" is recursive, terminating annotation could be incorrect
my_map.adb:14:36: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:15:35: info: null exclusion check proved (CVC4: 1 VC)
my_map.adb:15:49: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:15:56: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:16:47: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:26:13: info: absence of memory leak at end of scope proved (CVC4: 1 VC)
my_map.adb:28:15: info: absence of memory leak proved (CVC4: 1 VC)
my_map.adb:31:19: info: absence of memory leak at end of scope proved (CVC4: 1 VC)
my_map.adb:32:19: info: absence of memory leak at end of scope proved (CVC4: 1 VC)
my_map.adb:32:44: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:34:21: info: absence of memory leak proved (CVC4: 1 VC)
my_map.adb:34:25: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:35:20: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:35:26: info: absence of memory leak proved (CVC4: 1 VC)
my_map.adb:37:19: info: absence of memory leak proved (CVC4: 1 VC; Trivial: 1 VC)
my_map.adb:48:33: info: loop invariant initialization proved (CVC4: 2 VC)
my_map.adb:48:33: info: loop invariant preservation proved (CVC4: 2 VC)
my_map.adb:49:14: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:52:16: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:61:33: info: loop invariant initialization proved (CVC4: 1 VC)
my_map.adb:61:33: info: loop invariant preservation proved (CVC4: 1 VC)
my_map.adb:63:13: info: loop invariant initialization proved (CVC4: 2 VC; Trivial: 1 VC)
my_map.adb:63:13: info: loop invariant preservation proved (CVC4: 2 VC; Trivial: 1 VC)
my_map.adb:65:22: info: precondition proved (CVC4: 2 VC)
my_map.adb:65:59: info: precondition proved (CVC4: 2 VC)
my_map.adb:67:14: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:68:14: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:68:21: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:71:16: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:81:17: info: postcondition proved (CVC4: 5 VC; Trivial: 2 VC)
my_map.adb:81:37: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:84:14: medium: memory leak might occur at end of scope
my_map.adb:84:42: medium: memory leak might occur [possible explanation: call to allocating function inside an assertion leaks memory]
my_map.adb:87:25: info: precondition proved (Trivial: 1 VC)
my_map.adb:87:44: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:87:70: info: range check proved (CVC4: 2 VC)
my_map.adb:88:34: info: precondition proved (CVC4: 1 VC)
my_map.adb:88:50: info: range check proved (CVC4: 2 VC)
my_map.adb:88:55: info: precondition proved (CVC4: 1 VC)
my_map.adb:88:75: info: range check proved (CVC4: 2 VC)
my_map.adb:89:22: info: precondition proved (Trivial: 1 VC)
my_map.adb:89:37: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:89:67: info: range check proved (CVC4: 2 VC)
my_map.adb:90:30: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:91:53: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:92:24: info: precondition proved (CVC4: 1 VC)
my_map.adb:92:41: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:92:50: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:92:57: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:95:37: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:97:16: info: absence of memory leak at end of scope proved (CVC4: 1 VC)
my_map.adb:97:40: info: null exclusion check proved (CVC4: 1 VC)
my_map.adb:97:54: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:97:61: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:99:18: info: absence of memory leak proved (CVC4: 1 VC)
my_map.adb:99:40: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:106:07: medium: memory leak might occur at end of scope
my_map.adb:107:07: info: initialization of "R" proved
my_map.adb:107:07: medium: memory leak might occur at end of scope
my_map.adb:111:33: info: loop invariant initialization proved (CVC4: 1 VC)
my_map.adb:111:33: info: loop invariant preservation proved (CVC4: 1 VC)
my_map.adb:112:33: info: loop invariant initialization proved (CVC4: 1 VC)
my_map.adb:112:33: info: loop invariant preservation proved (CVC4: 1 VC)
my_map.adb:117:13: info: loop invariant initialization proved (CVC4: 1 VC)
my_map.adb:117:13: info: loop invariant preservation proved (CVC4: 1 VC)
my_map.adb:117:13: info: precondition proved (Trivial: 2 VC)
my_map.adb:117:44: info: pointer dereference check proved (CVC4: 2 VC)
my_map.adb:117:86: info: range check proved (CVC4: 4 VC)
my_map.adb:119:13: info: loop invariant initialization proved (CVC4: 1 VC; Trivial: 1 VC)
my_map.adb:119:13: info: loop invariant preservation proved (CVC4: 1 VC; Trivial: 1 VC)
my_map.adb:120:16: info: precondition proved (Trivial: 2 VC)
my_map.adb:120:31: info: pointer dereference check proved (CVC4: 2 VC)
my_map.adb:120:73: info: range check proved (CVC4: 4 VC)
my_map.adb:122:13: info: loop invariant initialization proved (CVC4: 1 VC)
my_map.adb:122:13: info: loop invariant preservation proved (Z3: 1 VC)
my_map.adb:122:13: info: precondition proved (Trivial: 2 VC)
my_map.adb:122:44: info: pointer dereference check proved (CVC4: 2 VC)
my_map.adb:123:36: info: range check proved (CVC4: 4 VC)
my_map.adb:123:77: info: range check proved (CVC4: 4 VC)
my_map.adb:125:13: info: loop invariant initialization proved (CVC4: 2 VC)
my_map.adb:125:13: info: loop invariant preservation proved (Z3: 2 VC)
my_map.adb:125:13: info: precondition proved (Trivial: 2 VC)
my_map.adb:125:44: info: pointer dereference check proved (CVC4: 2 VC)
my_map.adb:126:40: info: range check proved (CVC4: 4 VC)
my_map.adb:127:23: info: precondition proved (CVC4: 2 VC)
my_map.adb:127:55: info: range check proved (CVC4: 4 VC)
my_map.adb:127:60: info: precondition proved (CVC4: 2 VC)
my_map.adb:127:76: info: range check proved (CVC4: 4 VC)
my_map.adb:128:23: info: precondition proved (CVC4: 2 VC)
my_map.adb:128:55: info: range check proved (CVC4: 4 VC)
my_map.adb:128:60: info: precondition proved (CVC4: 1 VC; Z3: 1 VC)
my_map.adb:128:92: info: range check proved (CVC4: 4 VC)
my_map.adb:133:13: info: loop invariant initialization proved (CVC4: 1 VC)
my_map.adb:133:13: info: loop invariant preservation proved (altergo: 1 VC)
my_map.adb:133:13: info: precondition proved (Trivial: 2 VC)
my_map.adb:133:28: info: pointer dereference check proved (CVC4: 2 VC)
my_map.adb:133:59: info: range check proved (CVC4: 4 VC)
my_map.adb:135:13: info: loop invariant initialization proved (CVC4: 1 VC; Trivial: 1 VC)
my_map.adb:135:13: info: loop invariant preservation proved (CVC4: 1 VC; Trivial: 1 VC)
my_map.adb:136:16: info: precondition proved (Trivial: 2 VC)
my_map.adb:136:31: info: pointer dereference check proved (CVC4: 2 VC)
my_map.adb:136:62: info: range check proved (CVC4: 4 VC)
my_map.adb:138:13: info: loop invariant initialization proved (CVC4: 1 VC)
my_map.adb:138:13: info: loop invariant preservation proved (Z3: 1 VC)
my_map.adb:138:13: info: precondition proved (Trivial: 2 VC)
my_map.adb:138:33: info: pointer dereference check proved (CVC4: 2 VC)
my_map.adb:138:59: info: range check proved (CVC4: 4 VC)
my_map.adb:138:84: info: range check proved (CVC4: 4 VC)
my_map.adb:140:13: info: loop invariant initialization proved (CVC4: 2 VC)
my_map.adb:140:13: info: loop invariant preservation proved (CVC4: 1 VC; Z3: 1 VC)
my_map.adb:140:13: info: precondition proved (Trivial: 2 VC)
my_map.adb:140:33: info: pointer dereference check proved (CVC4: 2 VC)
my_map.adb:141:38: info: range check proved (CVC4: 4 VC)
my_map.adb:141:46: info: precondition proved (CVC4: 2 VC)
my_map.adb:141:67: info: range check proved (CVC4: 4 VC)
my_map.adb:141:72: info: precondition proved (CVC4: 2 VC)
my_map.adb:141:88: info: range check proved (CVC4: 4 VC)
my_map.adb:142:21: info: precondition proved (CVC4: 2 VC)
my_map.adb:142:42: info: range check proved (CVC4: 4 VC)
my_map.adb:142:47: info: precondition proved (CVC4: 1 VC; Z3: 1 VC)
my_map.adb:142:63: info: range check proved (CVC4: 4 VC)
my_map.adb:144:10: info: precondition proved (CVC4: 1 VC)
my_map.adb:146:14: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:147:14: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:147:21: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:150:16: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:152:07: info: assertion proved (CVC4: 1 VC)
my_map.adb:159:33: info: loop invariant initialization proved (CVC4: 2 VC)
my_map.adb:159:33: info: loop invariant preservation proved (CVC4: 2 VC)
my_map.adb:160:33: info: loop invariant initialization proved (CVC4: 1 VC)
my_map.adb:160:33: info: loop invariant preservation proved (CVC4: 1 VC)
my_map.adb:160:33: info: precondition proved (CVC4: 2 VC)
my_map.adb:160:54: info: precondition proved (CVC4: 2 VC)
my_map.adb:161:14: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:162:21: info: null exclusion check proved (CVC4: 1 VC)
my_map.adb:162:21: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:164:16: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:166:07: info: raise statement or expression proved unreachable (CVC4: 1 VC)
my_map.adb:173:33: info: loop invariant initialization proved (CVC4: 1 VC)
my_map.adb:173:33: info: loop invariant preservation proved (CVC4: 1 VC)
my_map.adb:174:33: info: loop invariant initialization proved (CVC4: 1 VC)
my_map.adb:174:33: info: loop invariant preservation proved (CVC4: 1 VC)
my_map.adb:174:33: info: precondition proved (CVC4: 2 VC)
my_map.adb:174:54: info: precondition proved (CVC4: 2 VC)
my_map.adb:176:13: info: loop invariant initialization proved (CVC4: 2 VC; Trivial: 1 VC)
my_map.adb:176:13: info: loop invariant preservation proved (CVC4: 2 VC; Trivial: 1 VC)
my_map.adb:178:22: info: precondition proved (CVC4: 2 VC)
my_map.adb:178:59: info: precondition proved (CVC4: 2 VC)
my_map.adb:180:14: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:181:21: info: null exclusion check proved (CVC4: 1 VC)
my_map.adb:181:21: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:183:16: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:185:07: info: raise statement or expression proved unreachable (CVC4: 1 VC)
my_map.ads:12:13: info: function contract might not be available on recursive calls
my_map.ads:16:18: info: postcondition proved (Trivial: 1 VC)
my_map.ads:18:13: info: implicit function contract might not be available on recursive calls
my_map.ads:25:07: info: dynamic accessibility check proved (Trivial)
my_map.ads:30:07: info: dynamic accessibility check proved (Trivial)
my_map.ads:35:14: info: postcondition proved (CVC4: 2 VC)
my_map.ads:39:14: info: postcondition proved (CVC4: 2 VC)
my_map.ads:39:45: info: precondition proved (CVC4: 1 VC)
my_map.ads:43:14: info: postcondition proved (CVC4: 4 VC; Trivial: 1 VC; Z3: 1 VC)
my_map.ads:43:45: info: precondition proved (CVC4: 1 VC)
my_map.ads:46:14: medium: memory leak might occur at end of scope
my_map.ads:46:42: medium: memory leak might occur [possible explanation: call to allocating function inside an assertion leaks memory]
my_map.ads:48:15: info: precondition proved (Trivial: 1 VC)
my_map.ads:48:44: info: pointer dereference check proved (CVC4: 1 VC)
my_map.ads:48:70: info: range check proved (CVC4: 2 VC)
my_map.ads:51:14: medium: memory leak might occur at end of scope
my_map.ads:51:42: medium: memory leak might occur [possible explanation: call to allocating function inside an assertion leaks memory]
my_map.ads:53:15: info: precondition proved (Trivial: 1 VC)
my_map.ads:53:30: info: pointer dereference check proved (CVC4: 1 VC)
my_map.ads:53:60: info: range check proved (CVC4: 2 VC)
my_map.ads:54:40: info: precondition proved (CVC4: 1 VC)
my_map.ads:54:56: info: range check proved (CVC4: 2 VC)
my_map.ads:54:61: info: precondition proved (CVC4: 1 VC)
my_map.ads:54:81: info: range check proved (CVC4: 2 VC)
my_map.ads:58:14: info: postcondition proved (CVC4: 1 VC)
my_map.ads:58:14: info: precondition proved (CVC4: 1 VC)
my_map.ads:58:58: info: pointer dereference check proved (CVC4: 1 VC)
my_map.ads:62:14: info: postcondition proved (CVC4: 3 VC)
my_map.ads:62:14: info: precondition proved (CVC4: 1 VC)
my_map.ads:62:52: info: pointer dereference check proved (CVC4: 1 VC)
my_map.ads:64:12: info: precondition proved (CVC4: 1 VC)
my_map.ads:64:82: info: pointer dereference check proved (CVC4: 1 VC)
my_map.ads:68:13: info: subprogram "First" will terminate, terminating annotation has been proved
my_map.ads:74:13: info: implicit function contract might not be available on recursive calls
my_map.ads:78:13: info: subprogram "Element" will terminate, terminating annotation has been proved
my_map.ads:83:13: info: function contract might not be available on recursive calls
my_map.ads:86:14: info: postcondition proved (CVC4: 5 VC; Trivial: 1 VC)
my_map.ads:89:12: info: precondition proved (Trivial: 1 VC)
my_map.ads:89:27: info: pointer dereference check proved (CVC4: 1 VC)
my_map.ads:89:68: info: range check proved (CVC4: 2 VC)
my_map.ads:91:12: info: precondition proved (Trivial: 1 VC)
my_map.ads:91:42: info: pointer dereference check proved (CVC4: 1 VC)
my_map.ads:91:68: info: range check proved (CVC4: 2 VC)
my_map.ads:92:21: info: precondition proved (CVC4: 1 VC)
my_map.ads:92:37: info: range check proved (CVC4: 2 VC)
my_map.ads:92:42: info: precondition proved (CVC4: 1 VC)
my_map.ads:92:73: info: range check proved (CVC4: 2 VC)
my_map.ads:95:14: info: postcondition proved (CVC4: 1 VC)
my_map.ads:107:17: medium: "Model_Contains" and "Has_Element" are mutually recursive, terminating annotation on "Model_Contains" could be incorrect
my_map.ads:107:41: info: pointer dereference check proved (CVC4: 1 VC)
my_map.ads:110:07: medium: "Model_Value" is recursive, terminating annotation could be incorrect
my_map.ads:110:11: info: pointer dereference check proved (CVC4: 1 VC)
my_map.ads:110:26: info: pointer dereference check proved (CVC4: 1 VC)
my_map.ads:110:33: info: pointer dereference check proved (CVC4: 1 VC)
my_map.ads:110:42: info: precondition proved (CVC4: 1 VC)
my_map.ads:110:56: info: pointer dereference check proved (CVC4: 1 VC)
my_map.ads:115:14: medium: "Has_Element" and "Model_Contains" are mutually recursive, terminating annotation on "Has_Element" could be incorrect
my_map.ads:116:52: info: range check proved (CVC4: 2 VC)
my_map.ads:118:07: medium: "Next" is recursive, terminating annotation could be incorrect
my_map.ads:118:26: info: precondition proved (CVC4: 2 VC)
my_map.ads:118:39: info: pointer dereference check proved (CVC4: 1 VC)
my_map.ads:120:18: info: pointer dereference check proved (CVC4: 1 VC)
my_map.ads:122:33: info: pointer dereference check proved (CVC4: 1 VC)
my_map.ads:122:42: info: precondition proved (CVC4: 1 VC)
my_map.ads:122:63: info: range check proved (CVC4: 2 VC)
use_my_map.adb:5:14: info: postcondition proved (altergo: 2 VC)
use_my_map.adb:5:45: info: precondition proved (CVC4: 1 VC)
use_my_map.adb:8:38: info: function contract not available for proof ("Reference" might not return)
use_my_map.adb:8:38: info: precondition proved (CVC4: 1 VC)
use_my_map.adb:10:09: info: pointer dereference check proved (CVC4: 1 VC)
