my_map.adb:32:13: info: absence of memory leak at end of scope proved (CVC4: 1 VC)
my_map.adb:34:15: info: absence of memory leak proved (CVC4: 1 VC)
my_map.adb:37:19: info: absence of memory leak at end of scope proved (CVC4: 1 VC)
my_map.adb:38:19: info: absence of memory leak at end of scope proved (CVC4: 1 VC)
my_map.adb:38:44: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:40:21: info: absence of memory leak proved (CVC4: 1 VC)
my_map.adb:40:25: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:41:20: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:41:26: info: absence of memory leak proved (CVC4: 1 VC)
my_map.adb:43:19: info: absence of memory leak proved (CVC4: 1 VC; Trivial: 1 VC)
my_map.adb:54:33: info: loop invariant initialization proved (CVC4: 2 VC)
my_map.adb:54:33: info: loop invariant preservation proved (CVC4: 2 VC)
my_map.adb:55:14: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:58:16: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:67:33: info: loop invariant initialization proved (CVC4: 1 VC)
my_map.adb:67:33: info: loop invariant preservation proved (CVC4: 1 VC)
my_map.adb:69:13: info: loop invariant initialization proved (CVC4: 2 VC; Trivial: 1 VC)
my_map.adb:69:13: info: loop invariant preservation proved (CVC4: 2 VC; Trivial: 1 VC)
my_map.adb:71:22: info: precondition proved (CVC4: 2 VC)
my_map.adb:71:59: info: precondition proved (CVC4: 2 VC)
my_map.adb:73:14: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:74:14: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:74:21: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:77:16: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:87:17: info: postcondition proved (CVC4: 2 VC)
my_map.adb:87:37: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:90:14: medium: memory leak might occur at end of scope
my_map.adb:93:25: info: precondition proved (Trivial: 1 VC)
my_map.adb:93:44: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:93:70: info: range check proved (CVC4: 1 VC)
my_map.adb:94:34: info: precondition proved (CVC4: 1 VC)
my_map.adb:94:50: info: range check proved (CVC4: 1 VC)
my_map.adb:94:55: info: precondition proved (CVC4: 1 VC)
my_map.adb:94:75: info: range check proved (CVC4: 1 VC)
my_map.adb:95:22: info: precondition proved (Trivial: 1 VC)
my_map.adb:95:37: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:95:67: info: range check proved (CVC4: 1 VC)
my_map.adb:96:30: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:97:53: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:98:24: info: precondition proved (CVC4: 1 VC)
my_map.adb:98:41: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:98:50: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:98:57: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:101:37: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:103:16: info: absence of memory leak at end of scope proved (CVC4: 1 VC)
my_map.adb:103:40: info: null exclusion check proved (CVC4: 1 VC)
my_map.adb:103:54: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:103:61: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:105:18: info: absence of memory leak proved (CVC4: 1 VC)
my_map.adb:105:40: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:112:07: medium: memory leak might occur at end of scope
my_map.adb:113:07: info: initialization of "R" proved
my_map.adb:113:07: medium: memory leak might occur at end of scope
my_map.adb:117:33: info: loop invariant initialization proved (CVC4: 1 VC)
my_map.adb:117:33: info: loop invariant preservation proved (CVC4: 1 VC)
my_map.adb:118:33: info: loop invariant initialization proved (CVC4: 1 VC)
my_map.adb:118:33: info: loop invariant preservation proved (CVC4: 1 VC)
my_map.adb:123:13: info: loop invariant initialization proved (CVC4: 1 VC)
my_map.adb:123:13: info: loop invariant preservation proved (CVC4: 1 VC)
my_map.adb:123:13: info: precondition proved (Trivial: 2 VC)
my_map.adb:123:44: info: pointer dereference check proved (CVC4: 2 VC)
my_map.adb:123:86: info: range check proved (CVC4: 2 VC)
my_map.adb:125:13: info: loop invariant initialization proved (CVC4: 1 VC; Trivial: 1 VC)
my_map.adb:125:13: info: loop invariant preservation proved (CVC4: 1 VC; Trivial: 1 VC)
my_map.adb:126:16: info: precondition proved (Trivial: 2 VC)
my_map.adb:126:31: info: pointer dereference check proved (CVC4: 2 VC)
my_map.adb:126:73: info: range check proved (CVC4: 2 VC)
my_map.adb:128:13: info: loop invariant initialization proved (CVC4: 1 VC)
my_map.adb:128:13: info: loop invariant preservation proved (Z3: 1 VC)
my_map.adb:128:13: info: precondition proved (Trivial: 2 VC)
my_map.adb:128:44: info: pointer dereference check proved (CVC4: 2 VC)
my_map.adb:129:36: info: range check proved (CVC4: 2 VC)
my_map.adb:129:77: info: range check proved (CVC4: 2 VC)
my_map.adb:131:13: info: loop invariant initialization proved (CVC4: 2 VC)
my_map.adb:131:13: info: loop invariant preservation proved (Z3: 2 VC)
my_map.adb:131:13: info: precondition proved (Trivial: 2 VC)
my_map.adb:131:44: info: pointer dereference check proved (CVC4: 2 VC)
my_map.adb:132:40: info: range check proved (CVC4: 2 VC)
my_map.adb:133:23: info: precondition proved (CVC4: 2 VC)
my_map.adb:133:55: info: range check proved (CVC4: 2 VC)
my_map.adb:133:60: info: precondition proved (CVC4: 2 VC)
my_map.adb:133:76: info: range check proved (CVC4: 2 VC)
my_map.adb:134:23: info: precondition proved (CVC4: 2 VC)
my_map.adb:134:55: info: range check proved (CVC4: 2 VC)
my_map.adb:134:60: info: precondition proved (CVC4: 1 VC; Z3: 1 VC)
my_map.adb:134:92: info: range check proved (CVC4: 2 VC)
my_map.adb:139:13: info: loop invariant initialization proved (CVC4: 1 VC)
my_map.adb:139:13: info: loop invariant preservation proved (altergo: 1 VC)
my_map.adb:139:13: info: precondition proved (Trivial: 2 VC)
my_map.adb:139:28: info: pointer dereference check proved (CVC4: 2 VC)
my_map.adb:139:59: info: range check proved (CVC4: 2 VC)
my_map.adb:141:13: info: loop invariant initialization proved (CVC4: 1 VC; Trivial: 1 VC)
my_map.adb:141:13: info: loop invariant preservation proved (CVC4: 1 VC; Trivial: 1 VC)
my_map.adb:142:16: info: precondition proved (Trivial: 2 VC)
my_map.adb:142:31: info: pointer dereference check proved (CVC4: 2 VC)
my_map.adb:142:62: info: range check proved (CVC4: 2 VC)
my_map.adb:144:13: info: loop invariant initialization proved (CVC4: 1 VC)
my_map.adb:144:13: info: loop invariant preservation proved (Z3: 1 VC)
my_map.adb:144:13: info: precondition proved (Trivial: 2 VC)
my_map.adb:144:33: info: pointer dereference check proved (CVC4: 2 VC)
my_map.adb:144:59: info: range check proved (CVC4: 2 VC)
my_map.adb:144:84: info: range check proved (CVC4: 2 VC)
my_map.adb:146:13: info: loop invariant initialization proved (CVC4: 2 VC)
my_map.adb:146:13: info: loop invariant preservation proved (CVC4: 1 VC; Z3: 1 VC)
my_map.adb:146:13: info: precondition proved (Trivial: 2 VC)
my_map.adb:146:33: info: pointer dereference check proved (CVC4: 2 VC)
my_map.adb:147:38: info: range check proved (CVC4: 2 VC)
my_map.adb:147:46: info: precondition proved (CVC4: 2 VC)
my_map.adb:147:67: info: range check proved (CVC4: 2 VC)
my_map.adb:147:72: info: precondition proved (CVC4: 2 VC)
my_map.adb:147:88: info: range check proved (CVC4: 2 VC)
my_map.adb:148:21: info: precondition proved (CVC4: 2 VC)
my_map.adb:148:42: info: range check proved (CVC4: 2 VC)
my_map.adb:148:47: info: precondition proved (CVC4: 1 VC; Z3: 1 VC)
my_map.adb:148:63: info: range check proved (CVC4: 2 VC)
my_map.adb:150:10: info: precondition proved (CVC4: 1 VC)
my_map.adb:152:14: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:153:14: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:153:21: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:156:16: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:158:07: info: assertion proved (CVC4: 1 VC)
my_map.adb:165:33: info: loop invariant initialization proved (CVC4: 2 VC)
my_map.adb:165:33: info: loop invariant preservation proved (CVC4: 2 VC)
my_map.adb:166:33: info: loop invariant initialization proved (CVC4: 1 VC)
my_map.adb:166:33: info: loop invariant preservation proved (CVC4: 1 VC)
my_map.adb:166:33: info: precondition proved (CVC4: 2 VC)
my_map.adb:166:54: info: precondition proved (CVC4: 2 VC)
my_map.adb:167:14: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:168:21: info: null exclusion check proved (CVC4: 1 VC)
my_map.adb:168:21: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:170:16: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:172:07: info: raise statement or expression proved unreachable (CVC4: 1 VC)
my_map.adb:179:33: info: loop invariant initialization proved (CVC4: 1 VC)
my_map.adb:179:33: info: loop invariant preservation proved (CVC4: 1 VC)
my_map.adb:180:33: info: loop invariant initialization proved (CVC4: 1 VC)
my_map.adb:180:33: info: loop invariant preservation proved (CVC4: 1 VC)
my_map.adb:180:33: info: precondition proved (CVC4: 2 VC)
my_map.adb:180:54: info: precondition proved (CVC4: 2 VC)
my_map.adb:182:13: info: loop invariant initialization proved (CVC4: 2 VC; Trivial: 1 VC)
my_map.adb:182:13: info: loop invariant preservation proved (CVC4: 2 VC; Trivial: 1 VC)
my_map.adb:184:22: info: precondition proved (CVC4: 2 VC)
my_map.adb:184:59: info: precondition proved (CVC4: 2 VC)
my_map.adb:186:14: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:187:21: info: null exclusion check proved (CVC4: 1 VC)
my_map.adb:187:21: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:189:16: info: pointer dereference check proved (CVC4: 1 VC)
my_map.adb:191:07: info: raise statement or expression proved unreachable (CVC4: 1 VC)
my_map.ads:17:13: info: implicit function contract might not be available on recursive calls
my_map.ads:34:14: info: postcondition proved (CVC4: 2 VC)
my_map.ads:38:14: info: postcondition proved (CVC4: 2 VC)
my_map.ads:38:45: info: precondition proved (CVC4: 1 VC)
my_map.ads:42:14: info: postcondition proved (CVC4: 4 VC; Trivial: 1 VC; Z3: 1 VC)
my_map.ads:42:45: info: precondition proved (CVC4: 1 VC)
my_map.ads:45:14: medium: memory leak might occur at end of scope
my_map.ads:47:15: info: precondition proved (Trivial: 1 VC)
my_map.ads:47:44: info: pointer dereference check proved (CVC4: 1 VC)
my_map.ads:47:70: info: range check proved (CVC4: 1 VC)
my_map.ads:50:14: medium: memory leak might occur at end of scope
my_map.ads:52:15: info: precondition proved (Trivial: 1 VC)
my_map.ads:52:30: info: pointer dereference check proved (CVC4: 1 VC)
my_map.ads:52:60: info: range check proved (CVC4: 1 VC)
my_map.ads:53:40: info: precondition proved (CVC4: 1 VC)
my_map.ads:53:56: info: range check proved (CVC4: 1 VC)
my_map.ads:53:61: info: precondition proved (CVC4: 1 VC)
my_map.ads:53:81: info: range check proved (CVC4: 1 VC)
my_map.ads:57:14: info: postcondition proved (CVC4: 1 VC)
my_map.ads:57:14: info: precondition proved (CVC4: 1 VC)
my_map.ads:57:58: info: pointer dereference check proved (CVC4: 1 VC)
my_map.ads:61:14: info: postcondition proved (CVC4: 3 VC)
my_map.ads:61:14: info: precondition proved (CVC4: 1 VC)
my_map.ads:61:52: info: pointer dereference check proved (CVC4: 1 VC)
my_map.ads:63:12: info: precondition proved (CVC4: 1 VC)
my_map.ads:63:82: info: pointer dereference check proved (CVC4: 1 VC)
my_map.ads:67:13: info: subprogram "First" will terminate, terminating annotation has been proved
my_map.ads:73:13: info: implicit function contract might not be available on recursive calls
my_map.ads:77:13: info: subprogram "Element" will terminate, terminating annotation has been proved
my_map.ads:94:14: info: postcondition proved (CVC4: 1 VC)
my_map.ads:106:17: medium: "Model_Contains" and "Has_Element" are mutually recursive, terminating annotation on "Model_Contains" could be incorrect
my_map.ads:106:41: info: pointer dereference check proved (CVC4: 1 VC)
my_map.ads:109:07: medium: "Model_Value" is recursive, terminating annotation could be incorrect
my_map.ads:109:11: info: pointer dereference check proved (CVC4: 1 VC)
my_map.ads:109:26: info: pointer dereference check proved (CVC4: 1 VC)
my_map.ads:109:33: info: pointer dereference check proved (CVC4: 1 VC)
my_map.ads:109:42: info: precondition proved (CVC4: 1 VC)
my_map.ads:109:56: info: pointer dereference check proved (CVC4: 1 VC)
my_map.ads:114:14: medium: "Has_Element" and "Model_Contains" are mutually recursive, terminating annotation on "Has_Element" could be incorrect
my_map.ads:115:52: info: range check proved (CVC4: 1 VC)
my_map.ads:117:07: medium: "Next" is recursive, terminating annotation could be incorrect
my_map.ads:117:26: info: precondition proved (CVC4: 1 VC)
my_map.ads:117:39: info: pointer dereference check proved (CVC4: 1 VC)
my_map.ads:119:18: info: pointer dereference check proved (CVC4: 1 VC)
my_map.ads:121:33: info: pointer dereference check proved (CVC4: 1 VC)
my_map.ads:121:42: info: precondition proved (CVC4: 1 VC)
my_map.ads:121:63: info: range check proved (CVC4: 1 VC)
use_my_map.adb:5:14: info: postcondition proved (altergo: 2 VC)
use_my_map.adb:5:45: info: precondition proved (CVC4: 1 VC)
use_my_map.adb:8:38: info: function contract not available for proof ("Reference" might not return)
use_my_map.adb:8:38: info: precondition proved (CVC4: 1 VC)
use_my_map.adb:10:09: info: pointer dereference check proved (CVC4: 1 VC)
