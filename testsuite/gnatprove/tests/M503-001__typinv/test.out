aggregates.ads:7:14: info: for X at the end of Create_Arr at aggregates.ads:7
aggregates.ads:7:14: info: invariant check proved (CVC5: 1 VC; Trivial: 1 VC)
aggregates.ads:7:26: info: initialization of "X" proved
aggregates.ads:9:14: info: for X at the end of Update_Arr at aggregates.ads:9
aggregates.ads:9:14: info: invariant check proved (CVC5: 1 VC; Trivial: 1 VC)
aggregates.ads:11:13: info: implicit aspect Always_Terminates on "Get_Arr" has been proved, subprogram will terminate
aggregates.ads:13:14: info: for X at the end of Create_Rec at aggregates.ads:13
aggregates.ads:13:14: info: invariant check proved (CVC5: 2 VC; Trivial: 1 VC)
aggregates.ads:13:26: info: initialization of "X" proved
aggregates.ads:15:14: info: for X at the end of Update_Rec at aggregates.ads:15
aggregates.ads:15:14: info: invariant check proved (CVC5: 2 VC; Trivial: 1 VC)
aggregates.ads:17:13: info: implicit aspect Always_Terminates on "Get_Rec" has been proved, subprogram will terminate
aggregates.ads:21:09: info: invariant check proved on default value (CVC5: 1 VC)
aggregates.ads:22:23: info: in default value of private type at aggregates.ads:3
aggregates.ads:22:23: info: range check proved (CVC5: 2 VC)
aggregates.ads:25:09: info: invariant check proved on default value (CVC5: 1 VC; Trivial: 1 VC)
aggregates.ads:27:09: info: invariant check proved on default value (CVC5: 2 VC; Trivial: 1 VC)
external.adb:14:17: medium: implicit aspect Always_Terminates on "Get" could be incorrect, "Get" and "Get" are mutually recursive [possible fix: annotate "Get" and "Get" with Subprogram_Variant aspects]
external.ads:5:22: info: initialization of "X" proved
external.ads:9:13: warning: implicit function contract might not be available on recursive calls [contracts-recursive]
globals.adb:5:04: info: at the end of the elaboration of package at globals.ads:1
globals.adb:5:04: info: invariant check proved (CVC5: 1 VC)
globals.adb:15:15: info: overflow check proved (CVC5: 2 VC)
globals.adb:29:15: info: overflow check proved (CVC5: 2 VC)
globals.adb:43:15: info: overflow check proved (CVC5: 2 VC)
globals.adb:57:15: info: overflow check proved (CVC5: 2 VC)
globals.ads:8:14: info: for Y at the end of Abs_Create at globals.adb:5
globals.ads:8:14: info: initialization of "Y" constituent of "State_Y" proved
globals.ads:8:14: info: invariant check proved (CVC5: 1 VC)
globals.ads:9:11: info: data dependencies proved
globals.ads:11:14: info: for Y at the end of Abs_Update at globals.adb:5
globals.ads:11:14: info: invariant check proved (CVC5: 1 VC)
globals.ads:12:11: info: data dependencies proved
globals.ads:14:13: info: implicit aspect Always_Terminates on "Abs_Get" has been proved, subprogram will terminate
globals.ads:15:11: info: data dependencies proved
globals.ads:17:14: info: for X at the end of Gen_Create at globals.ads:35
globals.ads:17:14: info: invariant check proved (CVC5: 1 VC)
globals.ads:19:14: info: for X at the end of Gen_Update at globals.ads:35
globals.ads:19:14: info: invariant check proved (CVC5: 1 VC)
globals.ads:21:13: info: implicit aspect Always_Terminates on "Gen_Get" has been proved, subprogram will terminate
globals.ads:23:14: info: for Y at the end of Abs_Gen_Create at globals.adb:5
globals.ads:23:14: info: invariant check proved (CVC5: 1 VC)
globals.ads:25:14: info: for Y at the end of Abs_Gen_Update at globals.adb:5
globals.ads:25:14: info: invariant check proved (CVC5: 1 VC)
globals.ads:27:13: info: implicit aspect Always_Terminates on "Abs_Gen_Get" has been proved, subprogram will terminate
globals.ads:31:09: info: invariant check proved on default value (CVC5: 1 VC)
globals.ads:32:23: info: in default value of private type at globals.ads:6
globals.ads:32:23: info: range check proved (CVC5: 2 VC)
globals.ads:35:04: info: at the end of the elaboration of package at globals.ads:1
globals.ads:35:04: info: invariant check proved (CVC5: 1 VC)
globals.ads:37:14: info: for X at the end of Create at globals.ads:35
globals.ads:37:14: info: invariant check proved (CVC5: 1 VC)
globals.ads:38:11: info: data dependencies proved
globals.ads:38:32: info: initialization of "X" constituent of "State_X" proved
globals.ads:40:14: info: for X at the end of Update at globals.ads:35
globals.ads:40:14: info: invariant check proved (CVC5: 1 VC)
globals.ads:41:11: info: data dependencies proved
globals.ads:43:13: info: implicit aspect Always_Terminates on "Get" has been proved, subprogram will terminate
globals.ads:44:11: info: data dependencies proved
inside_out.adb:3:14: info: add a contract to analyze it separately from calling contexts
inside_out.adb:3:14: info: local subprogram "Body_Create" only analyzed in the context of calls [info-unrolling-inlining]
inside_out.adb:3:27: info: initialization of "X" proved
inside_out.adb:5:14: info: add a contract to analyze it separately from calling contexts
inside_out.adb:5:14: info: local subprogram "Body_Update" only analyzed in the context of calls [info-unrolling-inlining]
inside_out.adb:7:13: warning: implicit function contract might not be available on recursive calls [contracts-recursive]
inside_out.adb:16:07: medium: for X before the call at inside_out.ads:7
inside_out.adb:16:07: medium: in inlined invariant at inside_out.ads:15
inside_out.adb:16:07: medium: invariant check might fail, cannot prove T /= 0, in call inlined at inside_out.adb:58 (e.g. when Mode = Bod and X = 0)
inside_out.adb:20:08: medium: for X before the call at inside_out.ads:9
inside_out.adb:20:08: medium: implicit aspect Always_Terminates on "Body_Get" could be incorrect, "Body_Get" and "Get" are mutually recursive [possible fix: annotate "Body_Get" and "Get" with Subprogram_Variant aspects]
inside_out.adb:20:08: medium: in inlined invariant at inside_out.ads:15
inside_out.adb:20:08: medium: invariant check might fail, cannot prove T /= 0 (e.g. when Mode = Rec and X = 0) [possible fix: subprogram at line 7 should mention X and Mode in a precondition]
inside_out.adb:30:15: info: overflow check proved (CVC5: 2 VC)
inside_out.adb:45:13: info: analyzing call to "Body_Create" in context
inside_out.adb:56:13: medium: for X before the call at inside_out.ads:7
inside_out.adb:56:13: medium: in inlined invariant at inside_out.ads:15
inside_out.adb:56:13: medium: invariant check might fail, cannot prove T /= 0 (e.g. when Mode = Rec and X = 0)
inside_out.adb:58:13: info: analyzing call to "Body_Update" in context
inside_out.adb:68:13: medium: implicit aspect Always_Terminates on "Get" could be incorrect, subprogram is recursive [possible fix: annotate "Get" with a Subprogram_Variant aspect]
inside_out.adb:68:20: info: for X before the call at inside_out.ads:9
inside_out.adb:68:20: info: invariant check proved (CVC5: 1 VC)
inside_out.adb:70:13: medium: implicit aspect Always_Terminates on "Get" could be incorrect, "Get" and "Body_Get" are mutually recursive [possible fix: annotate "Get" and "Body_Get" with Subprogram_Variant aspects]
inside_out.ads:5:14: medium: for X at the end of Create at inside_out.ads:5
inside_out.ads:5:14: medium: in inlined invariant at inside_out.ads:15
inside_out.ads:5:14: medium: invariant check might fail, cannot prove T /= 0 (e.g. when Mode = Prv)
inside_out.ads:5:22: info: initialization of "X" proved
inside_out.ads:7:14: medium: for X at the end of Update at inside_out.ads:7
inside_out.ads:7:14: medium: in inlined invariant at inside_out.ads:15
inside_out.ads:7:14: medium: invariant check might fail, cannot prove T /= 0 (e.g. when Mode = Prv and X = -1)
inside_out.ads:7:22: warning: unused initial value of "X"
inside_out.ads:9:13: warning: implicit function contract might not be available on recursive calls [contracts-recursive]
inside_out.ads:13:09: info: invariant check proved on default value (CVC5: 1 VC)
inside_out.ads:14:23: info: in default value of private type at inside_out.ads:3
inside_out.ads:14:23: info: range check proved (CVC5: 2 VC)
inside_out.ads:17:27: info: initialization of "X" proved
inside_out.ads:21:13: info: implicit aspect Always_Terminates on "Priv_Get" has been proved, subprogram will terminate
reentrancy.adb:21:18: info: for X before the call at external.ads:7
reentrancy.adb:21:18: info: invariant check proved (CVC5: 1 VC)
reentrancy.adb:24:18: info: overflow check proved (CVC5: 2 VC)
reentrancy.adb:33:10: medium: implicit aspect Always_Terminates on "Get" could be incorrect, "Get" and "Get" are mutually recursive [possible fix: annotate "Get" and "Get" with Subprogram_Variant aspects]
reentrancy.adb:33:25: info: for X before the call at external.ads:9
reentrancy.adb:33:25: info: invariant check proved (CVC5: 1 VC)
reentrancy.ads:5:14: info: for X at the end of Create at reentrancy.ads:5
reentrancy.ads:5:14: info: invariant check proved (CVC5: 1 VC)
reentrancy.ads:5:22: info: initialization of "X" proved
reentrancy.ads:7:14: info: for X at the end of Update at reentrancy.ads:7
reentrancy.ads:7:14: info: invariant check proved (CVC5: 1 VC)
reentrancy.ads:9:13: warning: implicit function contract might not be available on recursive calls [contracts-recursive]
reentrancy.ads:13:09: info: invariant check proved on default value (CVC5: 1 VC)
reentrancy.ads:14:23: info: in default value of private type at reentrancy.ads:3
reentrancy.ads:14:23: info: range check proved (CVC5: 2 VC)
simple.adb:11:15: info: overflow check proved (CVC5: 2 VC)
simple.ads:5:14: info: for X at the end of Create at simple.ads:5
simple.ads:5:14: info: invariant check proved (CVC5: 1 VC)
simple.ads:5:22: info: initialization of "X" proved
simple.ads:7:14: info: for X at the end of Update at simple.ads:7
simple.ads:7:14: info: invariant check proved (CVC5: 1 VC)
simple.ads:9:13: info: implicit aspect Always_Terminates on "Get" has been proved, subprogram will terminate
simple.ads:13:09: info: invariant check proved on default value (CVC5: 1 VC)
simple.ads:14:23: info: in default value of private type at simple.ads:3
simple.ads:14:23: info: range check proved (CVC5: 2 VC)
