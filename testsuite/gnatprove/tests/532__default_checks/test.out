ext.ads:17:10: medium: default initial condition might fail
ext.ads:17:10: medium: in default initialization of component "F" at ext.ads:17
ext.ads:17:10: medium: in default value at main.adb:6
ext.ads:33:10: medium: default initial condition might fail
ext.ads:33:10: medium: in default initialization of component "F" at ext.ads:33
ext.ads:33:10: medium: in default value at main.adb:7
ext.ads:40:15: info: range check proved (CVC5: 2 VC)
ext.ads:43:41: medium: in default initialization of component "F" at ext.ads:46
ext.ads:43:41: medium: in default value at main.adb:8
ext.ads:43:41: medium: range check might fail, cannot prove upper bound for 3 [reason for check: default component value must fit in the component type]
ext.ads:53:12: info: range check proved (CVC5: 2 VC)
ext.ads:54:31: medium: in default initialization of array component at ext.ads:53
ext.ads:54:31: medium: in default initialization of component "F" at ext.ads:59
ext.ads:54:31: medium: in default value at main.adb:9
ext.ads:54:31: medium: range check might fail, cannot prove upper bound for 4 [reason for check: default value must fit in the type]
ext.ads:67:26: medium: in default value at main.adb:10
ext.ads:67:26: medium: range check might fail, cannot prove lower bound for Rand (5) [reason for check: default component value must fit in the type] [possible fix: you should consider adding a postcondition to function Rand or turning it into an expression function in its unit spec]
ext.ads:79:26: medium: in default value at main.adb:11
ext.ads:79:26: medium: range check might fail, cannot prove lower bound for Rand (6) [reason for check: default component value must fit in the type] [possible fix: you should consider adding a postcondition to function Rand or turning it into an expression function in its unit spec]
ext.ads:92:12: info: range check proved (CVC5: 2 VC)
ext.ads:93:31: medium: in default initialization of component "X" at ext.ads:95
ext.ads:93:31: medium: in default value at main.adb:12
ext.ads:93:31: medium: range check might fail, cannot prove upper bound for 7 [reason for check: default value must fit in the type]
ext.ads:103:26: medium: in default initialization of component "X" at ext.ads:107
ext.ads:103:26: medium: in default value at main.adb:13
ext.ads:103:26: medium: range check might fail, cannot prove lower bound for Rand (8) [reason for check: default component value must fit in the type] [possible fix: you should consider adding a postcondition to function Rand or turning it into an expression function in its unit spec]
ext.ads:169:10: medium: in default initialization of component "X" at ext.ads:169
ext.ads:169:10: medium: in default value at main.adb:16
ext.ads:169:10: medium: predicate check might fail on default value
ext.ads:191:10: medium: in default initialization of component "X" at ext.ads:191
ext.ads:191:10: medium: in default value at main.adb:17
ext.ads:191:10: medium: predicate check might fail on default value
ext.ads:198:12: info: range check proved (CVC5: 2 VC)
ext.ads:200:29: medium: in default initialization of component "X" at ext.ads:205
ext.ads:200:29: medium: in default value at main.adb:18
ext.ads:200:29: medium: range check might fail, cannot prove upper bound for 13 [reason for check: default component value must fit in the type]
ext.ads:212:12: info: range check proved (CVC5: 2 VC)
ext.ads:215:32: medium: in default initialization of component "X" at ext.ads:224
ext.ads:215:32: medium: in default value at main.adb:19
ext.ads:215:32: medium: range check might fail, cannot prove upper bound for 14 [reason for check: default component value must fit in the type]
main.adb:14:04: medium: in default value at main.adb:14
main.adb:14:04: medium: predicate check might fail on default value
main.adb:15:04: medium: in default value at main.adb:15
main.adb:15:04: medium: predicate check might fail on default value
