p.adb:41:07: info: initialization of "Num" proved
p.adb:41:12: info: initialization of "Bits" proved
p.adb:41:18: info: initialization of "Res" proved
p.adb:41:23: info: initialization of "B" proved
p.adb:45:07: warning: initialization of "I" has no effect
p.adb:46:07: info: initialization of "M" proved
p.adb:46:10: info: initialization of "Bits_G" proved
p.adb:46:18: info: initialization of "Res_G" proved
p.adb:50:22: info: assertion proved (CVC4: 1 VC)
p.adb:59:25: info: assertion proved (CVC4: 2 VC)
p.adb:60:31: info: loop variant proved (CVC4: 1 VC)
p.adb:61:33: info: loop invariant initialization proved (CVC4: 1 VC)
p.adb:61:33: info: loop invariant preservation proved (CVC4: 1 VC)
p.adb:63:33: info: loop invariant initialization proved (CVC4: 1 VC)
p.adb:63:33: info: loop invariant preservation proved (CVC4: 1 VC)
p.adb:65:33: info: loop invariant initialization proved (CVC4: 1 VC)
p.adb:65:33: info: loop invariant preservation proved (CVC4: 1 VC)
p.adb:67:33: info: loop invariant initialization proved (CVC4: 1 VC)
p.adb:67:33: info: loop invariant preservation proved (CVC4: 1 VC)
p.adb:69:34: info: loop invariant initialization proved (CVC4: 1 VC)
p.adb:69:34: info: loop invariant preservation proved (CVC4: 1 VC)
p.adb:71:33: info: loop invariant initialization proved (CVC4: 1 VC)
p.adb:71:33: info: loop invariant preservation proved (CVC4: 1 VC)
p.adb:73:33: info: loop invariant initialization proved (CVC4: 1 VC)
p.adb:73:33: info: loop invariant preservation proved (CVC4: 1 VC)
p.adb:75:33: info: loop invariant initialization proved (CVC4: 1 VC)
p.adb:75:33: info: loop invariant preservation proved (CVC4: 1 VC)
p.adb:79:33: info: loop invariant initialization proved (CVC4: 1 VC)
p.adb:79:33: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove X - Num = Sqr(Res_G)
p.adb:81:33: info: loop invariant initialization proved (CVC4: 1 VC)
p.adb:81:33: info: loop invariant preservation proved (CVC4: 1 VC)
p.adb:84:25: info: assertion proved (CVC4: 1 VC)
p.adb:85:25: info: assertion proved (CVC4: 1 VC)
p.adb:86:25: info: assertion proved (CVC4: 1 VC)
p.adb:87:12: warning: unused assignment
p.adb:89:25: info: assertion proved (CVC4: 1 VC)
p.adb:90:25: info: assertion proved (CVC4: 1 VC)
p.adb:92:25: info: assertion proved (CVC4: 1 VC)
p.adb:93:25: info: assertion proved (CVC4: 1 VC)
p.adb:103:23: info: division check proved (CVC4: 1 VC)
p.adb:113:29: info: range check proved (CVC4: 1 VC)
p.ads:20:19: info: postcondition proved (CVC4: 3 VC; Trivial: 1 VC)
p.ads:33:19: medium: postcondition might fail, cannot prove (Sqrt_Von_Neumann16'Result * Sqrt_Von_Neumann16'Result) <= X
p32.adb:13:31: info: range check proved (CVC4: 1 VC)
p32.adb:21:22: info: assertion proved (Z3: 1 VC)
p32.adb:49:07: info: initialization of "Num" proved
p32.adb:49:12: info: initialization of "Bits" proved
p32.adb:49:18: info: initialization of "Res" proved
p32.adb:49:23: info: initialization of "B" proved
p32.adb:53:07: warning: initialization of "I" has no effect
p32.adb:54:07: info: initialization of "M" proved
p32.adb:54:10: info: initialization of "Bits_G" proved
p32.adb:54:18: info: initialization of "Res_G" proved
p32.adb:58:22: info: assertion proved (CVC4: 1 VC)
p32.adb:67:25: info: assertion proved (CVC4: 2 VC)
p32.adb:71:25: info: assertion proved (CVC4: 2 VC)
p32.adb:72:25: info: assertion proved (CVC4: 2 VC)
p32.adb:73:25: info: assertion proved (CVC4: 2 VC)
p32.adb:74:12: warning: unused assignment
p32.adb:76:25: info: assertion proved (CVC4: 2 VC)
p32.adb:76:40: info: precondition proved (CVC4: 2 VC)
p32.adb:77:25: info: assertion proved (CVC4: 2 VC)
p32.adb:77:34: info: precondition proved (CVC4: 2 VC)
p32.adb:79:25: info: assertion proved (CVC4: 1 VC; Z3: 1 VC)
p32.adb:80:25: info: assertion proved (CVC4: 2 VC)
p32.adb:80:54: info: precondition proved (CVC4: 2 VC)
p32.adb:82:25: info: assertion proved (CVC4: 2 VC)
p32.adb:82:39: info: precondition proved (CVC4: 2 VC)
p32.adb:88:28: info: assertion proved (CVC4: 2 VC)
p32.adb:88:53: info: precondition proved (CVC4: 2 VC)
p32.adb:92:23: info: division check proved (CVC4: 2 VC)
p32.adb:96:31: info: loop variant proved (CVC4: 1 VC)
p32.adb:98:33: info: loop invariant initialization proved (CVC4: 1 VC)
p32.adb:98:33: info: loop invariant preservation proved (CVC4: 1 VC)
p32.adb:100:33: info: loop invariant initialization proved (CVC4: 1 VC)
p32.adb:100:33: info: loop invariant preservation proved (CVC4: 1 VC)
p32.adb:100:64: info: precondition proved (CVC4: 2 VC)
p32.adb:102:33: info: loop invariant initialization proved (CVC4: 1 VC)
p32.adb:102:33: info: loop invariant preservation proved (CVC4: 1 VC)
p32.adb:104:34: info: loop invariant initialization proved (CVC4: 1 VC)
p32.adb:104:34: info: loop invariant preservation proved (CVC4: 1 VC)
p32.adb:104:46: info: precondition proved (CVC4: 2 VC)
p32.adb:106:33: info: loop invariant initialization proved (CVC4: 1 VC)
p32.adb:106:33: info: loop invariant preservation proved (CVC4: 1 VC)
p32.adb:108:33: info: loop invariant initialization proved (CVC4: 1 VC)
p32.adb:108:33: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove Res = Res_G * Pow2 (M)
p32.adb:108:47: info: precondition proved (CVC4: 2 VC)
p32.adb:110:33: info: loop invariant initialization proved (CVC4: 1 VC)
p32.adb:110:33: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove Num <= X
p32.adb:112:33: info: loop invariant initialization proved (CVC4: 1 VC)
p32.adb:112:33: info: loop invariant preservation proved (CVC4: 1 VC)
p32.adb:113:33: info: loop invariant initialization proved (CVC4: 1 VC; Trivial: 1 VC)
p32.adb:113:33: info: loop invariant preservation proved (CVC4: 1 VC; Trivial: 1 VC)
p32.adb:113:89: info: precondition proved (CVC4: 2 VC)
p32.adb:114:33: info: loop invariant initialization proved (CVC4: 1 VC; Trivial: 1 VC)
p32.adb:114:33: info: loop invariant preservation proved (CVC4: 1 VC; Trivial: 1 VC)
p32.adb:114:57: info: precondition proved (CVC4: 2 VC)
p32.adb:116:33: info: loop invariant initialization proved (CVC4: 1 VC)
p32.adb:116:33: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove X - Num = Sqr (Res_G)
p32.adb:123:33: info: loop invariant initialization proved (CVC4: 1 VC)
p32.adb:123:33: info: loop invariant preservation proved (CVC4: 1 VC)
p32.adb:123:41: info: precondition proved (CVC4: 2 VC)
p32.adb:125:33: info: loop invariant initialization proved (CVC4: 1 VC)
p32.adb:125:33: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove X <= Sqr (Res_G + Pow2 (M)) - 1
p32.adb:125:51: info: precondition proved (CVC4: 2 VC)
p32.adb:128:22: info: assertion proved (CVC4: 1 VC)
p32.adb:129:22: info: assertion proved (CVC4: 1 VC)
p32.adb:130:22: info: assertion proved (CVC4: 1 VC)
p32.adb:130:42: info: precondition proved (CVC4: 1 VC)
p32.adb:131:22: info: assertion proved (CVC4: 1 VC)
p32.adb:131:22: info: precondition proved (CVC4: 1 VC)
p32.adb:132:22: info: assertion proved (CVC4: 1 VC)
p32.adb:133:22: info: assertion proved (CVC4: 1 VC)
p32.adb:134:22: info: assertion proved (CVC4: 1 VC)
p32.adb:135:22: info: assertion proved (CVC4: 1 VC)
p32.adb:136:22: info: assertion proved (CVC4: 1 VC)
p32.adb:137:22: info: assertion proved (CVC4: 1 VC)
p32.adb:139:22: info: assertion proved (CVC4: 1 VC)
p32.adb:140:22: info: assertion proved (CVC4: 1 VC)
p32.adb:148:29: medium: range check might fail [reason for check: value must be convertible to the target type of the conversion] [possible fix: subprogram at p32.ads:36 should mention X in a precondition]
p32.ads:20:14: info: postcondition proved (CVC4: 1 VC)
p32.ads:24:19: info: postcondition proved (CVC4: 3 VC; Trivial: 1 VC)
p32.ads:37:19: medium: postcondition might fail, cannot prove (Sqrt_Von_Neumann32'Result * Sqrt_Von_Neumann32'Result) <= X
p32.ads:40:41: medium: overflow check might fail [reason for check: result of multiplication must fit in a 32-bits machine integer]
p64.adb:13:31: info: range check proved (CVC4: 1 VC)
p64.adb:21:22: info: assertion proved (Z3: 1 VC)
p64.adb:49:07: info: initialization of "Num" proved
p64.adb:49:12: info: initialization of "Bits" proved
p64.adb:49:18: info: initialization of "Res" proved
p64.adb:49:23: info: initialization of "B" proved
p64.adb:53:07: warning: initialization of "I" has no effect
p64.adb:54:07: info: initialization of "M" proved
p64.adb:54:10: info: initialization of "Bits_G" proved
p64.adb:54:18: info: initialization of "Res_G" proved
p64.adb:58:22: info: assertion proved (CVC4: 1 VC)
p64.adb:67:25: info: assertion proved (CVC4: 2 VC)
p64.adb:71:25: info: assertion proved (CVC4: 2 VC)
p64.adb:72:25: info: assertion proved (CVC4: 2 VC)
p64.adb:73:25: info: assertion proved (CVC4: 2 VC)
p64.adb:74:12: warning: unused assignment
p64.adb:76:25: info: assertion proved (CVC4: 2 VC)
p64.adb:76:40: info: precondition proved (CVC4: 2 VC)
p64.adb:77:25: info: assertion proved (CVC4: 2 VC)
p64.adb:77:34: info: precondition proved (CVC4: 2 VC)
p64.adb:79:25: medium: assertion might fail, cannot prove B = Res + Bits [possible fix: loop invariant at line 98 should mention B]
p64.adb:80:25: info: assertion proved (CVC4: 2 VC)
p64.adb:80:54: info: precondition proved (CVC4: 2 VC)
p64.adb:82:25: medium: assertion might fail, cannot prove Res = Res_G * Pow2 (M)
p64.adb:82:39: info: precondition proved (CVC4: 2 VC)
p64.adb:88:28: medium: assertion might fail, cannot prove Res = (Res_G + Bits_G) * Pow2 (M)
p64.adb:88:53: info: precondition proved (CVC4: 2 VC)
p64.adb:92:23: info: division check proved (CVC4: 2 VC)
p64.adb:96:31: info: loop variant proved (CVC4: 1 VC)
p64.adb:98:33: info: loop invariant initialization proved (CVC4: 1 VC)
p64.adb:98:33: info: loop invariant preservation proved (CVC4: 1 VC)
p64.adb:100:33: info: loop invariant initialization proved (CVC4: 1 VC)
p64.adb:100:33: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove Bits_G = (if M = 0 then 0 else Unsigned_64'(Pow2 (M - 1)))
p64.adb:100:64: info: precondition proved (CVC4: 2 VC)
p64.adb:102:33: info: loop invariant initialization proved (CVC4: 1 VC)
p64.adb:102:33: info: loop invariant preservation proved (CVC4: 1 VC)
p64.adb:104:34: info: loop invariant initialization proved (CVC4: 1 VC)
p64.adb:104:34: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove (Res_G and (Pow2 (M) - 1)) = 0
p64.adb:104:46: info: precondition proved (CVC4: 2 VC)
p64.adb:106:33: info: loop invariant initialization proved (CVC4: 1 VC)
p64.adb:106:33: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove Res_G < 16#1000_0000_0#
p64.adb:108:33: info: loop invariant initialization proved (CVC4: 1 VC)
p64.adb:108:33: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove Res = Res_G * Pow2 (M)
p64.adb:108:47: info: precondition proved (CVC4: 2 VC)
p64.adb:110:33: info: loop invariant initialization proved (CVC4: 1 VC)
p64.adb:110:33: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove Num <= X
p64.adb:112:33: info: loop invariant initialization proved (CVC4: 1 VC)
p64.adb:112:33: info: loop invariant preservation proved (CVC4: 1 VC)
p64.adb:113:33: info: loop invariant initialization proved (CVC4: 1 VC; Trivial: 1 VC)
p64.adb:113:48: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove (Res or Bits) = ((2 * Res_G) + Bits_G) * Pow2 (M-1)
p64.adb:113:89: info: precondition proved (CVC4: 2 VC)
p64.adb:114:33: info: loop invariant initialization proved (CVC4: 1 VC; Trivial: 1 VC)
p64.adb:114:33: info: loop invariant preservation proved (CVC4: 1 VC; Trivial: 1 VC)
p64.adb:114:57: info: precondition proved (CVC4: 2 VC)
p64.adb:116:33: info: loop invariant initialization proved (CVC4: 1 VC)
p64.adb:116:33: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove X - Num = Sqr (Res_G)
p64.adb:118:33: info: loop invariant initialization proved (CVC4: 1 VC)
p64.adb:118:33: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove Res_G + Pow2 (M) <= 2 ** 32
p64.adb:118:41: info: precondition proved (CVC4: 2 VC)
p64.adb:120:33: info: loop invariant initialization proved (CVC4: 1 VC)
p64.adb:120:33: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove X <= Sqr (Res_G + Pow2 (M)) - 1
p64.adb:120:51: info: precondition proved (CVC4: 2 VC)
p64.adb:123:22: info: assertion proved (Z3: 1 VC)
p64.adb:124:22: info: assertion proved (CVC4: 1 VC)
p64.adb:125:22: info: assertion proved (CVC4: 1 VC)
p64.adb:125:42: info: precondition proved (CVC4: 1 VC)
p64.adb:126:22: info: assertion proved (CVC4: 1 VC)
p64.adb:126:22: info: precondition proved (CVC4: 1 VC)
p64.adb:127:22: info: assertion proved (CVC4: 1 VC)
p64.adb:128:22: info: assertion proved (CVC4: 1 VC)
p64.adb:129:22: info: assertion proved (CVC4: 1 VC)
p64.adb:130:22: info: assertion proved (CVC4: 1 VC)
p64.adb:131:22: info: assertion proved (CVC4: 1 VC)
p64.adb:132:22: info: assertion proved (CVC4: 1 VC)
p64.adb:134:22: medium: assertion might fail, cannot prove Res * Res <= X
p64.adb:135:22: info: assertion proved (CVC4: 1 VC)
p64.adb:143:29: medium: range check might fail [reason for check: value must be convertible to the target type of the conversion] [possible fix: subprogram at p64.ads:36 should mention X in a precondition]
p64.ads:20:14: info: postcondition proved (CVC4: 1 VC)
p64.ads:24:19: info: postcondition proved (CVC4: 3 VC; Trivial: 1 VC)
p64.ads:37:19: medium: postcondition might fail, cannot prove (Sqrt_Von_Neumann64'Result * Sqrt_Von_Neumann64'Result) <= X
p64.ads:40:41: medium: overflow check might fail [reason for check: result of multiplication must fit in a 64-bits machine integer]
