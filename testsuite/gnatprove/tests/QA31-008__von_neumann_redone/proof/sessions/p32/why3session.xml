<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="0" name="CVC4_CE" version="1.5-gnatprove" timelimit="5" steplimit="0" memlimit="0"/>
<prover id="1" name="Z3" version="4.5.1-gnatprove" timelimit="0" steplimit="0" memlimit="0"/>
<prover id="2" name="altergo" version="1.30-gnatprove" timelimit="0" steplimit="9560" memlimit="0"/>
<prover id="3" name="CVC4" version="1.5-gnatprove" timelimit="0" steplimit="6" memlimit="0"/>
<file name="../../../gnatprove/p32.mlw" proved="true">
<theory name="Standard__short_short_integer" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__short_short_integer__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__short_integer" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__short_integer__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__integer" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__integer__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__long_integer" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__long_integer__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__long_long_integer" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__long_long_integer__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__natural" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__natural__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__positive" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__positive__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__short_float" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__short_float__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__float" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__float__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__long_float" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__long_float__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__character" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__character__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__wide_character" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__wide_character__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__wide_wide_character" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__wide_wide_character__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Array__Int__Standard__character" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__string" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Array__Int__Standard__wide_character" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__wide_string" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Array__Int__Standard__wide_wide_character" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__wide_wide_string" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__duration" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__integer_8" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__integer_8__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__integer_16" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__integer_16__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__integer_32" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__integer_32__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__integer_64" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__integer_64__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__universal_integer" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__universal_integer__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__Tinteger_8B" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__Tinteger_8B__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__integer_8" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__integer_8__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__Tinteger_16B" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__Tinteger_16B__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__integer_16" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__integer_16__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__Tinteger_32B" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__Tinteger_32B__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__integer_32" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__integer_32__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__Tinteger_64B" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__Tinteger_64B__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__integer_64" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__integer_64__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__unsigned_8" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__unsigned_8__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__unsigned_16" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__unsigned_16__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__unsigned_24" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__unsigned_24__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__unsigned_32" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__unsigned_32__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__unsigned_64" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__unsigned_64__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__shift_left__value" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__shift_left__value___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__shift_left__amount" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__shift_left__amount___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__shift_right__value" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__shift_right__value___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__shift_right__amount" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__shift_right__amount___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__shift_right_arithmetic__value" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__shift_right_arithmetic__value___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__shift_right_arithmetic__amount" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__shift_right_arithmetic__amount___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__rotate_left__value" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__rotate_left__value___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__rotate_left__amount" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__rotate_left__amount___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__rotate_right__value" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__rotate_right__value___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__rotate_right__amount" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__rotate_right__amount___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__shift_left__2__value" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__shift_left__2__value___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__shift_left__2__amount" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__shift_left__2__amount___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__shift_right__2__value" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__shift_right__2__value___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__shift_right__2__amount" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__shift_right__2__amount___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__shift_right_arithmetic__2__value" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__shift_right_arithmetic__2__value___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__shift_right_arithmetic__2__amount" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__shift_right_arithmetic__2__amount___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__rotate_left__2__value" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__rotate_left__2__value___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__rotate_left__2__amount" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__rotate_left__2__amount___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__rotate_right__2__value" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__rotate_right__2__value___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__rotate_right__2__amount" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__rotate_right__2__amount___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__shift_left__3__value" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__shift_left__3__value___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__shift_left__3__amount" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__shift_left__3__amount___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__shift_right__3__value" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__shift_right__3__value___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__shift_right__3__amount" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__shift_right__3__amount___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__shift_right_arithmetic__3__value" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__shift_right_arithmetic__3__value___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__shift_right_arithmetic__3__amount" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__shift_right_arithmetic__3__amount___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__rotate_left__3__value" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__rotate_left__3__value___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__rotate_left__3__amount" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__rotate_left__3__amount___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__rotate_right__3__value" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__rotate_right__3__value___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__rotate_right__3__amount" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__rotate_right__3__amount___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__shift_left__4__value" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__shift_left__4__value___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__shift_left__4__amount" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__shift_left__4__amount___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__shift_right__4__value" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__shift_right__4__value___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__shift_right__4__amount" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__shift_right__4__amount___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__shift_right_arithmetic__4__value" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__shift_right_arithmetic__4__value___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__shift_right_arithmetic__4__amount" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__shift_right_arithmetic__4__amount___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__rotate_left__4__value" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__rotate_left__4__value___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__rotate_left__4__amount" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__rotate_left__4__amount___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__rotate_right__4__value" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__rotate_right__4__value___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__rotate_right__4__amount" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__rotate_right__4__amount___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__Tieee_float_32B" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__Tieee_float_32B__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__ieee_float_32" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__ieee_float_32__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__Tieee_float_64B" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__Tieee_float_64B__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__ieee_float_64" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__ieee_float_64__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__sqrt_domain32" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__sqrt_domain32__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__sqrt_range32" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__sqrt_range32__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__u32" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__u32__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__sqr__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__sqr__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__sqr" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__lemma_bv__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__lemma_bv__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__lemma_bv__y" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__lemma_bv__y___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__sqrt_von_neumann_aux32__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__sqrt_von_neumann_aux32__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__sqrt_von_neumann_aux32" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__sqrt_von_neumann32__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__sqrt_von_neumann32__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__sqrt_von_neumann32" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__pow2__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__pow2__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__pow2" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__sqrt_von_neumann_aux32__num" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__sqrt_von_neumann_aux32__num___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__sqrt_von_neumann_aux32__bits" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__sqrt_von_neumann_aux32__bits___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__sqrt_von_neumann_aux32__res" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__sqrt_von_neumann_aux32__res___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__sqrt_von_neumann_aux32__b" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__sqrt_von_neumann_aux32__b___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__sqrt_von_neumann_aux32__i" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__sqrt_von_neumann_aux32__i___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__sqrt_von_neumann_aux32__m" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__sqrt_von_neumann_aux32__m___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__sqrt_von_neumann_aux32__bits_g" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__sqrt_von_neumann_aux32__bits_g___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__sqrt_von_neumann_aux32__res_g" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__sqrt_von_neumann_aux32__res_g___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__short_short_integer___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__short_integer___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__integer___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__long_integer___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__long_long_integer___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__natural___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__positive___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__short_float___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__float___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__long_float___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__character___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__wide_character___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__wide_wide_character___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__string___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__wide_string___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__wide_wide_string___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__duration___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__integer_8___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__integer_16___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__integer_32___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__integer_64___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__universal_integer___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__lemma_bv" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__sqrt_von_neumann_aux32__L_1" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__sqrt_von_neumann_aux32__L_1___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__Tinteger_8B___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__integer_8___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__Tinteger_16B___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__integer_16___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__Tinteger_32B___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__integer_32___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__Tinteger_64B___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__integer_64___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__unsigned_8___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__unsigned_16___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__unsigned_24___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__unsigned_32___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__unsigned_64___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__Tieee_float_32B___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__ieee_float_32___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__Tieee_float_64B___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Interfaces__ieee_float_64___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__sqrt_domain32___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__sqrt_range32___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__u32___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__sqr___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__lemma_bv___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__sqrt_von_neumann_aux32___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__sqrt_von_neumann32___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__pow2___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="P32__package_def" proved="true" sum="e284967f6dbb6592898a5ced2974229f">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="P32__sqr__subprogram_def" proved="true" sum="8559be46132ab6c36b9f9987cd5e6ee1">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="P32__lemma_bv__subprogram_def" proved="true" sum="efc0687a7aebd5ad2fe2cca11f114674">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="assertion" proved="true">
  <transf name="apply" proved="true" arg1="to_uint_extensionality">
   <goal name="WP_parameter def.0.0" proved="true">
   <transf name="rewrite" proved="true" arg1="to_uint_mul">
    <goal name="WP_parameter def.0.0.0" proved="true">
    <transf name="rewrite" proved="true" arg1="to_uint_add">
     <goal name="WP_parameter def.0.0.0.0" proved="true">
     <transf name="assert" proved="true" arg1="(forall a b y. y &gt; 0 -&gt; mod ((mod a y) * mod b y) y = mod (a * b) y)">
      <goal name="WP_parameter def.0.0.0.0.0" proved="true">
      <transf name="assert" proved="true" arg1="(forall x y. not y = 0 -&gt; mod x y = x - y * (div x y))">
       <goal name="WP_parameter def.0.0.0.0.0.0" proved="true">
       <proof prover="1" steplimit="557"><result status="valid" steps="506"/></proof>
       </goal>
       <goal name="WP_parameter def.0.0.0.0.0.1" proved="true">
       <transf name="instantiate" proved="true" arg1="h" arg2="a">
        <goal name="WP_parameter def.0.0.0.0.0.1.0" proved="true">
        <transf name="rewrite" proved="true" arg1="Hinst">
         <goal name="WP_parameter def.0.0.0.0.0.1.0.0" proved="true">
         <transf name="instantiate" proved="true" arg1="h" arg2="b">
          <goal name="WP_parameter def.0.0.0.0.0.1.0.0.0" proved="true">
          <transf name="rewrite" proved="true" arg1="Hinst">
           <goal name="WP_parameter def.0.0.0.0.0.1.0.0.0.0" proved="true">
           <transf name="replace" proved="true" arg1="((a - (y * div a y)) * (b - (y * div b y)))" arg2="(y* ((-a) * div b y - b * div a y + y * (div a y) * (div b y)) + a * b)">
            <goal name="WP_parameter def.0.0.0.0.0.1.0.0.0.0.0" proved="true">
            <transf name="rewrite" proved="true" arg1="Mod_mult">
             <goal name="WP_parameter def.0.0.0.0.0.1.0.0.0.0.0.0" proved="true">
             <proof prover="3"><result status="valid" steps="5"/></proof>
             </goal>
             <goal name="WP_parameter def.0.0.0.0.0.1.0.0.0.0.0.1" proved="true">
             <proof prover="1" steplimit="103"><result status="valid" steps="93"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="WP_parameter def.0.0.0.0.0.1.0.0.0.0.1" proved="true">
            <proof prover="1" steplimit="4027"><result status="valid" steps="3660"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="WP_parameter def.0.0.0.0.0.1.0.0.0.1" proved="true">
           <proof prover="1" steplimit="446"><result status="valid" steps="405"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="WP_parameter def.0.0.0.0.0.1.0.1" proved="true">
         <proof prover="1" steplimit="334"><result status="valid" steps="303"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="WP_parameter def.0.0.0.0.1" proved="true">
      <transf name="assert" proved="true" arg1="(forall a b y. y &gt; 0 -&gt;  mod ((mod a y) + mod b y) y = mod (a + b) y)
">
       <goal name="WP_parameter def.0.0.0.0.1.0" proved="true">
       <transf name="assert" proved="true" arg1="(forall x y. not y = 0 -&gt; mod x y = x - y * (div x y))
">
        <goal name="WP_parameter def.0.0.0.0.1.0.0" proved="true">
        <proof prover="1" steplimit="952"><result status="valid" steps="865"/></proof>
        </goal>
        <goal name="WP_parameter def.0.0.0.0.1.0.1" proved="true">
        <transf name="instantiate" proved="true" arg1="h" arg2="b">
         <goal name="WP_parameter def.0.0.0.0.1.0.1.0" proved="true">
         <transf name="instantiate" proved="true" arg1="h" arg2="a">
          <goal name="WP_parameter def.0.0.0.0.1.0.1.0.0" proved="true">
          <transf name="rewrite" proved="true" arg1="Hinst">
           <goal name="WP_parameter def.0.0.0.0.1.0.1.0.0.0" proved="true">
           <transf name="rewrite" proved="true" arg1="Hinst1">
            <goal name="WP_parameter def.0.0.0.0.1.0.1.0.0.0.0" proved="true">
            <transf name="replace" proved="true" arg1="((a - (y * div a y)) + (b - (y * div b y)))" arg2="(y * (- div a y - div b y) + (a + b))
">
             <goal name="WP_parameter def.0.0.0.0.1.0.1.0.0.0.0.0" proved="true">
             <transf name="rewrite" proved="true" arg1="Mod_mult">
              <goal name="WP_parameter def.0.0.0.0.1.0.1.0.0.0.0.0.0" proved="true">
              <proof prover="3"><result status="valid" steps="5"/></proof>
              </goal>
              <goal name="WP_parameter def.0.0.0.0.1.0.1.0.0.0.0.0.1" proved="true">
              <proof prover="3"><result status="valid" steps="5"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="WP_parameter def.0.0.0.0.1.0.1.0.0.0.0.1" proved="true">
             <proof prover="3"><result status="valid" steps="5"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="WP_parameter def.0.0.0.0.1.0.1.0.0.0.1" proved="true">
            <proof prover="3"><result status="valid" steps="5"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="WP_parameter def.0.0.0.0.1.0.1.0.0.1" proved="true">
           <proof prover="3"><result status="valid" steps="5"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="WP_parameter def.0.0.0.0.1.1" proved="true">
       <transf name="rewrite" proved="true" arg1="h1">
        <goal name="WP_parameter def.0.0.0.0.1.1.0" proved="true">
        <transf name="assert" proved="true" arg1="(forall a b. (a + b) * (a + b) = a * a + b * (2 * a + b))">
         <goal name="WP_parameter def.0.0.0.0.1.1.0.0" proved="true">
         <proof prover="1" steplimit="1657"><result status="valid" steps="1506"/></proof>
         </goal>
         <goal name="WP_parameter def.0.0.0.0.1.1.0.1" proved="true">
         <transf name="rewrite" proved="true" arg1="h">
          <goal name="WP_parameter def.0.0.0.0.1.1.0.1.0" proved="true">
          <transf name="rewrite" proved="true" arg1="&lt;-" arg2="h1">
           <goal name="WP_parameter def.0.0.0.0.1.1.0.1.0.0" proved="true">
           <transf name="rewrite" proved="true" arg1="to_uint_add">
            <goal name="WP_parameter def.0.0.0.0.1.1.0.1.0.0.0" proved="true">
            <transf name="rewrite" proved="true" arg1="to_uint_mul">
             <goal name="WP_parameter def.0.0.0.0.1.1.0.1.0.0.0.0" proved="true">
             <transf name="rewrite" proved="true" arg1="to_uint_mul">
              <goal name="WP_parameter def.0.0.0.0.1.1.0.1.0.0.0.0.0" proved="true">
              <transf name="rewrite" proved="true" arg1="to_uint_add">
               <goal name="WP_parameter def.0.0.0.0.1.1.0.1.0.0.0.0.0.0" proved="true">
               <transf name="rewrite" proved="true" arg1="to_uint_mul">
                <goal name="WP_parameter def.0.0.0.0.1.1.0.1.0.0.0.0.0.0.0" proved="true">
                <proof prover="1" steplimit="200"><result status="valid" steps="181"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="WP_parameter def.0.0.0.0.1.1.0.1.0.1" proved="true">
           <proof prover="3"><result status="valid" steps="5"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="WP_parameter def.0.0.0.0.1.1.1" proved="true">
        <proof prover="1" steplimit="81"><result status="valid" steps="73"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter def.1" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout"/></proof>
  <proof prover="1" timelimit="14" steplimit="530000" obsolete="true"><result status="unknown" steps="530003"/></proof>
  <proof prover="2" timelimit="5" steplimit="0" obsolete="true"><result status="timeout"/></proof>
  <proof prover="3" steplimit="4332"><result status="valid" steps="3938"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="P32__sqrt_von_neumann_aux32__subprogram_def" proved="true" sum="6ea94a160632d9c2cfe100e3ab024c14">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="assertion" proved="true">
  <proof prover="3" steplimit="17"><result status="valid" steps="15"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter def.5" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter def.6" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter def.7" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter def.8" expl="assertion" proved="true">
  <proof prover="3" steplimit="633"><result status="valid" steps="575"/></proof>
  </goal>
  <goal name="WP_parameter def.9" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter def.10" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter def.11" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter def.12" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter def.13" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter def.14" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter def.15" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter def.16" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter def.17" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter def.18" expl="loop invariant init" proved="true">
  <proof prover="3" steplimit="4585"><result status="valid" steps="4168"/></proof>
  </goal>
  <goal name="WP_parameter def.19" expl="loop invariant init" proved="true">
  <proof prover="3" steplimit="4603"><result status="valid" steps="4184"/></proof>
  </goal>
  <goal name="WP_parameter def.20" expl="loop invariant init" proved="true">
  <proof prover="3" steplimit="301"><result status="valid" steps="273"/></proof>
  </goal>
  <goal name="WP_parameter def.21" expl="loop invariant init" proved="true">
  <proof prover="3" steplimit="292"><result status="valid" steps="265"/></proof>
  </goal>
  <goal name="WP_parameter def.22" expl="loop invariant init" proved="true">
  <proof prover="3" steplimit="284"><result status="valid" steps="258"/></proof>
  </goal>
  <goal name="WP_parameter def.23" expl="loop invariant init" proved="true">
  <proof prover="3" steplimit="1462"><result status="valid" steps="1329"/></proof>
  </goal>
  <goal name="WP_parameter def.24" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter def.25" expl="loop invariant init" proved="true">
  <proof prover="3" steplimit="1687"><result status="valid" steps="1533"/></proof>
  </goal>
  <goal name="WP_parameter def.26" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter def.27" expl="loop invariant init" proved="true">
  <proof prover="3" steplimit="4585"><result status="valid" steps="4168"/></proof>
  </goal>
  <goal name="WP_parameter def.28" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter def.29" expl="loop invariant init" proved="true">
  <proof prover="3" steplimit="5295"><result status="valid" steps="4813"/></proof>
  </goal>
  <goal name="WP_parameter def.30" expl="loop invariant init" proved="true">
  <proof prover="3" steplimit="311"><result status="valid" steps="282"/></proof>
  </goal>
  <goal name="WP_parameter def.31" expl="loop invariant init" proved="true">
  <proof prover="3" steplimit="2514"><result status="valid" steps="2285"/></proof>
  </goal>
  <goal name="WP_parameter def.32" expl="precondition" proved="true">
  <proof prover="3" steplimit="1140"><result status="valid" steps="1036"/></proof>
  </goal>
  <goal name="WP_parameter def.33" expl="precondition" proved="true">
  <proof prover="3" steplimit="18"><result status="valid" steps="16"/></proof>
  </goal>
  <goal name="WP_parameter def.34" expl="precondition" proved="true">
  <proof prover="3" steplimit="18"><result status="valid" steps="16"/></proof>
  </goal>
  <goal name="WP_parameter def.35" expl="precondition" proved="true">
  <proof prover="3" steplimit="1140"><result status="valid" steps="1036"/></proof>
  </goal>
  <goal name="WP_parameter def.36" expl="precondition" proved="true">
  <proof prover="3" steplimit="1140"><result status="valid" steps="1036"/></proof>
  </goal>
  <goal name="WP_parameter def.37" expl="precondition" proved="true">
  <proof prover="3" steplimit="18"><result status="valid" steps="16"/></proof>
  </goal>
  <goal name="WP_parameter def.38" expl="precondition" proved="true">
  <proof prover="3" steplimit="18"><result status="valid" steps="16"/></proof>
  </goal>
  <goal name="WP_parameter def.39" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter def.40" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter def.41" expl="assertion" proved="true">
  <proof prover="3" steplimit="2462"><result status="valid" steps="2238"/></proof>
  </goal>
  <goal name="WP_parameter def.42" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter def.43" expl="precondition" proved="true">
  <proof prover="3" steplimit="18"><result status="valid" steps="16"/></proof>
  </goal>
  <goal name="WP_parameter def.44" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter def.45" expl="precondition" proved="true">
  <proof prover="3" steplimit="1202"><result status="valid" steps="1092"/></proof>
  </goal>
  <goal name="WP_parameter def.46" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter def.47" expl="assertion" proved="true">
  <proof prover="3" steplimit="15868"><result status="valid" steps="14425"/></proof>
  </goal>
  <goal name="WP_parameter def.48" expl="precondition" proved="true">
  <proof prover="3" steplimit="1228"><result status="valid" steps="1116"/></proof>
  </goal>
  <goal name="WP_parameter def.49" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter def.50" expl="precondition" proved="true">
  <proof prover="3" steplimit="1228"><result status="valid" steps="1116"/></proof>
  </goal>
  <goal name="WP_parameter def.51" expl="assertion" proved="true">
  <proof prover="3" steplimit="12900"><result status="valid" steps="11727"/></proof>
  </goal>
  <goal name="WP_parameter def.52" expl="precondition" proved="true">
  <proof prover="3" steplimit="1281"><result status="valid" steps="1164"/></proof>
  </goal>
  <goal name="WP_parameter def.53" expl="assertion" proved="true">
  <proof prover="3" steplimit="82872"><result status="valid" steps="75338"/></proof>
  </goal>
  <goal name="WP_parameter def.54" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter def.55" expl="check" proved="true">
  <proof prover="3" steplimit="607"><result status="valid" steps="551"/></proof>
  </goal>
  <goal name="WP_parameter def.56" expl="loop invariant preservation" proved="true">
  <proof prover="3" steplimit="1552"><result status="valid" steps="1410"/></proof>
  </goal>
  <goal name="WP_parameter def.57" expl="loop invariant preservation" proved="true">
  <proof prover="3" steplimit="7245"><result status="valid" steps="6586"/></proof>
  </goal>
  <goal name="WP_parameter def.58" expl="loop invariant preservation" proved="true">
  <proof prover="3" steplimit="7157"><result status="valid" steps="6506"/></proof>
  </goal>
  <goal name="WP_parameter def.59" expl="loop invariant preservation" proved="true">
  <proof prover="3" steplimit="7866"><result status="valid" steps="7150"/></proof>
  </goal>
  <goal name="WP_parameter def.60" expl="loop invariant preservation" proved="true">
  <proof prover="3" steplimit="8648"><result status="valid" steps="7861"/></proof>
  </goal>
  <goal name="WP_parameter def.61" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="5" obsolete="true"><result status="timeout"/></proof>
  <proof prover="2" steplimit="166"><result status="valid" steps="150"/></proof>
  <proof prover="3" timelimit="5" steplimit="0" obsolete="true"><result status="timeout"/></proof>
  </goal>
  <goal name="WP_parameter def.62" expl="loop invariant preservation" proved="true">
  <proof prover="3" steplimit="10199"><result status="valid" steps="9271"/></proof>
  </goal>
  <goal name="WP_parameter def.63" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter def.64" expl="loop invariant preservation" proved="true">
  <proof prover="3" steplimit="10611"><result status="valid" steps="9646"/></proof>
  </goal>
  <goal name="WP_parameter def.65" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter def.66" expl="loop invariant preservation" proved="true">
  <proof prover="3" steplimit="5388"><result status="valid" steps="4898"/></proof>
  </goal>
  <goal name="WP_parameter def.67" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter def.68" expl="loop invariant preservation" proved="true">
  <transf name="case" proved="true" arg1="(uge Num10 B9)">
   <goal name="WP_parameter def.68.0" expl="loop invariant preservation (true case)" proved="true">
   <transf name="rewrite" proved="true" arg1="H94">
    <goal name="WP_parameter def.68.0.0" expl="loop invariant preservation (true case)" proved="true">
    <transf name="rewrite" proved="true" arg1="H99">
     <goal name="WP_parameter def.68.0.0.0" expl="loop invariant preservation (true case)" proved="true">
     <transf name="rewrite" proved="true" arg1="H76">
      <goal name="WP_parameter def.68.0.0.0.0" expl="loop invariant preservation (true case)" proved="true">
      <transf name="replace" proved="true" arg1="(sub X (sub Num10 B9))" arg2="(add (sub X Num10) B9)">
       <goal name="WP_parameter def.68.0.0.0.0.0" expl="loop invariant preservation (true case)" proved="true">
       <transf name="rewrite" proved="true" arg1="H68">
        <goal name="WP_parameter def.68.0.0.0.0.0.0" expl="loop invariant preservation (true case)" proved="true">
        <transf name="rewrite" proved="true" arg1="H89">
         <goal name="WP_parameter def.68.0.0.0.0.0.0.0" expl="loop invariant preservation (true case)" proved="true">
         <proof prover="3" steplimit="1402"><result status="valid" steps="1274"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="WP_parameter def.68.0.0.0.0.1" proved="true">
       <proof prover="3"><result status="valid" steps="5"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="WP_parameter def.68.0.0.1" proved="true">
     <proof prover="3"><result status="valid" steps="5"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="WP_parameter def.68.0.1" proved="true">
    <proof prover="3"><result status="valid" steps="5"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="WP_parameter def.68.1" expl="loop invariant preservation (false case)" proved="true">
   <proof prover="3"><result status="valid" steps="5"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter def.69" expl="loop invariant preservation" proved="true">
  <proof prover="3" steplimit="10396"><result status="valid" steps="9450"/></proof>
  </goal>
  <goal name="WP_parameter def.70" expl="loop invariant preservation" proved="true">
  <transf name="case" proved="true" arg1="(uge Num10 B9)">
   <goal name="WP_parameter def.70.0" expl="loop invariant preservation (true case)" proved="true">
   <proof prover="3" steplimit="108307"><result status="valid" steps="98460"/></proof>
   </goal>
   <goal name="WP_parameter def.70.1" expl="loop invariant preservation (false case)" proved="true">
   <transf name="assert" proved="true" arg1="(Res_G9 = Res_G10)">
    <goal name="WP_parameter def.70.1.0" proved="true">
    <proof prover="1" timelimit="2" memlimit="1000"><result status="valid" steps="2675"/></proof>
    <proof prover="3"><result status="valid" steps="5"/></proof>
    </goal>
    <goal name="WP_parameter def.70.1.1" expl="loop invariant preservation (false case)" proved="true">
    <transf name="subst" proved="true" arg1="Res_G9">
     <goal name="WP_parameter def.70.1.1.0" expl="loop invariant preservation (false case)" proved="true">
     <transf name="assert" proved="true" arg1="(X = add Num10 (sqr Res_G10))">
      <goal name="WP_parameter def.70.1.1.0.0" proved="true">
      <proof prover="3" steplimit="13473"><result status="valid" steps="12248"/></proof>
      </goal>
      <goal name="WP_parameter def.70.1.1.0.1" expl="loop invariant preservation (false case)" proved="true">
      <transf name="rewrite" proved="true" arg1="h">
       <goal name="WP_parameter def.70.1.1.0.1.0" expl="loop invariant preservation (false case)" proved="true">
       <transf name="replace" proved="true" arg1="(pow2 M9)" arg2="Bits_G10">
        <goal name="WP_parameter def.70.1.1.0.1.0.0" expl="loop invariant preservation (false case)" proved="true">
        <transf name="rewrite" proved="true" arg1="H65">
         <goal name="WP_parameter def.70.1.1.0.1.0.0.0" expl="loop invariant preservation (false case)" proved="true">
         <transf name="replace" proved="true" arg1="(mul Bits_G10 (add (mul (of_int1 2) Res_G10) Bits_G10))" arg2="(mul (add (mul (of_int1 2) Res_G10) Bits_G10) (pow2 M9))">
          <goal name="WP_parameter def.70.1.1.0.1.0.0.0.0" expl="loop invariant preservation (false case)" proved="true">
          <transf name="rewrite" proved="true" arg1="&lt;-" arg2="H89">
           <goal name="WP_parameter def.70.1.1.0.1.0.0.0.0.0" expl="loop invariant preservation (false case)" proved="true">
           <transf name="assert" proved="true" arg1="(t&apos;int Num10 &lt;= t&apos;int (sub B9 (of_int1 1)))">
            <goal name="WP_parameter def.70.1.1.0.1.0.0.0.0.0.0" proved="true">
            <transf name="clear_but" proved="true" arg1="h2">
             <goal name="WP_parameter def.70.1.1.0.1.0.0.0.0.0.0.0" proved="true">
             <proof prover="2" steplimit="182"><result status="valid" steps="165"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="WP_parameter def.70.1.1.0.1.0.0.0.0.0.1" expl="loop invariant preservation (false case)" proved="true">
            <transf name="unfold" proved="true" arg1="ule">
             <goal name="WP_parameter def.70.1.1.0.1.0.0.0.0.0.1.0" expl="VC for def" proved="true">
             <transf name="replace" proved="true" arg1="(sub (add (sqr Res_G10) B9) (of_int1 1))" arg2="(add (sqr Res_G10) (sub B9 (of_int1 1)))">
              <goal name="WP_parameter def.70.1.1.0.1.0.0.0.0.0.1.0.0" expl="VC for def" proved="true">
              <transf name="rewrite" proved="true" arg1="to_uint_add_bounded">
               <goal name="WP_parameter def.70.1.1.0.1.0.0.0.0.0.1.0.0.0" expl="VC for def" proved="true">
               <transf name="rewrite" proved="true" arg1="to_uint_add_bounded">
                <goal name="WP_parameter def.70.1.1.0.1.0.0.0.0.0.1.0.0.0.0" expl="VC for def" proved="true">
                <proof prover="2" steplimit="180"><result status="valid" steps="163"/></proof>
                </goal>
                <goal name="WP_parameter def.70.1.1.0.1.0.0.0.0.0.1.0.0.0.1" proved="true">
                <transf name="assert" proved="true" arg1="(t&apos;int Res_G10 + t&apos;int Bits_G10 &lt; 65536)">
                 <goal name="WP_parameter def.70.1.1.0.1.0.0.0.0.0.1.0.0.0.1.0" proved="true">
                 <proof prover="1" steplimit="1252720"><result status="valid" steps="1138836"/></proof>
                 </goal>
                 <goal name="WP_parameter def.70.1.1.0.1.0.0.0.0.0.1.0.0.0.1.1" proved="true">
                 <transf name="rewrite" proved="true" arg1="sqr__def_axiom">
                  <goal name="WP_parameter def.70.1.1.0.1.0.0.0.0.0.1.0.0.0.1.1.0" proved="true">
                  <transf name="rewrite" proved="true" arg1="to_uint_mul_bounded">
                   <goal name="WP_parameter def.70.1.1.0.1.0.0.0.0.0.1.0.0.0.1.1.0.0" proved="true">
                   <transf name="rewrite" proved="true" arg1="H89">
                    <goal name="WP_parameter def.70.1.1.0.1.0.0.0.0.0.1.0.0.0.1.1.0.0.0" proved="true">
                    <transf name="rewrite" proved="true" arg1="to_uint_sub_bounded">
                     <goal name="WP_parameter def.70.1.1.0.1.0.0.0.0.0.1.0.0.0.1.1.0.0.0.0" proved="true">
                     <transf name="assert" proved="true" arg1="((t&apos;int Res_G10 + t&apos;int Bits_G10) *(t&apos;int Res_G10 + t&apos;int Bits_G10)  &lt; two_power_size)">
                      <goal name="WP_parameter def.70.1.1.0.1.0.0.0.0.0.1.0.0.0.1.1.0.0.0.0.0" proved="true">
                      <proof prover="2" steplimit="701"><result status="valid" steps="637"/></proof>
                      </goal>
                      <goal name="WP_parameter def.70.1.1.0.1.0.0.0.0.0.1.0.0.0.1.1.0.0.0.0.1" proved="true">
                      <transf name="rewrite" proved="true" arg1="to_uint_mul_bounded">
                       <goal name="WP_parameter def.70.1.1.0.1.0.0.0.0.0.1.0.0.0.1.1.0.0.0.0.1.0" proved="true">
                       <transf name="rewrite" proved="true" arg1="to_uint_add_bounded">
                        <goal name="WP_parameter def.70.1.1.0.1.0.0.0.0.0.1.0.0.0.1.1.0.0.0.0.1.0.0" proved="true">
                        <transf name="rewrite" proved="true" arg1="to_uint_mul_bounded">
                         <goal name="WP_parameter def.70.1.1.0.1.0.0.0.0.0.1.0.0.0.1.1.0.0.0.0.1.0.0.0" proved="true">
                         <proof prover="2" steplimit="1128"><result status="valid" steps="1025"/></proof>
                         </goal>
                         <goal name="WP_parameter def.70.1.1.0.1.0.0.0.0.0.1.0.0.0.1.1.0.0.0.0.1.0.0.1" proved="true">
                         <proof prover="2" steplimit="307"><result status="valid" steps="279"/></proof>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="WP_parameter def.70.1.1.0.1.0.0.0.0.0.1.0.0.0.1.1.0.0.0.0.1.0.1" proved="true">
                        <proof prover="1" steplimit="551196"><result status="valid" steps="501087"/></proof>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="WP_parameter def.70.1.1.0.1.0.0.0.0.0.1.0.0.0.1.1.0.0.0.0.1.1" proved="true">
                       <transf name="rewrite" proved="true" arg1="to_uint_add_bounded">
                        <goal name="WP_parameter def.70.1.1.0.1.0.0.0.0.0.1.0.0.0.1.1.0.0.0.0.1.1.0" proved="true">
                        <transf name="rewrite" proved="true" arg1="to_uint_mul_bounded">
                         <goal name="WP_parameter def.70.1.1.0.1.0.0.0.0.0.1.0.0.0.1.1.0.0.0.0.1.1.0.0" proved="true">
                         <proof prover="2" steplimit="618"><result status="valid" steps="561"/></proof>
                         </goal>
                         <goal name="WP_parameter def.70.1.1.0.1.0.0.0.0.0.1.0.0.0.1.1.0.0.0.0.1.1.0.1" proved="true">
                         <proof prover="1" steplimit="276706"><result status="valid" steps="251550"/></proof>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="WP_parameter def.70.1.1.0.1.0.0.0.0.0.1.0.0.0.1.1.0.0.0.0.1.1.1" proved="true">
                        <proof prover="1" steplimit="551196"><result status="valid" steps="501087"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="WP_parameter def.70.1.1.0.1.0.0.0.0.0.1.0.0.0.1.1.0.0.0.1" proved="true">
                     <proof prover="1" steplimit="3090204"><result status="valid" steps="2809276"/></proof>
                     <proof prover="2" steplimit="9070"><result status="failure"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="WP_parameter def.70.1.1.0.1.0.0.0.0.0.1.0.0.0.1.1.0.1" proved="true">
                   <proof prover="2" steplimit="206"><result status="valid" steps="187"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="WP_parameter def.70.1.1.0.1.0.0.0.0.0.1.0.0.0.1.1.1" proved="true">
                  <proof prover="3"><result status="valid" steps="5"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="WP_parameter def.70.1.1.0.1.0.0.0.0.0.1.0.0.1" proved="true">
               <proof prover="2" steplimit="478"><result status="valid" steps="434"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="WP_parameter def.70.1.1.0.1.0.0.0.0.0.1.0.1" proved="true">
              <proof prover="3"><result status="valid" steps="5"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="WP_parameter def.70.1.1.0.1.0.0.0.1" proved="true">
          <proof prover="3" steplimit="1292"><result status="valid" steps="1174"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="WP_parameter def.70.1.1.0.1.0.1" proved="true">
        <proof prover="1" steplimit="2917"><result status="valid" steps="2651"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter def.71" expl="assertion" proved="true">
  <proof prover="3" steplimit="11153"><result status="valid" steps="10139"/></proof>
  </goal>
  <goal name="WP_parameter def.72" expl="assertion" proved="true">
  <proof prover="3" steplimit="10666"><result status="valid" steps="9696"/></proof>
  </goal>
  <goal name="WP_parameter def.73" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter def.74" expl="assertion" proved="true">
  <proof prover="3" steplimit="9872"><result status="valid" steps="8974"/></proof>
  </goal>
  <goal name="WP_parameter def.75" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter def.76" expl="assertion" proved="true">
  <proof prover="3" steplimit="7137"><result status="valid" steps="6488"/></proof>
  </goal>
  <goal name="WP_parameter def.77" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter def.78" expl="assertion" proved="true">
  <proof prover="3" steplimit="10438"><result status="valid" steps="9489"/></proof>
  </goal>
  <goal name="WP_parameter def.79" expl="assertion" proved="true">
  <proof prover="3" steplimit="4028"><result status="valid" steps="3661"/></proof>
  </goal>
  <goal name="WP_parameter def.80" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter def.81" expl="assertion" proved="true">
  <proof prover="3" steplimit="5495"><result status="valid" steps="4995"/></proof>
  </goal>
  <goal name="WP_parameter def.82" expl="assertion" proved="true">
  <proof prover="3" steplimit="17"><result status="valid" steps="15"/></proof>
  </goal>
  <goal name="WP_parameter def.83" expl="assertion" proved="true">
  <proof prover="3" steplimit="14380"><result status="valid" steps="13072"/></proof>
  </goal>
  <goal name="WP_parameter def.84" expl="assertion" proved="true">
  <proof prover="1" steplimit="684664"><result status="valid" steps="622421"/></proof>
  <proof prover="3" timelimit="5" steplimit="0" obsolete="true"><result status="timeout"/></proof>
  </goal>
  <goal name="WP_parameter def.85" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter def.86" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter def.87" expl="postcondition" proved="true">
  <proof prover="3" steplimit="4800"><result status="valid" steps="4363"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="P32__sqrt_von_neumann32__subprogram_def" proved="true" sum="b9739a65e4d3b011c5635a45223ff32c">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="1" timelimit="5"><result status="timeout"/></proof>
  <proof prover="2" steplimit="1035"><result status="valid" steps="940"/></proof>
  <proof prover="3" timelimit="5" steplimit="0"><result status="timeout"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition" proved="true">
  <proof prover="1" timelimit="5"><result status="timeout"/></proof>
  <proof prover="2" steplimit="115"><result status="valid" steps="104"/></proof>
  <proof prover="3" timelimit="5" steplimit="0"><result status="timeout"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="precondition" proved="true">
  <proof prover="1" timelimit="5"><result status="timeout"/></proof>
  <proof prover="2" steplimit="114"><result status="valid" steps="103"/></proof>
  <proof prover="3" timelimit="5" steplimit="0"><result status="timeout"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="WP_parameter def.3.0" expl="postcondition" proved="true">
   <proof prover="2" steplimit="7255"><result status="valid" steps="6241"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="WP_parameter def.4" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="8690"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="P32__pow2__subprogram_def" proved="true" sum="1ef0e428cb945435342b20d72f502bae">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="3" steplimit="883"><result status="valid" steps="802"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
