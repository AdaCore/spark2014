arrays.adb:8:26: info: overflow check proved (CVC4: 2 VC)
arrays.adb:26:29: info: index check proved (CVC4: 2 VC)
arrays.adb:41:29: info: index check proved (CVC4: 2 VC)
arrays.adb:41:41: info: index check proved (CVC4: 2 VC)
arrays.adb:63:21: info: index check proved (CVC4: 2 VC)
arrays.adb:63:30: info: index check proved (CVC4: 2 VC)
arrays.adb:69:21: info: index check proved (CVC4: 2 VC)
arrays.adb:69:30: info: index check proved (CVC4: 2 VC)
arrays.adb:73:07: info: initialization of "Tmp" proved
arrays.adb:90:10: info: index check proved (CVC4: 2 VC)
arrays.ads:14:19: info: postcondition proved (CVC4: 1 VC)
arrays.ads:16:51: info: overflow check proved (CVC4: 2 VC)
arrays.ads:23:19: info: postcondition proved (CVC4: 2 VC)
arrays.ads:31:19: info: postcondition proved (CVC4: 1 VC; Trivial: 1 VC)
arrays.ads:35:19: info: postcondition proved (CVC4: 1 VC)
arrays.ads:35:47: info: index check proved (CVC4: 2 VC)
arrays.ads:39:19: info: postcondition proved (CVC4: 1 VC)
arrays.ads:39:47: info: index check proved (CVC4: 2 VC)
arrays.ads:40:46: info: index check proved (CVC4: 2 VC)
arrays.ads:41:46: info: index check proved (CVC4: 2 VC)
arrays.ads:45:19: info: postcondition proved (CVC4: 1 VC)
arrays.ads:45:47: info: index check proved (CVC4: 2 VC)
arrays.ads:45:59: info: index check proved (CVC4: 2 VC)
arrays.ads:49:19: info: postcondition proved (CVC4: 1 VC)
arrays.ads:49:46: info: index check proved (CVC4: 2 VC)
arrays.ads:53:19: info: postcondition proved (CVC4: 1 VC)
arrays.ads:53:48: info: index check proved (CVC4: 2 VC)
arrays.ads:53:55: info: index check proved (CVC4: 2 VC)
arrays.ads:56:29: info: initialization of "A" proved
arrays.ads:57:19: info: postcondition proved (CVC4: 1 VC)
arrays.ads:57:53: info: index check proved (CVC4: 2 VC)
arrays.ads:57:62: info: index check proved (CVC4: 2 VC)
arrays.ads:60:30: info: initialization of "A" proved
arrays.ads:61:19: info: postcondition proved (CVC4: 1 VC)
arrays.ads:61:53: info: index check proved (CVC4: 2 VC)
arrays.ads:61:62: info: index check proved (CVC4: 2 VC)
arrays.ads:65:19: info: postcondition proved (CVC4: 1 VC; Trivial: 1 VC)
arrays.ads:69:19: info: postcondition proved (CVC4: 1 VC)
arrays.ads:69:43: info: index check proved (CVC4: 2 VC)
arrays.ads:70:43: info: index check proved (CVC4: 2 VC)
arrays.ads:75:19: info: postcondition proved (CVC4: 1 VC; Trivial: 1 VC)
records.adb:21:27: medium: range check might fail, cannot prove lower bound for New_Data (e.g. when New_Data = -1) [reason for check: value must fit in component type] [possible fix: subprogram at records.ads:20 should mention New_Data in a precondition]
records.adb:33:20: medium: overflow check might fail, cannot prove upper bound for R.S1 + 1 (e.g. when R = (S1 => Integer'Last, S2 => 0, S3 => ?, S4 => Integer'Last)) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: subprogram at records.ads:28 should mention R in a precondition]
records.adb:34:20: medium: range check might fail, cannot prove lower bound for R.S3 - 1 (e.g. when R = (S1 => 1, S2 => 0, S3 => 1, S4 => 0)) [reason for check: result of subtraction must fit in the target type of the assignment] [possible fix: subprogram at records.ads:28 should mention R in a precondition]
records.adb:39:20: info: overflow check proved (CVC4: 2 VC)
records.adb:40:20: info: range check proved (CVC4: 2 VC)
records.ads:13:19: info: postcondition proved (CVC4: 1 VC)
records.ads:17:19: info: postcondition proved (CVC4: 1 VC)
records.ads:21:19: info: postcondition proved (CVC4: 1 VC)
records.ads:21:42: info: range check proved (CVC4: 2 VC)
records.ads:25:19: info: postcondition proved (CVC4: 1 VC)
records.ads:29:19: info: postcondition proved (CVC4: 1 VC)
records.ads:29:51: info: overflow check proved (CVC4: 2 VC)
records.ads:30:51: info: range check proved (CVC4: 2 VC)
records.ads:36:19: info: postcondition proved (CVC4: 1 VC)
records.ads:36:51: info: overflow check proved (CVC4: 2 VC)
records.ads:37:51: info: range check proved (CVC4: 2 VC)
records.ads:41:19: info: postcondition proved (CVC4: 1 VC)
records.ads:45:19: info: postcondition proved (CVC4: 1 VC)
