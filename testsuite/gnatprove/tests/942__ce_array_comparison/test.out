test.adb:2:14: warning: subprogram "Test_Lt" has no effect
test.adb:3:34: info: initialization of "X" proved
test.adb:3:37: info: initialization of "Y" proved
test.adb:6:07: info: no contextual analysis of "Test_Lt" (nested subprogram)
test.adb:8:12: info: length check proved (CVC5: 3 VC)
test.adb:9:12: info: length check proved (CVC5: 3 VC)
test.adb:11:28: high: assertion might fail (e.g. when X'First = 1 and X'Last = 0 and Y'First = 1 and Y'Last = 0)
test.adb:13:28: high: assertion might fail (e.g. when X = "o" and X'First = 1 and Y'First = 2 and Y'Last = 1)
test.adb:15:28: high: assertion might fail (e.g. when X'First = 1 and X'Last = 0 and Y = "o" and Y'First = 1)
test.adb:19:17: warning: subprogram "Test_Element_Comparison" has no effect
test.adb:25:17: info: index check proved (CVC5: 2 VC)
test.adb:25:31: info: index check proved (CVC5: 2 VC)
test.adb:27:31: high: assertion might fail (e.g. when X = (1 => 'NUL', 3 => 'NUL', others => 'SOH') and X'First = 1 and X'Last = 4 and Y = (3 => 'SOH', others => 'NUL') and Y'First = 1 and Y'Last = 4) [possible fix: precondition of subprogram at line 19 should mention X and Y]
test.adb:29:31: high: assertion might fail (e.g. when X = (1 => 'NUL', 2 => 'NUL', others => 'SOH') and X'First = 1 and X'Last = 4 and Y = (2 => 'SOH', others => 'NUL') and Y'First = 1 and Y'Last = 4) [possible fix: precondition of subprogram at line 19 should mention X and Y]
test.adb:33:31: high: assertion might fail (e.g. when X = (2 => 'NUL', others => 'SOH') and X'First = 1 and X'Last = 4 and Y = (2 => 'SOH', others => 'NUL') and Y'First = 1 and Y'Last = 4) [possible fix: precondition of subprogram at line 19 should mention X and Y]
test.adb:35:31: high: assertion might fail (e.g. when X = (others => 'NUL') and X'First = 1 and X'Last = 4 and Y = (others => 'SOH') and Y'First = 1 and Y'Last = 4) [possible fix: precondition of subprogram at line 19 should mention X and Y]
test.adb:43:14: warning: subprogram "Test_Gt" has no effect
test.adb:44:34: info: initialization of "X" proved
test.adb:44:37: info: initialization of "Y" proved
test.adb:47:07: info: no contextual analysis of "Test_Gt" (nested subprogram)
test.adb:49:12: info: length check proved (CVC5: 3 VC)
test.adb:50:12: info: length check proved (CVC5: 3 VC)
test.adb:52:28: high: assertion might fail (e.g. when X'First = 1 and X'Last = 0 and Y'First = 1 and Y'Last = 0)
test.adb:54:28: high: assertion might fail (e.g. when X'First = 1 and X'Last = 0 and Y = "o" and Y'First = 1)
test.adb:56:28: high: assertion might fail (e.g. when X = "o" and X'First = 1 and Y'First = 2 and Y'Last = 1)
test.adb:60:17: warning: subprogram "Test_Element_Comparison" has no effect
test.adb:66:17: info: index check proved (CVC5: 2 VC)
test.adb:66:31: info: index check proved (CVC5: 2 VC)
test.adb:68:31: high: assertion might fail (e.g. when X = (others => 'NUL') and X'First = 1 and X'Last = 4 and Y = (others => 'NUL') and Y'First = 1 and Y'Last = 4) [possible fix: precondition of subprogram at line 60 should mention X and Y]
test.adb:70:31: high: assertion might fail (e.g. when X = (1 => 'NUL', 3 => 'NUL', others => 'SOH') and X'First = 1 and X'Last = 4 and Y = (3 => 'SOH', others => 'NUL') and Y'First = 1 and Y'Last = 4) [possible fix: precondition of subprogram at line 60 should mention X and Y]
test.adb:74:31: high: assertion might fail (e.g. when X = (others => 'NUL') and X'First = 1 and X'Last = 4 and Y = (others => 'SOH') and Y'First = 1 and Y'Last = 4) [possible fix: precondition of subprogram at line 60 should mention X and Y]
test.adb:76:31: high: assertion might fail (e.g. when X = (2 => 'NUL', others => 'SOH') and X'First = 1 and X'Last = 4 and Y = (2 => 'SOH', others => 'NUL') and Y'First = 1 and Y'Last = 4) [possible fix: precondition of subprogram at line 60 should mention X and Y]
test.adb:84:14: warning: subprogram "Test_Le" has no effect
test.adb:85:34: info: initialization of "X" proved
test.adb:85:37: info: initialization of "Y" proved
test.adb:88:07: info: no contextual analysis of "Test_Le" (nested subprogram)
test.adb:90:12: info: length check proved (CVC5: 3 VC)
test.adb:91:12: info: length check proved (CVC5: 3 VC)
test.adb:93:28: high: assertion might fail (e.g. when X'First = 1 and X'Last = 0 and Y'First = 1 and Y'Last = 0)
test.adb:95:28: high: assertion might fail (e.g. when X = "o" and X'First = 1 and Y'First = 2 and Y'Last = 1)
test.adb:97:28: high: assertion might fail (e.g. when X'First = 1 and X'Last = 0 and Y = "o" and Y'First = 1)
test.adb:101:17: warning: subprogram "Test_Element_Comparison" has no effect
test.adb:107:17: info: index check proved (CVC5: 2 VC)
test.adb:107:31: info: index check proved (CVC5: 2 VC)
test.adb:109:31: high: assertion might fail (e.g. when X = (1 => 'NUL', 3 => 'NUL', others => 'SOH') and X'First = 1 and X'Last = 4 and Y = (3 => 'SOH', others => 'NUL') and Y'First = 1 and Y'Last = 4) [possible fix: precondition of subprogram at line 101 should mention X and Y]
test.adb:111:31: high: assertion might fail (e.g. when X = (others => 'NUL') and X'First = 1 and X'Last = 4 and Y = (others => 'NUL') and Y'First = 1 and Y'Last = 4) [possible fix: precondition of subprogram at line 101 should mention X and Y]
test.adb:115:31: high: assertion might fail (e.g. when X = (2 => 'NUL', others => 'SOH') and X'First = 1 and X'Last = 4 and Y = (2 => 'SOH', others => 'NUL') and Y'First = 1 and Y'Last = 4) [possible fix: precondition of subprogram at line 101 should mention X and Y]
test.adb:117:31: high: assertion might fail (e.g. when X = (others => 'NUL') and X'First = 1 and X'Last = 4 and Y = (others => 'SOH') and Y'First = 1 and Y'Last = 4) [possible fix: precondition of subprogram at line 101 should mention X and Y]
test.adb:125:14: warning: subprogram "Test_Ge" has no effect
test.adb:126:34: info: initialization of "X" proved
test.adb:126:37: info: initialization of "Y" proved
test.adb:129:07: info: no contextual analysis of "Test_Ge" (nested subprogram)
test.adb:131:12: info: length check proved (CVC5: 3 VC)
test.adb:132:12: info: length check proved (CVC5: 3 VC)
test.adb:134:28: high: assertion might fail (e.g. when X'First = 1 and X'Last = 0 and Y'First = 1 and Y'Last = 0)
test.adb:136:28: high: assertion might fail (e.g. when X'First = 1 and X'Last = 0 and Y = "o" and Y'First = 1)
test.adb:138:28: high: assertion might fail (e.g. when X = "o" and X'First = 1 and Y'First = 2 and Y'Last = 1)
test.adb:142:17: warning: subprogram "Test_Element_Comparison" has no effect
test.adb:148:17: info: index check proved (CVC5: 2 VC)
test.adb:148:31: info: index check proved (CVC5: 2 VC)
test.adb:150:31: high: assertion might fail (e.g. when X = (1 => 'NUL', 2 => 'NUL', others => 'SOH') and X'First = 1 and X'Last = 4 and Y = (2 => 'SOH', others => 'NUL') and Y'First = 1 and Y'Last = 4) [possible fix: precondition of subprogram at line 142 should mention X and Y]
test.adb:152:31: high: assertion might fail (e.g. when X = (1 => 'NUL', 3 => 'NUL', others => 'SOH') and X'First = 1 and X'Last = 4 and Y = (3 => 'SOH', others => 'NUL') and Y'First = 1 and Y'Last = 4) [possible fix: precondition of subprogram at line 142 should mention X and Y]
test.adb:156:31: high: assertion might fail (e.g. when X = (others => 'NUL') and X'First = 1 and X'Last = 4 and Y = (others => 'SOH') and Y'First = 1 and Y'Last = 4) [possible fix: precondition of subprogram at line 142 should mention X and Y]
test.adb:158:31: high: assertion might fail (e.g. when X = (2 => 'NUL', others => 'SOH') and X'First = 1 and X'Last = 4 and Y = (2 => 'SOH', others => 'NUL') and Y'First = 1 and Y'Last = 4) [possible fix: precondition of subprogram at line 142 should mention X and Y]
counterexample expected for check at test.adb:11
  trace at test.adb:3 --> B = False
  trace at test.adb:8 --> X'First = 1 and X'Last = 0
  trace at test.adb:9 --> Y'First = 1 and Y'Last = 0
  trace at test.adb:11 --> X'First = 1 and X'Last = 0 and Y'First = 1 and Y'Last = 0
counterexample expected for check at test.adb:13
  trace at test.adb:3 --> B = True
  trace at test.adb:8 --> X = "o" and X'First = 1
  trace at test.adb:9 --> Y'First = 2 and Y'Last = 1
  trace at test.adb:13 --> X = "o" and X'First = 1 and Y'First = 2 and Y'Last = 1
counterexample expected for check at test.adb:15
  trace at test.adb:3 --> B = False
  trace at test.adb:8 --> X'First = 1 and X'Last = 0
  trace at test.adb:9 --> Y = "o" and Y'First = 1
  trace at test.adb:15 --> X'First = 1 and X'Last = 0 and Y = "o" and Y'First = 1
counterexample expected for check at test.adb:27
  trace at test.adb:19 --> B = True and X = (1 => 'NUL', 3 => 'NUL', others => 'SOH') and X'First = 1 and X'Last = 4 and Y = (3 => 'SOH', others => 'NUL') and Y'First = 1 and Y'Last = 4
  trace at test.adb:27 --> X = (1 => 'NUL', 3 => 'NUL', others => 'SOH') and X'First = 1 and X'Last = 4 and Y = (3 => 'SOH', others => 'NUL') and Y'First = 1 and Y'Last = 4
counterexample expected for check at test.adb:29
  trace at test.adb:19 --> B = False and X = (1 => 'NUL', 2 => 'NUL', others => 'SOH') and X'First = 1 and X'Last = 4 and Y = (2 => 'SOH', others => 'NUL') and Y'First = 1 and Y'Last = 4
  trace at test.adb:29 --> X = (1 => 'NUL', 2 => 'NUL', others => 'SOH') and X'First = 1 and X'Last = 4 and Y = (2 => 'SOH', others => 'NUL') and Y'First = 1 and Y'Last = 4
counterexample expected for check at test.adb:33
  trace at test.adb:19 --> B = True and X = (2 => 'NUL', others => 'SOH') and X'First = 1 and X'Last = 4 and Y = (2 => 'SOH', others => 'NUL') and Y'First = 1 and Y'Last = 4
  trace at test.adb:33 --> X = (2 => 'NUL', others => 'SOH') and X'First = 1 and X'Last = 4 and Y = (2 => 'SOH', others => 'NUL') and Y'First = 1 and Y'Last = 4
counterexample expected for check at test.adb:35
  trace at test.adb:19 --> B = False and X = (others => 'NUL') and X'First = 1 and X'Last = 4 and Y = (others => 'SOH') and Y'First = 1 and Y'Last = 4
  trace at test.adb:35 --> X = (others => 'NUL') and X'First = 1 and X'Last = 4 and Y = (others => 'SOH') and Y'First = 1 and Y'Last = 4
counterexample expected for check at test.adb:52
  trace at test.adb:44 --> B = False
  trace at test.adb:49 --> X'First = 1 and X'Last = 0
  trace at test.adb:50 --> Y'First = 1 and Y'Last = 0
  trace at test.adb:52 --> X'First = 1 and X'Last = 0 and Y'First = 1 and Y'Last = 0
counterexample expected for check at test.adb:54
  trace at test.adb:44 --> B = True
  trace at test.adb:49 --> X'First = 1 and X'Last = 0
  trace at test.adb:50 --> Y = "o" and Y'First = 1
  trace at test.adb:54 --> X'First = 1 and X'Last = 0 and Y = "o" and Y'First = 1
counterexample expected for check at test.adb:56
  trace at test.adb:44 --> B = False
  trace at test.adb:49 --> X = "o" and X'First = 1
  trace at test.adb:50 --> Y'First = 2 and Y'Last = 1
  trace at test.adb:56 --> X = "o" and X'First = 1 and Y'First = 2 and Y'Last = 1
counterexample expected for check at test.adb:68
  trace at test.adb:60 --> B = True and X = (others => 'NUL') and X'First = 1 and X'Last = 4 and Y = (others => 'NUL') and Y'First = 1 and Y'Last = 4
  trace at test.adb:68 --> X = (others => 'NUL') and X'First = 1 and X'Last = 4 and Y = (others => 'NUL') and Y'First = 1 and Y'Last = 4
counterexample expected for check at test.adb:70
  trace at test.adb:60 --> B = False and X = (1 => 'NUL', 3 => 'NUL', others => 'SOH') and X'First = 1 and X'Last = 4 and Y = (3 => 'SOH', others => 'NUL') and Y'First = 1 and Y'Last = 4
  trace at test.adb:70 --> X = (1 => 'NUL', 3 => 'NUL', others => 'SOH') and X'First = 1 and X'Last = 4 and Y = (3 => 'SOH', others => 'NUL') and Y'First = 1 and Y'Last = 4
counterexample expected for check at test.adb:74
  trace at test.adb:60 --> B = True and X = (others => 'NUL') and X'First = 1 and X'Last = 4 and Y = (others => 'SOH') and Y'First = 1 and Y'Last = 4
  trace at test.adb:74 --> X = (others => 'NUL') and X'First = 1 and X'Last = 4 and Y = (others => 'SOH') and Y'First = 1 and Y'Last = 4
counterexample expected for check at test.adb:76
  trace at test.adb:60 --> B = False and X = (2 => 'NUL', others => 'SOH') and X'First = 1 and X'Last = 4 and Y = (2 => 'SOH', others => 'NUL') and Y'First = 1 and Y'Last = 4
  trace at test.adb:76 --> X = (2 => 'NUL', others => 'SOH') and X'First = 1 and X'Last = 4 and Y = (2 => 'SOH', others => 'NUL') and Y'First = 1 and Y'Last = 4
counterexample expected for check at test.adb:93
  trace at test.adb:85 --> B = False
  trace at test.adb:90 --> X'First = 1 and X'Last = 0
  trace at test.adb:91 --> Y'First = 1 and Y'Last = 0
  trace at test.adb:93 --> X'First = 1 and X'Last = 0 and Y'First = 1 and Y'Last = 0
counterexample expected for check at test.adb:95
  trace at test.adb:85 --> B = True
  trace at test.adb:90 --> X = "o" and X'First = 1
  trace at test.adb:91 --> Y'First = 2 and Y'Last = 1
  trace at test.adb:95 --> X = "o" and X'First = 1 and Y'First = 2 and Y'Last = 1
counterexample expected for check at test.adb:97
  trace at test.adb:85 --> B = False
  trace at test.adb:90 --> X'First = 1 and X'Last = 0
  trace at test.adb:91 --> Y = "o" and Y'First = 1
  trace at test.adb:97 --> X'First = 1 and X'Last = 0 and Y = "o" and Y'First = 1
counterexample expected for check at test.adb:109
  trace at test.adb:101 --> B = True and X = (1 => 'NUL', 3 => 'NUL', others => 'SOH') and X'First = 1 and X'Last = 4 and Y = (3 => 'SOH', others => 'NUL') and Y'First = 1 and Y'Last = 4
  trace at test.adb:109 --> X = (1 => 'NUL', 3 => 'NUL', others => 'SOH') and X'First = 1 and X'Last = 4 and Y = (3 => 'SOH', others => 'NUL') and Y'First = 1 and Y'Last = 4
counterexample expected for check at test.adb:111
  trace at test.adb:101 --> B = False and X = (others => 'NUL') and X'First = 1 and X'Last = 4 and Y = (others => 'NUL') and Y'First = 1 and Y'Last = 4
  trace at test.adb:111 --> X = (others => 'NUL') and X'First = 1 and X'Last = 4 and Y = (others => 'NUL') and Y'First = 1 and Y'Last = 4
counterexample expected for check at test.adb:115
  trace at test.adb:101 --> B = True and X = (2 => 'NUL', others => 'SOH') and X'First = 1 and X'Last = 4 and Y = (2 => 'SOH', others => 'NUL') and Y'First = 1 and Y'Last = 4
  trace at test.adb:115 --> X = (2 => 'NUL', others => 'SOH') and X'First = 1 and X'Last = 4 and Y = (2 => 'SOH', others => 'NUL') and Y'First = 1 and Y'Last = 4
counterexample expected for check at test.adb:117
  trace at test.adb:101 --> B = False and X = (others => 'NUL') and X'First = 1 and X'Last = 4 and Y = (others => 'SOH') and Y'First = 1 and Y'Last = 4
  trace at test.adb:117 --> X = (others => 'NUL') and X'First = 1 and X'Last = 4 and Y = (others => 'SOH') and Y'First = 1 and Y'Last = 4
counterexample expected for check at test.adb:134
  trace at test.adb:126 --> B = False
  trace at test.adb:131 --> X'First = 1 and X'Last = 0
  trace at test.adb:132 --> Y'First = 1 and Y'Last = 0
  trace at test.adb:134 --> X'First = 1 and X'Last = 0 and Y'First = 1 and Y'Last = 0
counterexample expected for check at test.adb:136
  trace at test.adb:126 --> B = True
  trace at test.adb:131 --> X'First = 1 and X'Last = 0
  trace at test.adb:132 --> Y = "o" and Y'First = 1
  trace at test.adb:136 --> X'First = 1 and X'Last = 0 and Y = "o" and Y'First = 1
counterexample expected for check at test.adb:138
  trace at test.adb:126 --> B = False
  trace at test.adb:131 --> X = "o" and X'First = 1
  trace at test.adb:132 --> Y'First = 2 and Y'Last = 1
  trace at test.adb:138 --> X = "o" and X'First = 1 and Y'First = 2 and Y'Last = 1
counterexample expected for check at test.adb:150
  trace at test.adb:142 --> B = True and X = (1 => 'NUL', 2 => 'NUL', others => 'SOH') and X'First = 1 and X'Last = 4 and Y = (2 => 'SOH', others => 'NUL') and Y'First = 1 and Y'Last = 4
  trace at test.adb:150 --> X = (1 => 'NUL', 2 => 'NUL', others => 'SOH') and X'First = 1 and X'Last = 4 and Y = (2 => 'SOH', others => 'NUL') and Y'First = 1 and Y'Last = 4
counterexample expected for check at test.adb:152
  trace at test.adb:142 --> B = False and X = (1 => 'NUL', 3 => 'NUL', others => 'SOH') and X'First = 1 and X'Last = 4 and Y = (3 => 'SOH', others => 'NUL') and Y'First = 1 and Y'Last = 4
  trace at test.adb:152 --> X = (1 => 'NUL', 3 => 'NUL', others => 'SOH') and X'First = 1 and X'Last = 4 and Y = (3 => 'SOH', others => 'NUL') and Y'First = 1 and Y'Last = 4
counterexample expected for check at test.adb:156
  trace at test.adb:142 --> B = True and X = (others => 'NUL') and X'First = 1 and X'Last = 4 and Y = (others => 'SOH') and Y'First = 1 and Y'Last = 4
  trace at test.adb:156 --> X = (others => 'NUL') and X'First = 1 and X'Last = 4 and Y = (others => 'SOH') and Y'First = 1 and Y'Last = 4
counterexample expected for check at test.adb:158
  trace at test.adb:142 --> B = False and X = (2 => 'NUL', others => 'SOH') and X'First = 1 and X'Last = 4 and Y = (2 => 'SOH', others => 'NUL') and Y'First = 1 and Y'Last = 4
  trace at test.adb:158 --> X = (2 => 'NUL', others => 'SOH') and X'First = 1 and X'Last = 4 and Y = (2 => 'SOH', others => 'NUL') and Y'First = 1 and Y'Last = 4
