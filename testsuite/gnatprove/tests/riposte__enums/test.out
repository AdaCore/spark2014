enums.adb:9:13: info: implicit aspect Always_Terminates on "Enum_Equals" has been proved, subprogram will terminate
enums.adb:10:19: info: postcondition proved (CVC5: 2 VC)
enums.adb:16:13: info: implicit aspect Always_Terminates on "Enum_Equals_Broken_A" has been proved, subprogram will terminate
enums.adb:17:11: info: flow dependencies proved
enums.adb:19:22: high: postcondition might fail (e.g. when A = Elem_0 and B = Elem_1 and Enum_Equals_Broken_A'Result = True)
enums.adb:26:13: info: implicit aspect Always_Terminates on "Enum_Equals_Broken_B" has been proved, subprogram will terminate
enums.adb:27:19: high: postcondition might fail (e.g. when A = Elem_0 and B = Elem_1 and Enum_Equals_Broken_B'Result = True)
enums.adb:33:13: info: implicit aspect Always_Terminates on "Enum_Equals_Subtype" has been proved, subprogram will terminate
enums.adb:36:19: info: postcondition proved (CVC5: 2 VC)
enums.adb:42:13: info: implicit aspect Always_Terminates on "Enum_LT_5" has been proved, subprogram will terminate
enums.adb:43:19: info: postcondition proved (CVC5: 2 VC)
enums.adb:45:07: info: initialization of "R" proved
enums.adb:66:13: info: implicit aspect Always_Terminates on "Enum_LT_5_Broken_A" has been proved, subprogram will terminate
enums.adb:67:19: high: postcondition might fail (e.g. when A = Elem_7 and Enum_LT_5_Broken_A'Result = True)
enums.adb:69:07: info: initialization of "R" proved
enums.adb:88:13: info: implicit aspect Always_Terminates on "Is_Subenum" has been proved, subprogram will terminate
enums.adb:89:19: info: postcondition proved (CVC5: 3 VC)
enums.adb:91:07: info: initialization of "R" proved
enums.adb:105:13: info: implicit aspect Always_Terminates on "Tick_Pos" has been proved, subprogram will terminate
enums.adb:106:19: info: postcondition proved (CVC5: 1 VC)
enums.adb:106:41: info: range check proved (CVC5: 2 VC)
enums.adb:108:07: info: initialization of "R" proved
enums.adb:142:39: info: initialization of "Result" proved
enums.adb:143:39: info: initialization of "Success" proved
enums.adb:144:11: info: flow dependencies proved
enums.adb:145:22: info: postcondition proved (CVC5: 1 VC; Trivial: 1 VC)
enums.adb:145:66: info: range check proved (CVC5: 2 VC)
enums.adb:152:33: info: range check proved (CVC5: 2 VC)
enums.adb:152:39: info: range check proved (CVC5: 2 VC)
enums.adb:159:13: info: implicit aspect Always_Terminates on "Next_A" has been proved, subprogram will terminate
enums.adb:160:19: info: postcondition proved (CVC5: 3 VC; Trivial: 3 VC)
enums.adb:164:07: info: initialization of "R" proved
enums.adb:167:27: info: range check proved (CVC5: 2 VC)
enums.adb:167:34: info: range check proved (CVC5: 1 VC)
enums.adb:174:13: info: implicit aspect Always_Terminates on "Next_B" has been proved, subprogram will terminate
enums.adb:175:19: info: postcondition proved (CVC5: 2 VC; Trivial: 2 VC)
enums.adb:176:71: info: range check proved (CVC5: 1 VC)
enums.adb:180:07: info: initialization of "R" proved
enums.adb:190:13: info: implicit aspect Always_Terminates on "Succ_A" has been proved, subprogram will terminate
enums.adb:191:19: info: postcondition proved (CVC5: 1 VC)
enums.adb:191:50: info: range check proved (CVC5: 1 VC)
enums.adb:194:29: high: range check might fail (e.g. when A = Elem_8) [reason for check: value cannot be maximum value of the type] [possible fix: subprogram at line 190 should mention A in a precondition]
enums.adb:197:04: warning: analyzing unreferenced function "Subtypes_Broken" [unreferenced-function]
enums.adb:197:13: info: implicit aspect Always_Terminates on "Subtypes_Broken" has been proved, subprogram will terminate
enums.adb:203:07: info: initialization of "Tmp" proved
counterexample expected for check at enums.adb:19
  trace at enums.adb:16 --> A = Elem_0 and B = Elem_1
  trace at enums.adb:19 --> A = Elem_0 and B = Elem_1 and Enum_Equals_Broken_A'Result = True
  trace at enums.adb:21 --> Tmp = Elem_0
counterexample expected for check at enums.adb:27
  trace at enums.adb:26 --> A = Elem_0 and B = Elem_1
  trace at enums.adb:27 --> A = Elem_0 and B = Elem_1 and Enum_Equals_Broken_B'Result = True
counterexample expected for check at enums.adb:67
  trace at enums.adb:66 --> A = Elem_7
  trace at enums.adb:67 --> A = Elem_7 and Enum_LT_5_Broken_A'Result = True
  trace at enums.adb:81 --> R = True
