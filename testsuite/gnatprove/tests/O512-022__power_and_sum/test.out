main.adb:4:04: warning: initialization of "X" has no effect
main.adb:7:04: info: initialization of "Result" proved
main.adb:8:04: info: initialization of "Result2" proved
main.adb:15:24: info: range check proved (CVC5: 2 VC)
main.adb:15:44: info: range check proved (CVC5: 2 VC)
main.adb:15:54: info: range check proved (CVC5: 2 VC)
main.adb:16:31: info: range check proved (CVC5: 2 VC)
main.adb:16:51: info: range check proved (CVC5: 2 VC)
main.adb:16:61: info: range check proved (CVC5: 2 VC)
main.adb:17:14: info: overflow check proved (CVC5: 2 VC)
power_and_sum.adb:9:33: info: loop invariant initialization proved (CVC5: 2 VC)
power_and_sum.adb:9:33: info: loop invariant preservation proved (CVC5: 2 VC)
power_and_sum.adb:9:47: info: range check proved (CVC5: 4 VC)
power_and_sum.adb:10:27: medium: overflow check might fail, cannot prove lower bound for Result * X [reason for check: result of multiplication must fit in a 32-bits machine integer]
power_and_sum.adb:11:17: info: overflow check proved (CVC5: 2 VC)
power_and_sum.adb:20:33: info: loop invariant initialization proved (CVC5: 1 VC)
power_and_sum.adb:20:33: info: loop invariant preservation proved (CVC5: 1 VC)
power_and_sum.adb:22:31: medium: overflow check might fail, cannot prove upper bound for TotalSum + I [reason for check: result of addition must fit in a 32-bits machine integer]
power_and_sum.adb:23:17: info: overflow check proved (CVC5: 2 VC)
power_and_sum.adb:25:22: info: assertion proved (altergo: 1 VC)
power_and_sum.adb:26:17: info: range check proved (CVC5: 2 VC)
power_and_sum.adb:31:07: warning: initialization of "J" has no effect
power_and_sum.adb:33:07: warning: initialization of "InnerSum" has no effect
power_and_sum.adb:36:33: info: loop invariant initialization proved (CVC5: 1 VC)
power_and_sum.adb:36:33: info: loop invariant preservation proved (CVC5: 1 VC)
power_and_sum.adb:41:36: info: loop invariant initialization proved (CVC5: 1 VC)
power_and_sum.adb:41:36: info: loop invariant preservation proved (CVC5: 1 VC)
power_and_sum.adb:43:34: medium: overflow check might fail, cannot prove upper bound for InnerSum + J [reason for check: result of addition must fit in a 32-bits machine integer]
power_and_sum.adb:44:20: info: overflow check proved (CVC5: 2 VC)
power_and_sum.adb:46:25: info: assertion proved (CVC5: 1 VC)
power_and_sum.adb:47:25: info: assertion proved (CVC5: 1 VC)
power_and_sum.adb:48:31: medium: overflow check might fail, cannot prove upper bound for TotalSum + InnerSum [reason for check: result of addition must fit in a 32-bits machine integer]
power_and_sum.adb:49:17: info: overflow check proved (CVC5: 2 VC)
power_and_sum.adb:51:22: info: assertion proved (CVC5: 1 VC)
power_and_sum.adb:52:17: info: range check proved (CVC5: 2 VC)
power_and_sum.ads:2:53: info: initialization of "Result" proved
power_and_sum.ads:3:14: info: postcondition proved (CVC5: 1 VC)
power_and_sum.ads:5:35: info: initialization of "Result" proved
power_and_sum.ads:6:14: info: postcondition proved (CVC5: 1 VC)
power_and_sum.ads:8:42: info: initialization of "Result" proved
power_and_sum.ads:9:14: info: postcondition proved (CVC5: 1 VC)
