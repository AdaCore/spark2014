ghc_sort.adb:9:07: info: range check proved (CVC4: 2 VC)
ghc_sort.adb:17:28: info: pointer dereference check proved (CVC4: 1 VC)
ghc_sort.adb:21:13: info: absence of memory leak at end of scope proved (CVC4: 1 VC)
ghc_sort.adb:23:19: info: pointer dereference check proved (CVC4: 1 VC)
ghc_sort.adb:23:22: info: overflow check proved (CVC4: 2 VC)
ghc_sort.adb:23:22: medium: overflow check might fail, cannot prove upper bound for L.L + L.Next.L [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: subprogram at line 15 should mention L in a precondition]
ghc_sort.adb:23:25: info: pointer dereference check proved (CVC4: 1 VC)
ghc_sort.adb:23:30: info: pointer dereference check proved (CVC4: 1 VC)
ghc_sort.adb:23:35: info: pointer dereference check proved (CVC4: 1 VC)
ghc_sort.adb:23:42: info: length check proved (CVC4: 3 VC; Trivial: 1 VC)
ghc_sort.adb:23:42: info: range check proved (CVC4: 2 VC)
ghc_sort.adb:23:45: info: pointer dereference check proved (CVC4: 1 VC)
ghc_sort.adb:23:50: info: pointer dereference check proved (CVC4: 1 VC)
ghc_sort.adb:23:59: info: pointer dereference check proved (CVC4: 1 VC)
ghc_sort.adb:23:64: info: pointer dereference check proved (CVC4: 1 VC)
ghc_sort.adb:25:13: info: absence of memory leak proved (CVC4: 1 VC; Trivial: 1 VC)
ghc_sort.adb:25:20: info: pointer dereference check proved (CVC4: 1 VC)
ghc_sort.adb:26:13: info: absence of memory leak proved (CVC4: 1 VC; Trivial: 1 VC)
ghc_sort.adb:27:15: info: absence of memory leak proved (CVC4: 1 VC)
ghc_sort.adb:27:15: info: discriminant check proved (Trivial: 1 VC)
ghc_sort.adb:28:28: info: pointer dereference check proved (CVC4: 1 VC)
ghc_sort.adb:34:07: info: absence of memory leak at end of scope proved (CVC4: 1 VC)
ghc_sort.adb:34:07: info: initialization of "L" proved
ghc_sort.adb:36:40: info: pointer dereference check proved (CVC4: 1 VC)
