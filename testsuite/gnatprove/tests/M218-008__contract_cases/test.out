subprograms.adb:17:21: info: division check proved (CVC5: 1 VC)
subprograms.adb:17:21: info: overflow check proved (CVC5: 2 VC)
subprograms.adb:33:16: info: overflow check proved (CVC5: 2 VC)
subprograms.adb:38:18: info: overflow check proved (CVC5: 2 VC)
subprograms.ads:2:13: info: implicit aspect Always_Terminates on "F1" has been proved, subprogram will terminate
subprograms.ads:3:11: medium: contract cases might not be complete
subprograms.ads:3:30: info: contract case proved (CVC5: 1 VC; Trivial: 1 VC)
subprograms.ads:6:13: info: implicit aspect Always_Terminates on "F1bis" has been proved, subprogram will terminate
subprograms.ads:8:11: info: complete contract cases proved (CVC5: 1 VC)
subprograms.ads:8:30: info: contract case proved (CVC5: 1 VC; Trivial: 1 VC)
subprograms.ads:10:13: info: implicit aspect Always_Terminates on "F2" has been proved, subprogram will terminate
subprograms.ads:11:11: medium: contract cases might not be complete
subprograms.ads:11:30: medium: contract case might fail (e.g. when F2'Result = 1)
subprograms.ads:14:13: info: implicit aspect Always_Terminates on "F2bis" has been proved, subprogram will terminate
subprograms.ads:16:11: info: complete contract cases proved (CVC5: 1 VC)
subprograms.ads:16:30: info: contract case proved (CVC5: 1 VC; Trivial: 1 VC)
subprograms.ads:18:13: info: implicit aspect Always_Terminates on "F3" has been proved, subprogram will terminate
subprograms.ads:19:11: info: complete contract cases proved (CVC5: 1 VC)
subprograms.ads:19:11: medium: contract or exit cases might not be disjoint (e.g. when Val = 0)
subprograms.ads:19:30: medium: contract case might fail (e.g. when F3'Result = 2)
subprograms.ads:20:30: info: contract case proved (CVC5: 1 VC; Trivial: 1 VC)
subprograms.ads:20:42: warning: unreachable branch (CVC5: 1 VC)
subprograms.ads:21:30: medium: contract case might fail (e.g. when F3'Result = -1)
subprograms.ads:24:13: info: implicit aspect Always_Terminates on "F3bis" has been proved, subprogram will terminate
subprograms.ads:26:11: info: complete contract cases proved (CVC5: 1 VC)
subprograms.ads:26:11: info: disjoint contract or exit cases proved (CVC5: 1 VC)
subprograms.ads:26:30: info: contract case proved (CVC5: 1 VC; Trivial: 1 VC)
subprograms.ads:27:30: info: contract case proved (CVC5: 1 VC; Trivial: 1 VC)
subprograms.ads:28:30: info: contract case proved (CVC5: 1 VC; Trivial: 1 VC)
subprograms.ads:32:11: info: complete contract cases proved (CVC5: 1 VC)
subprograms.ads:32:11: info: disjoint contract or exit cases proved (CVC5: 1 VC)
subprograms.ads:32:30: info: contract case proved (CVC5: 1 VC; Trivial: 1 VC)
subprograms.ads:32:34: info: overflow check proved (CVC5: 2 VC)
subprograms.ads:32:60: info: overflow check proved (CVC5: 2 VC)
subprograms.ads:33:30: medium: contract case might fail (e.g. when Val = 0 and Val'Old = -1)
subprograms.ads:33:34: info: overflow check proved (CVC5: 2 VC)
