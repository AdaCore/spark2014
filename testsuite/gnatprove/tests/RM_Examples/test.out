anti_aliasing.adb:15:14: info: add a contract to analyze it separately from calling contexts
anti_aliasing.adb:15:14: info: local subprogram "One_In_One_Out" only analyzed in the context of calls
anti_aliasing.adb:18:14: info: overflow check proved (CVC4: 2 VC), in call inlined at anti_aliasing.adb:40
anti_aliasing.adb:21:54: info: data dependencies proved
anti_aliasing.adb:23:07: info: initialization of "Temp" proved
anti_aliasing.adb:26:14: medium: overflow check might fail, cannot prove lower bound for X + Y (e.g. when X = Integer'First and Y = -1) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: subprogram at line 21 should mention X and Y in a precondition]
anti_aliasing.adb:31:11: info: data dependencies proved
anti_aliasing.adb:34:14: medium: overflow check might fail, cannot prove lower bound for I + Local_1 (e.g. when I = -1 and Local_1 = Integer'First) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: subprogram at line 30 should mention Local_1 and I in a precondition]
anti_aliasing.adb:44:21: info: non-aliasing of formal parameters "X" and "Y" proved
anti_aliasing.adb:48:16: info: non-aliasing of formal parameters "X" and "Y" proved
anti_aliasing.adb:51:20: high: formal parameter "I" and global "Local_1" are aliased (SPARK RM 6.4.2)
externals.adb:27:04: high: "Out_Reg" constituent of "Complex_Device" is not written in "Externals"
externals.adb:27:04: high: initialization of "Externals.Complex_Device" is specified at externals.ads:8
externals.adb:27:04: info: object is suitable for aliasing via address clause (Trivial)
externals.adb:31:11: warning: consider annotating "Out_Reg" with Async_Writers
externals.adb:31:11: warning: indirect writes to "Out_Reg" through a potential alias are ignored
externals.adb:31:11: warning: writing to "Out_Reg" is assumed to have no effects on other non-volatile objects
externals.adb:33:04: info: object is suitable for aliasing via address clause (Trivial)
externals.adb:36:11: warning: writing to "In_Reg" is assumed to have no effects on other non-volatile objects
externals.adb:43:07: info: initialization of "Temp" proved
externals.adb:44:07: info: initialization of "Press" proved
externals.adb:49:31: medium: overflow check might fail, cannot prove lower bound for Press + Temp * K (e.g. when Press = -341 and Temp = -1740262) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: call at line 48 should mention Press (for argument Press) in a postcondition]
externals.adb:49:38: medium: overflow check might fail, cannot prove lower bound for Temp * K (e.g. when Temp = -1740263) [reason for check: result of multiplication must fit in a 32-bits machine integer] [possible fix: call at line 47 should mention Temp (for argument Temp) in a postcondition]
externals.adb:53:54: info: initialization of "Main_Display.State" constituent of "Externals.Displays" proved
externals.adb:54:59: info: initialization of "Secondary_Display.State" constituent of "Externals.Displays" proved
externals.adb:74:41: medium: "Out_Reg" constituent of "Complex_Device" might not be written
externals.adb:85:07: info: initialization of "Status" proved
externals.adb:89:20: warning: unused assignment
externals.adb:92:13: warning: statement has no effect
externals.ads:8:08: info: flow dependencies proved
externals.ads:10:20: info: initialization of "Combined_Value" proved
externals.ads:11:11: info: data dependencies proved
externals.ads:15:11: info: flow dependencies proved
externals.ads:18:11: info: data dependencies proved
externals.ads:22:11: info: flow dependencies proved
externals.ads:26:11: info: data dependencies proved
externals.ads:32:11: info: data dependencies proved
externals.ads:33:11: info: flow dependencies proved
f.adb:3:16: info: postcondition proved (CVC4: 2 VC)
f.adb:10:16: info: range check proved (CVC4: 4 VC)
f.adb:10:38: info: overflow check proved (CVC4: 2 VC)
f.adb:11:10: info: initialization check proved (CVC4: 1 VC)
f.adb:11:36: info: index check proved (CVC4: 2 VC)
f.adb:11:36: info: overflow check proved (CVC4: 2 VC)
f.adb:13:26: info: range check proved (CVC4: 2 VC)
f.adb:13:37: info: index check proved (CVC4: 2 VC)
f.adb:13:37: info: overflow check proved (CVC4: 2 VC)
f.adb:21:07: info: initialization check proved (CVC4: 1 VC)
f.adb:22:12: info: initialization check proved (CVC4: 3 VC)
global_and_generics.ads:7:09: info: data dependencies proved, in instantiation at global_and_generics.adb:10
global_and_generics.ads:8:09: info: flow dependencies proved, in instantiation at global_and_generics.adb:10
global_and_generics.ads:12:06: info: data dependencies proved
global_and_generics.ads:13:06: info: flow dependencies proved
hal.adb:13:04: info: object is suitable for aliasing via address clause (Trivial)
hal.adb:17:11: warning: writing to "Read_FIFO" is assumed to have no effects on other non-volatile objects
hal.adb:21:04: info: object is suitable for aliasing via address clause (Trivial)
hal.adb:25:11: warning: consider annotating "Write_FIFO" with Async_Writers
hal.adb:25:11: warning: indirect writes to "Write_FIFO" through a potential alias are ignored
hal.adb:25:11: warning: writing to "Write_FIFO" is assumed to have no effects on other non-volatile objects
hal.adb:30:04: info: object is suitable for aliasing via address clause (Trivial)
hal.adb:33:11: warning: writing to "Status" is assumed to have no effects on other non-volatile objects
hal.adb:38:04: info: object is suitable for aliasing via address clause (Trivial)
hal.adb:41:11: warning: consider annotating "Control" with Async_Writers
hal.adb:41:11: warning: indirect writes to "Control" through a potential alias are ignored
hal.adb:41:11: warning: writing to "Control" is assumed to have no effects on other non-volatile objects
hal.adb:46:04: high: object is unsuitable for aliasing via address clause [possible explanation: type Boolean has 2 values but has Object_Size 8]
hal.adb:50:11: warning: writing to "Wdog_Shared_Memory" is assumed to have no effects on other non-volatile objects
hal.adb:70:07: info: initialization of "Current_Status" proved
hal.adb:71:07: info: initialization of "Next_Byte" proved
hal.adb:94:41: info: initialization of "Write_FIFO" constituent of "Serial_Out" proved
hal.adb:102:41: info: initialization of "Control" constituent of "FIFO_Control" proved
hal.adb:111:41: info: initialization of "Control" constituent of "FIFO_Control" proved
hal.adb:124:07: info: initialization of "Watch_Dog_OK" proved
hal.ads:27:24: info: initialization of "A_Byte" proved
hal.ads:28:11: info: data dependencies proved
hal.ads:29:11: info: flow dependencies proved
hal.ads:35:44: info: initialization of "Found" proved
hal.ads:36:11: info: data dependencies proved
hal.ads:38:11: info: flow dependencies proved
hal.ads:44:31: info: initialization of "A_Byte" proved
hal.ads:45:11: info: data dependencies proved
hal.ads:46:11: info: flow dependencies proved
hal.ads:51:11: info: data dependencies proved
hal.ads:52:11: info: flow dependencies proved
hal.ads:57:11: info: data dependencies proved
hal.ads:58:11: info: flow dependencies proved
hal.ads:63:11: info: data dependencies proved
hal.ads:64:11: info: flow dependencies proved
hal.ads:69:30: info: initialization of "Result" proved
hal.ads:70:11: info: data dependencies proved
hal.ads:71:11: info: flow dependencies proved
initialization_and_elaboration-private_child.ads:4:08: info: flow dependencies proved
initialization_and_elaboration-private_child.ads:5:08: medium: initial condition might fail
initialization_and_elaboration-private_child.ads:5:29: high: "Private_Child.State" constituent of "Initialization_And_Elaboration.State" must be mentioned as an input of the Initializes aspect of "Private_Child" (SPARK RM 7.1.5(11))
initialization_and_elaboration.ads:6:08: info: flow dependencies proved
initialization_and_elaboration.ads:8:08: medium: initial condition might fail
initialization_and_elaboration.ads:13:11: info: data dependencies proved
initialization_and_elaboration.ads:16:11: info: data dependencies proved
input_port.ads:6:04: info: object is suitable for aliasing via address clause (Trivial)
input_port.ads:9:11: warning: writing to "Sensor" is assumed to have no effects on other non-volatile objects
inter_unit_elaboration_examples.adb:8:14: medium: overflow check might fail, cannot prove lower bound for 2 * I (e.g. when I = -1073741825) [reason for check: result of multiplication must fit in a 32-bits machine integer] [possible fix: subprogram at inter_unit_elaboration_examples.ads:10 should mention I in a precondition]
intra_unit_elaboration_order_examples.adb:3:50: medium: overflow check might fail, cannot prove upper bound for I + 1 (e.g. when I = Integer'Last) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: subprogram at intra_unit_elaboration_order_examples.ads:26 should mention I in a precondition]
intra_unit_elaboration_order_examples.adb:20:17: info: overflow check proved (CVC4: 2 VC)
intra_unit_elaboration_order_examples.adb:35:14: medium: overflow check might fail, cannot prove lower bound for A + Y (e.g. when A = -1 and Y = Integer'First) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: subprogram at intra_unit_elaboration_order_examples.ads:23 should mention A and Y in a precondition]
intra_unit_elaboration_order_examples.ads:4:08: info: flow dependencies proved
intra_unit_elaboration_order_examples.ads:17:04: info: initialization of "Y" proved
intra_unit_elaboration_order_examples.ads:20:19: info: postcondition proved (CVC4: 1 VC)
intra_unit_elaboration_order_examples.ads:24:11: info: data dependencies proved
intra_unit_elaboration_order_examples.ads:27:50: medium: overflow check might fail, cannot prove lower bound for 2 * F (J) (e.g. when J = -1073741826) [reason for check: result of multiplication must fit in a 32-bits machine integer] [possible fix: subprogram at line 27 should mention J in a precondition]
loop_var_loop_invar.adb:8:30: info: loop invariant initialization proved (CVC4: 1 VC)
loop_var_loop_invar.adb:8:30: info: loop invariant preservation proved (CVC4: 1 VC)
loop_var_loop_invar.adb:9:28: info: loop variant proved (CVC4: 1 VC)
loop_var_loop_invar.adb:11:14: info: range check proved (CVC4: 2 VC)
loop_var_loop_invar.adb:12:14: info: range check proved (CVC4: 2 VC)
main_hal.adb:6:08: info: data dependencies proved
main_hal.adb:9:34: info: initialization of "HAL.FIFO_Control" proved
main_hal.adb:10:34: medium: "HAL.Serial_Out" might not be written
main_hal.adb:16:20: medium: missing dependency "HAL.Wdog_State => HAL.Serial_In"
main_hal.adb:19:04: info: initialization of "Wdog_Timed_Out" proved
main_hal.adb:20:04: info: initialization of "A_Byte" proved
main_hal.adb:35:07: medium: "Found" might not be initialized
multiple_ports.ads:18:04: high: object is unsuitable for aliasing via address clause [possible explanation: type Volatile_Type doesn't have an Object_Size representation clause or aspect]
multiple_ports.ads:20:11: warning: writing to "V_In_1" is assumed to have no effects on other non-volatile objects
multiple_ports.ads:27:04: high: object is unsuitable for aliasing via address clause [possible explanation: type Volatile_Type doesn't have an Object_Size representation clause or aspect]
multiple_ports.ads:30:11: warning: writing to "V_In_2" is assumed to have no effects on other non-volatile objects
multiple_ports.ads:36:04: high: object is unsuitable for aliasing via address clause [possible explanation: type Volatile_Type doesn't have an Object_Size representation clause or aspect]
multiple_ports.ads:38:11: warning: consider annotating "V_Out_1" with Async_Writers
multiple_ports.ads:38:11: warning: indirect writes to "V_Out_1" through a potential alias are ignored
multiple_ports.ads:38:11: warning: writing to "V_Out_1" is assumed to have no effects on other non-volatile objects
multiple_ports.ads:42:04: high: object is unsuitable for aliasing via address clause [possible explanation: type Volatile_Type doesn't have an Object_Size representation clause or aspect]
multiple_ports.ads:45:11: warning: consider annotating "V_Out_2" with Async_Writers
multiple_ports.ads:45:11: warning: indirect writes to "V_Out_2" through a potential alias are ignored
multiple_ports.ads:45:11: warning: writing to "V_Out_2" is assumed to have no effects on other non-volatile objects
multiple_ports.ads:55:04: high: object is unsuitable for aliasing via address clause [possible explanation: type Volatile_Type doesn't have an Object_Size representation clause or aspect]
multiple_ports.ads:56:11: warning: writing to "V_In_Out" is assumed to have no effects on other non-volatile objects
outer-public_child.ads:6:17: info: initialization of "Hidden_State" constituent of "A2" proved
outer-public_child.ads:7:14: info: data dependencies proved
outer-public_child.ads:7:41: info: initialization of "Outer.A2" proved
outer-public_child.ads:8:14: info: flow dependencies proved
outer.adb:32:49: info: initialization of "Inner.B1" constituent of "Outer.A1" proved
outer.adb:40:45: info: initialization of "Hidden_State" constituent of "A2" proved
outer.adb:40:59: info: initialization of "State_In_Body" constituent of "A2" proved
outer.ads:5:14: info: data dependencies proved
outer.ads:6:14: info: flow dependencies proved
outer.ads:9:14: info: data dependencies proved
outer.ads:10:14: info: flow dependencies proved
outer.ads:25:17: info: data dependencies proved
outer.ads:26:17: info: flow dependencies proved
outer.ads:31:17: info: data dependencies proved
outer.ads:31:39: info: initialization of "Hidden_State" constituent of "A2" proved
outer.ads:32:17: info: flow dependencies proved
output_port.ads:6:04: info: object is suitable for aliasing via address clause (Trivial)
output_port.ads:9:11: warning: consider annotating "Sensor" with Async_Writers
output_port.ads:9:11: warning: indirect writes to "Sensor" through a potential alias are ignored
output_port.ads:9:11: warning: writing to "Sensor" is assumed to have no effects on other non-volatile objects
p.ads:2:08: info: flow dependencies proved
param_1_illegal.adb:5:28: medium: "X" might not be initialized in "Param_1_Illegal"
param_1_illegal.adb:9:10: info: index check proved (CVC4: 2 VC)
param_1_legal.adb:7:10: info: index check proved (CVC4: 2 VC)
q-child.adb:9:44: info: initialization of "Actual_State" constituent of "C1" proved
q-child.ads:12:14: info: data dependencies proved
q-child.ads:13:14: info: flow dependencies proved
q-child.ads:19:15: info: data dependencies proved
q-child.ads:19:38: info: initialization of "Hidden_State" constituent of "Q2" proved
q-child.ads:20:15: info: flow dependencies proved
q.adb:12:51: info: initialization of "Child.C1" constituent of "Q.Q1" proved
q.adb:20:45: info: initialization of "Hidden_State" constituent of "Q2" proved
q.adb:20:59: info: initialization of "State_In_Body" constituent of "Q2" proved
q.ads:6:14: info: data dependencies proved
q.ads:7:14: info: flow dependencies proved
q.ads:10:14: info: data dependencies proved
q.ads:11:14: info: flow dependencies proved
r-child.adb:14:11: warning: "Actual_State" constituent of "R2" is set by "Op_1" but not used after the call
r-child.ads:2:30: warning: no procedure exists that can initialize abstract state "Child.R2" constituent of "R.R1"
r-child.ads:12:14: info: data dependencies proved
r-child.ads:13:14: info: flow dependencies proved
refined_depends_examples.adb:10:41: info: initialization of "B" constituent of "State" proved
refined_depends_examples.adb:23:41: info: initialization of "A" constituent of "State" proved
refined_depends_examples.adb:44:42: info: initialization of "A" constituent of "State" proved
refined_depends_examples.adb:44:45: info: initialization of "B" constituent of "State" proved
refined_depends_examples.ads:6:11: info: data dependencies proved
refined_depends_examples.ads:7:11: info: flow dependencies proved
refined_depends_examples.ads:10:11: info: data dependencies proved
refined_depends_examples.ads:11:11: info: flow dependencies proved
refined_depends_examples.ads:13:20: info: initialization of "Result" proved
refined_depends_examples.ads:14:11: info: data dependencies proved
refined_depends_examples.ads:15:11: info: flow dependencies proved
refined_depends_examples.ads:18:11: info: data dependencies proved
refined_depends_examples.ads:19:11: info: flow dependencies proved
refined_global_examples.adb:10:40: info: initialization of "B" constituent of "State" proved
refined_global_examples.adb:19:40: info: initialization of "A" constituent of "State" proved
refined_global_examples.adb:37:41: info: initialization of "A" constituent of "State" proved
refined_global_examples.adb:37:44: info: initialization of "B" constituent of "State" proved
refined_global_examples.ads:6:11: info: data dependencies proved
refined_global_examples.ads:9:11: info: data dependencies proved
refined_global_examples.ads:11:20: info: initialization of "Result" proved
refined_global_examples.ads:12:11: info: data dependencies proved
refined_global_examples.ads:15:11: info: data dependencies proved
reverse_ord.adb:7:19: info: postcondition proved (CVC4: 2 VC)
reverse_ord.adb:10:07: info: initialization of "Temp" proved
reverse_ord.adb:18:13: info: loop invariant initialization proved (CVC4: 3 VC)
reverse_ord.adb:18:13: info: loop invariant preservation proved (CVC4: 3 VC)
reverse_ord.adb:19:19: info: index check proved (CVC4: 4 VC)
reverse_ord.adb:19:49: info: index check proved (CVC4: 4 VC)
reverse_ord.adb:20:30: info: index check proved (CVC4: 4 VC)
reverse_ord.adb:20:51: info: index check proved (CVC4: 4 VC)
reverse_ord.adb:24:21: info: index check proved (CVC4: 4 VC)
reverse_ord.adb:24:40: info: index check proved (CVC4: 4 VC)
stacks_1.adb:16:27: info: refined post proved (CVC4: 2 VC)
stacks_1.adb:17:48: info: index check proved (CVC4: 2 VC)
stacks_1.adb:17:48: info: range check proved (CVC4: 2 VC)
stacks_1.adb:23:30: info: range check proved (CVC4: 2 VC)
stacks_1.adb:24:18: info: index check proved (CVC4: 2 VC)
stacks_1.adb:28:27: medium: refined postcondition might fail
stacks_1.adb:34:33: info: range check proved (CVC4: 2 VC)
stacks_1.adb:38:64: info: index check proved (CVC4: 2 VC)
stacks_1.ads:14:19: info: postcondition proved (CVC4: 1 VC)
stacks_1.ads:17:19: info: postcondition proved (CVC4: 1 VC)
stacks_2.adb:15:29: info: refined post proved (CVC4: 2 VC)
stacks_2.adb:25:29: info: refined post proved (CVC4: 2 VC)
stacks_2.adb:34:29: info: refined post proved (CVC4: 2 VC; Trivial: 1 VC)
stacks_2.adb:35:65: info: range check proved (CVC4: 2 VC)
stacks_2.adb:40:30: info: range check proved (CVC4: 2 VC)
stacks_2.adb:41:17: info: index check proved (CVC4: 2 VC)
stacks_2.adb:46:29: info: refined post proved (CVC4: 1 VC)
stacks_2.adb:51:30: medium: range check might fail, cannot prove lower bound for A_Pointer - 1 [reason for check: result of subtraction must fit in the target type of the assignment] [possible fix: subprogram at stacks_2.ads:19 should mention A_Pointer in a precondition]
stacks_2.adb:54:46: info: index check proved (CVC4: 2 VC)
stacks_2.ads:4:08: info: flow dependencies proved
stacks_2.ads:7:11: info: data dependencies proved
stacks_2.ads:11:11: info: data dependencies proved
stacks_2.ads:15:11: info: data dependencies proved
stacks_2.ads:17:21: info: postcondition proved (CVC4: 1 VC)
stacks_2.ads:20:11: info: data dependencies proved
stacks_2.ads:21:16: info: postcondition proved (CVC4: 1 VC)
stacks_2.ads:24:11: info: data dependencies proved
times_2.adb:3:13: medium: overflow check might fail, cannot prove lower bound for 2 * X (e.g. when X = -1073741825) [reason for check: result of multiplication must fit in a 32-bits machine integer] [possible fix: subprogram at line 1 should mention X in a precondition]
up_timer.adb:14:36: info: overflow check proved (CVC4: 2 VC)
update_examples.ads:20:19: info: postcondition proved (CVC4: 1 VC)
update_examples.ads:27:19: info: postcondition proved (CVC4: 1 VC; Trivial: 1 VC)
update_examples.ads:35:19: info: postcondition proved (CVC4: 1 VC)
update_examples.ads:37:69: info: index check proved (CVC4: 2 VC)
update_examples.ads:49:08: info: postcondition proved (CVC4: 1 VC; Trivial: 1 VC)
update_examples.ads:54:54: info: index check proved (CVC4: 2 VC)
