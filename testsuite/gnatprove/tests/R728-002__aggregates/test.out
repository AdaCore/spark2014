pragmarc-b_strings.adb:16:20: medium: range check might fail [reason for check: slice bounds must fit in the underlying array] [possible fix: subprogram at pragmarc-b_strings.ads:25 should mention Source in a precondition]
pragmarc-b_strings.adb:20:42: info: range check proved (CVC4: 2 VC)
pragmarc-b_strings.adb:22:61: info: length check proved (CVC4: 3 VC; Trivial: 1 VC)
pragmarc-b_strings.adb:36:12: info: range check proved (CVC4: 4 VC)
pragmarc-b_strings.adb:36:33: info: length check proved (CVC4: 3 VC; Trivial: 1 VC)
pragmarc-b_strings.adb:36:40: info: length check proved (CVC4: 3 VC; Trivial: 1 VC)
pragmarc-b_strings.adb:36:40: medium: range check might fail [reason for check: slice bounds must fit in the underlying array]
pragmarc-b_strings.adb:44:10: medium: exception might be raised
pragmarc-b_strings.adb:50:19: info: length check proved (CVC4: 3 VC; Trivial: 1 VC)
pragmarc-b_strings.adb:50:26: info: length check proved (CVC4: 3 VC; Trivial: 1 VC)
pragmarc-b_strings.adb:50:26: medium: range check might fail [reason for check: slice bounds must fit in the underlying array]
pragmarc-b_strings.adb:50:43: info: overflow check proved (CVC4: 2 VC)
pragmarc-b_strings.adb:50:52: medium: overflow check might fail, cannot prove upper bound for From.Len - To.Len + 1 [reason for check: result of addition must fit in a 32-bits machine integer]
pragmarc-b_strings.adb:57:16: info: length check proved (CVC4: 3 VC; Trivial: 1 VC)
pragmarc-b_strings.adb:57:23: info: length check proved (CVC4: 3 VC; Trivial: 1 VC)
pragmarc-b_strings.adb:57:23: medium: range check might fail [reason for check: slice bounds must fit in the underlying array]
pragmarc-b_strings.adb:63:14: info: range check proved (CVC4: 2 VC)
pragmarc-b_strings.adb:64:24: info: range check proved (CVC4: 2 VC)
pragmarc-b_strings.adb:65:12: info: range check proved (CVC4: 4 VC)
pragmarc-b_strings.adb:65:33: info: length check proved (CVC4: 3 VC; Trivial: 1 VC)
pragmarc-b_strings.adb:65:36: info: length check proved (CVC4: 3 VC; Trivial: 1 VC)
pragmarc-b_strings.adb:73:10: info: raise statement or expression proved unreachable (CVC4: 1 VC)
pragmarc-b_strings.adb:79:19: info: length check proved (CVC4: 3 VC; Trivial: 1 VC)
pragmarc-b_strings.adb:79:22: info: length check proved (CVC4: 3 VC; Trivial: 1 VC)
pragmarc-b_strings.adb:79:22: info: range check proved (CVC4: 4 VC)
pragmarc-b_strings.adb:79:38: info: overflow check proved (CVC4: 2 VC)
pragmarc-b_strings.adb:79:47: medium: overflow check might fail, cannot prove upper bound for From'Last - To.Len + 1 [reason for check: result of addition must fit in a 32-bits machine integer]
pragmarc-b_strings.adb:86:16: info: length check proved (CVC4: 3 VC; Trivial: 1 VC)
pragmarc-b_strings.adb:86:19: info: length check proved (CVC4: 3 VC; Trivial: 1 VC)
pragmarc-b_strings.adb:86:19: info: range check proved (CVC4: 4 VC)
pragmarc-b_strings.adb:86:50: info: overflow check proved (CVC4: 2 VC)
pragmarc-b_strings.adb:86:59: info: overflow check proved (CVC4: 2 VC)
pragmarc-b_strings.adb:92:48: info: range check proved (CVC4: 2 VC; colibri: 2 VC)
pragmarc-b_strings.adb:92:78: medium: range check might fail [reason for check: slice bounds must fit in the underlying array] [possible fix: subprogram at pragmarc-b_strings.ads:49 should mention Right in a precondition]
pragmarc-b_strings.adb:98:18: medium: range check might fail [reason for check: slice bounds must fit in the underlying array] [possible fix: subprogram at pragmarc-b_strings.ads:50 should mention Left in a precondition]
pragmarc-b_strings.adb:98:48: medium: range check might fail [reason for check: slice bounds must fit in the underlying array] [possible fix: subprogram at pragmarc-b_strings.ads:50 should mention Right in a precondition]
pragmarc-b_strings.adb:110:18: medium: range check might fail [reason for check: slice bounds must fit in the underlying array] [possible fix: subprogram at pragmarc-b_strings.ads:52 should mention Left in a precondition]
pragmarc-b_strings.adb:110:48: medium: range check might fail [reason for check: slice bounds must fit in the underlying array] [possible fix: subprogram at pragmarc-b_strings.ads:52 should mention Right in a precondition]
pragmarc-b_strings.ads:26:40: info: function contract not available for proof ("+" might not return)
pragmarc-b_strings.ads:26:40: medium: postcondition might fail, cannot prove +"+"'Result = Source
pragmarc-b_strings.ads:29:45: info: range check proved (CVC4: 2 VC)
pragmarc-b_strings.ads:29:57: info: function contract not available for proof ("+" might not return)
pragmarc-b_strings.ads:29:57: medium: postcondition might fail, cannot prove +"+"'Result = Source
pragmarc-b_strings.ads:39:21: medium: postcondition might fail [possible fix: you should consider adding a postcondition to operator "=" or turning it into an expression function]
pragmarc-b_strings.ads:45:76: info: range check proved (CVC4: 2 VC)
pragmarc-b_strings.ads:46:21: medium: postcondition might fail [possible fix: you should consider adding a postcondition to operator "=" or turning it into an expression function]
pragmarc-b_strings.ads:46:26: info: function contract not available for proof ("+" might not return)
pragmarc-b_strings.ads:57:07: info: range check proved (CVC4: 2 VC)
pragmarc-b_strings.ads:57:43: info: length check proved (CVC4: 3 VC; Trivial: 1 VC)
pragmarc-b_strings.ads:57:43: info: range check proved (CVC4: 2 VC)
pragmarc-b_strings.ads:57:46: info: range check proved (CVC4: 2 VC)
