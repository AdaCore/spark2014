reason_for_check.adb:8:41: info: initialization of "W" proved
reason_for_check.adb:12:14: info: overflow check proved (CVC4: 2 VC)
reason_for_check.adb:18:07: medium: precondition might fail, cannot prove V < 1000 (e.g. when X1 = 1000) [possible fix: precondition of subprogram at line 16 should mention X1 and X2]
reason_for_check.adb:18:21: medium: range check might fail, cannot prove lower bound for X1 (e.g. when X1 = -1) [reason for check: input value must fit in parameter type] [possible fix: precondition of subprogram at line 16 should mention X1]
reason_for_check.adb:18:29: info: range check proved (CVC4: 2 VC)
reason_for_check.adb:18:29: medium: range check might fail, cannot prove lower bound for X2 (e.g. when X2 = -1) [reason for check: input value must fit in parameter type and output value must fit in argument type] [possible fix: precondition of subprogram at line 16 should mention X2]
reason_for_check.adb:19:07: medium: precondition might fail, cannot prove V < 1000 (e.g. when Y1 = 1000) [possible fix: precondition of subprogram at line 16 should mention Y1 and Y2]
reason_for_check.adb:19:25: medium: range check might fail, cannot prove lower bound for Y1 [reason for check: output value must fit in argument type] [possible fix: call at line 19 should mention W (for argument Y1) in a postcondition]
reason_for_check.adb:19:29: info: range check proved (CVC4: 2 VC)
reason_for_check.adb:19:29: medium: range check might fail, cannot prove lower bound for Y2 [reason for check: input value must fit in parameter type and output value must fit in argument type] [possible fix: precondition of subprogram at line 16 should mention Y2]
reason_for_check.adb:24:04: warning: analyzing unreferenced function "Get"
reason_for_check.adb:26:16: medium: array index check might fail (e.g. when J = 1 and S'First = 2 and S'Last = 0) [reason for check: value must be a valid index into the array] [possible fix: subprogram at line 24 should mention J in a precondition]
reason_for_check.adb:29:04: warning: analyzing unreferenced procedure "Set"
reason_for_check.adb:31:09: medium: array index check might fail (e.g. when J = 1 and S'First = 2 and S'Last = 0) [reason for check: value must be a valid index into the array] [possible fix: subprogram at line 29 should mention J in a precondition]
reason_for_check.adb:42:04: warning: analyzing unreferenced procedure "Oper_Integer"
reason_for_check.adb:42:68: info: initialization of "U" proved
reason_for_check.adb:45:30: medium: overflow check might fail, cannot prove upper bound for -X (e.g. when X = Integer'First) [reason for check: result of negation must fit in a 32-bits machine integer] [possible fix: subprogram at line 42 should mention X in a precondition]
reason_for_check.adb:46:30: medium: overflow check might fail, cannot prove upper bound for abs X (e.g. when X = Integer'First) [reason for check: result of absolute value must fit in a 32-bits machine integer] [possible fix: subprogram at line 42 should mention X in a precondition]
reason_for_check.adb:47:32: medium: overflow check might fail, cannot prove lower bound for X + Y (e.g. when X = Integer'First and Y = -1) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: subprogram at line 42 should mention X and Y in a precondition]
reason_for_check.adb:48:32: medium: overflow check might fail, cannot prove lower bound for X - Y (e.g. when X = Integer'First and Y = 1) [reason for check: result of subtraction must fit in a 32-bits machine integer] [possible fix: subprogram at line 42 should mention X and Y in a precondition]
reason_for_check.adb:49:32: medium: overflow check might fail, cannot prove lower bound for X * Y (e.g. when X = -2 and Y = 2) [reason for check: result of multiplication must fit in a 32-bits machine integer] [possible fix: subprogram at line 42 should mention X and Y in a precondition]
reason_for_check.adb:50:32: medium: divide by zero might fail (e.g. when Y = 0) [possible fix: subprogram at line 42 should mention X and Y in a precondition]
reason_for_check.adb:50:32: medium: overflow check might fail, cannot prove lower bound for X / Y (e.g. when X = -1 and Y = 0) [reason for check: result of division must fit in a 32-bits machine integer] [possible fix: subprogram at line 42 should mention X and Y in a precondition]
reason_for_check.adb:51:32: medium: overflow check might fail, cannot prove lower bound for X ** E (e.g. when E = 0 and X = 0) [reason for check: result of exponentiation must fit in a 32-bits machine integer] [possible fix: subprogram at line 42 should mention E and X in a precondition]
reason_for_check.adb:55:04: warning: analyzing unreferenced procedure "Oper_Float"
reason_for_check.adb:55:64: info: initialization of "U" proved
reason_for_check.adb:60:32: medium: float overflow check might fail (e.g. when X = -3.8130930E+33 and Y = -3.4027884E+38) [reason for check: result of floating-point addition must be bounded] [possible fix: subprogram at line 55 should mention X and Y in a precondition]
reason_for_check.adb:61:32: medium: float overflow check might fail (e.g. when X = -5.1720144E+33 and Y = 3.4028235E+38) [reason for check: result of floating-point subtraction must be bounded] [possible fix: subprogram at line 55 should mention X and Y in a precondition]
reason_for_check.adb:62:32: medium: float overflow check might fail (e.g. when X = 1.3183725E+0 and Y = -3.3230414E+38) [reason for check: result of floating-point multiplication must be bounded] [possible fix: subprogram at line 55 should mention X and Y in a precondition]
reason_for_check.adb:63:32: medium: divide by zero might fail (e.g. when Y = 0.0) [possible fix: subprogram at line 55 should mention X and Y in a precondition]
reason_for_check.adb:63:32: medium: float overflow check might fail (e.g. when X = 1.4987817E+0 and Y = -1.1027462E-39) [reason for check: result of floating-point division must be bounded] [possible fix: subprogram at line 55 should mention X and Y in a precondition]
reason_for_check.adb:64:32: info: division check proved (CVC4: 1 VC; Trivial: 1 VC)
reason_for_check.adb:64:32: medium: float overflow check might fail (e.g. when E = 0 and X = 1.0000001E+0) [reason for check: result of floating-point exponentiation must be bounded] [possible fix: subprogram at line 55 should mention E and X in a precondition]
reason_for_check.adb:68:04: warning: analyzing unreferenced procedure "Oper_Fixed"
reason_for_check.adb:68:51: warning: unused variable "E"
reason_for_check.adb:68:64: medium: "U" might not be initialized in "Oper_Fixed"
reason_for_check.adb:71:30: medium: overflow check might fail, cannot prove upper bound for -X (e.g. when X = -1) [reason for check: result of fixed-point negation must fit in the underlying 8-bits machine integer] [possible fix: subprogram at line 68 should mention X in a precondition]
reason_for_check.adb:72:30: medium: overflow check might fail, cannot prove upper bound for abs X (e.g. when X = -1) [reason for check: result of fixed-point absolute value must fit in the underlying 8-bits machine integer] [possible fix: subprogram at line 68 should mention X in a precondition]
reason_for_check.adb:73:32: medium: overflow check might fail, cannot prove lower bound for X + Y (e.g. when X = -1 and Y = -1/128) [reason for check: result of fixed-point addition must fit in the underlying 8-bits machine integer] [possible fix: subprogram at line 68 should mention X and Y in a precondition]
reason_for_check.adb:74:32: medium: overflow check might fail, cannot prove lower bound for X - Y (e.g. when X = -1 and Y = 1/128) [reason for check: result of fixed-point subtraction must fit in the underlying 8-bits machine integer] [possible fix: subprogram at line 68 should mention X and Y in a precondition]
reason_for_check.adb:75:32: medium: overflow check might fail, cannot prove upper bound for X * Y (e.g. when X = -1 and Y = -1) [reason for check: result of fixed-point multiplication must fit in the underlying 8-bits machine integer] [possible fix: subprogram at line 68 should mention X and Y in a precondition]
reason_for_check.adb:76:32: medium: divide by zero might fail (e.g. when Y = 0) [possible fix: subprogram at line 68 should mention X and Y in a precondition]
reason_for_check.adb:76:32: medium: overflow check might fail, cannot prove lower bound for X / Y (e.g. when X = 1/128 and Y = 0) [reason for check: result of fixed-point division must fit in the underlying 8-bits machine integer] [possible fix: subprogram at line 68 should mention X and Y in a precondition]
reason_for_check.adb:92:04: warning: analyzing unreferenced procedure "Convert_Enum"
reason_for_check.adb:92:38: info: initialization of "U" proved
reason_for_check.adb:94:12: medium: range check might fail, cannot prove lower bound for X [reason for check: value must fit in the target type of the assignment] [possible fix: subprogram at line 92 should mention X in a precondition]
reason_for_check.adb:97:04: warning: analyzing unreferenced procedure "Convert_Integer"
reason_for_check.adb:97:44: info: initialization of "U" proved
reason_for_check.adb:99:12: medium: range check might fail, cannot prove lower bound for X (e.g. when X = -1) [reason for check: value must fit in the target type of the assignment] [possible fix: subprogram at line 97 should mention X in a precondition]
reason_for_check.adb:102:04: warning: analyzing unreferenced procedure "Convert_Unsigned"
reason_for_check.adb:102:46: info: initialization of "U" proved
reason_for_check.adb:104:12: medium: range check might fail, cannot prove upper bound for X (e.g. when X = 11) [reason for check: value must fit in the target type of the assignment] [possible fix: subprogram at line 102 should mention X in a precondition]
reason_for_check.adb:107:04: warning: analyzing unreferenced procedure "Convert_Float"
reason_for_check.adb:107:40: info: initialization of "U" proved
reason_for_check.adb:109:12: medium: range check might fail (e.g. when X = -1.1249392E+0) [reason for check: value must fit in the target type of the assignment] [possible fix: subprogram at line 107 should mention X in a precondition]
reason_for_check.adb:112:04: warning: analyzing unreferenced procedure "Convert_Fixed"
reason_for_check.adb:112:40: info: initialization of "U" proved
reason_for_check.adb:114:12: medium: range check might fail, cannot prove lower bound for X (e.g. when X = -1/128) [reason for check: value must fit in the target type of the assignment] [possible fix: subprogram at line 112 should mention X in a precondition]
reason_for_check.adb:119:04: warning: analyzing unreferenced procedure "Assign"
reason_for_check.adb:119:34: info: initialization of "T" proved
reason_for_check.adb:121:09: medium: length check might fail (e.g. when T'First = 1 and T'Last = 0) [reason for check: source and destination arrays for the assignment must have the same length] [possible fix: subprogram at line 119 should mention T'Length or T'First or T'Last in a precondition]
reason_for_check.adb:126:04: warning: analyzing unreferenced function "Get_Small"
reason_for_check.adb:128:27: medium: length check might fail (e.g. when S = (1 => 'NUL') and S'First = 1 and S'Last = 1) [reason for check: value must have same length as the target array type of the conversion] [possible fix: subprogram at line 126 should mention S in a precondition]
reason_for_check.adb:134:04: warning: analyzing unreferenced procedure "Oper_Mask"
reason_for_check.adb:137:32: info: length check proved (CVC4: 3 VC; Trivial: 1 VC)
reason_for_check.adb:137:37: medium: length check might fail (e.g. when Y'First = 1 and Y'Last = 0) [reason for check: both array operands must have the same length] [possible fix: subprogram at line 134 should mention X and Y in a precondition]
reason_for_check.adb:138:32: info: length check proved (CVC4: 3 VC; Trivial: 1 VC)
reason_for_check.adb:138:37: medium: length check might fail (e.g. when Y'First = 1 and Y'Last = 0) [reason for check: both array operands must have the same length] [possible fix: subprogram at line 134 should mention X and Y in a precondition]
reason_for_check.adb:139:32: info: length check proved (CVC4: 3 VC; Trivial: 1 VC)
reason_for_check.adb:139:37: medium: length check might fail (e.g. when Y'First = 1 and Y'Last = 0) [reason for check: both array operands must have the same length] [possible fix: subprogram at line 134 should mention X and Y in a precondition]
reason_for_check.adb:144:04: info: precondition proved (Trivial: 1 VC)
