sm_using_case_expression.adb:15:40: info: initialization of "State" constituent of "Abs_State" proved
sm_using_case_expression.adb:24:38: info: initialization of "State" constituent of "Abs_State" proved
sm_using_case_expression.adb:43:10: info: assertion proved (CVC5: 1 VC)
sm_using_case_expression.adb:53:09: info: assertion proved (CVC5: 1 VC)
sm_using_case_expression.adb:57:47: info: index check proved (CVC5: 2 VC)
sm_using_case_expression.adb:58:48: info: index check proved (CVC5: 2 VC)
sm_using_case_expression.ads:12:13: info: implicit aspect Always_Terminates on "Get_State" has been proved, subprogram will terminate
sm_using_case_expression.ads:13:09: info: data dependencies proved
sm_using_case_expression.ads:16:09: info: data dependencies proved
sm_using_case_expression.ads:17:17: info: postcondition proved (CVC5: 1 VC)
sm_using_case_expression.ads:54:11: info: data dependencies proved
sm_using_case_expression.ads:55:19: info: postcondition proved (CVC5: 1 VC)
sm_using_case_expression.ads:58:13: info: implicit aspect Always_Terminates on "My_SM" has been proved, subprogram will terminate
sm_using_case_expression.ads:89:09: info: data dependencies proved
sm_using_case_expression.ads:90:19: info: postcondition proved (CVC5: 1 VC)
sm_using_case_expression.ads:94:13: info: implicit aspect Always_Terminates on "Is_Final_State" has been proved, subprogram will terminate
sm_using_case_expression.ads:95:06: info: data dependencies proved
