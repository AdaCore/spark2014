ordering_buffers.adb:8:14: info: postcondition proved (CVC4: 3 VC; Trivial: 1 VC)
ordering_buffers.adb:9:08: info: precondition proved (CVC4: 2 VC)
ordering_buffers.adb:11:32: info: precondition proved (CVC4: 2 VC)
ordering_buffers.adb:11:53: info: range check proved (CVC4: 2 VC)
ordering_buffers.adb:11:58: info: precondition proved (CVC4: 2 VC)
ordering_buffers.adb:11:83: info: range check proved (CVC4: 2 VC)
ordering_buffers.adb:21:36: info: range check proved (CVC4: 2 VC)
ordering_buffers.adb:35:18: info: precondition proved (CVC4: 2 VC)
ordering_buffers.adb:36:07: info: precondition proved (CVC4: 2 VC)
ordering_buffers.adb:36:33: info: range check proved (CVC4: 2 VC)
ordering_buffers.adb:37:22: info: assertion proved (CVC4: 1 VC)
ordering_buffers.adb:37:26: info: precondition proved (CVC4: 2 VC)
ordering_buffers.adb:38:07: info: precondition proved (CVC4: 2 VC)
ordering_buffers.adb:39:22: info: assertion proved (CVC4: 1 VC)
ordering_buffers.adb:40:22: info: assertion proved (Z3: 1 VC)
ordering_buffers.adb:41:22: medium: assertion might fail (e.g. when Orig_First = 256)
ordering_buffers.adb:42:22: info: assertion proved (Trivial)
ordering_buffers.adb:43:22: info: assertion proved (CVC4: 1 VC)
ordering_buffers.adb:44:22: medium: assertion might fail (e.g. when Buffer = (Ring => (others => 0), First => 1) and Orig_First = 1)
ordering_buffers.adb:45:22: info: assertion proved (CVC4: 1 VC)
ordering_buffers.adb:46:22: info: assertion proved (CVC4: 2 VC)
ordering_buffers.adb:46:22: info: precondition proved (CVC4: 2 VC)
ordering_buffers.adb:46:57: info: precondition proved (CVC4: 2 VC)
ordering_buffers.adb:59:07: info: precondition proved (CVC4: 2 VC)
ordering_buffers.adb:74:22: info: assertion proved (CVC4: 2 VC)
ordering_buffers.adb:75:37: info: overflow check proved (CVC4: 2 VC)
ordering_buffers.adb:76:13: info: overflow check proved (CVC4: 2 VC)
ordering_buffers.adb:77:22: info: assertion proved (CVC4: 1 VC; Trivial: 1 VC)
ordering_buffers.adb:80:22: info: assertion proved (CVC4: 1 VC; Trivial: 1 VC)
ordering_buffers.adb:83:22: info: assertion proved (CVC4: 1 VC; Trivial: 1 VC)
ordering_buffers.ads:15:09: info: default initial condition proved (CVC4: 2 VC)
ordering_buffers.ads:18:17: info: precondition proved (CVC4: 2 VC)
ordering_buffers.ads:18:52: info: range check proved (CVC4: 2 VC)
ordering_buffers.ads:35:38: info: precondition proved (CVC4: 2 VC)
ordering_buffers.ads:43:12: info: precondition proved (CVC4: 2 VC)
ordering_buffers.ads:44:14: info: postcondition proved (CVC4: 3 VC; Trivial: 1 VC)
ordering_buffers.ads:45:08: info: precondition proved (CVC4: 2 VC)
ordering_buffers.ads:47:32: info: precondition proved (CVC4: 2 VC)
ordering_buffers.ads:47:53: info: range check proved (CVC4: 2 VC)
ordering_buffers.ads:47:58: info: precondition proved (CVC4: 2 VC)
ordering_buffers.ads:47:83: info: range check proved (CVC4: 2 VC)
ordering_buffers.ads:51:06: info: initialization of "Message" proved
ordering_buffers.ads:53:17: info: precondition proved (CVC4: 2 VC)
ordering_buffers.ads:54:14: info: postcondition proved (CVC4: 4 VC)
ordering_buffers.ads:55:18: info: precondition proved (CVC4: 2 VC)
ordering_buffers.ads:58:14: info: precondition proved (CVC4: 2 VC)
ordering_buffers.ads:58:35: info: range check proved (CVC4: 2 VC)
ordering_buffers.ads:58:44: info: precondition proved (CVC4: 2 VC)
ordering_buffers.ads:58:69: info: range check proved (CVC4: 2 VC)
ordering_buffers.ads:62:12: info: precondition proved (CVC4: 2 VC)
ordering_buffers.ads:65:10: info: precondition proved (CVC4: 2 VC)
ordering_buffers.ads:65:31: info: range check proved (CVC4: 2 VC)
ordering_buffers.ads:65:40: info: precondition proved (CVC4: 2 VC)
ordering_buffers.ads:65:65: info: range check proved (CVC4: 2 VC)
ordering_buffers.ads:66:08: medium: postcondition might fail, cannot prove not Has_Message (Buffer, Last (Buffer)) (e.g. when Buffer = (Ring => (0 => -1, others => 0), First => 753))
ordering_buffers.ads:66:12: info: precondition proved (CVC4: 2 VC)
