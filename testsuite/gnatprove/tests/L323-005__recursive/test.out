p.adb:6:23: info: assertion proved (CVC5: 1 VC; Trivial: 1 VC)
p.ads:2:14: info: function contract might not be available on recursive calls
p.ads:3:15: info: postcondition proved (CVC5: 1 VC)
p.ads:3:25: medium: implicit terminating annotation on "Id" could be incorrect, subprogram is recursive [possible fix: annotate "Id" with a Subprogram_Variant aspect]
p.ads:3:53: info: range check proved (CVC5: 2 VC)
p.ads:3:56: info: overflow check proved (CVC5: 2 VC)
p.ads:5:37: medium: implicit terminating annotation on "Bad" could be incorrect, subprogram is recursive [possible fix: annotate "Bad" with a Subprogram_Variant aspect]
p.ads:7:15: warning: subprogram "Use_Bad" has no effect
p.ads:7:36: info: postcondition proved (CVC5: 1 VC)
p.ads:9:14: info: implicit function contract might not be available on recursive calls
p.ads:10:09: medium: implicit terminating annotation on "Down" could be incorrect, subprogram is recursive [possible fix: annotate "Down" with a Subprogram_Variant aspect]
p.ads:10:38: info: range check proved (CVC5: 2 VC)
p.ads:10:43: medium: overflow check might fail, cannot prove upper bound for Down (X - 1) + 1 [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: add precondition (Down (X - 1) <= Integer'Last - 1) to subprogram at line 9]
p.ads:12:15: warning: subprogram "Use_Down" has no effect
p.ads:14:15: info: postcondition proved (CVC5: 1 VC)
p.ads:14:34: info: range check proved (CVC5: 2 VC)
p.ads:14:39: info: overflow check proved (CVC5: 1 VC; Z3: 1 VC)
