<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="0" name="altergo" version="1.30-gnatprove" timelimit="120" steplimit="10000" memlimit="0"/>
<prover id="1" name="CVC4" version="1.5-gnatprove" timelimit="120" steplimit="365000" memlimit="0"/>
<prover id="2" name="Z3" version="4.5.1-gnatprove" timelimit="120" steplimit="8450000" memlimit="0"/>
<file name="../../../gnatprove/foo.mlw">
<theory name="Standard__short_short_integer" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__short_short_integer__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__short_integer" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__short_integer__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__integer" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__integer__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__long_integer" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__long_integer__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__long_long_integer" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__long_long_integer__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__natural" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__natural__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__positive" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__positive__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__short_float" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__short_float__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__float" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__float__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__long_float" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__long_float__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__character" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__character__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__wide_character" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__wide_character__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__wide_wide_character" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__wide_wide_character__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Array__Int__Standard__character" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__string" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Array__Int__Standard__wide_character" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__wide_string" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Array__Int__Standard__wide_wide_character" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__wide_wide_string" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__duration" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__integer_8" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__integer_8__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__integer_16" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__integer_16__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__integer_32" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__integer_32__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__integer_64" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__integer_64__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__universal_integer" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__universal_integer__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__ft" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__ft__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__biggest_representable_int" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__nextup_one" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__magic__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__magic__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__magic" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__equality_matters__a" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__equality_matters__a___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__equality_matters__b" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__equality_matters__b___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__a_minimum_of_care_is_needed__a" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__a_minimum_of_care_is_needed__a___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__a_minimum_of_care_is_needed__b" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__a_minimum_of_care_is_needed__b___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__add_monotonic__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__add_monotonic__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__add_monotonic__y" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__add_monotonic__y___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__add_strictly_monotonic__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__add_strictly_monotonic__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__add_strictly_monotonic__y" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__add_strictly_monotonic__y___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__smooth__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__smooth__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__smooth__y" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__smooth__y___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__smooth__z" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__smooth__z___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__negate_wrong__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__negate_wrong__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__negate_wrong" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__underflow_1__a" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__underflow_1__a___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__underflow_1__b" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__underflow_1__b___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__underflow_1" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__inverse_reciprocal__a" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__inverse_reciprocal__a___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__inverse_reciprocal" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__underflow_2__a" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__underflow_2__a___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__underflow_2__b" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__underflow_2__b___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__underflow_2" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__underflow_3__a" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__underflow_3__a___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__underflow_3__b" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__underflow_3__b___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__underflow_3" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__sqrt_comedy_1__a" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__sqrt_comedy_1__a___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__sqrt_comedy_1__b" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__sqrt_comedy_1__b___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__sqrt_comedy_1__c" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__sqrt_comedy_1__c___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__sqrt_comedy_1" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__bad_optimisation_1__a" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__bad_optimisation_1__a___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__bad_optimisation_1__b" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__bad_optimisation_1__b___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__bad_optimisation_1" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__inverse_addition__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__inverse_addition__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__substract_identity_1__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__substract_identity_1__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__substract_identity_1__y" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__substract_identity_1__y___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__substract_identity_2__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__substract_identity_2__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__substract_identity_2__y" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__substract_identity_2__y___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__substract_identity_3__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__substract_identity_3__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__substract_identity_3__y" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__substract_identity_3__y___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__underflow_4__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__underflow_4__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__not_so_associative__a" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__not_so_associative__a___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__not_so_associative__b" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__not_so_associative__b___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__not_so_associative__c" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__not_so_associative__c___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__i_like_to_commute_to_work__a" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__i_like_to_commute_to_work__a___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__i_like_to_commute_to_work__b" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__i_like_to_commute_to_work__b___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__distributed_fun__a" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__distributed_fun__a___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__distributed_fun__b" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__distributed_fun__b___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__distributed_fun__c" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__distributed_fun__c___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__equality__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__equality__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__introduce_nan_1__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__introduce_nan_1__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__introduce_nan_1__y" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__introduce_nan_1__y___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__introduce_nan_2__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__introduce_nan_2__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__introduce_nan_2__y" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__introduce_nan_2__y___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__introduce_nan_3__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__introduce_nan_3__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__introduce_nan_3__y" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__introduce_nan_3__y___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__introduce_nan_3" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__transitive__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__transitive__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__transitive__y" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__transitive__y___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__transitive__z" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__transitive__z___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__exhaustive__a" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__exhaustive__a___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__exhaustive" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__negation_1__f" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__negation_1__f___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__identity_2__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__identity_2__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__interesting_inverse_1__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__interesting_inverse_1__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__interesting_inverse_2__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__interesting_inverse_2__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__unary_ops__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__unary_ops__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_min__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_min__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_min__y" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_min__y___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_max__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_max__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_max__y" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_max__y___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_floor_1__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_floor_1__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_floor_2__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_floor_2__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_floor_3__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_floor_3__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_floor_4__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_floor_4__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_floor_5__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_floor_5__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_floor_6__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_floor_6__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_round_1__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_round_1__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_round_2__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_round_2__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_record_1__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_record_1__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_record_1__rec__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_record_1__rec" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_array_1__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_array_1__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_array_1__Tindex_tB" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_array_1__Tindex_tB__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_array_1__index_t" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_array_1__index_t__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Array__Int__Foo__float_tests__ft" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_array_1__TarrB" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_array_1__arr" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_array_1__T54s" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_array_1__T54s__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_array_1__T55s" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_truncation_1__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_truncation_1__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__ft" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__ft__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__biggest_representable_int" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__nextup_one" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__magic__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__magic__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__magic" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__equality_matters__a" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__equality_matters__a___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__equality_matters__b" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__equality_matters__b___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__a_minimum_of_care_is_needed__a" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__a_minimum_of_care_is_needed__a___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__a_minimum_of_care_is_needed__b" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__a_minimum_of_care_is_needed__b___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__add_monotonic__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__add_monotonic__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__add_monotonic__y" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__add_monotonic__y___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__add_strictly_monotonic__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__add_strictly_monotonic__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__add_strictly_monotonic__y" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__add_strictly_monotonic__y___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__smooth__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__smooth__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__smooth__y" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__smooth__y___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__smooth__z" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__smooth__z___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__negate_wrong__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__negate_wrong__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__negate_wrong" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__underflow_1__a" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__underflow_1__a___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__underflow_1__b" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__underflow_1__b___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__underflow_1" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__inverse_reciprocal__a" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__inverse_reciprocal__a___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__inverse_reciprocal" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__underflow_2__a" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__underflow_2__a___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__underflow_2__b" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__underflow_2__b___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__underflow_2" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__underflow_3__a" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__underflow_3__a___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__underflow_3__b" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__underflow_3__b___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__underflow_3" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__sqrt_comedy_1__a" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__sqrt_comedy_1__a___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__sqrt_comedy_1__b" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__sqrt_comedy_1__b___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__sqrt_comedy_1__c" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__sqrt_comedy_1__c___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__sqrt_comedy_1" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__bad_optimisation_1__a" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__bad_optimisation_1__a___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__bad_optimisation_1__b" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__bad_optimisation_1__b___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__bad_optimisation_1" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__inverse_addition__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__inverse_addition__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__substract_identity_1__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__substract_identity_1__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__substract_identity_1__y" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__substract_identity_1__y___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__substract_identity_2__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__substract_identity_2__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__substract_identity_2__y" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__substract_identity_2__y___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__substract_identity_3__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__substract_identity_3__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__substract_identity_3__y" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__substract_identity_3__y___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__underflow_4__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__underflow_4__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__not_so_associative__a" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__not_so_associative__a___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__not_so_associative__b" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__not_so_associative__b___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__not_so_associative__c" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__not_so_associative__c___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__i_like_to_commute_to_work__a" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__i_like_to_commute_to_work__a___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__i_like_to_commute_to_work__b" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__i_like_to_commute_to_work__b___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__distributed_fun__a" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__distributed_fun__a___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__distributed_fun__b" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__distributed_fun__b___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__distributed_fun__c" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__distributed_fun__c___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__equality__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__equality__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__introduce_nan_1__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__introduce_nan_1__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__introduce_nan_1__y" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__introduce_nan_1__y___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__introduce_nan_2__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__introduce_nan_2__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__introduce_nan_2__y" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__introduce_nan_2__y___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__introduce_nan_3__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__introduce_nan_3__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__introduce_nan_3__y" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__introduce_nan_3__y___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__introduce_nan_3" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__transitive__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__transitive__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__transitive__y" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__transitive__y___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__transitive__z" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__transitive__z___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__exhaustive__a" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__exhaustive__a___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__exhaustive" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__negation_1__f" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__negation_1__f___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__identity_2__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__identity_2__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__interesting_inverse_1__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__interesting_inverse_1__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__interesting_inverse_2__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__interesting_inverse_2__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__unary_ops__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__unary_ops__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_min__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_min__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_min__y" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_min__y___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_max__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_max__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_max__y" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_max__y___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_floor_1__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_floor_1__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_floor_2__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_floor_2__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_floor_3__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_floor_3__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_floor_4__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_floor_4__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_floor_5__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_floor_5__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_floor_6__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_floor_6__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_round_1__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_round_1__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_round_2__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_round_2__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_record_1__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_record_1__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_record_1__rec__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_record_1__rec" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_array_1__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_array_1__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_array_1__Tindex_tB" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_array_1__Tindex_tB__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_array_1__index_t" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_array_1__index_t__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Array__Int__Foo__double_tests__ft" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_array_1__TarrB" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_array_1__arr" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_array_1__T110s" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_array_1__T110s__rep" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_array_1__T111s" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_truncation_1__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_truncation_1__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__floats_and_double__x" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__floats_and_double__x___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__floats_and_double__y" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__floats_and_double__y___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__introduce_nan_1__z" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__introduce_nan_1__z___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__identity_1__f" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__identity_1__f___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__interesting_inverse_1__a" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__interesting_inverse_1__a___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__interesting_inverse_1__b" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__interesting_inverse_1__b___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__interesting_inverse_1__c" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__interesting_inverse_1__c___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__interesting_inverse_2__a" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__interesting_inverse_2__a___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__interesting_inverse_2__b" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__interesting_inverse_2__b___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__interesting_inverse_2__c" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__interesting_inverse_2__c___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_min__m" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_min__m___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_max__m" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_max__m___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_floor_1__y" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_floor_1__y___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_round_1__i" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_round_1__i___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_round_2__y" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_round_2__y___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_record_1__y" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_record_1__y___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_record_1__r" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_record_1__r___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_array_1__y" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_array_1__y___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_array_1__a" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_array_1__a___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_truncation_1__y" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_truncation_1__y___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__introduce_nan_1__z" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__introduce_nan_1__z___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__identity_1__f" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__identity_1__f___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__interesting_inverse_1__a" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__interesting_inverse_1__a___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__interesting_inverse_1__b" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__interesting_inverse_1__b___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__interesting_inverse_1__c" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__interesting_inverse_1__c___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__interesting_inverse_2__a" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__interesting_inverse_2__a___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__interesting_inverse_2__b" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__interesting_inverse_2__b___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__interesting_inverse_2__c" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__interesting_inverse_2__c___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_min__m" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_min__m___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_max__m" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_max__m___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_floor_1__y" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_floor_1__y___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_round_1__i" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_round_1__i___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_round_2__y" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_round_2__y___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_record_1__y" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_record_1__y___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_record_1__r" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_record_1__r___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_array_1__y" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_array_1__y___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_array_1__a" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_array_1__a___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_truncation_1__y" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_truncation_1__y___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__short_short_integer___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__short_integer___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__integer___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__long_integer___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__long_long_integer___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__natural___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__positive___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__short_float___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__float___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__long_float___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__character___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__wide_character___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__wide_wide_character___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__string___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__wide_string___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__wide_wide_string___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__duration___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__integer_8___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__integer_16___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__integer_32___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__integer_64___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Standard__universal_integer___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__equality_matters" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__a_minimum_of_care_is_needed" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__add_monotonic" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__add_strictly_monotonic" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__smooth" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__inverse_addition" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__substract_identity_1" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__substract_identity_2" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__substract_identity_3" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__underflow_4" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__not_so_associative" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__i_like_to_commute_to_work" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__distributed_fun" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__equality" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__introduce_nan_1" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__introduce_nan_2" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__transitive" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__negation_1" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__identity_1" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__identity_2" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__interesting_inverse_1" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__interesting_inverse_2" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__unary_ops" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_min" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_max" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_floor_1" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_floor_2" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_floor_3" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_floor_4" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_floor_5" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_floor_6" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_round_1" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_round_2" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_record_1" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_array_1" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_truncation_1" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__equality_matters" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__a_minimum_of_care_is_needed" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__add_monotonic" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__add_strictly_monotonic" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__smooth" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__inverse_addition" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__substract_identity_1" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__substract_identity_2" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__substract_identity_3" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__underflow_4" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__not_so_associative" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__i_like_to_commute_to_work" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__distributed_fun" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__equality" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__introduce_nan_1" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__introduce_nan_2" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__transitive" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__negation_1" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__identity_1" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__identity_2" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__interesting_inverse_1" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__interesting_inverse_2" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__unary_ops" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_min" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_max" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_floor_1" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_floor_2" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_floor_3" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_floor_4" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_floor_5" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_floor_6" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_round_1" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_round_2" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_record_1" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_array_1" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_truncation_1" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__ft___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_record_1__rec___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_array_1__Tindex_tB___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_array_1__index_t___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_array_1__TarrB___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_array_1__arr___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_array_1__T54s___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_array_1__T55s___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__ft___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_record_1__rec___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_array_1__Tindex_tB___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_array_1__index_t___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_array_1__TarrB___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_array_1__arr___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_array_1__T110s___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_array_1__T111s___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_array_1__a__aggregate_def" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_array_1__a__aggregate_def" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__biggest_representable_int___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__nextup_one___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__biggest_representable_int___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__nextup_one___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__magic___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__equality_matters___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__a_minimum_of_care_is_needed___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__add_monotonic___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__add_strictly_monotonic___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__smooth___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__negate_wrong___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__underflow_1___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__inverse_reciprocal___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__underflow_2___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__underflow_3___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__sqrt_comedy_1___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__bad_optimisation_1___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__inverse_addition___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__substract_identity_1___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__substract_identity_2___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__substract_identity_3___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__underflow_4___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__not_so_associative___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__i_like_to_commute_to_work___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__distributed_fun___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__equality___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__introduce_nan_1___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__introduce_nan_2___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__introduce_nan_3___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__transitive___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__exhaustive___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__negation_1___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__identity_1___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__identity_2___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__interesting_inverse_1___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__interesting_inverse_2___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__unary_ops___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_min___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_max___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_floor_1___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_floor_2___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_floor_3___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_floor_4___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_floor_5___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_floor_6___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_round_1___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_round_2___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_record_1___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_array_1___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__float_tests__test_truncation_1___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__magic___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__equality_matters___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__a_minimum_of_care_is_needed___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__add_monotonic___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__add_strictly_monotonic___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__smooth___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__negate_wrong___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__underflow_1___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__inverse_reciprocal___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__underflow_2___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__underflow_3___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__sqrt_comedy_1___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__bad_optimisation_1___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__inverse_addition___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__substract_identity_1___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__substract_identity_2___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__substract_identity_3___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__underflow_4___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__not_so_associative___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__i_like_to_commute_to_work___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__distributed_fun___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__equality___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__introduce_nan_1___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__introduce_nan_2___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__introduce_nan_3___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__transitive___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__exhaustive___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__negation_1___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__identity_1___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__identity_2___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__interesting_inverse_1___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__interesting_inverse_2___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__unary_ops___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_min___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_max___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_floor_1___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_floor_2___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_floor_3___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_floor_4___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_floor_5___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_floor_6___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_round_1___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_round_2___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_record_1___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_array_1___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__double_tests__test_truncation_1___axiom" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Foo__package_def" proved="true" sum="e284967f6dbb6592898a5ced2974229f">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__package_def" proved="true" sum="3f1f3fec4a44beefc9522a7ab7e98044">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__magic__subprogram_def" proved="true" sum="af6a8dca8e815c4a008d5794caac16bf">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__equality_matters__subprogram_def" sum="d04e43898ce8fb7a6d3b7f52f02786bf">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="1996"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__a_minimum_of_care_is_needed__subprogram_def" sum="a2448a6671505338d166f907f5336279">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="135386"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__add_monotonic__subprogram_def" sum="c0ac907e26ed3cec212ec0d54ea952b1">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="482805"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="637346"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__add_strictly_monotonic__subprogram_def" sum="9e25b467870b135d1484c0abaf35c8f0">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="482805"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="451807"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__smooth__subprogram_def" proved="true" sum="d9ff1804a7c45d268092afcb4fdaedd4">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="unreachable point" proved="true">
  <proof prover="2"><result status="valid" steps="1499"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__negate_wrong__subprogram_def" proved="true" sum="171c611b8ca32c6ed8ba411b23204cbf">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="870"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="24583"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__underflow_1__subprogram_def" sum="e18460acc6fbc6514a037132704431ee">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="249"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450074"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="postcondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365012"/></proof>
  <proof prover="2"><result status="unknown" steps="8450074"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__inverse_reciprocal__subprogram_def" sum="25d5a825b225baaa19704139829c24ff">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="655"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="1701659"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="2322"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450066"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450074"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="postcondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450074"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__underflow_2__subprogram_def" sum="96e4acf069da8ac450a135969bb8050c">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="1025794"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="postcondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="1036685"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__underflow_3__subprogram_def" sum="534853ecca4b74874f60b5c41ee4523f">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="1758859"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="postcondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365012"/></proof>
  <proof prover="2"><result status="invalid" steps="1044494"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__sqrt_comedy_1__subprogram_def" sum="f34ef1eae07e8e8599807e6a11cd0a42">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="823744"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="1857838"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="postcondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="1729385"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__bad_optimisation_1__subprogram_def" sum="bbe8ab99a1aecd9a3cb98a61bc480500">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="96"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450074"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365015"/></proof>
  <proof prover="2"><result status="unknown" steps="8450082"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="172"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365015"/></proof>
  <proof prover="2"><result status="unknown" steps="8450094"/></proof>
  </goal>
  <goal name="WP_parameter def.5" expl="postcondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450086"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__inverse_addition__subprogram_def" sum="25976beacd04ea8de3974febbaee852c">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="18428"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="142"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="19386"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__substract_identity_1__subprogram_def" proved="true" sum="08bde10c8b6007c4acf583dd44ff36c4">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="490049"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="1067055"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="491685"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__substract_identity_2__subprogram_def" sum="0c6712175029e13eefd2daa54b8a9097">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="490049"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365017"/></proof>
  <proof prover="2"><result status="invalid" steps="1451908"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365015"/></proof>
  <proof prover="2"><result status="invalid" steps="2379460"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__substract_identity_3__subprogram_def" sum="7d60533c13fdb6232f1489e7fade16c2">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="484168"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="793847"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365014"/></proof>
  <proof prover="2"><result status="invalid" steps="966511"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__underflow_4__subprogram_def" sum="18ff6a07c398395be4b33ad1d1ae89fd">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="162"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450066"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365002"/></proof>
  <proof prover="2"><result status="unknown" steps="8450058"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__not_so_associative__subprogram_def" sum="ccf003ddd4f8ccbc9377689dc4621193">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="466365"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="722662"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="1221673"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="4263450"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="1984130"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__i_like_to_commute_to_work__subprogram_def" sum="60c8aeeda9277b5bf6461165c81c34fb">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365014"/></proof>
  <proof prover="2"><result status="invalid" steps="475978"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="2582671"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365020"/></proof>
  <proof prover="2"><result status="unknown" steps="8450066"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__distributed_fun__subprogram_def" sum="ac200aef0eef9f5de55b8d9a8986208d">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="2105966"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="3476127"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365012"/></proof>
  <proof prover="2"><result status="unknown" steps="8450098"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365015"/></proof>
  <proof prover="2"><result status="invalid" steps="3035355"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450114"/></proof>
  </goal>
  <goal name="WP_parameter def.5" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450074"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__equality__subprogram_def" proved="true" sum="f7c121b93d9c4d62bf58b2a6304efafb">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="88"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__introduce_nan_1__subprogram_def" sum="4b6a45332deaa0141d1ed7a8a6a266a1">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="981"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365012"/></proof>
  <proof prover="2"><result status="invalid" steps="328888"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__introduce_nan_2__subprogram_def" sum="2f4ce31a645eb0c73559e6d7457b4698">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="780"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="349288"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="309751"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="164"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="338372"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__introduce_nan_3__subprogram_def" sum="19582f779e4eefe47a991d98996cead5">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="1088"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="326679"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="317484"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" steps="280"/></proof>
  <proof prover="2"><result status="unknown" steps="8450082"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__transitive__subprogram_def" proved="true" sum="543dcd36f081caf07adb299a7997ac0f">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="274596"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__exhaustive__subprogram_def" proved="true" sum="0dffc22a951374979d1fb2a23426224c">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="418"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__negation_1__subprogram_def" proved="true" sum="c0f549cf92b6ef54eb851e4892dfa7f7">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="270"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__identity_1__subprogram_def" proved="true" sum="a945ef77aeeae0849ce26280105a6a0a">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="1063"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="12530"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__identity_2__subprogram_def" proved="true" sum="253668d9ae808274be8f08bd4eb3fdf4">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="80"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="335"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450066"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" steps="1260"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450058"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__interesting_inverse_1__subprogram_def" sum="22710e0ac805ba6ce4bdc75259237dc5">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="1015"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450090"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450090"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450098"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450098"/></proof>
  </goal>
  <goal name="WP_parameter def.5" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365014"/></proof>
  <proof prover="2"><result status="unknown" steps="8450106"/></proof>
  </goal>
  <goal name="WP_parameter def.6" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365012"/></proof>
  <proof prover="2"><result status="unknown" steps="8450106"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__interesting_inverse_2__subprogram_def" sum="c0ba61a62db9cf80eb0e872e3cbbc4c9">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="1015"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450090"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450090"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450098"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450098"/></proof>
  </goal>
  <goal name="WP_parameter def.5" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365014"/></proof>
  <proof prover="2"><result status="unknown" steps="8450106"/></proof>
  </goal>
  <goal name="WP_parameter def.6" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365015"/></proof>
  <proof prover="2"><result status="unknown" steps="8450106"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__unary_ops__subprogram_def" proved="true" sum="57b3a9d90b92aa4054da0ccdb7bad4bf">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="92"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__test_min__subprogram_def" proved="true" sum="df7fba1f4dfbe347781e98dc72b12f4f">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="213667"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="216734"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="84480"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__test_max__subprogram_def" proved="true" sum="52c352c074c317d34fcdc10cb19dc3f1">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="213161"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="244320"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="88867"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__test_floor_1__subprogram_def" proved="true" sum="3c6ac0fe1acc6ea43b6e65ab43df0f3c">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="434291"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__test_floor_2__subprogram_def" proved="true" sum="14586b79c1c19c57bce1fe63cdb8c063">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="57806"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="2255852"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__test_floor_3__subprogram_def" proved="true" sum="a3de35f506dc9901ffee537850c8d61c">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="50600"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="1688300"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__test_floor_4__subprogram_def" sum="cf78817c4fa34c81a864ce8bad62fc6f">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="53438"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="1686346"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__test_floor_5__subprogram_def" proved="true" sum="24c613fa89db60d55a7e78d8a549b6a5">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="1975756"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__test_floor_6__subprogram_def" proved="true" sum="408feb5542b107a803f542b98d0fd384">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="2592"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="4298"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="2619"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="4382"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="2650"/></proof>
  </goal>
  <goal name="WP_parameter def.5" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="4356"/></proof>
  </goal>
  <goal name="WP_parameter def.6" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="10541"/></proof>
  </goal>
  <goal name="WP_parameter def.7" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="30197"/></proof>
  </goal>
  <goal name="WP_parameter def.8" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="2691"/></proof>
  </goal>
  <goal name="WP_parameter def.9" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="8181"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__test_round_1__subprogram_def" sum="f3c433c3627ec7fdfb3e1abd8af4903e">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="check" proved="true">
  <proof prover="2"><result status="valid" steps="5226"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="check">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365015"/></proof>
  <proof prover="2"><result status="invalid" steps="2712"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="1131855"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="20389"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="142"/></proof>
  </goal>
  <goal name="WP_parameter def.5" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="29729"/></proof>
  </goal>
  <goal name="WP_parameter def.6" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="156"/></proof>
  </goal>
  <goal name="WP_parameter def.7" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="25500"/></proof>
  </goal>
  <goal name="WP_parameter def.8" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="166"/></proof>
  </goal>
  <goal name="WP_parameter def.9" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="17936"/></proof>
  </goal>
  <goal name="WP_parameter def.10" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="180"/></proof>
  </goal>
  <goal name="WP_parameter def.11" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="13108"/></proof>
  </goal>
  <goal name="WP_parameter def.12" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="188"/></proof>
  </goal>
  <goal name="WP_parameter def.13" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="17522"/></proof>
  </goal>
  <goal name="WP_parameter def.14" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="196"/></proof>
  </goal>
  <goal name="WP_parameter def.15" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="21074"/></proof>
  </goal>
  <goal name="WP_parameter def.16" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="204"/></proof>
  </goal>
  <goal name="WP_parameter def.17" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365015"/></proof>
  <proof prover="2"><result status="invalid" steps="42502"/></proof>
  </goal>
  <goal name="WP_parameter def.18" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="210"/></proof>
  </goal>
  <goal name="WP_parameter def.19" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="68141"/></proof>
  </goal>
  <goal name="WP_parameter def.20" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="218"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__test_round_2__subprogram_def" proved="true" sum="3f71d4aa93ba7260b524be5fce8605bd">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="74867"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="108842"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="2460292"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="1614882"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__test_record_1__subprogram_def" proved="true" sum="1271636f7596d12be6120e329af47114">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="5651"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__test_array_1__subprogram_def" proved="true" sum="12163db4f46d4606cef4c37adba207fe">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="7138"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__test_truncation_1__subprogram_def" sum="37b3a864073d382ff4d3117ab3a88d37">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="check" proved="true">
  <proof prover="2"><result status="valid" steps="5534"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="check">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="3520"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="12376"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="112"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="12293"/></proof>
  </goal>
  <goal name="WP_parameter def.5" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="128"/></proof>
  </goal>
  <goal name="WP_parameter def.6" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="12558"/></proof>
  </goal>
  <goal name="WP_parameter def.7" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="138"/></proof>
  </goal>
  <goal name="WP_parameter def.8" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="12302"/></proof>
  </goal>
  <goal name="WP_parameter def.9" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="144"/></proof>
  </goal>
  <goal name="WP_parameter def.10" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="15339"/></proof>
  </goal>
  <goal name="WP_parameter def.11" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="152"/></proof>
  </goal>
  <goal name="WP_parameter def.12" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="12390"/></proof>
  </goal>
  <goal name="WP_parameter def.13" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="160"/></proof>
  </goal>
  <goal name="WP_parameter def.14" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="12784"/></proof>
  </goal>
  <goal name="WP_parameter def.15" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="168"/></proof>
  </goal>
  <goal name="WP_parameter def.16" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="12591"/></proof>
  </goal>
  <goal name="WP_parameter def.17" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="174"/></proof>
  </goal>
  <goal name="WP_parameter def.18" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="12784"/></proof>
  </goal>
  <goal name="WP_parameter def.19" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="180"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__package_def" proved="true" sum="e5f77112b0f9a1b71d3af921ac09c3b0">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__magic__subprogram_def" proved="true" sum="ceffd22b75740b495ff3cc16d0d5f3d7">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__equality_matters__subprogram_def" sum="1c178400ba3a208b44075d6fa0f30c75">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="2060"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__a_minimum_of_care_is_needed__subprogram_def" sum="6a26e1a8501489fba0c2b77bbc51acc3">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="21818"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__add_monotonic__subprogram_def" sum="47677aa1732f8d15f8dde830640e8530">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="1536641"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="2096780"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__add_strictly_monotonic__subprogram_def" sum="0912c659f30e379eb804bff08847b3e6">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="1536641"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="1158244"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__smooth__subprogram_def" proved="true" sum="29244e6203488fb8de4331fce89dfc6b">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="unreachable point" proved="true">
  <proof prover="2"><result status="valid" steps="1793"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__negate_wrong__subprogram_def" proved="true" sum="e0033a7a8d5f5457c67472a9ffea94b2">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="1389"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="175822"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__underflow_1__subprogram_def" sum="e00310d74ceacba06061244b109c15b1">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="249"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450074"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="postcondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365012"/></proof>
  <proof prover="2"><result status="unknown" steps="8450074"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__inverse_reciprocal__subprogram_def" sum="c6ac2cfe284a48a7e811313bb35b755c">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="742"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="2393083"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="3368129"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450074"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="postcondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450074"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__underflow_2__subprogram_def" sum="bc5437057a8bf8fd2010567d769a98d0">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450074"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="postcondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="282707"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__underflow_3__subprogram_def" sum="6db3fc55f3cad3a081ae96570f16cce9">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450074"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="postcondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365012"/></proof>
  <proof prover="2"><result status="invalid" steps="6903920"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__sqrt_comedy_1__subprogram_def" sum="09ced6bb84e9b49a8fd294916c0d980c">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="5617176"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450090"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="postcondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450074"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__bad_optimisation_1__subprogram_def" sum="7f3db2468b5043e8ffe9495da2da2e37">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="96"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450074"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365015"/></proof>
  <proof prover="2"><result status="unknown" steps="8450082"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="172"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365015"/></proof>
  <proof prover="2"><result status="unknown" steps="8450094"/></proof>
  </goal>
  <goal name="WP_parameter def.5" expl="postcondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450086"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__inverse_addition__subprogram_def" sum="3396a98a9d1a5d724072f3882bb9d7f3">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="37973"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="142"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="37451"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__substract_identity_1__subprogram_def" proved="true" sum="4854516442fef1db0ae2604516625f91">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="1904430"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="3194269"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="1555003"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__substract_identity_2__subprogram_def" sum="7b3dfbcb6db2c40d46b945f8cd3a33c4">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="1904430"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365017"/></proof>
  <proof prover="2"><result status="invalid" steps="3555237"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365015"/></proof>
  <proof prover="2"><result status="invalid" steps="7757953"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__substract_identity_3__subprogram_def" sum="9b3c90e843c54b649039a1bee56793f3">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="1936039"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="2426397"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365014"/></proof>
  <proof prover="2"><result status="invalid" steps="2840655"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__underflow_4__subprogram_def" sum="531ff260b17e89ca1c46ea7cc348d6cc">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="162"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450066"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365002"/></proof>
  <proof prover="2"><result status="unknown" steps="8450058"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__not_so_associative__subprogram_def" sum="6d1281fc35e40c5ea828469d3fdc456d">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="1616867"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="2223274"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="4123023"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450106"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450074"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__i_like_to_commute_to_work__subprogram_def" sum="469e37cdbeaa0d14525ab5411f06e694">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365014"/></proof>
  <proof prover="2"><result status="invalid" steps="1602540"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" steps="116"/></proof>
  <proof prover="2"><result status="unknown" steps="8450082"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365020"/></proof>
  <proof prover="2"><result status="unknown" steps="8450066"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__distributed_fun__subprogram_def" sum="60c64e5dc6c5ea8a09a8e3329cd66d1f">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="5883244"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450090"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365012"/></proof>
  <proof prover="2"><result status="unknown" steps="8450098"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365015"/></proof>
  <proof prover="2"><result status="unknown" steps="8450106"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450114"/></proof>
  </goal>
  <goal name="WP_parameter def.5" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450074"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__equality__subprogram_def" proved="true" sum="3326f0995c284f63b70265b32f588c9f">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="88"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__introduce_nan_1__subprogram_def" sum="86d354e26a27188f370cdefcccdc5cfa">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="1213"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365012"/></proof>
  <proof prover="2"><result status="invalid" steps="2100082"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__introduce_nan_2__subprogram_def" sum="366867e7382ab37ea4a2edc12c02fa35">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="880"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="2264887"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="1945206"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="164"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="2081732"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__introduce_nan_3__subprogram_def" sum="1abac700e77b00d3d03737e5b0715d1f">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="1469"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="2041058"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="2087474"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" steps="280"/></proof>
  <proof prover="2"><result status="unknown" steps="8450082"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__transitive__subprogram_def" proved="true" sum="75da5de22205de51de9768ce82864cc7">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="1158376"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__exhaustive__subprogram_def" proved="true" sum="6dbefd6ca761ea0de2ccdf18d3cb69ae">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="430"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__negation_1__subprogram_def" proved="true" sum="c73b0994942dfad341f7d2a4f2f01b8d">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="270"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__identity_1__subprogram_def" proved="true" sum="84900e41cae3ea468f095782199dba21">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="1710"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="82136"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__identity_2__subprogram_def" proved="true" sum="33c7fa7fe21da9a2d64aa626b9f83726">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="80"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="335"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450066"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" steps="1260"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450058"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__interesting_inverse_1__subprogram_def" sum="dda187d7ee59ab70a6414cf671ec270c">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="1225"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450090"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450090"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450098"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450098"/></proof>
  </goal>
  <goal name="WP_parameter def.5" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365014"/></proof>
  <proof prover="2"><result status="unknown" steps="8450106"/></proof>
  </goal>
  <goal name="WP_parameter def.6" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365012"/></proof>
  <proof prover="2"><result status="unknown" steps="8450106"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__interesting_inverse_2__subprogram_def" sum="9105a6d28fa628ddb29a9be16c1a02de">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="1225"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450090"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450090"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450098"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450098"/></proof>
  </goal>
  <goal name="WP_parameter def.5" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365014"/></proof>
  <proof prover="2"><result status="unknown" steps="8450106"/></proof>
  </goal>
  <goal name="WP_parameter def.6" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365015"/></proof>
  <proof prover="2"><result status="unknown" steps="8450106"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__unary_ops__subprogram_def" proved="true" sum="8b00bbe43f7ae43fc269b6e747e19887">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="92"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__test_min__subprogram_def" proved="true" sum="e371dac7ec7174225ddeb9d7e3c74141">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="645692"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="778989"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="273344"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__test_max__subprogram_def" proved="true" sum="684259a9a6ba618b72ee1bcc7240e0fe">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="698895"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="617214"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="212974"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__test_floor_1__subprogram_def" proved="true" sum="0d4f3742dc837f3dfdf7023b5618c885">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="2134557"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__test_floor_2__subprogram_def" sum="c82b8c14b66aabdbd46342af5947fcae">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="101553"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365015"/></proof>
  <proof prover="2"><result status="unknown" steps="8450058"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__test_floor_3__subprogram_def" proved="true" sum="1bc77b9eefd1a2551049049d367fec20">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="100452"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="7625883"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__test_floor_4__subprogram_def" sum="f37b58079c65041a1f38848ece87d1d3">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="107086"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="5497305"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__test_floor_5__subprogram_def" proved="true" sum="91e1f6640f7c0ed7fc52eac941babb15">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" steps="110"/></proof>
  <proof prover="2"><result status="unknown" steps="8450050"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__test_floor_6__subprogram_def" proved="true" sum="381733218cda051b4ff850db45cae70d">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="4512"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="7752"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="4539"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="7836"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="4570"/></proof>
  </goal>
  <goal name="WP_parameter def.5" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="7810"/></proof>
  </goal>
  <goal name="WP_parameter def.6" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="20771"/></proof>
  </goal>
  <goal name="WP_parameter def.7" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="64369"/></proof>
  </goal>
  <goal name="WP_parameter def.8" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="4611"/></proof>
  </goal>
  <goal name="WP_parameter def.9" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="15191"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__test_round_1__subprogram_def" sum="c3246925fcb74ba27c9b8a460b639245">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="check" proved="true">
  <proof prover="2"><result status="valid" steps="6597"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="check">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365015"/></proof>
  <proof prover="2"><result status="invalid" steps="3383"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="3854578"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="162818"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="142"/></proof>
  </goal>
  <goal name="WP_parameter def.5" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="241831"/></proof>
  </goal>
  <goal name="WP_parameter def.6" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="156"/></proof>
  </goal>
  <goal name="WP_parameter def.7" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="162214"/></proof>
  </goal>
  <goal name="WP_parameter def.8" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="166"/></proof>
  </goal>
  <goal name="WP_parameter def.9" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="219746"/></proof>
  </goal>
  <goal name="WP_parameter def.10" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="180"/></proof>
  </goal>
  <goal name="WP_parameter def.11" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="71085"/></proof>
  </goal>
  <goal name="WP_parameter def.12" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="188"/></proof>
  </goal>
  <goal name="WP_parameter def.13" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="82709"/></proof>
  </goal>
  <goal name="WP_parameter def.14" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="196"/></proof>
  </goal>
  <goal name="WP_parameter def.15" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="183992"/></proof>
  </goal>
  <goal name="WP_parameter def.16" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="204"/></proof>
  </goal>
  <goal name="WP_parameter def.17" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365015"/></proof>
  <proof prover="2"><result status="invalid" steps="201133"/></proof>
  </goal>
  <goal name="WP_parameter def.18" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="210"/></proof>
  </goal>
  <goal name="WP_parameter def.19" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="184785"/></proof>
  </goal>
  <goal name="WP_parameter def.20" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="218"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__test_round_2__subprogram_def" sum="c5ccc07cdd28cf73bafdbcc5628db324">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="146289"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="198051"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="postcondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365014"/></proof>
  <proof prover="2"><result status="unknown" steps="8450068"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="postcondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450068"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__test_record_1__subprogram_def" proved="true" sum="2c77bc050cdc285f56cf35ad872eb973">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="6035"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__test_array_1__subprogram_def" proved="true" sum="fd93332a82ef8fc79496853e60bbbe61">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="7362"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__test_truncation_1__subprogram_def" sum="ee7769d019fc597d085d042355133659">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="check" proved="true">
  <proof prover="2"><result status="valid" steps="6777"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="check">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="4056"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="23436"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="112"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="23026"/></proof>
  </goal>
  <goal name="WP_parameter def.5" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="128"/></proof>
  </goal>
  <goal name="WP_parameter def.6" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="23644"/></proof>
  </goal>
  <goal name="WP_parameter def.7" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="138"/></proof>
  </goal>
  <goal name="WP_parameter def.8" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="23025"/></proof>
  </goal>
  <goal name="WP_parameter def.9" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="144"/></proof>
  </goal>
  <goal name="WP_parameter def.10" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="30634"/></proof>
  </goal>
  <goal name="WP_parameter def.11" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="152"/></proof>
  </goal>
  <goal name="WP_parameter def.12" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="23113"/></proof>
  </goal>
  <goal name="WP_parameter def.13" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="160"/></proof>
  </goal>
  <goal name="WP_parameter def.14" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="23870"/></proof>
  </goal>
  <goal name="WP_parameter def.15" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="168"/></proof>
  </goal>
  <goal name="WP_parameter def.16" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="23324"/></proof>
  </goal>
  <goal name="WP_parameter def.17" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="174"/></proof>
  </goal>
  <goal name="WP_parameter def.18" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="23844"/></proof>
  </goal>
  <goal name="WP_parameter def.19" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="180"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__floats_and_double__subprogram_def" sum="0c72296da62f517b9039f471852a8bde">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="38938"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="58494"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="1336186"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
