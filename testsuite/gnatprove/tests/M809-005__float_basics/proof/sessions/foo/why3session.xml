<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="0" name="altergo" version="1.30-gnatprove" timelimit="120" steplimit="10000" memlimit="0"/>
<prover id="1" name="CVC4" version="1.5-gnatprove" timelimit="120" steplimit="365000" memlimit="0"/>
<prover id="2" name="Z3" version="4.5.1-gnatprove" timelimit="120" steplimit="8450000" memlimit="0"/>
<file name="../../../gnatprove/foo.mlw">
<theory name="Standard__short_short_integer" proved="true">
</theory>
<theory name="Standard__short_short_integer__rep" proved="true">
</theory>
<theory name="Standard__short_integer" proved="true">
</theory>
<theory name="Standard__short_integer__rep" proved="true">
</theory>
<theory name="Standard__integer" proved="true">
</theory>
<theory name="Standard__integer__rep" proved="true">
</theory>
<theory name="Standard__long_integer" proved="true">
</theory>
<theory name="Standard__long_integer__rep" proved="true">
</theory>
<theory name="Standard__long_long_integer" proved="true">
</theory>
<theory name="Standard__long_long_integer__rep" proved="true">
</theory>
<theory name="Standard__natural" proved="true">
</theory>
<theory name="Standard__natural__rep" proved="true">
</theory>
<theory name="Standard__positive" proved="true">
</theory>
<theory name="Standard__positive__rep" proved="true">
</theory>
<theory name="Standard__short_float" proved="true">
</theory>
<theory name="Standard__short_float__rep" proved="true">
</theory>
<theory name="Standard__float" proved="true">
</theory>
<theory name="Standard__float__rep" proved="true">
</theory>
<theory name="Standard__long_float" proved="true">
</theory>
<theory name="Standard__long_float__rep" proved="true">
</theory>
<theory name="Standard__character" proved="true">
</theory>
<theory name="Standard__character__rep" proved="true">
</theory>
<theory name="Standard__wide_character" proved="true">
</theory>
<theory name="Standard__wide_character__rep" proved="true">
</theory>
<theory name="Standard__wide_wide_character" proved="true">
</theory>
<theory name="Standard__wide_wide_character__rep" proved="true">
</theory>
<theory name="Array__Int__Standard__character" proved="true">
</theory>
<theory name="Array__Int__Standard__character__Concat" proved="true">
</theory>
<theory name="Array__Int__Standard__character_Comp" proved="true">
</theory>
<theory name="Standard__string" proved="true">
</theory>
<theory name="Array__Int__Standard__wide_character" proved="true">
</theory>
<theory name="Array__Int__Standard__wide_character__Concat" proved="true">
</theory>
<theory name="Array__Int__Standard__wide_character_Comp" proved="true">
</theory>
<theory name="Standard__wide_string" proved="true">
</theory>
<theory name="Array__Int__Standard__wide_wide_character" proved="true">
</theory>
<theory name="Array__Int__Standard__wide_wide_character__Concat" proved="true">
</theory>
<theory name="Array__Int__Standard__wide_wide_character_Comp" proved="true">
</theory>
<theory name="Standard__wide_wide_string" proved="true">
</theory>
<theory name="Standard__duration" proved="true">
</theory>
<theory name="Standard__integer_8" proved="true">
</theory>
<theory name="Standard__integer_8__rep" proved="true">
</theory>
<theory name="Standard__integer_16" proved="true">
</theory>
<theory name="Standard__integer_16__rep" proved="true">
</theory>
<theory name="Standard__integer_32" proved="true">
</theory>
<theory name="Standard__integer_32__rep" proved="true">
</theory>
<theory name="Standard__integer_64" proved="true">
</theory>
<theory name="Standard__integer_64__rep" proved="true">
</theory>
<theory name="Standard__universal_integer" proved="true">
</theory>
<theory name="Standard__universal_integer__rep" proved="true">
</theory>
<theory name="Foo__float_tests__ft" proved="true">
</theory>
<theory name="Foo__float_tests__ft__rep" proved="true">
</theory>
<theory name="Foo__float_tests__biggest_representable_int" proved="true">
</theory>
<theory name="Foo__float_tests__nextup_one" proved="true">
</theory>
<theory name="Foo__float_tests__magic__x" proved="true">
</theory>
<theory name="Foo__float_tests__magic__x___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__magic" proved="true">
</theory>
<theory name="Foo__float_tests__equality_matters__a" proved="true">
</theory>
<theory name="Foo__float_tests__equality_matters__a___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__equality_matters__b" proved="true">
</theory>
<theory name="Foo__float_tests__equality_matters__b___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__a_minimum_of_care_is_needed__a" proved="true">
</theory>
<theory name="Foo__float_tests__a_minimum_of_care_is_needed__a___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__a_minimum_of_care_is_needed__b" proved="true">
</theory>
<theory name="Foo__float_tests__a_minimum_of_care_is_needed__b___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__add_monotonic__x" proved="true">
</theory>
<theory name="Foo__float_tests__add_monotonic__x___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__add_monotonic__y" proved="true">
</theory>
<theory name="Foo__float_tests__add_monotonic__y___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__add_strictly_monotonic__x" proved="true">
</theory>
<theory name="Foo__float_tests__add_strictly_monotonic__x___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__add_strictly_monotonic__y" proved="true">
</theory>
<theory name="Foo__float_tests__add_strictly_monotonic__y___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__smooth__x" proved="true">
</theory>
<theory name="Foo__float_tests__smooth__x___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__smooth__y" proved="true">
</theory>
<theory name="Foo__float_tests__smooth__y___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__smooth__z" proved="true">
</theory>
<theory name="Foo__float_tests__smooth__z___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__negate_wrong__x" proved="true">
</theory>
<theory name="Foo__float_tests__negate_wrong__x___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__negate_wrong" proved="true">
</theory>
<theory name="Foo__float_tests__underflow_1__a" proved="true">
</theory>
<theory name="Foo__float_tests__underflow_1__a___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__underflow_1__b" proved="true">
</theory>
<theory name="Foo__float_tests__underflow_1__b___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__underflow_1" proved="true">
</theory>
<theory name="Foo__float_tests__inverse_reciprocal__a" proved="true">
</theory>
<theory name="Foo__float_tests__inverse_reciprocal__a___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__inverse_reciprocal" proved="true">
</theory>
<theory name="Foo__float_tests__underflow_2__a" proved="true">
</theory>
<theory name="Foo__float_tests__underflow_2__a___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__underflow_2__b" proved="true">
</theory>
<theory name="Foo__float_tests__underflow_2__b___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__underflow_2" proved="true">
</theory>
<theory name="Foo__float_tests__underflow_3__a" proved="true">
</theory>
<theory name="Foo__float_tests__underflow_3__a___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__underflow_3__b" proved="true">
</theory>
<theory name="Foo__float_tests__underflow_3__b___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__underflow_3" proved="true">
</theory>
<theory name="Foo__float_tests__sqrt_comedy_1__a" proved="true">
</theory>
<theory name="Foo__float_tests__sqrt_comedy_1__a___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__sqrt_comedy_1__b" proved="true">
</theory>
<theory name="Foo__float_tests__sqrt_comedy_1__b___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__sqrt_comedy_1__c" proved="true">
</theory>
<theory name="Foo__float_tests__sqrt_comedy_1__c___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__sqrt_comedy_1" proved="true">
</theory>
<theory name="Foo__float_tests__bad_optimisation_1__a" proved="true">
</theory>
<theory name="Foo__float_tests__bad_optimisation_1__a___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__bad_optimisation_1__b" proved="true">
</theory>
<theory name="Foo__float_tests__bad_optimisation_1__b___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__bad_optimisation_1" proved="true">
</theory>
<theory name="Foo__float_tests__inverse_addition__x" proved="true">
</theory>
<theory name="Foo__float_tests__inverse_addition__x___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__substract_identity_1__x" proved="true">
</theory>
<theory name="Foo__float_tests__substract_identity_1__x___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__substract_identity_1__y" proved="true">
</theory>
<theory name="Foo__float_tests__substract_identity_1__y___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__substract_identity_2__x" proved="true">
</theory>
<theory name="Foo__float_tests__substract_identity_2__x___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__substract_identity_2__y" proved="true">
</theory>
<theory name="Foo__float_tests__substract_identity_2__y___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__substract_identity_3__x" proved="true">
</theory>
<theory name="Foo__float_tests__substract_identity_3__x___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__substract_identity_3__y" proved="true">
</theory>
<theory name="Foo__float_tests__substract_identity_3__y___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__underflow_4__x" proved="true">
</theory>
<theory name="Foo__float_tests__underflow_4__x___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__not_so_associative__a" proved="true">
</theory>
<theory name="Foo__float_tests__not_so_associative__a___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__not_so_associative__b" proved="true">
</theory>
<theory name="Foo__float_tests__not_so_associative__b___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__not_so_associative__c" proved="true">
</theory>
<theory name="Foo__float_tests__not_so_associative__c___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__i_like_to_commute_to_work__a" proved="true">
</theory>
<theory name="Foo__float_tests__i_like_to_commute_to_work__a___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__i_like_to_commute_to_work__b" proved="true">
</theory>
<theory name="Foo__float_tests__i_like_to_commute_to_work__b___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__distributed_fun__a" proved="true">
</theory>
<theory name="Foo__float_tests__distributed_fun__a___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__distributed_fun__b" proved="true">
</theory>
<theory name="Foo__float_tests__distributed_fun__b___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__distributed_fun__c" proved="true">
</theory>
<theory name="Foo__float_tests__distributed_fun__c___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__equality__x" proved="true">
</theory>
<theory name="Foo__float_tests__equality__x___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__introduce_nan_1__x" proved="true">
</theory>
<theory name="Foo__float_tests__introduce_nan_1__x___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__introduce_nan_1__y" proved="true">
</theory>
<theory name="Foo__float_tests__introduce_nan_1__y___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__introduce_nan_2__x" proved="true">
</theory>
<theory name="Foo__float_tests__introduce_nan_2__x___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__introduce_nan_2__y" proved="true">
</theory>
<theory name="Foo__float_tests__introduce_nan_2__y___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__introduce_nan_3__x" proved="true">
</theory>
<theory name="Foo__float_tests__introduce_nan_3__x___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__introduce_nan_3__y" proved="true">
</theory>
<theory name="Foo__float_tests__introduce_nan_3__y___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__introduce_nan_3" proved="true">
</theory>
<theory name="Foo__float_tests__transitive__x" proved="true">
</theory>
<theory name="Foo__float_tests__transitive__x___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__transitive__y" proved="true">
</theory>
<theory name="Foo__float_tests__transitive__y___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__transitive__z" proved="true">
</theory>
<theory name="Foo__float_tests__transitive__z___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__exhaustive__a" proved="true">
</theory>
<theory name="Foo__float_tests__exhaustive__a___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__exhaustive" proved="true">
</theory>
<theory name="Foo__float_tests__negation_1__f" proved="true">
</theory>
<theory name="Foo__float_tests__negation_1__f___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__identity_2__x" proved="true">
</theory>
<theory name="Foo__float_tests__identity_2__x___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__interesting_inverse_1__x" proved="true">
</theory>
<theory name="Foo__float_tests__interesting_inverse_1__x___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__interesting_inverse_2__x" proved="true">
</theory>
<theory name="Foo__float_tests__interesting_inverse_2__x___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__unary_ops__x" proved="true">
</theory>
<theory name="Foo__float_tests__unary_ops__x___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__test_min__x" proved="true">
</theory>
<theory name="Foo__float_tests__test_min__x___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__test_min__y" proved="true">
</theory>
<theory name="Foo__float_tests__test_min__y___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__test_max__x" proved="true">
</theory>
<theory name="Foo__float_tests__test_max__x___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__test_max__y" proved="true">
</theory>
<theory name="Foo__float_tests__test_max__y___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__test_floor_1__x" proved="true">
</theory>
<theory name="Foo__float_tests__test_floor_1__x___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__test_floor_2__x" proved="true">
</theory>
<theory name="Foo__float_tests__test_floor_2__x___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__test_floor_3__x" proved="true">
</theory>
<theory name="Foo__float_tests__test_floor_3__x___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__test_floor_4__x" proved="true">
</theory>
<theory name="Foo__float_tests__test_floor_4__x___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__test_floor_5__x" proved="true">
</theory>
<theory name="Foo__float_tests__test_floor_5__x___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__test_floor_6__x" proved="true">
</theory>
<theory name="Foo__float_tests__test_floor_6__x___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__test_round_1__x" proved="true">
</theory>
<theory name="Foo__float_tests__test_round_1__x___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__test_round_2__x" proved="true">
</theory>
<theory name="Foo__float_tests__test_round_2__x___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__test_record_1__x" proved="true">
</theory>
<theory name="Foo__float_tests__test_record_1__x___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__test_record_1__rec__rep" proved="true">
</theory>
<theory name="Foo__float_tests__test_record_1__rec" proved="true">
</theory>
<theory name="Foo__float_tests__test_array_1__x" proved="true">
</theory>
<theory name="Foo__float_tests__test_array_1__x___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__test_array_1__Tindex_tB" proved="true">
</theory>
<theory name="Foo__float_tests__test_array_1__Tindex_tB__rep" proved="true">
</theory>
<theory name="Foo__float_tests__test_array_1__index_t" proved="true">
</theory>
<theory name="Foo__float_tests__test_array_1__index_t__rep" proved="true">
</theory>
<theory name="Array__Int__Foo__float_tests__ft" proved="true">
</theory>
<theory name="Array__Int__Foo__float_tests__ft__Concat" proved="true">
</theory>
<theory name="Foo__float_tests__test_array_1__TarrB" proved="true">
</theory>
<theory name="Foo__float_tests__test_array_1__arr" proved="true">
</theory>
<theory name="Foo__float_tests__test_array_1__T54s" proved="true">
</theory>
<theory name="Foo__float_tests__test_array_1__T54s__rep" proved="true">
</theory>
<theory name="Foo__float_tests__test_array_1__T55s" proved="true">
</theory>
<theory name="Foo__float_tests__test_truncation_1__x" proved="true">
</theory>
<theory name="Foo__float_tests__test_truncation_1__x___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__ft" proved="true">
</theory>
<theory name="Foo__double_tests__ft__rep" proved="true">
</theory>
<theory name="Foo__double_tests__biggest_representable_int" proved="true">
</theory>
<theory name="Foo__double_tests__nextup_one" proved="true">
</theory>
<theory name="Foo__double_tests__magic__x" proved="true">
</theory>
<theory name="Foo__double_tests__magic__x___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__magic" proved="true">
</theory>
<theory name="Foo__double_tests__equality_matters__a" proved="true">
</theory>
<theory name="Foo__double_tests__equality_matters__a___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__equality_matters__b" proved="true">
</theory>
<theory name="Foo__double_tests__equality_matters__b___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__a_minimum_of_care_is_needed__a" proved="true">
</theory>
<theory name="Foo__double_tests__a_minimum_of_care_is_needed__a___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__a_minimum_of_care_is_needed__b" proved="true">
</theory>
<theory name="Foo__double_tests__a_minimum_of_care_is_needed__b___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__add_monotonic__x" proved="true">
</theory>
<theory name="Foo__double_tests__add_monotonic__x___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__add_monotonic__y" proved="true">
</theory>
<theory name="Foo__double_tests__add_monotonic__y___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__add_strictly_monotonic__x" proved="true">
</theory>
<theory name="Foo__double_tests__add_strictly_monotonic__x___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__add_strictly_monotonic__y" proved="true">
</theory>
<theory name="Foo__double_tests__add_strictly_monotonic__y___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__smooth__x" proved="true">
</theory>
<theory name="Foo__double_tests__smooth__x___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__smooth__y" proved="true">
</theory>
<theory name="Foo__double_tests__smooth__y___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__smooth__z" proved="true">
</theory>
<theory name="Foo__double_tests__smooth__z___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__negate_wrong__x" proved="true">
</theory>
<theory name="Foo__double_tests__negate_wrong__x___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__negate_wrong" proved="true">
</theory>
<theory name="Foo__double_tests__underflow_1__a" proved="true">
</theory>
<theory name="Foo__double_tests__underflow_1__a___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__underflow_1__b" proved="true">
</theory>
<theory name="Foo__double_tests__underflow_1__b___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__underflow_1" proved="true">
</theory>
<theory name="Foo__double_tests__inverse_reciprocal__a" proved="true">
</theory>
<theory name="Foo__double_tests__inverse_reciprocal__a___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__inverse_reciprocal" proved="true">
</theory>
<theory name="Foo__double_tests__underflow_2__a" proved="true">
</theory>
<theory name="Foo__double_tests__underflow_2__a___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__underflow_2__b" proved="true">
</theory>
<theory name="Foo__double_tests__underflow_2__b___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__underflow_2" proved="true">
</theory>
<theory name="Foo__double_tests__underflow_3__a" proved="true">
</theory>
<theory name="Foo__double_tests__underflow_3__a___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__underflow_3__b" proved="true">
</theory>
<theory name="Foo__double_tests__underflow_3__b___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__underflow_3" proved="true">
</theory>
<theory name="Foo__double_tests__sqrt_comedy_1__a" proved="true">
</theory>
<theory name="Foo__double_tests__sqrt_comedy_1__a___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__sqrt_comedy_1__b" proved="true">
</theory>
<theory name="Foo__double_tests__sqrt_comedy_1__b___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__sqrt_comedy_1__c" proved="true">
</theory>
<theory name="Foo__double_tests__sqrt_comedy_1__c___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__sqrt_comedy_1" proved="true">
</theory>
<theory name="Foo__double_tests__bad_optimisation_1__a" proved="true">
</theory>
<theory name="Foo__double_tests__bad_optimisation_1__a___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__bad_optimisation_1__b" proved="true">
</theory>
<theory name="Foo__double_tests__bad_optimisation_1__b___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__bad_optimisation_1" proved="true">
</theory>
<theory name="Foo__double_tests__inverse_addition__x" proved="true">
</theory>
<theory name="Foo__double_tests__inverse_addition__x___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__substract_identity_1__x" proved="true">
</theory>
<theory name="Foo__double_tests__substract_identity_1__x___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__substract_identity_1__y" proved="true">
</theory>
<theory name="Foo__double_tests__substract_identity_1__y___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__substract_identity_2__x" proved="true">
</theory>
<theory name="Foo__double_tests__substract_identity_2__x___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__substract_identity_2__y" proved="true">
</theory>
<theory name="Foo__double_tests__substract_identity_2__y___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__substract_identity_3__x" proved="true">
</theory>
<theory name="Foo__double_tests__substract_identity_3__x___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__substract_identity_3__y" proved="true">
</theory>
<theory name="Foo__double_tests__substract_identity_3__y___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__underflow_4__x" proved="true">
</theory>
<theory name="Foo__double_tests__underflow_4__x___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__not_so_associative__a" proved="true">
</theory>
<theory name="Foo__double_tests__not_so_associative__a___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__not_so_associative__b" proved="true">
</theory>
<theory name="Foo__double_tests__not_so_associative__b___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__not_so_associative__c" proved="true">
</theory>
<theory name="Foo__double_tests__not_so_associative__c___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__i_like_to_commute_to_work__a" proved="true">
</theory>
<theory name="Foo__double_tests__i_like_to_commute_to_work__a___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__i_like_to_commute_to_work__b" proved="true">
</theory>
<theory name="Foo__double_tests__i_like_to_commute_to_work__b___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__distributed_fun__a" proved="true">
</theory>
<theory name="Foo__double_tests__distributed_fun__a___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__distributed_fun__b" proved="true">
</theory>
<theory name="Foo__double_tests__distributed_fun__b___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__distributed_fun__c" proved="true">
</theory>
<theory name="Foo__double_tests__distributed_fun__c___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__equality__x" proved="true">
</theory>
<theory name="Foo__double_tests__equality__x___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__introduce_nan_1__x" proved="true">
</theory>
<theory name="Foo__double_tests__introduce_nan_1__x___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__introduce_nan_1__y" proved="true">
</theory>
<theory name="Foo__double_tests__introduce_nan_1__y___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__introduce_nan_2__x" proved="true">
</theory>
<theory name="Foo__double_tests__introduce_nan_2__x___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__introduce_nan_2__y" proved="true">
</theory>
<theory name="Foo__double_tests__introduce_nan_2__y___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__introduce_nan_3__x" proved="true">
</theory>
<theory name="Foo__double_tests__introduce_nan_3__x___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__introduce_nan_3__y" proved="true">
</theory>
<theory name="Foo__double_tests__introduce_nan_3__y___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__introduce_nan_3" proved="true">
</theory>
<theory name="Foo__double_tests__transitive__x" proved="true">
</theory>
<theory name="Foo__double_tests__transitive__x___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__transitive__y" proved="true">
</theory>
<theory name="Foo__double_tests__transitive__y___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__transitive__z" proved="true">
</theory>
<theory name="Foo__double_tests__transitive__z___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__exhaustive__a" proved="true">
</theory>
<theory name="Foo__double_tests__exhaustive__a___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__exhaustive" proved="true">
</theory>
<theory name="Foo__double_tests__negation_1__f" proved="true">
</theory>
<theory name="Foo__double_tests__negation_1__f___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__identity_2__x" proved="true">
</theory>
<theory name="Foo__double_tests__identity_2__x___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__interesting_inverse_1__x" proved="true">
</theory>
<theory name="Foo__double_tests__interesting_inverse_1__x___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__interesting_inverse_2__x" proved="true">
</theory>
<theory name="Foo__double_tests__interesting_inverse_2__x___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__unary_ops__x" proved="true">
</theory>
<theory name="Foo__double_tests__unary_ops__x___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__test_min__x" proved="true">
</theory>
<theory name="Foo__double_tests__test_min__x___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__test_min__y" proved="true">
</theory>
<theory name="Foo__double_tests__test_min__y___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__test_max__x" proved="true">
</theory>
<theory name="Foo__double_tests__test_max__x___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__test_max__y" proved="true">
</theory>
<theory name="Foo__double_tests__test_max__y___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__test_floor_1__x" proved="true">
</theory>
<theory name="Foo__double_tests__test_floor_1__x___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__test_floor_2__x" proved="true">
</theory>
<theory name="Foo__double_tests__test_floor_2__x___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__test_floor_3__x" proved="true">
</theory>
<theory name="Foo__double_tests__test_floor_3__x___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__test_floor_4__x" proved="true">
</theory>
<theory name="Foo__double_tests__test_floor_4__x___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__test_floor_5__x" proved="true">
</theory>
<theory name="Foo__double_tests__test_floor_5__x___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__test_floor_6__x" proved="true">
</theory>
<theory name="Foo__double_tests__test_floor_6__x___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__test_round_1__x" proved="true">
</theory>
<theory name="Foo__double_tests__test_round_1__x___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__test_round_2__x" proved="true">
</theory>
<theory name="Foo__double_tests__test_round_2__x___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__test_record_1__x" proved="true">
</theory>
<theory name="Foo__double_tests__test_record_1__x___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__test_record_1__rec__rep" proved="true">
</theory>
<theory name="Foo__double_tests__test_record_1__rec" proved="true">
</theory>
<theory name="Foo__double_tests__test_array_1__x" proved="true">
</theory>
<theory name="Foo__double_tests__test_array_1__x___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__test_array_1__Tindex_tB" proved="true">
</theory>
<theory name="Foo__double_tests__test_array_1__Tindex_tB__rep" proved="true">
</theory>
<theory name="Foo__double_tests__test_array_1__index_t" proved="true">
</theory>
<theory name="Foo__double_tests__test_array_1__index_t__rep" proved="true">
</theory>
<theory name="Array__Int__Foo__double_tests__ft" proved="true">
</theory>
<theory name="Array__Int__Foo__double_tests__ft__Concat" proved="true">
</theory>
<theory name="Foo__double_tests__test_array_1__TarrB" proved="true">
</theory>
<theory name="Foo__double_tests__test_array_1__arr" proved="true">
</theory>
<theory name="Foo__double_tests__test_array_1__T110s" proved="true">
</theory>
<theory name="Foo__double_tests__test_array_1__T110s__rep" proved="true">
</theory>
<theory name="Foo__double_tests__test_array_1__T111s" proved="true">
</theory>
<theory name="Foo__double_tests__test_truncation_1__x" proved="true">
</theory>
<theory name="Foo__double_tests__test_truncation_1__x___axiom" proved="true">
</theory>
<theory name="Foo__floats_and_double__x" proved="true">
</theory>
<theory name="Foo__floats_and_double__x___axiom" proved="true">
</theory>
<theory name="Foo__floats_and_double__y" proved="true">
</theory>
<theory name="Foo__floats_and_double__y___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__introduce_nan_1__z" proved="true">
</theory>
<theory name="Foo__float_tests__introduce_nan_1__z___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__identity_1__f" proved="true">
</theory>
<theory name="Foo__float_tests__identity_1__f___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__interesting_inverse_1__a" proved="true">
</theory>
<theory name="Foo__float_tests__interesting_inverse_1__a___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__interesting_inverse_1__b" proved="true">
</theory>
<theory name="Foo__float_tests__interesting_inverse_1__b___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__interesting_inverse_1__c" proved="true">
</theory>
<theory name="Foo__float_tests__interesting_inverse_1__c___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__interesting_inverse_2__a" proved="true">
</theory>
<theory name="Foo__float_tests__interesting_inverse_2__a___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__interesting_inverse_2__b" proved="true">
</theory>
<theory name="Foo__float_tests__interesting_inverse_2__b___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__interesting_inverse_2__c" proved="true">
</theory>
<theory name="Foo__float_tests__interesting_inverse_2__c___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__test_min__m" proved="true">
</theory>
<theory name="Foo__float_tests__test_min__m___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__test_max__m" proved="true">
</theory>
<theory name="Foo__float_tests__test_max__m___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__test_floor_1__y" proved="true">
</theory>
<theory name="Foo__float_tests__test_floor_1__y___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__test_round_1__i" proved="true">
</theory>
<theory name="Foo__float_tests__test_round_1__i___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__test_round_2__y" proved="true">
</theory>
<theory name="Foo__float_tests__test_round_2__y___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__test_record_1__y" proved="true">
</theory>
<theory name="Foo__float_tests__test_record_1__y___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__test_record_1__r" proved="true">
</theory>
<theory name="Foo__float_tests__test_record_1__r___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__test_array_1__y" proved="true">
</theory>
<theory name="Foo__float_tests__test_array_1__y___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__test_array_1__a" proved="true">
</theory>
<theory name="Foo__float_tests__test_array_1__a___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__test_truncation_1__y" proved="true">
</theory>
<theory name="Foo__float_tests__test_truncation_1__y___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__introduce_nan_1__z" proved="true">
</theory>
<theory name="Foo__double_tests__introduce_nan_1__z___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__identity_1__f" proved="true">
</theory>
<theory name="Foo__double_tests__identity_1__f___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__interesting_inverse_1__a" proved="true">
</theory>
<theory name="Foo__double_tests__interesting_inverse_1__a___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__interesting_inverse_1__b" proved="true">
</theory>
<theory name="Foo__double_tests__interesting_inverse_1__b___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__interesting_inverse_1__c" proved="true">
</theory>
<theory name="Foo__double_tests__interesting_inverse_1__c___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__interesting_inverse_2__a" proved="true">
</theory>
<theory name="Foo__double_tests__interesting_inverse_2__a___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__interesting_inverse_2__b" proved="true">
</theory>
<theory name="Foo__double_tests__interesting_inverse_2__b___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__interesting_inverse_2__c" proved="true">
</theory>
<theory name="Foo__double_tests__interesting_inverse_2__c___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__test_min__m" proved="true">
</theory>
<theory name="Foo__double_tests__test_min__m___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__test_max__m" proved="true">
</theory>
<theory name="Foo__double_tests__test_max__m___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__test_floor_1__y" proved="true">
</theory>
<theory name="Foo__double_tests__test_floor_1__y___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__test_round_1__i" proved="true">
</theory>
<theory name="Foo__double_tests__test_round_1__i___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__test_round_2__y" proved="true">
</theory>
<theory name="Foo__double_tests__test_round_2__y___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__test_record_1__y" proved="true">
</theory>
<theory name="Foo__double_tests__test_record_1__y___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__test_record_1__r" proved="true">
</theory>
<theory name="Foo__double_tests__test_record_1__r___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__test_array_1__y" proved="true">
</theory>
<theory name="Foo__double_tests__test_array_1__y___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__test_array_1__a" proved="true">
</theory>
<theory name="Foo__double_tests__test_array_1__a___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__test_truncation_1__y" proved="true">
</theory>
<theory name="Foo__double_tests__test_truncation_1__y___axiom" proved="true">
</theory>
<theory name="Standard__short_short_integer___axiom" proved="true">
</theory>
<theory name="Standard__short_integer___axiom" proved="true">
</theory>
<theory name="Standard__integer___axiom" proved="true">
</theory>
<theory name="Standard__long_integer___axiom" proved="true">
</theory>
<theory name="Standard__long_long_integer___axiom" proved="true">
</theory>
<theory name="Standard__natural___axiom" proved="true">
</theory>
<theory name="Standard__positive___axiom" proved="true">
</theory>
<theory name="Standard__short_float___axiom" proved="true">
</theory>
<theory name="Standard__float___axiom" proved="true">
</theory>
<theory name="Standard__long_float___axiom" proved="true">
</theory>
<theory name="Standard__character___axiom" proved="true">
</theory>
<theory name="Standard__wide_character___axiom" proved="true">
</theory>
<theory name="Standard__wide_wide_character___axiom" proved="true">
</theory>
<theory name="Standard__string___axiom" proved="true">
</theory>
<theory name="Standard__wide_string___axiom" proved="true">
</theory>
<theory name="Standard__wide_wide_string___axiom" proved="true">
</theory>
<theory name="Standard__duration___axiom" proved="true">
</theory>
<theory name="Standard__integer_8___axiom" proved="true">
</theory>
<theory name="Standard__integer_16___axiom" proved="true">
</theory>
<theory name="Standard__integer_32___axiom" proved="true">
</theory>
<theory name="Standard__integer_64___axiom" proved="true">
</theory>
<theory name="Standard__universal_integer___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__equality_matters" proved="true">
</theory>
<theory name="Foo__float_tests__a_minimum_of_care_is_needed" proved="true">
</theory>
<theory name="Foo__float_tests__add_monotonic" proved="true">
</theory>
<theory name="Foo__float_tests__add_strictly_monotonic" proved="true">
</theory>
<theory name="Foo__float_tests__smooth" proved="true">
</theory>
<theory name="Foo__float_tests__inverse_addition" proved="true">
</theory>
<theory name="Foo__float_tests__substract_identity_1" proved="true">
</theory>
<theory name="Foo__float_tests__substract_identity_2" proved="true">
</theory>
<theory name="Foo__float_tests__substract_identity_3" proved="true">
</theory>
<theory name="Foo__float_tests__underflow_4" proved="true">
</theory>
<theory name="Foo__float_tests__not_so_associative" proved="true">
</theory>
<theory name="Foo__float_tests__i_like_to_commute_to_work" proved="true">
</theory>
<theory name="Foo__float_tests__distributed_fun" proved="true">
</theory>
<theory name="Foo__float_tests__equality" proved="true">
</theory>
<theory name="Foo__float_tests__introduce_nan_1" proved="true">
</theory>
<theory name="Foo__float_tests__introduce_nan_2" proved="true">
</theory>
<theory name="Foo__float_tests__transitive" proved="true">
</theory>
<theory name="Foo__float_tests__negation_1" proved="true">
</theory>
<theory name="Foo__float_tests__identity_1" proved="true">
</theory>
<theory name="Foo__float_tests__identity_2" proved="true">
</theory>
<theory name="Foo__float_tests__interesting_inverse_1" proved="true">
</theory>
<theory name="Foo__float_tests__interesting_inverse_2" proved="true">
</theory>
<theory name="Foo__float_tests__unary_ops" proved="true">
</theory>
<theory name="Foo__float_tests__test_min" proved="true">
</theory>
<theory name="Foo__float_tests__test_max" proved="true">
</theory>
<theory name="Foo__float_tests__test_floor_1" proved="true">
</theory>
<theory name="Foo__float_tests__test_floor_2" proved="true">
</theory>
<theory name="Foo__float_tests__test_floor_3" proved="true">
</theory>
<theory name="Foo__float_tests__test_floor_4" proved="true">
</theory>
<theory name="Foo__float_tests__test_floor_5" proved="true">
</theory>
<theory name="Foo__float_tests__test_floor_6" proved="true">
</theory>
<theory name="Foo__float_tests__test_round_1" proved="true">
</theory>
<theory name="Foo__float_tests__test_round_2" proved="true">
</theory>
<theory name="Foo__float_tests__test_record_1" proved="true">
</theory>
<theory name="Foo__float_tests__test_array_1" proved="true">
</theory>
<theory name="Foo__float_tests__test_truncation_1" proved="true">
</theory>
<theory name="Foo__double_tests__equality_matters" proved="true">
</theory>
<theory name="Foo__double_tests__a_minimum_of_care_is_needed" proved="true">
</theory>
<theory name="Foo__double_tests__add_monotonic" proved="true">
</theory>
<theory name="Foo__double_tests__add_strictly_monotonic" proved="true">
</theory>
<theory name="Foo__double_tests__smooth" proved="true">
</theory>
<theory name="Foo__double_tests__inverse_addition" proved="true">
</theory>
<theory name="Foo__double_tests__substract_identity_1" proved="true">
</theory>
<theory name="Foo__double_tests__substract_identity_2" proved="true">
</theory>
<theory name="Foo__double_tests__substract_identity_3" proved="true">
</theory>
<theory name="Foo__double_tests__underflow_4" proved="true">
</theory>
<theory name="Foo__double_tests__not_so_associative" proved="true">
</theory>
<theory name="Foo__double_tests__i_like_to_commute_to_work" proved="true">
</theory>
<theory name="Foo__double_tests__distributed_fun" proved="true">
</theory>
<theory name="Foo__double_tests__equality" proved="true">
</theory>
<theory name="Foo__double_tests__introduce_nan_1" proved="true">
</theory>
<theory name="Foo__double_tests__introduce_nan_2" proved="true">
</theory>
<theory name="Foo__double_tests__transitive" proved="true">
</theory>
<theory name="Foo__double_tests__negation_1" proved="true">
</theory>
<theory name="Foo__double_tests__identity_1" proved="true">
</theory>
<theory name="Foo__double_tests__identity_2" proved="true">
</theory>
<theory name="Foo__double_tests__interesting_inverse_1" proved="true">
</theory>
<theory name="Foo__double_tests__interesting_inverse_2" proved="true">
</theory>
<theory name="Foo__double_tests__unary_ops" proved="true">
</theory>
<theory name="Foo__double_tests__test_min" proved="true">
</theory>
<theory name="Foo__double_tests__test_max" proved="true">
</theory>
<theory name="Foo__double_tests__test_floor_1" proved="true">
</theory>
<theory name="Foo__double_tests__test_floor_2" proved="true">
</theory>
<theory name="Foo__double_tests__test_floor_3" proved="true">
</theory>
<theory name="Foo__double_tests__test_floor_4" proved="true">
</theory>
<theory name="Foo__double_tests__test_floor_5" proved="true">
</theory>
<theory name="Foo__double_tests__test_floor_6" proved="true">
</theory>
<theory name="Foo__double_tests__test_round_1" proved="true">
</theory>
<theory name="Foo__double_tests__test_round_2" proved="true">
</theory>
<theory name="Foo__double_tests__test_record_1" proved="true">
</theory>
<theory name="Foo__double_tests__test_array_1" proved="true">
</theory>
<theory name="Foo__double_tests__test_truncation_1" proved="true">
</theory>
<theory name="Foo__float_tests__ft___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__test_record_1__rec___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__test_array_1__Tindex_tB___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__test_array_1__index_t___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__test_array_1__TarrB___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__test_array_1__arr___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__test_array_1__T54s___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__test_array_1__T55s___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__ft___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__test_record_1__rec___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__test_array_1__Tindex_tB___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__test_array_1__index_t___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__test_array_1__TarrB___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__test_array_1__arr___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__test_array_1__T110s___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__test_array_1__T111s___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__test_array_1__a__aggregate_def" proved="true">
</theory>
<theory name="Foo__double_tests__test_array_1__a__aggregate_def" proved="true">
</theory>
<theory name="Foo__float_tests__biggest_representable_int___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__nextup_one___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__biggest_representable_int___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__nextup_one___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__magic___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__equality_matters___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__a_minimum_of_care_is_needed___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__add_monotonic___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__add_strictly_monotonic___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__smooth___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__negate_wrong___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__underflow_1___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__inverse_reciprocal___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__underflow_2___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__underflow_3___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__sqrt_comedy_1___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__bad_optimisation_1___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__inverse_addition___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__substract_identity_1___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__substract_identity_2___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__substract_identity_3___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__underflow_4___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__not_so_associative___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__i_like_to_commute_to_work___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__distributed_fun___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__equality___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__introduce_nan_1___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__introduce_nan_2___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__introduce_nan_3___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__transitive___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__exhaustive___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__negation_1___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__identity_1___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__identity_2___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__interesting_inverse_1___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__interesting_inverse_2___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__unary_ops___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__test_min___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__test_max___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__test_floor_1___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__test_floor_2___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__test_floor_3___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__test_floor_4___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__test_floor_5___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__test_floor_6___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__test_round_1___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__test_round_2___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__test_record_1___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__test_array_1___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__test_truncation_1___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__magic___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__equality_matters___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__a_minimum_of_care_is_needed___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__add_monotonic___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__add_strictly_monotonic___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__smooth___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__negate_wrong___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__underflow_1___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__inverse_reciprocal___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__underflow_2___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__underflow_3___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__sqrt_comedy_1___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__bad_optimisation_1___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__inverse_addition___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__substract_identity_1___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__substract_identity_2___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__substract_identity_3___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__underflow_4___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__not_so_associative___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__i_like_to_commute_to_work___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__distributed_fun___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__equality___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__introduce_nan_1___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__introduce_nan_2___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__introduce_nan_3___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__transitive___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__exhaustive___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__negation_1___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__identity_1___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__identity_2___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__interesting_inverse_1___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__interesting_inverse_2___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__unary_ops___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__test_min___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__test_max___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__test_floor_1___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__test_floor_2___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__test_floor_3___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__test_floor_4___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__test_floor_5___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__test_floor_6___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__test_round_1___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__test_round_2___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__test_record_1___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__test_array_1___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__test_truncation_1___axiom" proved="true">
</theory>
<theory name="Foo__package_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__package_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__magic__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__equality_matters__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365002"/></proof>
  <proof prover="2"><result status="invalid" steps="2243"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__a_minimum_of_care_is_needed__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365015"/></proof>
  <proof prover="2"><result status="invalid" steps="230550"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__add_monotonic__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="482805"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="637346"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__add_strictly_monotonic__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="482805"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="451807"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__smooth__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="unreachable point" proved="true">
  <proof prover="2"><result status="valid" steps="1499"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__negate_wrong__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="870"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="24583"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__underflow_1__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="249"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450074"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="postcondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365012"/></proof>
  <proof prover="2"><result status="unknown" steps="8450074"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__inverse_reciprocal__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="655"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="1701659"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="2322"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450066"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450074"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="postcondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450074"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__underflow_2__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="1025794"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="postcondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="1036685"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__underflow_3__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="1758859"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="postcondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="1044494"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__sqrt_comedy_1__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="823744"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="1857838"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="postcondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="1729385"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__bad_optimisation_1__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="96"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450074"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450082"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="172"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365012"/></proof>
  <proof prover="2"><result status="unknown" steps="8450094"/></proof>
  </goal>
  <goal name="WP_parameter def.5" expl="postcondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450086"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__inverse_addition__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365015"/></proof>
  <proof prover="2"><result status="invalid" steps="18428"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="142"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="19386"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__substract_identity_1__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="490049"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="1067055"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="491685"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__substract_identity_2__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="490049"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365014"/></proof>
  <proof prover="2"><result status="invalid" steps="1451908"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365015"/></proof>
  <proof prover="2"><result status="invalid" steps="2379460"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__substract_identity_3__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365014"/></proof>
  <proof prover="2"><result status="invalid" steps="484168"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="793847"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365014"/></proof>
  <proof prover="2"><result status="invalid" steps="966511"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__underflow_4__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="162"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365002"/></proof>
  <proof prover="2"><result status="unknown" steps="8450066"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365002"/></proof>
  <proof prover="2"><result status="unknown" steps="8450058"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__not_so_associative__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="466365"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="722662"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="1221673"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365014"/></proof>
  <proof prover="2"><result status="invalid" steps="4263450"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="1984130"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__i_like_to_commute_to_work__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365015"/></proof>
  <proof prover="2"><result status="invalid" steps="475978"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="2582671"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365016"/></proof>
  <proof prover="2"><result status="unknown" steps="8450066"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__distributed_fun__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="2105966"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="3476127"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450098"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365012"/></proof>
  <proof prover="2"><result status="invalid" steps="3035355"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365014"/></proof>
  <proof prover="2"><result status="unknown" steps="8450114"/></proof>
  </goal>
  <goal name="WP_parameter def.5" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450074"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__equality__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="88"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__introduce_nan_1__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="981"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365015"/></proof>
  <proof prover="2"><result status="invalid" steps="328888"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__introduce_nan_2__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="780"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="349288"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="309751"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="164"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365015"/></proof>
  <proof prover="2"><result status="invalid" steps="338372"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__introduce_nan_3__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365002"/></proof>
  <proof prover="2"><result status="invalid" steps="1088"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="326679"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="317484"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" steps="315"/></proof>
  <proof prover="2"><result status="unknown" steps="8450082"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__transitive__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="274596"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__exhaustive__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="418"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__negation_1__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="270"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__identity_1__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="1063"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="12530"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__identity_2__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="80"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="335"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450066"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" steps="1260"/></proof>
  <proof prover="1"><result status="unknown" steps="365002"/></proof>
  <proof prover="2"><result status="unknown" steps="8450058"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__interesting_inverse_1__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="1015"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365017"/></proof>
  <proof prover="2"><result status="unknown" steps="8450090"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450090"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365015"/></proof>
  <proof prover="2"><result status="unknown" steps="8450098"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450098"/></proof>
  </goal>
  <goal name="WP_parameter def.5" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365015"/></proof>
  <proof prover="2"><result status="unknown" steps="8450106"/></proof>
  </goal>
  <goal name="WP_parameter def.6" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365017"/></proof>
  <proof prover="2"><result status="unknown" steps="8450106"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__interesting_inverse_2__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="1015"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365017"/></proof>
  <proof prover="2"><result status="unknown" steps="8450090"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450090"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365015"/></proof>
  <proof prover="2"><result status="unknown" steps="8450098"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450098"/></proof>
  </goal>
  <goal name="WP_parameter def.5" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365015"/></proof>
  <proof prover="2"><result status="unknown" steps="8450106"/></proof>
  </goal>
  <goal name="WP_parameter def.6" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365014"/></proof>
  <proof prover="2"><result status="unknown" steps="8450106"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__unary_ops__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="92"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__test_min__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="212171"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="228306"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="84857"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__test_max__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="257694"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="218533"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="86668"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__test_floor_1__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="434291"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__test_floor_2__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="57806"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="2255852"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__test_floor_3__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="50600"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="1688300"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__test_floor_4__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="53438"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="1686346"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__test_floor_5__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="1975756"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__test_floor_6__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="2592"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="4298"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="2619"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="4382"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="2650"/></proof>
  </goal>
  <goal name="WP_parameter def.5" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="4356"/></proof>
  </goal>
  <goal name="WP_parameter def.6" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="10541"/></proof>
  </goal>
  <goal name="WP_parameter def.7" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="30197"/></proof>
  </goal>
  <goal name="WP_parameter def.8" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="2691"/></proof>
  </goal>
  <goal name="WP_parameter def.9" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="8181"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__test_round_1__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="check" proved="true">
  <proof prover="2"><result status="valid" steps="5802"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="check">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365014"/></proof>
  <proof prover="2"><result status="invalid" steps="3293"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="1343924"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="108908"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="154"/></proof>
  </goal>
  <goal name="WP_parameter def.5" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="143408"/></proof>
  </goal>
  <goal name="WP_parameter def.6" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="168"/></proof>
  </goal>
  <goal name="WP_parameter def.7" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="141257"/></proof>
  </goal>
  <goal name="WP_parameter def.8" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="178"/></proof>
  </goal>
  <goal name="WP_parameter def.9" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="66954"/></proof>
  </goal>
  <goal name="WP_parameter def.10" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="192"/></proof>
  </goal>
  <goal name="WP_parameter def.11" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="6796"/></proof>
  </goal>
  <goal name="WP_parameter def.12" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="200"/></proof>
  </goal>
  <goal name="WP_parameter def.13" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="63189"/></proof>
  </goal>
  <goal name="WP_parameter def.14" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="208"/></proof>
  </goal>
  <goal name="WP_parameter def.15" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="66976"/></proof>
  </goal>
  <goal name="WP_parameter def.16" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="216"/></proof>
  </goal>
  <goal name="WP_parameter def.17" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="75970"/></proof>
  </goal>
  <goal name="WP_parameter def.18" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="222"/></proof>
  </goal>
  <goal name="WP_parameter def.19" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="128454"/></proof>
  </goal>
  <goal name="WP_parameter def.20" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="230"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__test_round_2__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="74867"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="108842"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="2460292"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="1614882"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__test_record_1__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="5651"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__test_array_1__a__aggregate_def___axiom" proved="true">
</theory>
<theory name="Foo__float_tests__test_array_1__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="6374"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__float_tests__test_truncation_1__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="check" proved="true">
  <proof prover="2"><result status="valid" steps="5534"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="check">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="3528"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="12376"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="112"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="12293"/></proof>
  </goal>
  <goal name="WP_parameter def.5" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="128"/></proof>
  </goal>
  <goal name="WP_parameter def.6" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="12558"/></proof>
  </goal>
  <goal name="WP_parameter def.7" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="138"/></proof>
  </goal>
  <goal name="WP_parameter def.8" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="12302"/></proof>
  </goal>
  <goal name="WP_parameter def.9" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="144"/></proof>
  </goal>
  <goal name="WP_parameter def.10" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="15339"/></proof>
  </goal>
  <goal name="WP_parameter def.11" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="152"/></proof>
  </goal>
  <goal name="WP_parameter def.12" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="12390"/></proof>
  </goal>
  <goal name="WP_parameter def.13" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="160"/></proof>
  </goal>
  <goal name="WP_parameter def.14" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="12784"/></proof>
  </goal>
  <goal name="WP_parameter def.15" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="168"/></proof>
  </goal>
  <goal name="WP_parameter def.16" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="12591"/></proof>
  </goal>
  <goal name="WP_parameter def.17" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="174"/></proof>
  </goal>
  <goal name="WP_parameter def.18" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="12784"/></proof>
  </goal>
  <goal name="WP_parameter def.19" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="180"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__package_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__magic__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__equality_matters__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365002"/></proof>
  <proof prover="2"><result status="invalid" steps="2307"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__a_minimum_of_care_is_needed__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365015"/></proof>
  <proof prover="2"><result status="invalid" steps="164103"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__add_monotonic__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="1536641"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="2096780"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__add_strictly_monotonic__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="1536641"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="1158244"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__smooth__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="unreachable point" proved="true">
  <proof prover="2"><result status="valid" steps="1793"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__negate_wrong__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="1389"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="175822"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__underflow_1__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="249"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450074"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="postcondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365012"/></proof>
  <proof prover="2"><result status="unknown" steps="8450074"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__inverse_reciprocal__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="742"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="2393083"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="3368129"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450074"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="postcondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450074"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__underflow_2__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450074"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="postcondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="282707"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__underflow_3__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450074"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="postcondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="6903920"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__sqrt_comedy_1__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="5617176"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450090"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="postcondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450074"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__bad_optimisation_1__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="96"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450074"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450082"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="172"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365012"/></proof>
  <proof prover="2"><result status="unknown" steps="8450094"/></proof>
  </goal>
  <goal name="WP_parameter def.5" expl="postcondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450086"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__inverse_addition__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365015"/></proof>
  <proof prover="2"><result status="invalid" steps="37973"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="142"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="37451"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__substract_identity_1__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="1904430"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="3194269"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="1555003"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__substract_identity_2__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="1904430"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365014"/></proof>
  <proof prover="2"><result status="invalid" steps="3555237"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365015"/></proof>
  <proof prover="2"><result status="invalid" steps="7757953"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__substract_identity_3__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365014"/></proof>
  <proof prover="2"><result status="invalid" steps="1936039"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="2426397"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365014"/></proof>
  <proof prover="2"><result status="invalid" steps="2840655"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__underflow_4__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="162"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365002"/></proof>
  <proof prover="2"><result status="unknown" steps="8450066"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365002"/></proof>
  <proof prover="2"><result status="unknown" steps="8450058"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__not_so_associative__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="1616867"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="2223274"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="4123023"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365014"/></proof>
  <proof prover="2"><result status="unknown" steps="8450106"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450074"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__i_like_to_commute_to_work__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365015"/></proof>
  <proof prover="2"><result status="invalid" steps="1602540"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" steps="135"/></proof>
  <proof prover="2"><result status="unknown" steps="8450082"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365016"/></proof>
  <proof prover="2"><result status="unknown" steps="8450066"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__distributed_fun__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="5883244"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450090"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450098"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365012"/></proof>
  <proof prover="2"><result status="unknown" steps="8450106"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365014"/></proof>
  <proof prover="2"><result status="unknown" steps="8450114"/></proof>
  </goal>
  <goal name="WP_parameter def.5" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450074"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__equality__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="88"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__introduce_nan_1__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="1213"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365015"/></proof>
  <proof prover="2"><result status="invalid" steps="2100082"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__introduce_nan_2__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="880"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="2264887"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="1945206"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="164"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365015"/></proof>
  <proof prover="2"><result status="invalid" steps="2081732"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__introduce_nan_3__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365002"/></proof>
  <proof prover="2"><result status="invalid" steps="1469"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="2041058"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="2087474"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" steps="315"/></proof>
  <proof prover="2"><result status="unknown" steps="8450082"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__transitive__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="1158376"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__exhaustive__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="430"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__negation_1__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="270"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__identity_1__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="1710"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="82136"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__identity_2__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="80"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" steps="335"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450066"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" steps="1260"/></proof>
  <proof prover="1"><result status="unknown" steps="365002"/></proof>
  <proof prover="2"><result status="unknown" steps="8450058"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__interesting_inverse_1__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="1225"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365017"/></proof>
  <proof prover="2"><result status="unknown" steps="8450090"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450090"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365015"/></proof>
  <proof prover="2"><result status="unknown" steps="8450098"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450098"/></proof>
  </goal>
  <goal name="WP_parameter def.5" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365015"/></proof>
  <proof prover="2"><result status="unknown" steps="8450106"/></proof>
  </goal>
  <goal name="WP_parameter def.6" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365017"/></proof>
  <proof prover="2"><result status="unknown" steps="8450106"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__interesting_inverse_2__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="1225"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365017"/></proof>
  <proof prover="2"><result status="unknown" steps="8450090"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450090"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365015"/></proof>
  <proof prover="2"><result status="unknown" steps="8450098"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450098"/></proof>
  </goal>
  <goal name="WP_parameter def.5" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365015"/></proof>
  <proof prover="2"><result status="unknown" steps="8450106"/></proof>
  </goal>
  <goal name="WP_parameter def.6" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365014"/></proof>
  <proof prover="2"><result status="unknown" steps="8450106"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__unary_ops__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="92"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__test_min__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="632606"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="685924"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="238114"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__test_max__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="647432"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="763881"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="234855"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__test_floor_1__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="2134557"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__test_floor_2__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="101553"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365012"/></proof>
  <proof prover="2"><result status="unknown" steps="8450058"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__test_floor_3__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="100452"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="7625883"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__test_floor_4__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="107086"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="5497305"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__test_floor_5__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" steps="129"/></proof>
  <proof prover="2"><result status="unknown" steps="8450050"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__test_floor_6__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="4512"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="7752"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="4539"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="7836"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="4570"/></proof>
  </goal>
  <goal name="WP_parameter def.5" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="7810"/></proof>
  </goal>
  <goal name="WP_parameter def.6" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="20771"/></proof>
  </goal>
  <goal name="WP_parameter def.7" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="64369"/></proof>
  </goal>
  <goal name="WP_parameter def.8" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="4611"/></proof>
  </goal>
  <goal name="WP_parameter def.9" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="15191"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__test_round_1__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="check" proved="true">
  <proof prover="2"><result status="valid" steps="6963"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="check">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365014"/></proof>
  <proof prover="2"><result status="invalid" steps="3964"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" steps="52815"/></proof>
  <proof prover="2"><result status="unknown" steps="8450068"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="1157884"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="154"/></proof>
  </goal>
  <goal name="WP_parameter def.5" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="unknown" steps="8450068"/></proof>
  </goal>
  <goal name="WP_parameter def.6" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="168"/></proof>
  </goal>
  <goal name="WP_parameter def.7" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="1500219"/></proof>
  </goal>
  <goal name="WP_parameter def.8" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="178"/></proof>
  </goal>
  <goal name="WP_parameter def.9" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="1628910"/></proof>
  </goal>
  <goal name="WP_parameter def.10" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="192"/></proof>
  </goal>
  <goal name="WP_parameter def.11" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="27727"/></proof>
  </goal>
  <goal name="WP_parameter def.12" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="200"/></proof>
  </goal>
  <goal name="WP_parameter def.13" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="416879"/></proof>
  </goal>
  <goal name="WP_parameter def.14" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="208"/></proof>
  </goal>
  <goal name="WP_parameter def.15" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" steps="128181"/></proof>
  <proof prover="2"><result status="unknown" steps="8450068"/></proof>
  </goal>
  <goal name="WP_parameter def.16" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="216"/></proof>
  </goal>
  <goal name="WP_parameter def.17" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="722219"/></proof>
  </goal>
  <goal name="WP_parameter def.18" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="222"/></proof>
  </goal>
  <goal name="WP_parameter def.19" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="1138002"/></proof>
  </goal>
  <goal name="WP_parameter def.20" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="230"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__test_round_2__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="146289"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" steps="198051"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="postcondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365015"/></proof>
  <proof prover="2"><result status="unknown" steps="8450068"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="postcondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365012"/></proof>
  <proof prover="2"><result status="unknown" steps="8450068"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__test_record_1__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="6035"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__test_array_1__a__aggregate_def___axiom" proved="true">
</theory>
<theory name="Foo__double_tests__test_array_1__subprogram_def" proved="true">
 <goal name="WP_parameter def" expl="VC for def" proved="true">
 <transf name="split_goal_wp_conj" proved="true" >
  <goal name="WP_parameter def.0" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" steps="6598"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__double_tests__test_truncation_1__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="check" proved="true">
  <proof prover="2"><result status="valid" steps="6777"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="check">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="4064"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="23436"/></proof>
  </goal>
  <goal name="WP_parameter def.3" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="112"/></proof>
  </goal>
  <goal name="WP_parameter def.4" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="23026"/></proof>
  </goal>
  <goal name="WP_parameter def.5" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="128"/></proof>
  </goal>
  <goal name="WP_parameter def.6" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="23644"/></proof>
  </goal>
  <goal name="WP_parameter def.7" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="138"/></proof>
  </goal>
  <goal name="WP_parameter def.8" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="23025"/></proof>
  </goal>
  <goal name="WP_parameter def.9" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="144"/></proof>
  </goal>
  <goal name="WP_parameter def.10" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="30634"/></proof>
  </goal>
  <goal name="WP_parameter def.11" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="152"/></proof>
  </goal>
  <goal name="WP_parameter def.12" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="23113"/></proof>
  </goal>
  <goal name="WP_parameter def.13" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="160"/></proof>
  </goal>
  <goal name="WP_parameter def.14" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="23870"/></proof>
  </goal>
  <goal name="WP_parameter def.15" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="168"/></proof>
  </goal>
  <goal name="WP_parameter def.16" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="23324"/></proof>
  </goal>
  <goal name="WP_parameter def.17" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="174"/></proof>
  </goal>
  <goal name="WP_parameter def.18" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="23844"/></proof>
  </goal>
  <goal name="WP_parameter def.19" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="180"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Foo__floats_and_double__subprogram_def">
 <goal name="WP_parameter def" expl="VC for def">
 <transf name="split_goal_wp_conj" >
  <goal name="WP_parameter def.0" expl="precondition">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="38938"/></proof>
  </goal>
  <goal name="WP_parameter def.1" expl="assertion">
  <proof prover="0"><result status="failure"/></proof>
  <proof prover="1"><result status="unknown" steps="365013"/></proof>
  <proof prover="2"><result status="invalid" steps="58494"/></proof>
  </goal>
  <goal name="WP_parameter def.2" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" steps="1336186"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
