uninitialized.adb:6:26: "B" is not initialized
   compilation of uninitialized.adb failed


gnatprove: error during analysis of data and information flow
// fa_pkg_body_uninitialized_cfg
digraph G {
   graph [splines=True];
    1 [label="start\n<VId: 1>",shape="plaintext"];
    2 [label="helper end\n<VId: 2>",shape="plaintext"];
    3 [label="end\n<VId: 3>",shape="plaintext"];
    5 [label="null\nVU: {null}\n<VId: 5>",shape="plaintext",fontcolor="chartreuse"];
    7 [label="a'initial\nVD: {A}\n<VId: 7>",shape="plaintext",fontcolor="red"];
    8 [label="a'final\nVU: {A}\n<VId: 8>",shape="plaintext"];
    12 [label="null;\n<VId: 12>"];

    1 ->  12 [arrowType="normal"];
    2 ->  3 [arrowType="normal"];
    3 ->  8 [arrowType="normal"];
    7 ->  1 [arrowType="normal"];
    12 ->  2 [arrowType="normal"];
}

// fa_pkg_body_uninitialized_pdg
digraph G {
   graph [splines=True];
    1 [label="start\n<VId: 1>",shape="plaintext"];
    2 [label="helper end\n<VId: 2>",shape="plaintext"];
    5 [label="null\nVU: {null}\n<VId: 5>",shape="plaintext",fontcolor="chartreuse"];
    7 [label="a'initial\nVD: {A}\n<VId: 7>",shape="plaintext",fontcolor="red"];
    8 [label="a'final\nVU: {A}\n<VId: 8>",shape="plaintext"];
    12 [label="null;\n<VId: 12>"];

    1 ->  2 [arrowType="normal"];
    1 ->  12 [arrowType="normal"];
    7 ->  8 [arrowType="normal",color="red"];
}

// fa_pkg_body_vehicle_cfg
digraph G {
   graph [splines=True];
    1 [label="start\n<VId: 1>",shape="plaintext"];
    2 [label="helper end\n<VId: 2>",shape="plaintext"];
    3 [label="end\n<VId: 3>",shape="plaintext"];
    5 [label="null\nVU: {null}\n<VId: 5>",shape="plaintext",fontcolor="chartreuse"];
    7 [label="type state_type is (still, forward, backward);\n<VId: 7>"];
    8 [label="type input is (no_input, nothing, accelerate, brake);\n<VId: 8>"];
    9 [label="subtype valid_input is input range nothing .. brake;\n<VId: 9>"];
    10 [label="type speed_type is range -100 .. 100;\n<VId: 10>"];
    11 [label="speed'initial\nVD: {Speed}\n<VId: 11>",shape="plaintext",fontcolor="red"];
    12 [label="speed'final\nVU: {Speed}\n<VId: 12>",shape="plaintext"];
    14 [label="state'initial\nVD: {State}\n<VId: 14>",shape="plaintext",fontcolor="red"];
    15 [label="state'final\nVU: {State}\n<VId: 15>",shape="plaintext"];
    22 [label="null;\n<VId: 22>"];

    1 ->  7 [arrowType="normal"];
    2 ->  3 [arrowType="normal"];
    3 ->  12 [arrowType="normal"];
    3 ->  15 [arrowType="normal"];
    7 ->  8 [arrowType="normal"];
    8 ->  9 [arrowType="normal"];
    9 ->  10 [arrowType="normal"];
    10 ->  22 [arrowType="normal"];
    11 ->  1 [arrowType="normal"];
    14 ->  1 [arrowType="normal"];
    22 ->  2 [arrowType="normal"];
}

// fa_pkg_body_vehicle_pdg
digraph G {
   graph [splines=True];
    1 [label="start\n<VId: 1>",shape="plaintext"];
    2 [label="helper end\n<VId: 2>",shape="plaintext"];
    5 [label="null\nVU: {null}\n<VId: 5>",shape="plaintext",fontcolor="chartreuse"];
    7 [label="type state_type is (still, forward, backward);\n<VId: 7>"];
    8 [label="type input is (no_input, nothing, accelerate, brake);\n<VId: 8>"];
    9 [label="subtype valid_input is input range nothing .. brake;\n<VId: 9>"];
    10 [label="type speed_type is range -100 .. 100;\n<VId: 10>"];
    11 [label="speed'initial\nVD: {Speed}\n<VId: 11>",shape="plaintext",fontcolor="red"];
    12 [label="speed'final\nVU: {Speed}\n<VId: 12>",shape="plaintext"];
    14 [label="state'initial\nVD: {State}\n<VId: 14>",shape="plaintext",fontcolor="red"];
    15 [label="state'final\nVU: {State}\n<VId: 15>",shape="plaintext"];
    22 [label="null;\n<VId: 22>"];

    1 ->  2 [arrowType="normal"];
    1 ->  7 [arrowType="normal"];
    1 ->  8 [arrowType="normal"];
    1 ->  9 [arrowType="normal"];
    1 ->  10 [arrowType="normal"];
    1 ->  22 [arrowType="normal"];
    11 ->  12 [arrowType="normal",color="red"];
    14 ->  15 [arrowType="normal",color="red"];
}

// fa_subprogram_compare_cfg
digraph G {
   graph [splines=True];
    1 [label="start\n<VId: 1>",shape="plaintext"];
    2 [label="helper end\n<VId: 2>",shape="plaintext"];
    3 [label="end\n<VId: 3>",shape="plaintext"];
    5 [label="null\nVU: {null}\n<VId: 5>",shape="plaintext",fontcolor="chartreuse"];
    6 [label="a'initial\n(global)\nVD: {A}\n<VId: 6>",shape="plaintext",fontcolor="red"];
    7 [label="a'final\n(global)\nVU: {A}\n<VId: 7>",shape="plaintext",fontcolor="blue"];
    10 [label="b'initial\nVD: {B}\n<VId: 10>",shape="plaintext",fontcolor="red"];
    11 [label="b'final\nVU: {B}\n<VId: 11>",shape="plaintext"];
    13 [label="a := 100;\nVD: {A}\n<VId: 13>"];
    14 [label="pragma check (assert, a > b);\nVU: {B, A}\nPROOF\n<VId: 14>"];

    1 ->  13 [arrowType="normal"];
    2 ->  3 [arrowType="normal"];
    3 ->  7 [arrowType="normal"];
    3 ->  11 [arrowType="normal"];
    6 ->  1 [arrowType="normal"];
    10 ->  1 [arrowType="normal"];
    13 ->  14 [arrowType="normal"];
    14 ->  2 [arrowType="normal"];
}

// fa_subprogram_compare_pdg
digraph G {
   graph [splines=True];
    1 [label="start\n<VId: 1>",shape="plaintext"];
    2 [label="helper end\n<VId: 2>",shape="plaintext"];
    5 [label="null\nVU: {null}\n<VId: 5>",shape="plaintext",fontcolor="chartreuse"];
    6 [label="a'initial\n(global)\nVD: {A}\n<VId: 6>",shape="plaintext",fontcolor="red"];
    7 [label="a'final\n(global)\nVU: {A}\n<VId: 7>",shape="plaintext",fontcolor="blue"];
    10 [label="b'initial\nVD: {B}\n<VId: 10>",shape="plaintext",fontcolor="red"];
    11 [label="b'final\nVU: {B}\n<VId: 11>",shape="plaintext"];
    13 [label="a := 100;\nVD: {A}\n<VId: 13>"];
    14 [label="pragma check (assert, a > b);\nVU: {B, A}\nPROOF\n<VId: 14>"];

    1 ->  2 [arrowType="normal"];
    1 ->  13 [arrowType="normal"];
    1 ->  14 [arrowType="normal"];
    10 ->  11 [arrowType="normal",color="red"];
    10 ->  14 [arrowType="normal",color="red"];
    13 ->  7 [arrowType="normal",color="red"];
    13 ->  14 [arrowType="normal",color="red"];
}

// fa_subprogram_halt_cfg
digraph G {
   graph [splines=True];
    1 [label="start\n<VId: 1>",shape="plaintext"];
    2 [label="helper end\n<VId: 2>",shape="plaintext"];
    3 [label="end\n<VId: 3>",shape="plaintext"];
    5 [label="null\nVU: {null}\n<VId: 5>",shape="plaintext",fontcolor="chartreuse"];
    6 [label="state'initial\n(global)\nVD: {State}\n<VId: 6>",shape="plaintext"];
    7 [label="state'final\n(global)\nVU: {State}\n<VId: 7>",shape="plaintext",fontcolor="blue"];
    8 [label="speed'initial\n(global)\nVD: {Speed}\n<VId: 8>",shape="plaintext"];
    9 [label="speed'final\n(global)\nVU: {Speed}\n<VId: 9>",shape="plaintext",fontcolor="blue"];
    10 [label="precondition speed_is_valid\nVU: {State, Speed}\nSC: {Speed_Is_Valid}\nPROOF\n<VId: 10>",shape="plaintext"];
    11 [label="postcondition state = still and speed_is_valid\nVU: {State, Speed}\nSC: {Speed_Is_Valid}\nPROOF\n<VId: 11>",shape="plaintext"];
    13 [label="pragma check (loop_invariant, speed_is_valid);\nVU: {State, Speed}\nSC: {Speed_Is_Valid}\nPROOF\n<VId: 13>"];
    14 [label="if speed > 0\nLoops:&nbsp;L_1\nVU: {Speed}\n<VId: 14>",shape="diamond"];
    15 [label="call state_update\nLoops:&nbsp;L_1\nSC: {State_Update}\n<VId: 15>",shape="box"];
    16 [label="i'in&nbsp;:=&nbsp;brake\n<VId: 16>",shape="plaintext"];
    17 [label="global&nbsp;State'in\nVU: {State}\n<VId: 17>",shape="plaintext"];
    18 [label="global&nbsp;Speed'in\nVU: {Speed}\n<VId: 18>",shape="plaintext"];
    19 [label="global&nbsp;State'out\nVD: {State}\n<VId: 19>",shape="plaintext"];
    20 [label="global&nbsp;Speed'out\nVD: {Speed}\n<VId: 20>",shape="plaintext"];
    21 [label="call state_update\nLoops:&nbsp;L_1\nSC: {State_Update}\n<VId: 21>",shape="box"];
    22 [label="i'in&nbsp;:=&nbsp;accelerate\n<VId: 22>",shape="plaintext"];
    23 [label="global&nbsp;State'in\nVU: {State}\n<VId: 23>",shape="plaintext"];
    24 [label="global&nbsp;Speed'in\nVU: {Speed}\n<VId: 24>",shape="plaintext"];
    25 [label="global&nbsp;State'out\nVD: {State}\n<VId: 25>",shape="plaintext"];
    26 [label="global&nbsp;Speed'out\nVD: {Speed}\n<VId: 26>",shape="plaintext"];
    27 [label="while state /= still\nLoops:&nbsp;L_1\nVU: {State}\n<VId: 27>",shape="diamond"];

    1 ->  10 [arrowType="normal"];
    2 ->  11 [arrowType="normal"];
    3 ->  7 [arrowType="normal"];
    3 ->  9 [arrowType="normal"];
    6 ->  1 [arrowType="normal"];
    8 ->  1 [arrowType="normal"];
    10 ->  27 [arrowType="normal"];
    11 ->  3 [arrowType="normal"];
    13 ->  14 [arrowType="normal"];
    14 ->  15 [arrowType="normal"];
    14 ->  21 [arrowType="normal"];
    15 ->  16 [arrowType="normal"];
    16 ->  17 [arrowType="normal"];
    17 ->  18 [arrowType="normal"];
    18 ->  19 [arrowType="normal"];
    19 ->  20 [arrowType="normal"];
    20 ->  27 [arrowType="normal"];
    21 ->  22 [arrowType="normal"];
    22 ->  23 [arrowType="normal"];
    23 ->  24 [arrowType="normal"];
    24 ->  25 [arrowType="normal"];
    25 ->  26 [arrowType="normal"];
    26 ->  27 [arrowType="normal"];
    27 ->  2 [arrowType="normal"];
    27 ->  13 [arrowType="normal"];
}

// fa_subprogram_halt_pdg
digraph G {
   graph [splines=True];
    1 [label="start\n<VId: 1>",shape="plaintext"];
    2 [label="helper end\n<VId: 2>",shape="plaintext"];
    5 [label="null\nVU: {null}\n<VId: 5>",shape="plaintext",fontcolor="chartreuse"];
    6 [label="state'initial\n(global)\nVD: {State}\n<VId: 6>",shape="plaintext"];
    7 [label="state'final\n(global)\nVU: {State}\n<VId: 7>",shape="plaintext",fontcolor="blue"];
    8 [label="speed'initial\n(global)\nVD: {Speed}\n<VId: 8>",shape="plaintext"];
    9 [label="speed'final\n(global)\nVU: {Speed}\n<VId: 9>",shape="plaintext",fontcolor="blue"];
    10 [label="precondition speed_is_valid\nVU: {State, Speed}\nSC: {Speed_Is_Valid}\nPROOF\n<VId: 10>",shape="plaintext"];
    11 [label="postcondition state = still and speed_is_valid\nVU: {State, Speed}\nSC: {Speed_Is_Valid}\nPROOF\n<VId: 11>",shape="plaintext"];
    13 [label="pragma check (loop_invariant, speed_is_valid);\nVU: {State, Speed}\nSC: {Speed_Is_Valid}\nPROOF\n<VId: 13>"];
    14 [label="if speed > 0\nLoops:&nbsp;L_1\nVU: {Speed}\n<VId: 14>",shape="diamond"];
    15 [label="call state_update\nLoops:&nbsp;L_1\nSC: {State_Update}\n<VId: 15>",shape="box"];
    16 [label="i'in&nbsp;:=&nbsp;brake\n<VId: 16>",shape="plaintext"];
    17 [label="global&nbsp;State'in\nVU: {State}\n<VId: 17>",shape="plaintext"];
    18 [label="global&nbsp;Speed'in\nVU: {Speed}\n<VId: 18>",shape="plaintext"];
    19 [label="global&nbsp;State'out\nVD: {State}\n<VId: 19>",shape="plaintext"];
    20 [label="global&nbsp;Speed'out\nVD: {Speed}\n<VId: 20>",shape="plaintext"];
    21 [label="call state_update\nLoops:&nbsp;L_1\nSC: {State_Update}\n<VId: 21>",shape="box"];
    22 [label="i'in&nbsp;:=&nbsp;accelerate\n<VId: 22>",shape="plaintext"];
    23 [label="global&nbsp;State'in\nVU: {State}\n<VId: 23>",shape="plaintext"];
    24 [label="global&nbsp;Speed'in\nVU: {Speed}\n<VId: 24>",shape="plaintext"];
    25 [label="global&nbsp;State'out\nVD: {State}\n<VId: 25>",shape="plaintext"];
    26 [label="global&nbsp;Speed'out\nVD: {Speed}\n<VId: 26>",shape="plaintext"];
    27 [label="while state /= still\nLoops:&nbsp;L_1\nVU: {State}\n<VId: 27>",shape="diamond"];

    1 ->  2 [arrowType="normal"];
    1 ->  10 [arrowType="normal"];
    1 ->  11 [arrowType="normal"];
    1 ->  27 [arrowType="normal"];
    6 ->  7 [arrowType="normal",color="red"];
    6 ->  10 [arrowType="normal",color="red"];
    6 ->  11 [arrowType="normal",color="red"];
    6 ->  13 [arrowType="normal",color="red"];
    6 ->  17 [arrowType="normal",color="red"];
    6 ->  23 [arrowType="normal",color="red"];
    6 ->  27 [arrowType="normal",color="red"];
    8 ->  9 [arrowType="normal",color="red"];
    8 ->  10 [arrowType="normal",color="red"];
    8 ->  11 [arrowType="normal",color="red"];
    8 ->  13 [arrowType="normal",color="red"];
    8 ->  14 [arrowType="normal",color="red"];
    8 ->  18 [arrowType="normal",color="red"];
    8 ->  24 [arrowType="normal",color="red"];
    14 ->  15 [arrowType="normal"];
    14 ->  21 [arrowType="normal"];
    15 ->  16 [arrowType="normal"];
    15 ->  17 [arrowType="normal"];
    15 ->  18 [arrowType="normal"];
    15 ->  19 [arrowType="normal"];
    15 ->  20 [arrowType="normal"];
    16 ->  19 [arrowType="normal",color="cornflowerblue"];
    16 ->  20 [arrowType="normal",color="cornflowerblue"];
    17 ->  19 [arrowType="normal",color="cornflowerblue"];
    17 ->  20 [arrowType="normal",color="cornflowerblue"];
    18 ->  19 [arrowType="normal",color="cornflowerblue"];
    18 ->  20 [arrowType="normal",color="cornflowerblue"];
    19 ->  7 [arrowType="normal",color="red"];
    19 ->  11 [arrowType="normal",color="red"];
    19 ->  13 [arrowType="normal",color="red"];
    19 ->  17 [arrowType="normal",color="red"];
    19 ->  23 [arrowType="normal",color="red"];
    19 ->  27 [arrowType="normal",color="red"];
    20 ->  9 [arrowType="normal",color="red"];
    20 ->  11 [arrowType="normal",color="red"];
    20 ->  13 [arrowType="normal",color="red"];
    20 ->  14 [arrowType="normal",color="red"];
    20 ->  18 [arrowType="normal",color="red"];
    20 ->  24 [arrowType="normal",color="red"];
    21 ->  22 [arrowType="normal"];
    21 ->  23 [arrowType="normal"];
    21 ->  24 [arrowType="normal"];
    21 ->  25 [arrowType="normal"];
    21 ->  26 [arrowType="normal"];
    22 ->  25 [arrowType="normal",color="cornflowerblue"];
    22 ->  26 [arrowType="normal",color="cornflowerblue"];
    23 ->  25 [arrowType="normal",color="cornflowerblue"];
    23 ->  26 [arrowType="normal",color="cornflowerblue"];
    24 ->  25 [arrowType="normal",color="cornflowerblue"];
    24 ->  26 [arrowType="normal",color="cornflowerblue"];
    25 ->  7 [arrowType="normal",color="red"];
    25 ->  11 [arrowType="normal",color="red"];
    25 ->  13 [arrowType="normal",color="red"];
    25 ->  17 [arrowType="normal",color="red"];
    25 ->  23 [arrowType="normal",color="red"];
    25 ->  27 [arrowType="normal",color="red"];
    26 ->  9 [arrowType="normal",color="red"];
    26 ->  11 [arrowType="normal",color="red"];
    26 ->  13 [arrowType="normal",color="red"];
    26 ->  14 [arrowType="normal",color="red"];
    26 ->  18 [arrowType="normal",color="red"];
    26 ->  24 [arrowType="normal",color="red"];
    27 ->  13 [arrowType="normal"];
    27 ->  14 [arrowType="normal"];
    27 ->  27 [arrowType="normal"];
}

// fa_subprogram_speed_is_valid_cfg
digraph G {
   graph [splines=True];
    1 [label="start\n<VId: 1>",shape="plaintext"];
    2 [label="helper end\n<VId: 2>",shape="plaintext"];
    3 [label="end\n<VId: 3>",shape="plaintext"];
    5 [label="null\nVU: {null}\n<VId: 5>",shape="plaintext",fontcolor="chartreuse"];
    6 [label="state'initial\n(global)\nVD: {State}\n<VId: 6>",shape="plaintext"];
    7 [label="state'final\n(global)\nVU: {State}\n<VId: 7>",shape="plaintext",fontcolor="red"];
    8 [label="speed'initial\n(global)\nVD: {Speed}\n<VId: 8>",shape="plaintext"];
    9 [label="speed'final\n(global)\nVU: {Speed}\n<VId: 9>",shape="plaintext",fontcolor="red"];
    10 [label="speed_is_valid'initial\nVD: {Speed_Is_Valid}\n<VId: 10>",shape="plaintext",fontcolor="red"];
    11 [label="speed_is_valid'final\nVU: {Speed_Is_Valid}\n<VId: 11>",shape="plaintext",fontcolor="blue"];
    15 [label="return (case state is when still => speed = 0, when forward => speed >0, when backward => speed < 0);\nVU: {State, Speed}\nVD: {Speed_Is_Valid}\n<VId: 15>"];

    1 ->  15 [arrowType="normal"];
    2 ->  3 [arrowType="normal"];
    3 ->  7 [arrowType="normal"];
    3 ->  9 [arrowType="normal"];
    3 ->  11 [arrowType="normal"];
    6 ->  1 [arrowType="normal"];
    8 ->  1 [arrowType="normal"];
    10 ->  1 [arrowType="normal"];
    15 ->  2 [arrowType="normal"];
}

// fa_subprogram_speed_is_valid_pdg
digraph G {
   graph [splines=True];
    1 [label="start\n<VId: 1>",shape="plaintext"];
    2 [label="helper end\n<VId: 2>",shape="plaintext"];
    5 [label="null\nVU: {null}\n<VId: 5>",shape="plaintext",fontcolor="chartreuse"];
    6 [label="state'initial\n(global)\nVD: {State}\n<VId: 6>",shape="plaintext"];
    7 [label="state'final\n(global)\nVU: {State}\n<VId: 7>",shape="plaintext",fontcolor="red"];
    8 [label="speed'initial\n(global)\nVD: {Speed}\n<VId: 8>",shape="plaintext"];
    9 [label="speed'final\n(global)\nVU: {Speed}\n<VId: 9>",shape="plaintext",fontcolor="red"];
    10 [label="speed_is_valid'initial\nVD: {Speed_Is_Valid}\n<VId: 10>",shape="plaintext",fontcolor="red"];
    11 [label="speed_is_valid'final\nVU: {Speed_Is_Valid}\n<VId: 11>",shape="plaintext",fontcolor="blue"];
    15 [label="return (case state is when still => speed = 0, when forward => speed >0, when backward => speed < 0);\nVU: {State, Speed}\nVD: {Speed_Is_Valid}\n<VId: 15>"];

    1 ->  2 [arrowType="normal"];
    1 ->  15 [arrowType="normal"];
    6 ->  7 [arrowType="normal",color="red"];
    6 ->  15 [arrowType="normal",color="red"];
    8 ->  9 [arrowType="normal",color="red"];
    8 ->  15 [arrowType="normal",color="red"];
    15 ->  11 [arrowType="normal",color="red"];
}

// fa_subprogram_state_update_cfg
digraph G {
   graph [splines=True];
    1 [label="start\n<VId: 1>",shape="plaintext"];
    2 [label="helper end\n<VId: 2>",shape="plaintext"];
    3 [label="end\n<VId: 3>",shape="plaintext"];
    5 [label="null\nVU: {null}\n<VId: 5>",shape="plaintext",fontcolor="chartreuse"];
    6 [label="i'initial\nVD: {I}\n<VId: 6>",shape="plaintext"];
    7 [label="i'final\nVU: {I}\n<VId: 7>",shape="plaintext",fontcolor="red"];
    8 [label="state'initial\n(global)\nVD: {State}\n<VId: 8>",shape="plaintext"];
    9 [label="state'final\n(global)\nVU: {State}\n<VId: 9>",shape="plaintext",fontcolor="blue"];
    10 [label="speed'initial\n(global)\nVD: {Speed}\n<VId: 10>",shape="plaintext"];
    11 [label="speed'final\n(global)\nVU: {Speed}\n<VId: 11>",shape="plaintext",fontcolor="blue"];
    12 [label="precondition speed_is_valid\nVU: {State, Speed}\nSC: {Speed_Is_Valid}\nPROOF\n<VId: 12>",shape="plaintext"];
    13 [label="postcondition speed_is_valid\nVU: {State, Speed}\nSC: {Speed_Is_Valid}\nPROOF\n<VId: 13>",shape="plaintext"];
    15 [label="if i = accelerate\nVU: {I}\n<VId: 15>",shape="diamond"];
    16 [label="if speed < 100\nVU: {Speed}\n<VId: 16>",shape="diamond"];
    17 [label="speed := {speed + 1};\nVU: {Speed}\nVD: {Speed}\n<VId: 17>"];
    18 [label="elsif i = brake\nVU: {I}\n<VId: 18>",shape="diamond"];
    19 [label="if speed > -100\nVU: {Speed}\n<VId: 19>",shape="diamond"];
    20 [label="speed := {speed - 1};\nVU: {Speed}\nVD: {Speed}\n<VId: 20>"];
    21 [label="if speed = 0\nVU: {Speed}\n<VId: 21>",shape="diamond"];
    22 [label="state := still;\nVD: {State}\n<VId: 22>"];
    23 [label="elsif speed = 1 and then i = accelerate\nVU: {I, Speed}\n<VId: 23>",shape="diamond"];
    24 [label="state := forward;\nVD: {State}\n<VId: 24>"];
    25 [label="elsif speed = -1 and then i = accelerate\nVU: {I, Speed}\n<VId: 25>",shape="diamond"];
    26 [label="state := backward;\nVD: {State}\n<VId: 26>"];

    1 ->  12 [arrowType="normal"];
    2 ->  13 [arrowType="normal"];
    3 ->  7 [arrowType="normal"];
    3 ->  9 [arrowType="normal"];
    3 ->  11 [arrowType="normal"];
    6 ->  1 [arrowType="normal"];
    8 ->  1 [arrowType="normal"];
    10 ->  1 [arrowType="normal"];
    12 ->  15 [arrowType="normal"];
    13 ->  3 [arrowType="normal"];
    15 ->  16 [arrowType="normal"];
    15 ->  18 [arrowType="normal"];
    16 ->  17 [arrowType="normal"];
    16 ->  21 [arrowType="normal"];
    17 ->  21 [arrowType="normal"];
    18 ->  19 [arrowType="normal"];
    18 ->  21 [arrowType="normal"];
    19 ->  20 [arrowType="normal"];
    19 ->  21 [arrowType="normal"];
    20 ->  21 [arrowType="normal"];
    21 ->  22 [arrowType="normal"];
    21 ->  23 [arrowType="normal"];
    22 ->  2 [arrowType="normal"];
    23 ->  24 [arrowType="normal"];
    23 ->  25 [arrowType="normal"];
    24 ->  2 [arrowType="normal"];
    25 ->  2 [arrowType="normal"];
    25 ->  26 [arrowType="normal"];
    26 ->  2 [arrowType="normal"];
}

// fa_subprogram_state_update_pdg
digraph G {
   graph [splines=True];
    1 [label="start\n<VId: 1>",shape="plaintext"];
    2 [label="helper end\n<VId: 2>",shape="plaintext"];
    5 [label="null\nVU: {null}\n<VId: 5>",shape="plaintext",fontcolor="chartreuse"];
    6 [label="i'initial\nVD: {I}\n<VId: 6>",shape="plaintext"];
    7 [label="i'final\nVU: {I}\n<VId: 7>",shape="plaintext",fontcolor="red"];
    8 [label="state'initial\n(global)\nVD: {State}\n<VId: 8>",shape="plaintext"];
    9 [label="state'final\n(global)\nVU: {State}\n<VId: 9>",shape="plaintext",fontcolor="blue"];
    10 [label="speed'initial\n(global)\nVD: {Speed}\n<VId: 10>",shape="plaintext"];
    11 [label="speed'final\n(global)\nVU: {Speed}\n<VId: 11>",shape="plaintext",fontcolor="blue"];
    12 [label="precondition speed_is_valid\nVU: {State, Speed}\nSC: {Speed_Is_Valid}\nPROOF\n<VId: 12>",shape="plaintext"];
    13 [label="postcondition speed_is_valid\nVU: {State, Speed}\nSC: {Speed_Is_Valid}\nPROOF\n<VId: 13>",shape="plaintext"];
    15 [label="if i = accelerate\nVU: {I}\n<VId: 15>",shape="diamond"];
    16 [label="if speed < 100\nVU: {Speed}\n<VId: 16>",shape="diamond"];
    17 [label="speed := {speed + 1};\nVU: {Speed}\nVD: {Speed}\n<VId: 17>"];
    18 [label="elsif i = brake\nVU: {I}\n<VId: 18>",shape="diamond"];
    19 [label="if speed > -100\nVU: {Speed}\n<VId: 19>",shape="diamond"];
    20 [label="speed := {speed - 1};\nVU: {Speed}\nVD: {Speed}\n<VId: 20>"];
    21 [label="if speed = 0\nVU: {Speed}\n<VId: 21>",shape="diamond"];
    22 [label="state := still;\nVD: {State}\n<VId: 22>"];
    23 [label="elsif speed = 1 and then i = accelerate\nVU: {I, Speed}\n<VId: 23>",shape="diamond"];
    24 [label="state := forward;\nVD: {State}\n<VId: 24>"];
    25 [label="elsif speed = -1 and then i = accelerate\nVU: {I, Speed}\n<VId: 25>",shape="diamond"];
    26 [label="state := backward;\nVD: {State}\n<VId: 26>"];

    1 ->  2 [arrowType="normal"];
    1 ->  12 [arrowType="normal"];
    1 ->  13 [arrowType="normal"];
    1 ->  15 [arrowType="normal"];
    1 ->  21 [arrowType="normal"];
    6 ->  7 [arrowType="normal",color="red"];
    6 ->  15 [arrowType="normal",color="red"];
    6 ->  18 [arrowType="normal",color="red"];
    6 ->  23 [arrowType="normal",color="red"];
    6 ->  25 [arrowType="normal",color="red"];
    8 ->  9 [arrowType="normal",color="red"];
    8 ->  12 [arrowType="normal",color="red"];
    8 ->  13 [arrowType="normal",color="red"];
    10 ->  11 [arrowType="normal",color="red"];
    10 ->  12 [arrowType="normal",color="red"];
    10 ->  13 [arrowType="normal",color="red"];
    10 ->  16 [arrowType="normal",color="red"];
    10 ->  17 [arrowType="normal",color="red"];
    10 ->  19 [arrowType="normal",color="red"];
    10 ->  20 [arrowType="normal",color="red"];
    10 ->  21 [arrowType="normal",color="red"];
    10 ->  23 [arrowType="normal",color="red"];
    10 ->  25 [arrowType="normal",color="red"];
    15 ->  16 [arrowType="normal"];
    15 ->  18 [arrowType="normal"];
    16 ->  17 [arrowType="normal"];
    17 ->  11 [arrowType="normal",color="red"];
    17 ->  13 [arrowType="normal",color="red"];
    17 ->  17 [arrowType="normal",color="red"];
    17 ->  21 [arrowType="normal",color="red"];
    17 ->  23 [arrowType="normal",color="red"];
    17 ->  25 [arrowType="normal",color="red"];
    18 ->  19 [arrowType="normal"];
    19 ->  20 [arrowType="normal"];
    20 ->  11 [arrowType="normal",color="red"];
    20 ->  13 [arrowType="normal",color="red"];
    20 ->  20 [arrowType="normal",color="red"];
    20 ->  21 [arrowType="normal",color="red"];
    20 ->  23 [arrowType="normal",color="red"];
    20 ->  25 [arrowType="normal",color="red"];
    21 ->  22 [arrowType="normal"];
    21 ->  23 [arrowType="normal"];
    22 ->  9 [arrowType="normal",color="red"];
    22 ->  13 [arrowType="normal",color="red"];
    23 ->  24 [arrowType="normal"];
    23 ->  25 [arrowType="normal"];
    24 ->  9 [arrowType="normal",color="red"];
    24 ->  13 [arrowType="normal",color="red"];
    25 ->  26 [arrowType="normal"];
    26 ->  9 [arrowType="normal",color="red"];
    26 ->  13 [arrowType="normal",color="red"];
}

// gg_subprogram_halt_cfg
digraph G {
   graph [splines=True];
    1 [label="start\n<VId: 1>",shape="plaintext"];
    2 [label="helper end\n<VId: 2>",shape="plaintext"];
    3 [label="end\n<VId: 3>",shape="plaintext"];
    5 [label="null\nVU: {null}\n<VId: 5>",shape="plaintext",fontcolor="chartreuse"];
    6 [label="precondition speed_is_valid\nSC: {Speed_Is_Valid}\nPROOF\n<VId: 6>",shape="plaintext"];
    7 [label="postcondition state = still and speed_is_valid\nVU: {State}\nSC: {Speed_Is_Valid}\nPROOF\n<VId: 7>",shape="plaintext"];
    9 [label="pragma check (loop_invariant, speed_is_valid);\nSC: {Speed_Is_Valid}\nPROOF\n<VId: 9>"];
    10 [label="if speed > 0\nLoops:&nbsp;L_1\nVU: {Speed}\n<VId: 10>",shape="diamond"];
    11 [label="call state_update\nLoops:&nbsp;L_1\nSC: {State_Update}\n<VId: 11>",shape="box"];
    12 [label="i'in&nbsp;:=&nbsp;brake\n<VId: 12>",shape="plaintext"];
    13 [label="global&nbsp;State'in\nVU: {State}\n<VId: 13>",shape="plaintext"];
    14 [label="global&nbsp;Speed'in\nVU: {Speed}\n<VId: 14>",shape="plaintext"];
    15 [label="global&nbsp;State'out\nVD: {State}\n<VId: 15>",shape="plaintext"];
    16 [label="global&nbsp;Speed'out\nVD: {Speed}\n<VId: 16>",shape="plaintext"];
    17 [label="call state_update\nLoops:&nbsp;L_1\nSC: {State_Update}\n<VId: 17>",shape="box"];
    18 [label="i'in&nbsp;:=&nbsp;accelerate\n<VId: 18>",shape="plaintext"];
    19 [label="global&nbsp;State'in\nVU: {State}\n<VId: 19>",shape="plaintext"];
    20 [label="global&nbsp;Speed'in\nVU: {Speed}\n<VId: 20>",shape="plaintext"];
    21 [label="global&nbsp;State'out\nVD: {State}\n<VId: 21>",shape="plaintext"];
    22 [label="global&nbsp;Speed'out\nVD: {Speed}\n<VId: 22>",shape="plaintext"];
    23 [label="while state /= still\nLoops:&nbsp;L_1\nVU: {State}\n<VId: 23>",shape="diamond"];
    24 [label="speed'initial\n(global)\nVD: {Speed}\n<VId: 24>",shape="plaintext"];
    25 [label="speed'final\n(global)\nVU: {Speed}\n<VId: 25>",shape="plaintext",fontcolor="blue"];
    26 [label="state'initial\n(global)\nVD: {State}\n<VId: 26>",shape="plaintext"];
    27 [label="state'final\n(global)\nVU: {State}\n<VId: 27>",shape="plaintext",fontcolor="blue"];
    28 [label="speed_is_valid'initial\nVD: {Speed_Is_Valid}\n<VId: 28>",shape="plaintext",fontcolor="red"];
    29 [label="speed_is_valid'final\nVU: {Speed_Is_Valid}\n<VId: 29>",shape="plaintext",fontcolor="blue"];
    30 [label="state_update'initial\nVD: {State_Update}\n<VId: 30>",shape="plaintext",fontcolor="red"];
    31 [label="state_update'final\nVU: {State_Update}\n<VId: 31>",shape="plaintext"];

    1 ->  6 [arrowType="normal"];
    2 ->  7 [arrowType="normal"];
    3 ->  25 [arrowType="normal"];
    3 ->  27 [arrowType="normal"];
    3 ->  29 [arrowType="normal"];
    3 ->  31 [arrowType="normal"];
    6 ->  23 [arrowType="normal"];
    7 ->  3 [arrowType="normal"];
    9 ->  10 [arrowType="normal"];
    10 ->  11 [arrowType="normal"];
    10 ->  17 [arrowType="normal"];
    11 ->  12 [arrowType="normal"];
    12 ->  13 [arrowType="normal"];
    13 ->  14 [arrowType="normal"];
    14 ->  15 [arrowType="normal"];
    15 ->  16 [arrowType="normal"];
    16 ->  23 [arrowType="normal"];
    17 ->  18 [arrowType="normal"];
    18 ->  19 [arrowType="normal"];
    19 ->  20 [arrowType="normal"];
    20 ->  21 [arrowType="normal"];
    21 ->  22 [arrowType="normal"];
    22 ->  23 [arrowType="normal"];
    23 ->  2 [arrowType="normal"];
    23 ->  9 [arrowType="normal"];
    24 ->  1 [arrowType="normal"];
    26 ->  1 [arrowType="normal"];
    28 ->  1 [arrowType="normal"];
    30 ->  1 [arrowType="normal"];
}

// gg_subprogram_halt_pdg
digraph G {
   graph [splines=True];
    1 [label="start\n<VId: 1>",shape="plaintext"];
    2 [label="helper end\n<VId: 2>",shape="plaintext"];
    5 [label="null\nVU: {null}\n<VId: 5>",shape="plaintext",fontcolor="chartreuse"];
    6 [label="precondition speed_is_valid\nSC: {Speed_Is_Valid}\nPROOF\n<VId: 6>",shape="plaintext"];
    7 [label="postcondition state = still and speed_is_valid\nVU: {State}\nSC: {Speed_Is_Valid}\nPROOF\n<VId: 7>",shape="plaintext"];
    9 [label="pragma check (loop_invariant, speed_is_valid);\nSC: {Speed_Is_Valid}\nPROOF\n<VId: 9>"];
    10 [label="if speed > 0\nLoops:&nbsp;L_1\nVU: {Speed}\n<VId: 10>",shape="diamond"];
    11 [label="call state_update\nLoops:&nbsp;L_1\nSC: {State_Update}\n<VId: 11>",shape="box"];
    12 [label="i'in&nbsp;:=&nbsp;brake\n<VId: 12>",shape="plaintext"];
    13 [label="global&nbsp;State'in\nVU: {State}\n<VId: 13>",shape="plaintext"];
    14 [label="global&nbsp;Speed'in\nVU: {Speed}\n<VId: 14>",shape="plaintext"];
    15 [label="global&nbsp;State'out\nVD: {State}\n<VId: 15>",shape="plaintext"];
    16 [label="global&nbsp;Speed'out\nVD: {Speed}\n<VId: 16>",shape="plaintext"];
    17 [label="call state_update\nLoops:&nbsp;L_1\nSC: {State_Update}\n<VId: 17>",shape="box"];
    18 [label="i'in&nbsp;:=&nbsp;accelerate\n<VId: 18>",shape="plaintext"];
    19 [label="global&nbsp;State'in\nVU: {State}\n<VId: 19>",shape="plaintext"];
    20 [label="global&nbsp;Speed'in\nVU: {Speed}\n<VId: 20>",shape="plaintext"];
    21 [label="global&nbsp;State'out\nVD: {State}\n<VId: 21>",shape="plaintext"];
    22 [label="global&nbsp;Speed'out\nVD: {Speed}\n<VId: 22>",shape="plaintext"];
    23 [label="while state /= still\nLoops:&nbsp;L_1\nVU: {State}\n<VId: 23>",shape="diamond"];
    24 [label="speed'initial\n(global)\nVD: {Speed}\n<VId: 24>",shape="plaintext"];
    25 [label="speed'final\n(global)\nVU: {Speed}\n<VId: 25>",shape="plaintext",fontcolor="blue"];
    26 [label="state'initial\n(global)\nVD: {State}\n<VId: 26>",shape="plaintext"];
    27 [label="state'final\n(global)\nVU: {State}\n<VId: 27>",shape="plaintext",fontcolor="blue"];
    28 [label="speed_is_valid'initial\nVD: {Speed_Is_Valid}\n<VId: 28>",shape="plaintext",fontcolor="red"];
    29 [label="speed_is_valid'final\nVU: {Speed_Is_Valid}\n<VId: 29>",shape="plaintext",fontcolor="blue"];
    30 [label="state_update'initial\nVD: {State_Update}\n<VId: 30>",shape="plaintext",fontcolor="red"];
    31 [label="state_update'final\nVU: {State_Update}\n<VId: 31>",shape="plaintext"];

    1 ->  2 [arrowType="normal"];
    1 ->  6 [arrowType="normal"];
    1 ->  7 [arrowType="normal"];
    1 ->  23 [arrowType="normal"];
    7 ->  29 [arrowType="normal",color="red"];
    10 ->  11 [arrowType="normal"];
    10 ->  17 [arrowType="normal"];
    11 ->  12 [arrowType="normal"];
    11 ->  13 [arrowType="normal"];
    11 ->  14 [arrowType="normal"];
    11 ->  15 [arrowType="normal"];
    11 ->  16 [arrowType="normal"];
    11 ->  31 [arrowType="normal",color="red"];
    12 ->  15 [arrowType="normal",color="cornflowerblue"];
    12 ->  16 [arrowType="normal",color="cornflowerblue"];
    13 ->  15 [arrowType="normal",color="cornflowerblue"];
    13 ->  16 [arrowType="normal",color="cornflowerblue"];
    14 ->  15 [arrowType="normal",color="cornflowerblue"];
    14 ->  16 [arrowType="normal",color="cornflowerblue"];
    15 ->  7 [arrowType="normal",color="red"];
    15 ->  13 [arrowType="normal",color="red"];
    15 ->  19 [arrowType="normal",color="red"];
    15 ->  23 [arrowType="normal",color="red"];
    15 ->  27 [arrowType="normal",color="red"];
    16 ->  10 [arrowType="normal",color="red"];
    16 ->  14 [arrowType="normal",color="red"];
    16 ->  20 [arrowType="normal",color="red"];
    16 ->  25 [arrowType="normal",color="red"];
    17 ->  18 [arrowType="normal"];
    17 ->  19 [arrowType="normal"];
    17 ->  20 [arrowType="normal"];
    17 ->  21 [arrowType="normal"];
    17 ->  22 [arrowType="normal"];
    17 ->  31 [arrowType="normal",color="red"];
    18 ->  21 [arrowType="normal",color="cornflowerblue"];
    18 ->  22 [arrowType="normal",color="cornflowerblue"];
    19 ->  21 [arrowType="normal",color="cornflowerblue"];
    19 ->  22 [arrowType="normal",color="cornflowerblue"];
    20 ->  21 [arrowType="normal",color="cornflowerblue"];
    20 ->  22 [arrowType="normal",color="cornflowerblue"];
    21 ->  7 [arrowType="normal",color="red"];
    21 ->  13 [arrowType="normal",color="red"];
    21 ->  19 [arrowType="normal",color="red"];
    21 ->  23 [arrowType="normal",color="red"];
    21 ->  27 [arrowType="normal",color="red"];
    22 ->  10 [arrowType="normal",color="red"];
    22 ->  14 [arrowType="normal",color="red"];
    22 ->  20 [arrowType="normal",color="red"];
    22 ->  25 [arrowType="normal",color="red"];
    23 ->  9 [arrowType="normal"];
    23 ->  10 [arrowType="normal"];
    23 ->  23 [arrowType="normal"];
    24 ->  10 [arrowType="normal",color="red"];
    24 ->  14 [arrowType="normal",color="red"];
    24 ->  20 [arrowType="normal",color="red"];
    24 ->  25 [arrowType="normal",color="red"];
    26 ->  7 [arrowType="normal",color="red"];
    26 ->  13 [arrowType="normal",color="red"];
    26 ->  19 [arrowType="normal",color="red"];
    26 ->  23 [arrowType="normal",color="red"];
    26 ->  27 [arrowType="normal",color="red"];
    30 ->  31 [arrowType="normal",color="red"];
}

// gg_subprogram_speed_is_valid_cfg
digraph G {
   graph [splines=True];
    1 [label="start\n<VId: 1>",shape="plaintext"];
    2 [label="helper end\n<VId: 2>",shape="plaintext"];
    3 [label="end\n<VId: 3>",shape="plaintext"];
    5 [label="null\nVU: {null}\n<VId: 5>",shape="plaintext",fontcolor="chartreuse"];
    6 [label="speed_is_valid'initial\nVD: {Speed_Is_Valid}\n<VId: 6>",shape="plaintext",fontcolor="red"];
    7 [label="speed_is_valid'final\nVU: {Speed_Is_Valid}\n<VId: 7>",shape="plaintext",fontcolor="blue"];
    11 [label="return (case state is when still => speed = 0, when forward => speed >0, when backward => speed < 0);\nVU: {State, Speed}\nVD: {Speed_Is_Valid}\n<VId: 11>"];
    12 [label="speed'initial\n(global)\nVD: {Speed}\n<VId: 12>",shape="plaintext"];
    13 [label="speed'final\n(global)\nVU: {Speed}\n<VId: 13>",shape="plaintext",fontcolor="blue"];
    14 [label="state'initial\n(global)\nVD: {State}\n<VId: 14>",shape="plaintext"];
    15 [label="state'final\n(global)\nVU: {State}\n<VId: 15>",shape="plaintext",fontcolor="blue"];

    1 ->  11 [arrowType="normal"];
    2 ->  3 [arrowType="normal"];
    3 ->  7 [arrowType="normal"];
    3 ->  13 [arrowType="normal"];
    3 ->  15 [arrowType="normal"];
    6 ->  1 [arrowType="normal"];
    11 ->  2 [arrowType="normal"];
    12 ->  1 [arrowType="normal"];
    14 ->  1 [arrowType="normal"];
}

// gg_subprogram_speed_is_valid_pdg
digraph G {
   graph [splines=True];
    1 [label="start\n<VId: 1>",shape="plaintext"];
    2 [label="helper end\n<VId: 2>",shape="plaintext"];
    5 [label="null\nVU: {null}\n<VId: 5>",shape="plaintext",fontcolor="chartreuse"];
    6 [label="speed_is_valid'initial\nVD: {Speed_Is_Valid}\n<VId: 6>",shape="plaintext",fontcolor="red"];
    7 [label="speed_is_valid'final\nVU: {Speed_Is_Valid}\n<VId: 7>",shape="plaintext",fontcolor="blue"];
    11 [label="return (case state is when still => speed = 0, when forward => speed >0, when backward => speed < 0);\nVU: {State, Speed}\nVD: {Speed_Is_Valid}\n<VId: 11>"];
    12 [label="speed'initial\n(global)\nVD: {Speed}\n<VId: 12>",shape="plaintext"];
    13 [label="speed'final\n(global)\nVU: {Speed}\n<VId: 13>",shape="plaintext",fontcolor="blue"];
    14 [label="state'initial\n(global)\nVD: {State}\n<VId: 14>",shape="plaintext"];
    15 [label="state'final\n(global)\nVU: {State}\n<VId: 15>",shape="plaintext",fontcolor="blue"];

    1 ->  2 [arrowType="normal"];
    1 ->  11 [arrowType="normal"];
    11 ->  7 [arrowType="normal",color="red"];
    12 ->  11 [arrowType="normal",color="red"];
    12 ->  13 [arrowType="normal",color="red"];
    14 ->  11 [arrowType="normal",color="red"];
    14 ->  15 [arrowType="normal",color="red"];
}

// uninitialized_Globals_Graph
digraph G {
   graph [splines=True];

}

// vehicle_Globals_Graph
digraph G {
   graph [splines=True];
    1 [label="vehicle__state"];
    2 [label="vehicle__speed"];
    3 [label="vehicle__speed_is_valid'Ins",shape="box"];
    4 [label="vehicle__speed_is_valid'Outs",shape="box"];
    5 [label="vehicle__speed_is_valid'Proof_Ins",shape="box"];
    6 [label="vehicle__halt'Ins",shape="box"];
    7 [label="vehicle__halt'Outs",shape="box"];
    8 [label="vehicle__halt'Proof_Ins",shape="box"];

    3 ->  1 [arrowType="normal"];
    3 ->  2 [arrowType="normal"];
    6 ->  1 [arrowType="normal"];
    6 ->  2 [arrowType="normal"];
    7 ->  1 [arrowType="normal"];
    7 ->  2 [arrowType="normal"];
    8 ->  3 [arrowType="normal"];
    8 ->  5 [arrowType="normal"];
}

