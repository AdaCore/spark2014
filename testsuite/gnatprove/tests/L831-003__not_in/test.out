lcp.adb:6:21: info: cannot unroll loop (too many loop iterations)
lcp.adb:7:12: medium: overflow check might fail (e.g. when L = Natural'Last and X = 1) [possible explanation: loop at line 6 should mention L in a loop invariant]
lcp.adb:7:14: info: initialization of "L" proved
lcp.adb:8:19: info: overflow check proved (CVC4: 2 VC)
lcp.adb:10:17: info: initialization of "L" proved
lcp.adb:13:15: info: index check proved (CVC4: 2 VC)
lcp.adb:13:15: info: overflow check proved (CVC4: 1 VC)
lcp.adb:13:17: info: initialization of "L" proved
lcp.adb:13:28: info: index check proved (CVC4: 2 VC)
lcp.adb:13:28: info: overflow check proved (CVC4: 1 VC)
lcp.adb:14:17: info: initialization of "L" proved
lcp.adb:17:12: info: initialization of "L" proved
lcp.adb:17:14: info: overflow check proved (CVC4: 1 VC)
lcp.adb:20:11: info: initialization of "L" proved
lcp.ads:6:38: medium: postcondition might fail, cannot prove A (X + K) = A (Y + K) (e.g. when A = (1 => 0, 3 => 0, 4 => 0, 5 => 0, others => -1) and A'First = 1 and A'Last = 2 and K = 0 and X = 1 and Y = 2)
lcp.ads:6:43: info: overflow check proved (CVC4: 1 VC)
lcp.ads:6:43: medium: array index check might fail (e.g. when A = (1 => 0, 2 => 0, 3 => 0, others => 2) and A'First = 1 and A'Last = 2 and X = 2)
lcp.ads:6:55: medium: array index check might fail (e.g. when A = (1 => 0, 2 => 0, others => 1) and A'First = 1 and A'Last = 1 and Y = 1)
lcp.ads:6:55: medium: overflow check might fail (e.g. when Y = 1000000)
lcp.ads:7:19: info: overflow check proved (CVC4: 2 VC)
lcp.ads:8:29: info: overflow check proved (CVC4: 2 VC)
lcp.ads:9:32: info: index check proved (CVC4: 2 VC)
lcp.ads:9:32: info: overflow check proved (CVC4: 1 VC)
lcp.ads:9:54: info: index check proved (CVC4: 2 VC)
lcp.ads:9:54: info: overflow check proved (CVC4: 1 VC)
