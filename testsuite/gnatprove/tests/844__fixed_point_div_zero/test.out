fixed_point_div_zero.ads:5:13: info: implicit aspect Always_Terminates on "Div" has been proved, subprogram will terminate
fixed_point_div_zero.ads:6:09: high: divide by zero might fail (e.g. when Y = 0) [possible fix: add precondition (Y /= 0) to subprogram at line 5]
fixed_point_div_zero.ads:6:09: medium: overflow check might fail, cannot prove lower bound for X / Y [reason for check: result of fixed-point division must fit in the underlying 16-bits machine integer] [possible fix: subprogram at line 5 should mention X and Y in a precondition]
fixed_point_div_zero.ads:6:09: medium: range check might fail, cannot prove lower bound for X / Y [reason for check: returned value must fit in the result type of the function] [possible fix: subprogram at line 5 should mention X and Y in a precondition]
fixed_point_div_zero.ads:8:13: info: implicit aspect Always_Terminates on "Div_Int" has been proved, subprogram will terminate
fixed_point_div_zero.ads:9:16: info: range check proved (CVC5: 2 VC)
fixed_point_div_zero.ads:9:19: high: divide by zero might fail (e.g. when Y = -1/128) [possible fix: add precondition (Integer (Y) /= 0) to subprogram at line 8]
fixed_point_div_zero.ads:9:19: medium: overflow check might fail, cannot prove lower bound for Integer (X) / Integer (Y) [reason for check: result of division must fit in a 32-bits machine integer] [possible fix: add precondition (Integer (X) / Integer (Y) >= Integer'First) to subprogram at line 8]
fixed_point_div_zero.ads:9:30: info: range check proved (CVC5: 2 VC)
fixed_point_div_zero.ads:11:13: info: implicit aspect Always_Terminates on "Div_Skewd" has been proved, subprogram will terminate
fixed_point_div_zero.ads:12:09: high: divide by zero might fail (e.g. when X = 1) [possible fix: add precondition ((X - 1.0) /= 0) to subprogram at line 11]
fixed_point_div_zero.ads:12:09: medium: overflow check might fail, cannot prove lower bound for X / (X - 1.0) [reason for check: result of fixed-point division must fit in the underlying 16-bits machine integer] [possible fix: subprogram at line 11 should mention X in a precondition]
fixed_point_div_zero.ads:12:09: medium: range check might fail, cannot prove lower bound for X / (X - 1.0) [reason for check: returned value must fit in the result type of the function] [possible fix: subprogram at line 11 should mention X in a precondition]
fixed_point_div_zero.ads:12:14: info: overflow check proved (CVC5: 2 VC)
