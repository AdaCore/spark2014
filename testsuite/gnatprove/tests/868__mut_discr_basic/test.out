test_mutable.adb:8:17: info: range check proved (CVC5: 1 VC)
test_mutable.adb:8:23: info: range check proved (CVC5: 1 VC)
test_mutable.adb:9:17: info: range check proved (CVC5: 1 VC)
test_mutable.adb:9:23: info: range check proved (CVC5: 1 VC)
test_mutable.adb:9:33: info: discriminant check proved (CVC5: 1 VC)
test_mutable.adb:11:19: info: discriminant check proved (CVC5: 1 VC)
test_mutable.adb:16:19: info: discriminant check proved (CVC5: 1 VC)
test_mutable.adb:18:22: info: discriminant check proved (CVC5: 1 VC)
test_mutable.adb:24:22: info: assertion proved (Trivial: 1 VC)
test_mutable.adb:25:10: info: discriminant check proved (CVC5: 2 VC; Trivial: 1 VC)
test_mutable.adb:26:22: info: assertion proved (Trivial: 1 VC)
test_mutable.adb:27:10: info: discriminant check proved (CVC5: 2 VC; Trivial: 1 VC)
test_mutable.adb:28:22: info: assertion proved (Trivial: 1 VC)
test_mutable.adb:29:10: info: discriminant check proved (CVC5: 2 VC; Trivial: 1 VC)
test_mutable.adb:32:22: info: assertion proved (Trivial: 1 VC)
test_mutable.adb:34:22: info: assertion proved (Trivial: 1 VC)
test_mutable.adb:35:22: info: assertion proved (Trivial: 1 VC)
test_mutable.adb:37:22: info: assertion proved (Trivial: 1 VC)
test_mutable.adb:38:22: info: assertion proved (Trivial: 1 VC)
test_mutable.adb:42:22: info: assertion proved (Trivial: 1 VC)
test_mutable.adb:43:22: info: assertion proved (Trivial: 1 VC)
test_mutable.adb:44:10: info: discriminant check proved (CVC5: 2 VC; Trivial: 1 VC)
test_mutable.adb:45:22: info: assertion proved (Trivial: 1 VC)
test_mutable.adb:46:10: info: discriminant check proved (CVC5: 2 VC; Trivial: 1 VC)
test_mutable.adb:48:22: info: assertion proved (Trivial: 1 VC)
test_mutable.adb:49:22: info: assertion proved (Trivial: 1 VC)
test_mutable.adb:57:28: high: assertion might fail (e.g. when Y1 = (D1 => True, D2 => True, F => 10101) and Y1'Constrained = False)
test_mutable.adb:60:16: info: discriminant check proved (CVC5: 2 VC; Trivial: 1 VC)
test_mutable.adb:61:28: high: assertion might fail (e.g. when Y1 = (D1 => True, D2 => False, F => 10101) and Y1'Constrained = False)
test_mutable.adb:64:28: high: assertion might fail (e.g. when Y2 = (D1 => True, D2 => True, F => 10101) and Y2'Constrained = False)
test_mutable.adb:67:28: high: assertion might fail (e.g. when Y3 = (D1 => True, D2 => True, F => 10101) and Y3'Constrained = False)
test_mutable.adb:70:28: high: assertion might fail
test_mutable.adb:73:28: high: assertion might fail (e.g. when Y51 = (D1 => True, D2 => False, F => 12345))
test_mutable.adb:76:20: info: discriminant check proved (CVC5: 1 VC)
test_mutable.adb:77:28: info: assertion proved (Trivial: 1 VC)
test_mutable.adb:78:20: high: discriminant check might fail (e.g. when X = (D1 => True, D2 => True, F => 10101)) [possible fix: precondition of subprogram at test_mutable.ads:19 should mention X]
test_mutable.adb:81:28: high: assertion might fail (e.g. when Y61 = (D1 => True, D2 => False, F => 12345))
test_mutable.adb:84:20: info: discriminant check proved (CVC5: 1 VC)
test_mutable.adb:85:28: info: assertion proved (Trivial: 1 VC)
test_mutable.adb:86:20: high: discriminant check might fail (e.g. when X = (D1 => True, D2 => True, F => 10101)) [possible fix: precondition of subprogram at test_mutable.ads:19 should mention X]
test_mutable.adb:89:28: high: assertion might fail (e.g. when Y7 = (D1 => False, D2 => False, F => 777))
test_mutable.adb:92:28: high: assertion might fail (e.g. when Y8 = (D1 => True, D2 => False, F => 10101) and Y8'Constrained = False)
test_mutable.adb:95:28: high: assertion might fail (e.g. when Y9 = (D1 => True, D2 => False, F => 10101) and Y9'Constrained = False)
test_mutable.adb:100:22: info: assertion proved (Trivial)
test_mutable.ads:17:22: info: range check proved (CVC5: 1 VC)
test_mutable.ads:17:28: info: range check proved (CVC5: 1 VC)
test_mutable.ads:19:14: warning: subprogram "P" has no effect
