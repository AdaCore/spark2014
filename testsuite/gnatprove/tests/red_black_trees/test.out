a-cofuse.ads:243:22: info: overflow check proved (CVC4: 2 VC), in instantiation at binary_trees.adb:8
a-cofuse.ads:243:22: info: overflow check proved (CVC4: 2 VC), in instantiation at tree_model.ads:78
a-cofuse.ads:244:26: info: overflow check proved (CVC4: 2 VC), in instantiation at binary_trees.adb:8
a-cofuse.ads:244:26: info: overflow check proved (CVC4: 2 VC), in instantiation at tree_model.ads:78
a-cofuve.ads:96:06: info: data dependencies proved, in instantiation at tree_model.ads:22
a-cofuve.ads:232:54: info: overflow check proved (CVC4: 2 VC), in instantiation at tree_model.ads:22
a-cofuve.ads:237:63: info: range check proved (CVC4: 2 VC), in instantiation at tree_model.ads:22
a-cofuve.ads:238:59: info: overflow check proved (CVC4: 2 VC), in instantiation at tree_model.ads:22
a-cofuve.ads:238:76: info: overflow check proved (CVC4: 2 VC), in instantiation at tree_model.ads:22
a-cofuve.ads:239:30: info: range check proved (CVC4: 2 VC), in instantiation at tree_model.ads:22
a-cofuve.ads:300:52: info: overflow check proved (CVC4: 1 VC), in instantiation at tree_model.ads:22
binary_trees.adb:17:08: info: postcondition proved (CVC4: 2 VC)
binary_trees.adb:21:07: info: initialization of "S" proved
binary_trees.adb:24:33: info: loop invariant initialization proved (CVC4: 1 VC)
binary_trees.adb:24:33: info: loop invariant preservation proved (CVC4: 1 VC)
binary_trees.adb:26:13: info: loop invariant initialization proved (CVC4: 1 VC)
binary_trees.adb:26:13: info: loop invariant preservation proved (CVC4: 1 VC)
binary_trees.adb:26:53: info: range check proved (CVC4: 4 VC)
binary_trees.adb:27:33: info: loop invariant initialization proved (CVC4: 1 VC)
binary_trees.adb:27:33: info: loop invariant preservation proved (CVC4: 1 VC)
binary_trees.adb:27:33: info: precondition proved (Trivial: 2 VC)
binary_trees.adb:28:15: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:41:44: info: index check proved (CVC4: 2 VC)
binary_trees.adb:59:33: info: index check proved (CVC4: 2 VC)
binary_trees.adb:60:42: info: index check proved (CVC4: 2 VC)
binary_trees.adb:67:32: info: index check proved (CVC4: 2 VC)
binary_trees.adb:68:41: info: index check proved (CVC4: 2 VC)
binary_trees.adb:75:36: info: index check proved (CVC4: 2 VC)
binary_trees.adb:78:36: info: index check proved (CVC4: 2 VC)
binary_trees.adb:93:14: info: range check proved (CVC4: 2 VC)
binary_trees.adb:108:11: info: postcondition proved (CVC4: 2 VC)
binary_trees.adb:109:27: info: index check proved (CVC4: 2 VC)
binary_trees.adb:113:36: info: loop invariant initialization proved (CVC4: 1 VC)
binary_trees.adb:113:36: info: loop invariant preservation proved (CVC4: 1 VC)
binary_trees.adb:113:73: info: index check proved (CVC4: 4 VC)
binary_trees.adb:128:07: info: initialization of "R" proved
binary_trees.adb:128:07: info: predicate check proved on default value (CVC4: 1 VC)
binary_trees.adb:129:39: info: range check proved (CVC4: 2 VC)
binary_trees.adb:135:15: info: predicate check proved (CVC4: 1 VC)
binary_trees.adb:142:33: info: loop invariant initialization proved (CVC4: 1 VC)
binary_trees.adb:142:33: info: loop invariant preservation proved (CVC4: 1 VC)
binary_trees.adb:142:39: info: index check proved (CVC4: 4 VC)
binary_trees.adb:146:13: info: loop invariant initialization proved (CVC4: 1 VC; Trivial: 1 VC)
binary_trees.adb:146:13: info: loop invariant preservation proved (CVC4: 1 VC; Trivial: 1 VC)
binary_trees.adb:152:13: info: loop invariant initialization proved (CVC4: 1 VC; Trivial: 2 VC)
binary_trees.adb:152:13: info: loop invariant preservation proved (CVC4: 1 VC; Trivial: 2 VC)
binary_trees.adb:158:33: info: loop invariant initialization proved (CVC4: 2 VC)
binary_trees.adb:158:33: info: loop invariant preservation proved (CVC4: 2 VC)
binary_trees.adb:162:13: info: loop invariant initialization proved (CVC4: 2 VC; Trivial: 1 VC)
binary_trees.adb:162:13: info: loop invariant preservation proved (CVC4: 2 VC; Trivial: 1 VC)
binary_trees.adb:164:34: info: index check proved (CVC4: 4 VC)
binary_trees.adb:170:13: info: loop invariant initialization proved (CVC4: 2 VC)
binary_trees.adb:172:20: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove Is_Add (R (F.C (J).Parent).A, F.C (J).Position, R (J).A)
binary_trees.adb:172:38: info: index check proved (CVC4: 4 VC)
binary_trees.adb:172:57: info: range check proved (CVC4: 4 VC)
binary_trees.adb:180:13: info: loop invariant initialization proved (CVC4: 2 VC; Trivial: 1 VC)
binary_trees.adb:180:13: info: loop invariant preservation proved (CVC4: 2 VC; Trivial: 1 VC)
binary_trees.adb:182:63: info: index check proved (CVC4: 4 VC)
binary_trees.adb:183:46: info: index check proved (CVC4: 4 VC)
binary_trees.adb:189:13: info: loop invariant initialization proved (CVC4: 1 VC; Trivial: 1 VC)
binary_trees.adb:189:13: info: loop invariant preservation proved (CVC4: 1 VC; Trivial: 1 VC)
binary_trees.adb:190:67: info: index check proved (CVC4: 4 VC)
binary_trees.adb:194:13: info: loop invariant initialization proved (CVC4: 1 VC; Trivial: 2 VC)
binary_trees.adb:198:24: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove J = K
binary_trees.adb:202:33: info: loop invariant initialization proved (CVC4: 2 VC)
binary_trees.adb:202:33: info: loop invariant preservation proved (CVC4: 2 VC)
binary_trees.adb:207:13: info: loop invariant initialization proved (CVC4: 1 VC)
binary_trees.adb:207:13: info: loop invariant preservation proved (CVC4: 1 VC)
binary_trees.adb:213:13: info: loop invariant initialization proved (CVC4: 2 VC)
binary_trees.adb:214:15: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove Contains (Unseen, J) = (not R (J).K or ToDo (J))
binary_trees.adb:217:31: info: loop variant proved (CVC4: 1 VC)
binary_trees.adb:220:20: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:220:36: info: range check proved (CVC4: 2 VC)
binary_trees.adb:223:13: info: initialization of "J" proved
binary_trees.adb:226:23: info: index check proved (CVC4: 2 VC)
binary_trees.adb:228:31: info: assertion proved (CVC4: 1 VC)
binary_trees.adb:229:19: info: index check proved (CVC4: 2 VC)
binary_trees.adb:229:28: info: predicate check proved (CVC4: 1 VC)
binary_trees.adb:230:34: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:230:42: info: index check proved (CVC4: 2 VC)
binary_trees.adb:231:22: info: index check proved (CVC4: 2 VC)
binary_trees.adb:239:34: medium: assertion might fail, cannot prove J = K
binary_trees.adb:244:45: medium: assertion might fail, cannot prove not (R (J).A < R (K).A)
binary_trees.adb:247:23: info: index check proved (CVC4: 2 VC)
binary_trees.adb:249:31: medium: assertion might fail
binary_trees.adb:250:19: info: index check proved (CVC4: 2 VC)
binary_trees.adb:250:28: info: predicate check proved (CVC4: 1 VC)
binary_trees.adb:251:34: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:251:42: info: index check proved (CVC4: 2 VC)
binary_trees.adb:252:22: info: index check proved (CVC4: 2 VC)
binary_trees.adb:260:34: medium: assertion might fail, cannot prove J = K
binary_trees.adb:265:45: medium: assertion might fail, cannot prove not (R (J).A < R (K).A)
binary_trees.adb:269:16: info: index check proved (CVC4: 2 VC)
binary_trees.adb:284:13: info: loop invariant initialization proved (CVC4: 1 VC; Trivial: 1 VC)
binary_trees.adb:284:13: info: loop invariant preservation proved (CVC4: 1 VC; Trivial: 1 VC)
binary_trees.adb:285:18: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:285:18: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:285:50: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:285:50: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:286:24: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:286:24: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:300:06: info: data dependencies proved
binary_trees.adb:315:23: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:315:23: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:318:08: info: postcondition proved (CVC4: 4 VC)
binary_trees.adb:321:17: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:321:17: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:321:36: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:321:36: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:329:13: info: loop invariant initialization proved (CVC4: 1 VC; Trivial: 1 VC)
binary_trees.adb:329:13: info: loop invariant preservation proved (CVC4: 1 VC; Trivial: 1 VC)
binary_trees.adb:330:18: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:330:18: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:330:53: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:330:53: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:331:17: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:331:17: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:336:13: info: loop invariant initialization proved (CVC4: 1 VC; Trivial: 1 VC)
binary_trees.adb:337:18: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:337:18: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:337:53: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:337:53: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:338:17: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:338:17: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:338:17: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove Model (F1, Root) (I).K
binary_trees.adb:345:13: info: loop invariant initialization proved (CVC4: 1 VC; Trivial: 1 VC)
binary_trees.adb:345:13: info: loop invariant preservation proved (CVC4: 1 VC; Trivial: 1 VC)
binary_trees.adb:346:18: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:346:18: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:346:53: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:346:53: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:347:17: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:347:17: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:347:42: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:347:42: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:356:16: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:356:16: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:356:51: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:356:51: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:357:16: info: precondition proved (CVC4: 6 VC)
binary_trees.adb:357:38: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:357:38: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:357:64: info: index check proved (CVC4: 4 VC)
binary_trees.adb:358:38: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:358:38: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:358:64: info: index check proved (CVC4: 4 VC)
binary_trees.adb:359:38: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:359:38: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:360:38: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:360:38: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:361:46: info: range check proved (CVC4: 4 VC)
binary_trees.adb:367:16: info: loop invariant initialization proved (CVC4: 1 VC; Trivial: 1 VC)
binary_trees.adb:367:16: info: loop invariant preservation proved (CVC4: 1 VC; Trivial: 1 VC)
binary_trees.adb:368:21: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:368:21: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:368:39: info: index check proved (CVC4: 4 VC)
binary_trees.adb:368:56: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:368:56: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:368:74: info: index check proved (CVC4: 4 VC)
binary_trees.adb:369:20: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:369:20: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:369:38: info: index check proved (CVC4: 4 VC)
binary_trees.adb:369:45: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:369:45: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:369:63: info: index check proved (CVC4: 4 VC)
binary_trees.adb:384:06: info: data dependencies proved
binary_trees.adb:386:17: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:388:08: info: postcondition proved (CVC4: 1 VC; Trivial: 3 VC)
binary_trees.adb:389:14: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:389:14: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:391:18: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:393:22: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:393:22: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:394:31: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:394:31: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:394:55: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:394:55: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:395:24: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:395:29: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:395:29: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:395:60: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:395:60: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:395:83: info: overflow check proved (CVC4: 2 VC)
binary_trees.adb:401:18: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:401:18: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:403:22: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:405:26: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:405:26: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:406:34: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:406:34: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:406:58: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:406:58: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:407:42: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:407:42: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:407:76: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:407:76: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:407:99: info: overflow check proved (CVC4: 4 VC)
binary_trees.adb:408:28: info: precondition proved (CVC4: 4 VC)
binary_trees.adb:408:28: medium: loop invariant might fail in first iteration, cannot prove Get (Model (F, Root) (J).A, Length (Model (F, Root) (I).A) + 1) /= D
binary_trees.adb:408:28: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove Get (Model (F, Root) (J).A, Length (Model (F, Root) (I).A) + 1) /= D
binary_trees.adb:408:33: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:408:33: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:408:64: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:408:64: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:408:87: info: overflow check proved (CVC4: 4 VC)
binary_trees.adb:414:07: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:431:09: info: data dependencies proved
binary_trees.adb:445:25: info: index check proved (CVC4: 2 VC)
binary_trees.adb:448:20: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:448:20: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:448:41: info: index check proved (CVC4: 2 VC)
binary_trees.adb:461:30: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:461:30: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:467:30: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:467:30: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:474:17: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:474:17: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:475:19: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:475:19: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:475:40: info: index check proved (CVC4: 2 VC)
binary_trees.adb:475:48: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:475:48: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:476:21: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:476:21: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:476:31: info: range check proved (CVC4: 2 VC)
binary_trees.adb:477:21: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:477:21: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:482:26: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:482:26: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:482:53: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:482:53: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:487:26: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:487:26: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:487:36: info: range check proved (CVC4: 2 VC)
binary_trees.adb:487:50: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:487:50: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:491:26: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:491:26: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:491:53: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:491:53: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:491:77: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:491:77: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:498:26: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:498:26: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:498:36: info: range check proved (CVC4: 2 VC)
binary_trees.adb:499:25: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:499:25: medium: in inlined expression function body at tree_model.ads:42
binary_trees.adb:499:25: medium: postcondition might fail, cannot prove Get (P, I) = Get (Q, I)
binary_trees.adb:499:41: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:499:41: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:499:62: info: index check proved (CVC4: 2 VC)
binary_trees.adb:500:41: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:500:41: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:500:51: info: range check proved (CVC4: 2 VC)
binary_trees.adb:501:41: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:501:41: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:505:60: info: index check proved (CVC4: 2 VC)
binary_trees.adb:506:25: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:506:25: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:506:39: info: range check proved (CVC4: 2 VC)
binary_trees.adb:506:44: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:506:44: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:506:54: info: range check proved (CVC4: 2 VC)
binary_trees.adb:516:16: info: loop invariant initialization proved (CVC4: 2 VC; Trivial: 1 VC)
binary_trees.adb:517:21: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:517:21: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:517:64: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:517:64: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:518:23: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:518:23: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:518:44: info: index check proved (CVC4: 4 VC)
binary_trees.adb:518:52: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:518:52: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:519:25: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:519:25: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:519:25: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove Model (F, V) (I).K
binary_trees.adb:519:35: info: range check proved (CVC4: 4 VC)
binary_trees.adb:520:25: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:520:25: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:525:16: info: loop invariant initialization proved (CVC4: 1 VC; Trivial: 1 VC)
binary_trees.adb:525:16: info: loop invariant preservation proved (CVC4: 1 VC; Trivial: 1 VC)
binary_trees.adb:526:21: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:526:21: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:526:60: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:526:60: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:527:23: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:527:23: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:532:16: info: loop invariant initialization proved (CVC4: 1 VC; Trivial: 1 VC)
binary_trees.adb:533:21: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:533:21: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:533:31: info: range check proved (CVC4: 4 VC)
binary_trees.adb:533:57: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:533:57: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:533:67: info: range check proved (CVC4: 4 VC)
binary_trees.adb:534:23: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:534:23: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:534:23: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove Model (F_Old, Root) (I).K
binary_trees.adb:543:16: info: loop invariant initialization proved (CVC4: 1 VC; Trivial: 2 VC)
binary_trees.adb:543:16: info: loop invariant preservation proved (CVC4: 1 VC; Trivial: 2 VC)
binary_trees.adb:544:21: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:544:21: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:544:64: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:544:64: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:545:23: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:545:23: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:545:50: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:545:50: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:545:74: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:545:74: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:552:16: info: loop invariant initialization proved (CVC4: 4 VC; Trivial: 2 VC)
binary_trees.adb:552:16: info: loop invariant preservation proved (CVC4: 4 VC; Trivial: 2 VC)
binary_trees.adb:553:21: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:553:21: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:553:64: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:553:64: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:554:23: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:554:23: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:554:33: info: range check proved (CVC4: 4 VC)
binary_trees.adb:555:22: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:555:38: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:555:38: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:555:59: info: index check proved (CVC4: 4 VC)
binary_trees.adb:556:38: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:556:38: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:556:48: info: range check proved (CVC4: 4 VC)
binary_trees.adb:557:38: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:557:38: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:569:19: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:569:19: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:570:35: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:570:35: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:571:27: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:571:27: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:573:19: info: precondition proved (CVC4: 6 VC)
binary_trees.adb:573:41: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:573:41: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:573:66: info: index check proved (CVC4: 4 VC)
binary_trees.adb:574:41: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:574:41: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:574:70: info: index check proved (CVC4: 4 VC)
binary_trees.adb:575:41: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:575:41: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:576:41: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:576:41: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:577:49: info: range check proved (CVC4: 4 VC)
binary_trees.adb:584:19: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:584:19: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:585:35: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:585:35: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:586:27: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:586:27: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:586:37: info: range check proved (CVC4: 4 VC)
binary_trees.adb:589:19: info: precondition proved (CVC4: 8 VC)
binary_trees.adb:589:42: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:589:42: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:589:52: info: range check proved (CVC4: 4 VC)
binary_trees.adb:589:64: info: index check proved (CVC4: 4 VC)
binary_trees.adb:590:42: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:590:42: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:590:71: info: index check proved (CVC4: 4 VC)
binary_trees.adb:591:42: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:591:42: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:591:52: info: range check proved (CVC4: 4 VC)
binary_trees.adb:592:42: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:592:42: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:593:42: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:593:42: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:593:63: info: index check proved (CVC4: 4 VC)
binary_trees.adb:594:50: info: range check proved (CVC4: 4 VC)
binary_trees.adb:601:19: info: loop invariant initialization proved (CVC4: 1 VC; Trivial: 2 VC)
binary_trees.adb:601:19: info: loop invariant preservation proved (CVC4: 1 VC; Trivial: 2 VC)
binary_trees.adb:602:24: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:602:24: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:602:45: info: index check proved (CVC4: 4 VC)
binary_trees.adb:602:67: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:602:67: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:602:88: info: index check proved (CVC4: 4 VC)
binary_trees.adb:603:26: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:603:26: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:603:43: info: index check proved (CVC4: 4 VC)
binary_trees.adb:603:53: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:603:53: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:603:70: info: index check proved (CVC4: 4 VC)
binary_trees.adb:603:77: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:603:77: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:603:98: info: index check proved (CVC4: 4 VC)
binary_trees.adb:605:19: info: loop invariant initialization proved (CVC4: 4 VC; Trivial: 2 VC)
binary_trees.adb:606:24: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:606:24: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:606:45: info: index check proved (CVC4: 4 VC)
binary_trees.adb:606:67: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:606:67: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:606:88: info: index check proved (CVC4: 4 VC)
binary_trees.adb:607:26: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:607:26: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:607:36: info: range check proved (CVC4: 4 VC)
binary_trees.adb:607:40: info: index check proved (CVC4: 4 VC)
binary_trees.adb:608:25: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:608:25: medium: in inlined expression function body at tree_model.ads:41
binary_trees.adb:608:25: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove Length (P) - Length (V) = Length (Q)
binary_trees.adb:608:41: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:608:41: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:608:62: info: index check proved (CVC4: 4 VC)
binary_trees.adb:609:41: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:609:41: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:609:51: info: range check proved (CVC4: 4 VC)
binary_trees.adb:609:55: info: index check proved (CVC4: 4 VC)
binary_trees.adb:610:41: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:610:41: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:610:62: info: index check proved (CVC4: 4 VC)
binary_trees.adb:616:16: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:616:16: info: precondition proved (CVC4: 6 VC)
binary_trees.adb:617:16: info: precondition proved (CVC4: 14 VC; Trivial: 2 VC)
binary_trees.adb:621:56: info: index check proved (CVC4: 4 VC)
binary_trees.adb:622:24: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:622:24: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:622:24: medium: in inlined expression function body at tree_model.ads:54
binary_trees.adb:622:24: medium: in inlined expression function body at tree_model.ads:54
binary_trees.adb:622:24: medium: loop invariant might fail in first iteration, cannot prove M1 (I).K = M2 (I).K
binary_trees.adb:622:24: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove M1 (I).A = M2 (I).A
binary_trees.adb:622:38: info: range check proved (CVC4: 4 VC)
binary_trees.adb:622:43: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:622:43: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:622:53: info: range check proved (CVC4: 4 VC)
binary_trees.adb:635:25: info: assertion proved (CVC4: 1 VC)
binary_trees.adb:635:30: info: index check proved (CVC4: 2 VC)
binary_trees.adb:636:15: info: index check proved (CVC4: 2 VC)
binary_trees.adb:637:15: info: index check proved (CVC4: 2 VC)
binary_trees.adb:640:22: medium: assertion might fail
binary_trees.adb:643:10: info: precondition proved (CVC4: 12 VC; Trivial: 4 VC)
binary_trees.adb:643:10: medium: invariant check might fail
binary_trees.adb:664:09: info: data dependencies proved
binary_trees.adb:679:29: info: index check proved (CVC4: 2 VC)
binary_trees.adb:682:25: info: index check proved (CVC4: 2 VC)
binary_trees.adb:683:20: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:683:20: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:683:46: info: index check proved (CVC4: 2 VC)
binary_trees.adb:683:48: info: index check proved (CVC4: 2 VC)
binary_trees.adb:696:30: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:696:30: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:702:30: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:702:30: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:706:11: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:706:11: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:706:11: medium: postcondition might fail, cannot prove Model (F, Root) (V).K
binary_trees.adb:706:28: info: index check proved (CVC4: 2 VC)
binary_trees.adb:712:26: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:712:26: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:713:28: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:713:28: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:713:45: info: index check proved (CVC4: 2 VC)
binary_trees.adb:713:53: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:713:53: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:714:30: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:714:30: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:714:44: info: range check proved (CVC4: 2 VC)
binary_trees.adb:715:30: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:715:30: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:719:26: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:719:26: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:719:57: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:719:57: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:722:26: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:722:26: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:722:40: info: range check proved (CVC4: 2 VC)
binary_trees.adb:722:54: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:722:54: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:726:26: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:726:26: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:726:57: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:726:57: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:726:81: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:726:81: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:732:26: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:732:26: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:732:40: info: range check proved (CVC4: 2 VC)
binary_trees.adb:733:25: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:733:41: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:733:41: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:733:58: info: index check proved (CVC4: 2 VC)
binary_trees.adb:734:41: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:734:41: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:734:55: info: range check proved (CVC4: 2 VC)
binary_trees.adb:735:41: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:735:41: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:739:60: info: index check proved (CVC4: 2 VC)
binary_trees.adb:740:25: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:740:25: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:740:39: info: range check proved (CVC4: 2 VC)
binary_trees.adb:740:44: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:740:44: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:740:54: info: range check proved (CVC4: 2 VC)
binary_trees.adb:745:16: info: loop invariant initialization proved (CVC4: 2 VC; Trivial: 1 VC)
binary_trees.adb:746:29: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:746:29: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:746:46: info: index check proved (CVC4: 4 VC)
binary_trees.adb:747:29: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:747:29: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:748:37: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:748:37: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:750:24: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:750:24: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:750:41: info: index check proved (CVC4: 4 VC)
binary_trees.adb:750:49: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:750:49: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:751:26: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:751:26: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:751:26: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove Model (F_Old, V) (I).K
binary_trees.adb:751:40: info: range check proved (CVC4: 4 VC)
binary_trees.adb:752:26: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:752:26: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:757:16: info: loop invariant initialization proved (CVC4: 1 VC; Trivial: 1 VC)
binary_trees.adb:757:16: info: loop invariant preservation proved (CVC4: 1 VC; Trivial: 1 VC)
binary_trees.adb:758:21: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:758:21: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:758:64: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:758:64: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:759:23: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:759:23: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:765:16: info: loop invariant initialization proved (CVC4: 1 VC; Trivial: 1 VC)
binary_trees.adb:766:21: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:766:21: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:766:35: info: range check proved (CVC4: 4 VC)
binary_trees.adb:767:37: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:767:37: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:767:51: info: range check proved (CVC4: 4 VC)
binary_trees.adb:768:29: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:768:29: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:768:51: info: index check proved (CVC4: 4 VC)
binary_trees.adb:768:53: info: index check proved (CVC4: 4 VC)
binary_trees.adb:769:23: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:769:23: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:769:23: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove Model (F, Root) (I).K
binary_trees.adb:777:16: info: loop invariant initialization proved (CVC4: 1 VC; Trivial: 2 VC)
binary_trees.adb:777:16: info: loop invariant preservation proved (CVC4: 1 VC; Trivial: 2 VC)
binary_trees.adb:778:21: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:778:21: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:778:60: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:778:60: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:779:23: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:779:23: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:779:54: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:779:54: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:779:78: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:779:78: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:786:16: info: loop invariant initialization proved (CVC4: 4 VC; Trivial: 2 VC)
binary_trees.adb:787:21: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:787:21: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:787:60: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:787:60: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:788:23: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:788:23: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:788:37: info: range check proved (CVC4: 4 VC)
binary_trees.adb:789:22: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:789:22: medium: in inlined expression function body at tree_model.ads:42
binary_trees.adb:789:22: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove Get (P, I) = Get (Q, I)
binary_trees.adb:789:38: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:789:38: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:789:55: info: index check proved (CVC4: 4 VC)
binary_trees.adb:790:38: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:790:38: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:790:52: info: range check proved (CVC4: 4 VC)
binary_trees.adb:791:38: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:791:38: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:803:19: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:803:19: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:804:35: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:804:35: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:805:27: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:805:27: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:807:19: info: precondition proved (CVC4: 6 VC)
binary_trees.adb:807:41: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:807:41: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:807:66: info: index check proved (CVC4: 4 VC)
binary_trees.adb:808:41: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:808:41: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:808:70: info: index check proved (CVC4: 4 VC)
binary_trees.adb:809:41: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:809:41: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:810:41: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:810:41: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:811:49: info: range check proved (CVC4: 4 VC)
binary_trees.adb:818:19: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:818:19: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:819:35: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:819:35: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:820:27: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:820:27: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:820:41: info: range check proved (CVC4: 4 VC)
binary_trees.adb:823:19: info: precondition proved (CVC4: 8 VC)
binary_trees.adb:823:42: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:823:42: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:823:56: info: range check proved (CVC4: 4 VC)
binary_trees.adb:823:68: info: index check proved (CVC4: 4 VC)
binary_trees.adb:824:42: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:824:42: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:824:67: info: index check proved (CVC4: 4 VC)
binary_trees.adb:825:42: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:825:42: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:825:56: info: range check proved (CVC4: 4 VC)
binary_trees.adb:826:42: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:826:42: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:827:42: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:827:42: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:827:59: info: index check proved (CVC4: 4 VC)
binary_trees.adb:828:50: info: range check proved (CVC4: 4 VC)
binary_trees.adb:835:19: info: loop invariant initialization proved (CVC4: 1 VC; Trivial: 2 VC)
binary_trees.adb:835:19: info: loop invariant preservation proved (CVC4: 1 VC; Trivial: 2 VC)
binary_trees.adb:836:24: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:836:24: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:836:41: info: index check proved (CVC4: 4 VC)
binary_trees.adb:836:63: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:836:63: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:836:80: info: index check proved (CVC4: 4 VC)
binary_trees.adb:837:26: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:837:26: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:837:47: info: index check proved (CVC4: 4 VC)
binary_trees.adb:837:57: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:837:57: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:837:74: info: index check proved (CVC4: 4 VC)
binary_trees.adb:837:81: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:837:81: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:837:102: info: index check proved (CVC4: 4 VC)
binary_trees.adb:839:19: info: loop invariant initialization proved (CVC4: 4 VC; Trivial: 2 VC)
binary_trees.adb:840:24: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:840:24: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:840:41: info: index check proved (CVC4: 4 VC)
binary_trees.adb:840:63: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:840:63: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:840:80: info: index check proved (CVC4: 4 VC)
binary_trees.adb:841:26: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:841:26: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:841:40: info: range check proved (CVC4: 4 VC)
binary_trees.adb:841:44: info: index check proved (CVC4: 4 VC)
binary_trees.adb:842:25: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:842:25: medium: in inlined expression function body at tree_model.ads:42
binary_trees.adb:842:25: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove Get (P, I) = Get (Q, I)
binary_trees.adb:842:41: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:842:41: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:842:58: info: index check proved (CVC4: 4 VC)
binary_trees.adb:843:41: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:843:41: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:843:55: info: range check proved (CVC4: 4 VC)
binary_trees.adb:843:59: info: index check proved (CVC4: 4 VC)
binary_trees.adb:844:41: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:844:41: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:844:58: info: index check proved (CVC4: 4 VC)
binary_trees.adb:857:16: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:857:16: info: precondition proved (CVC4: 6 VC)
binary_trees.adb:858:16: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:858:16: info: precondition proved (CVC4: 6 VC)
binary_trees.adb:858:45: info: range check proved (CVC4: 4 VC)
binary_trees.adb:859:16: info: precondition proved (CVC4: 14 VC; Trivial: 2 VC)
binary_trees.adb:866:55: info: index check proved (CVC4: 4 VC)
binary_trees.adb:867:20: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:867:20: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:867:20: medium: in inlined expression function body at tree_model.ads:54
binary_trees.adb:867:20: medium: in inlined expression function body at tree_model.ads:54
binary_trees.adb:867:20: medium: loop invariant might fail in first iteration, cannot prove M1 (I).K = M2 (I).K
binary_trees.adb:867:20: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove M1 (I).A = M2 (I).A
binary_trees.adb:867:30: info: range check proved (CVC4: 4 VC)
binary_trees.adb:867:35: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:867:35: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:867:49: info: range check proved (CVC4: 4 VC)
binary_trees.adb:878:15: info: index check proved (CVC4: 2 VC)
binary_trees.adb:879:15: info: index check proved (CVC4: 2 VC)
binary_trees.adb:881:10: info: precondition proved (CVC4: 14 VC; Trivial: 4 VC)
binary_trees.adb:881:10: medium: invariant check might fail
binary_trees.adb:902:09: info: data dependencies proved
binary_trees.adb:915:24: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:915:24: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:919:20: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:919:20: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:919:48: info: index check proved (CVC4: 2 VC)
binary_trees.adb:938:30: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:938:30: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:944:30: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:944:30: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:949:18: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:949:18: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:949:49: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:949:49: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:952:20: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:952:20: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:952:20: medium: postcondition might fail, cannot prove Model (F, Root) (V).K
binary_trees.adb:957:26: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:957:26: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:957:64: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:957:64: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:961:26: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:961:26: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:961:57: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:961:57: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:961:81: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:961:81: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:965:49: info: index check proved (CVC4: 2 VC)
binary_trees.adb:966:25: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:966:25: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:966:39: info: range check proved (CVC4: 2 VC)
binary_trees.adb:966:44: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:966:44: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:966:54: info: range check proved (CVC4: 2 VC)
binary_trees.adb:974:16: info: loop invariant initialization proved (CVC4: 1 VC; Trivial: 1 VC)
binary_trees.adb:975:21: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:975:21: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:975:64: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:975:64: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:976:23: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:976:23: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:976:23: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove Model (F, Root) (I).K
binary_trees.adb:981:16: info: loop invariant initialization proved (CVC4: 1 VC; Trivial: 1 VC)
binary_trees.adb:981:16: info: loop invariant preservation proved (CVC4: 1 VC; Trivial: 1 VC)
binary_trees.adb:982:21: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:982:21: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:982:64: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:982:64: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:983:23: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:983:23: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:983:47: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:983:47: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:988:16: info: loop invariant initialization proved (CVC4: 1 VC; Trivial: 1 VC)
binary_trees.adb:989:22: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:989:22: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:990:38: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:990:38: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:992:24: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:992:24: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:992:24: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove Model (F_Old, Root) (I).K
binary_trees.adb:1001:19: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:1001:19: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:1001:63: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:1001:63: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:1002:19: info: precondition proved (CVC4: 6 VC)
binary_trees.adb:1002:41: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:1002:41: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:1002:66: info: index check proved (CVC4: 4 VC)
binary_trees.adb:1003:41: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:1003:41: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:1003:70: info: index check proved (CVC4: 4 VC)
binary_trees.adb:1004:41: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:1004:41: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:1005:41: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:1005:41: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:1006:49: info: range check proved (CVC4: 4 VC)
binary_trees.adb:1013:19: info: loop invariant initialization proved (CVC4: 1 VC; Trivial: 1 VC)
binary_trees.adb:1013:19: info: loop invariant preservation proved (CVC4: 1 VC; Trivial: 1 VC)
binary_trees.adb:1014:24: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:1014:24: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:1014:45: info: index check proved (CVC4: 4 VC)
binary_trees.adb:1014:67: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:1014:67: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:1014:88: info: index check proved (CVC4: 4 VC)
binary_trees.adb:1015:23: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:1015:23: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:1015:40: info: index check proved (CVC4: 4 VC)
binary_trees.adb:1015:47: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:1015:47: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:1015:68: info: index check proved (CVC4: 4 VC)
binary_trees.adb:1028:16: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:1028:16: info: precondition proved (CVC4: 6 VC)
binary_trees.adb:1029:16: medium: precondition might fail, cannot prove F1.C (I) = F2.C (I)
binary_trees.adb:1036:44: info: index check proved (CVC4: 4 VC)
binary_trees.adb:1037:20: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:1037:20: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:1037:20: medium: in inlined expression function body at tree_model.ads:54
binary_trees.adb:1037:20: medium: in inlined expression function body at tree_model.ads:54
binary_trees.adb:1037:20: medium: loop invariant might fail in first iteration, cannot prove M1 (I).K = M2 (I).K
binary_trees.adb:1037:20: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove M1 (I).A = M2 (I).A
binary_trees.adb:1037:34: info: range check proved (CVC4: 4 VC)
binary_trees.adb:1037:39: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:1037:39: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:1037:49: info: range check proved (CVC4: 4 VC)
binary_trees.adb:1042:16: info: range check proved (CVC4: 2 VC)
binary_trees.adb:1055:18: info: range check proved (CVC4: 2 VC)
binary_trees.adb:1056:07: info: precondition proved (CVC4: 14 VC; Trivial: 4 VC)
binary_trees.adb:1056:07: medium: invariant check might fail
binary_trees.adb:1073:09: info: data dependencies proved
binary_trees.adb:1087:26: info: index check proved (CVC4: 2 VC)
binary_trees.adb:1088:16: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:1088:16: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:1088:16: medium: in inlined expression function body at tree_model.ads:54
binary_trees.adb:1088:16: medium: postcondition might fail, cannot prove M1 (I).K = M2 (I).K
binary_trees.adb:1088:30: info: range check proved (CVC4: 2 VC)
binary_trees.adb:1088:35: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:1088:35: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:1088:45: info: range check proved (CVC4: 2 VC)
binary_trees.adb:1092:45: info: invariant check proved (CVC4: 1 VC)
binary_trees.adb:1092:45: info: precondition proved (CVC4: 1 VC)
binary_trees.adb:1102:16: info: loop invariant initialization proved (CVC4: 1 VC; Trivial: 1 VC)
binary_trees.adb:1103:21: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:1103:21: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:1104:23: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove Length (Model (F, Root) (J).A) > N
binary_trees.adb:1104:31: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:1104:31: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:1113:16: info: precondition proved (CVC4: 14 VC; Trivial: 2 VC)
binary_trees.adb:1120:30: info: index check proved (CVC4: 4 VC)
binary_trees.adb:1120:53: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:1120:53: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:1120:53: medium: in inlined expression function body at tree_model.ads:54
binary_trees.adb:1120:53: medium: in inlined expression function body at tree_model.ads:54
binary_trees.adb:1120:53: medium: loop invariant might fail in first iteration, cannot prove M1 (I).K = M2 (I).K
binary_trees.adb:1120:53: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove M1 (I).A = M2 (I).A
binary_trees.adb:1120:67: info: range check proved (CVC4: 4 VC)
binary_trees.adb:1120:72: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:1120:72: info: precondition proved (CVC4: 2 VC)
binary_trees.adb:1120:82: info: range check proved (CVC4: 4 VC)
binary_trees.adb:1124:18: info: range check proved (CVC4: 2 VC)
binary_trees.adb:1125:16: info: range check proved (CVC4: 2 VC)
binary_trees.adb:1126:07: info: invariant check proved (CVC4: 2 VC)
binary_trees.adb:1126:07: info: precondition proved (CVC4: 6 VC)
binary_trees.ads:14:09: info: default initial condition proved (CVC4: 1 VC)
binary_trees.ads:14:61: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:21:14: info: postcondition proved (CVC4: 1 VC; Trivial: 1 VC)
binary_trees.ads:21:22: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:25:14: info: postcondition proved (CVC4: 2 VC; Trivial: 2 VC)
binary_trees.ads:25:18: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:26:21: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:30:13: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:34:14: info: postcondition proved (CVC4: 4 VC; Trivial: 2 VC)
binary_trees.ads:35:17: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:35:17: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:35:34: info: range check proved (CVC4: 2 VC)
binary_trees.ads:36:26: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:36:41: info: range check proved (CVC4: 2 VC)
binary_trees.ads:39:23: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:39:46: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:39:46: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:41:23: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:41:50: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:41:50: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:53:14: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:64:25: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:65:47: info: index check proved (CVC4: 2 VC)
binary_trees.ads:65:47: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:74:47: info: index check proved (CVC4: 2 VC)
binary_trees.ads:74:47: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:75:33: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:75:33: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:85:29: medium: postcondition might fail, cannot prove J = I
binary_trees.ads:93:06: info: data dependencies proved
binary_trees.ads:94:14: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:97:17: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:97:17: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:100:17: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:104:14: info: postcondition proved (CVC4: 1 VC; Trivial: 1 VC)
binary_trees.ads:105:20: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:105:20: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:106:29: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:106:29: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:106:53: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:106:53: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:107:22: info: precondition proved (CVC4: 2 VC)
binary_trees.ads:107:27: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:107:27: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:107:58: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:107:58: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:107:81: info: overflow check proved (CVC4: 2 VC)
binary_trees.ads:114:06: info: data dependencies proved
binary_trees.ads:116:17: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:117:17: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:118:14: info: postcondition proved (CVC4: 1 VC)
binary_trees.ads:119:21: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:119:21: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:119:48: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:119:48: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:121:14: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:124:23: info: initialization of "V" proved
binary_trees.ads:131:08: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:134:17: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:134:17: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:137:08: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:137:19: medium: invariant check might fail
binary_trees.ads:140:17: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:143:21: medium: invariant check might fail [possible explanation: enclosing 'Old attribute reference is unconditionally evaluated on subprogram entry]
binary_trees.ads:144:17: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:149:25: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:149:41: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:154:34: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:155:25: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:155:25: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:155:43: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:155:43: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:161:27: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:161:44: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:166:23: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:167:25: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:171:23: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:172:25: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:172:25: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:172:25: medium: postcondition might fail, cannot prove Model (F, T) = Model (F'Old, T)
binary_trees.ads:172:40: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:172:40: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:175:37: medium: invariant check might fail
binary_trees.ads:175:52: info: range check proved (CVC4: 2 VC)
binary_trees.ads:181:23: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:181:23: medium: invariant check might fail [possible explanation: enclosing 'Old attribute reference is unconditionally evaluated on subprogram entry]
binary_trees.ads:183:37: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:183:37: medium: invariant check might fail [possible explanation: enclosing 'Old attribute reference is unconditionally evaluated on subprogram entry]
binary_trees.ads:183:58: info: index check proved (CVC4: 2 VC)
binary_trees.ads:183:66: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:183:66: medium: invariant check might fail [possible explanation: enclosing 'Old attribute reference is unconditionally evaluated on subprogram entry]
binary_trees.ads:184:31: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:184:31: medium: invariant check might fail
binary_trees.ads:184:41: info: range check proved (CVC4: 2 VC)
binary_trees.ads:185:31: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:185:31: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:190:23: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:190:23: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:190:50: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:190:50: medium: invariant check might fail [possible explanation: enclosing 'Old attribute reference is unconditionally evaluated on subprogram entry]
binary_trees.ads:195:43: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:195:43: medium: invariant check might fail
binary_trees.ads:195:53: info: range check proved (CVC4: 2 VC)
binary_trees.ads:195:67: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:195:67: medium: invariant check might fail [possible explanation: enclosing 'Old attribute reference is unconditionally evaluated on subprogram entry]
binary_trees.ads:199:23: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:199:23: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:199:50: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:199:50: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:199:74: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:199:74: medium: invariant check might fail [possible explanation: enclosing 'Old attribute reference is unconditionally evaluated on subprogram entry]
binary_trees.ads:204:43: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:204:43: medium: invariant check might fail
binary_trees.ads:204:53: info: range check proved (CVC4: 2 VC)
binary_trees.ads:205:25: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:205:41: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:205:41: medium: invariant check might fail
binary_trees.ads:205:62: info: index check proved (CVC4: 2 VC)
binary_trees.ads:206:41: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:206:41: medium: invariant check might fail
binary_trees.ads:206:51: info: range check proved (CVC4: 2 VC)
binary_trees.ads:207:41: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:207:41: medium: invariant check might fail
binary_trees.ads:209:14: medium: invariant check might fail
binary_trees.ads:219:08: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:222:17: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:222:17: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:225:17: medium: invariant check might fail
binary_trees.ads:231:37: medium: invariant check might fail
binary_trees.ads:231:52: info: range check proved (CVC4: 2 VC)
binary_trees.ads:234:08: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:234:19: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:237:21: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:241:23: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:241:66: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:243:23: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:243:46: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:248:25: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:248:41: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:253:34: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:254:25: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:254:25: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:254:43: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:254:43: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:260:27: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:260:44: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:265:23: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:265:23: medium: invariant check might fail [possible explanation: enclosing 'Old attribute reference is unconditionally evaluated on subprogram entry]
binary_trees.ads:265:54: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:265:54: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:270:43: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:270:43: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:270:57: info: range check proved (CVC4: 2 VC)
binary_trees.ads:271:25: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:271:25: medium: invariant check might fail
binary_trees.ads:277:23: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:277:23: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:278:49: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:278:49: medium: invariant check might fail
binary_trees.ads:278:66: info: index check proved (CVC4: 2 VC)
binary_trees.ads:278:74: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:278:74: medium: invariant check might fail
binary_trees.ads:279:31: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:279:31: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:279:45: info: range check proved (CVC4: 2 VC)
binary_trees.ads:280:31: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:280:31: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:284:23: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:284:23: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:285:25: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:285:25: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:285:49: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:285:49: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:291:43: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:291:43: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:291:57: info: range check proved (CVC4: 2 VC)
binary_trees.ads:292:25: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:292:41: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:292:41: medium: invariant check might fail
binary_trees.ads:292:58: info: index check proved (CVC4: 2 VC)
binary_trees.ads:292:58: medium: invariant check might fail
binary_trees.ads:293:41: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:293:41: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:293:55: info: range check proved (CVC4: 2 VC)
binary_trees.ads:294:41: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:294:41: medium: invariant check might fail
binary_trees.ads:298:23: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:299:25: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:299:25: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:299:25: medium: postcondition might fail, cannot prove Model (F, T) = Model (F'Old, T)
binary_trees.ads:299:40: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:299:40: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:301:14: medium: invariant check might fail
binary_trees.ads:304:22: info: initialization of "V" proved
binary_trees.ads:311:08: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:314:17: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:314:17: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:317:17: medium: invariant check might fail
binary_trees.ads:320:17: medium: invariant check might fail
binary_trees.ads:323:08: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:323:19: medium: invariant check might fail
binary_trees.ads:326:17: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:326:17: medium: invariant check might fail
binary_trees.ads:329:17: medium: invariant check might fail
binary_trees.ads:333:23: medium: invariant check might fail
binary_trees.ads:333:50: medium: invariant check might fail
binary_trees.ads:334:29: medium: invariant check might fail
binary_trees.ads:337:17: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:337:17: medium: invariant check might fail
binary_trees.ads:338:21: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:338:21: medium: invariant check might fail [possible explanation: enclosing 'Old attribute reference is unconditionally evaluated on subprogram entry]
binary_trees.ads:343:25: medium: invariant check might fail
binary_trees.ads:343:41: medium: invariant check might fail
binary_trees.ads:348:34: medium: invariant check might fail
binary_trees.ads:349:25: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:349:25: medium: invariant check might fail
binary_trees.ads:349:43: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:349:43: medium: invariant check might fail
binary_trees.ads:355:27: medium: invariant check might fail
binary_trees.ads:355:44: medium: invariant check might fail
binary_trees.ads:360:23: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:360:23: medium: invariant check might fail
binary_trees.ads:361:25: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:361:25: medium: invariant check might fail [possible explanation: enclosing 'Old attribute reference is unconditionally evaluated on subprogram entry]
binary_trees.ads:365:23: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:365:23: medium: invariant check might fail [possible explanation: enclosing 'Old attribute reference is unconditionally evaluated on subprogram entry]
binary_trees.ads:365:54: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:365:54: medium: invariant check might fail
binary_trees.ads:369:23: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:369:23: medium: invariant check might fail
binary_trees.ads:370:25: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:370:25: medium: invariant check might fail
binary_trees.ads:370:49: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:370:49: medium: invariant check might fail [possible explanation: enclosing 'Old attribute reference is unconditionally evaluated on subprogram entry]
binary_trees.ads:373:17: medium: postcondition might fail, cannot prove Is_Add (Model (F, Root) (I).A, D, Model (F, Root) (V).A)
binary_trees.ads:373:25: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:373:25: medium: invariant check might fail
binary_trees.ads:373:51: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:373:51: medium: invariant check might fail
binary_trees.ads:377:37: medium: invariant check might fail
binary_trees.ads:378:25: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:378:25: medium: invariant check might fail
binary_trees.ads:378:40: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:378:40: medium: invariant check might fail
binary_trees.ads:380:14: medium: invariant check might fail
binary_trees.ads:380:39: info: initialization of "Root" proved
binary_trees.ads:383:14: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:384:14: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:384:14: info: postcondition proved (CVC4: 9 VC; Trivial: 5 VC)
binary_trees.ads:384:25: info: invariant check proved (CVC4: 1 VC)
binary_trees.ads:387:21: medium: invariant check might fail
binary_trees.ads:388:17: medium: invariant check might fail
binary_trees.ads:391:45: medium: invariant check might fail
binary_trees.ads:391:61: medium: invariant check might fail
binary_trees.ads:395:23: medium: invariant check might fail
binary_trees.ads:395:51: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:395:51: medium: invariant check might fail
binary_trees.ads:395:69: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:395:69: medium: invariant check might fail
binary_trees.ads:399:23: medium: invariant check might fail
binary_trees.ads:399:50: medium: invariant check might fail
binary_trees.ads:401:23: medium: invariant check might fail
binary_trees.ads:401:60: medium: invariant check might fail
binary_trees.ads:405:23: medium: invariant check might fail
binary_trees.ads:405:50: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:405:50: medium: invariant check might fail
binary_trees.ads:405:65: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:405:65: medium: invariant check might fail
binary_trees.ads:409:42: info: precondition proved (CVC4: 1 VC)
binary_trees.ads:409:42: medium: invariant check might fail
binary_trees.ads:418:09: info: invariant check proved on default value (CVC4: 1 VC)
binary_trees.ads:427:06: info: data dependencies proved
red_black_trees.adb:510:07: info: initialization of "X" proved
red_black_trees.adb:510:10: info: initialization of "Y" proved
search_trees.adb:19:07: info: initialization of "S" proved
search_trees.adb:234:06: info: data dependencies proved
search_trees.adb:395:06: info: data dependencies proved
search_trees.adb:584:06: info: data dependencies proved
search_trees.adb:633:06: info: data dependencies proved
search_trees.adb:665:06: info: data dependencies proved
search_trees.adb:717:07: info: initialization of "X" proved
search_trees.adb:717:10: info: initialization of "Y" proved
search_trees.adb:718:07: info: initialization of "YL" proved
search_trees.adb:729:07: info: initialization of "Dummy_1" proved
search_trees.adb:729:16: info: initialization of "Dummy_2" proved
search_trees.adb:729:25: info: initialization of "Dummy_3" proved
search_trees.adb:729:34: info: initialization of "Dummy_4" proved
search_trees.adb:729:43: info: initialization of "Dummy_5" proved
search_trees.adb:950:07: info: analyzing call to "Prove_Extract_X" in context
search_trees.adb:955:07: info: analyzing call to "Prove_Extract_Y" in context
search_trees.adb:960:07: info: analyzing call to "Prove_Extract_YL" in context
search_trees.adb:965:07: info: analyzing call to "Prove_Plug_YL" in context
search_trees.adb:970:07: info: analyzing call to "Prove_Plug_X" in context
search_trees.adb:978:10: info: analyzing call to "Prove_Plug_Y" in context
search_trees.adb:1000:07: info: initialization of "X" proved
search_trees.adb:1000:10: info: initialization of "Y" proved
search_trees.adb:1001:07: info: initialization of "XR" proved
search_trees.adb:1231:07: info: analyzing call to "Prove_Extract_Y" in context
search_trees.adb:1236:07: info: analyzing call to "Prove_Extract_X" in context
search_trees.adb:1241:07: info: analyzing call to "Prove_Extract_XR" in context
search_trees.adb:1246:07: info: analyzing call to "Prove_Plug_XR" in context
search_trees.adb:1251:07: info: analyzing call to "Prove_Plug_Y" in context
search_trees.adb:1259:10: info: analyzing call to "Prove_Plug_X" in context
search_trees.adb:1334:09: info: data dependencies proved
search_trees.ads:46:44: info: initialization of "I" proved
tree_model.ads:41:18: info: overflow check proved (CVC4: 2 VC)
tree_model.ads:42:49: info: precondition proved (CVC4: 2 VC)
tree_model.ads:42:62: info: precondition proved (CVC4: 2 VC)
tree_model.ads:44:18: info: precondition proved (CVC4: 2 VC)
tree_model.ads:44:28: info: overflow check proved (CVC4: 2 VC)
tree_model.ads:44:44: info: precondition proved (CVC4: 2 VC)
tree_model.ads:45:41: info: overflow check proved (CVC4: 2 VC)
tree_model.ads:46:18: info: precondition proved (CVC4: 2 VC)
tree_model.ads:46:28: info: overflow check proved (CVC4: 2 VC)
tree_model.ads:46:28: info: range check proved (CVC4: 2 VC)
tree_model.ads:46:44: info: precondition proved (CVC4: 2 VC)
tree_model.ads:46:52: info: range check proved (CVC4: 2 VC)
tree_model.ads:59:16: info: precondition proved (CVC4: 2 VC)
tree_model.ads:63:06: info: data dependencies proved
tree_model.ads:67:14: info: postcondition proved (CVC4: 1 VC)
tree_model.ads:71:06: info: data dependencies proved
tree_model.ads:73:17: info: precondition proved (CVC4: 1 VC)
tree_model.ads:76:14: info: postcondition proved (CVC4: 4 VC)
tree_model.ads:76:14: info: precondition proved (CVC4: 1 VC)






+==========================================================================+
+==========================================================================+
+===========================GNAT BUG DETECTED==============================+
+===========================GNAT BUG DETECTED==============================+
binary_trees.ads
binary_trees.ads
red_black_trees.adb
red_black_trees.ads
search_trees.adb
search_trees.ads
search_trees.ads
tree_model.ads
tree_model.ads
Consider also -gnatd.n switch (see debug.adb).
Consider also -gnatd.n switch (see debug.adb).
Note that list may not be accurate in some cases,
Note that list may not be accurate in some cases,
Please include these source files with error report
Please include these source files with error report
be reproduced with the set of files listed.
be reproduced with the set of files listed.
compilation abandoned
compilation abandoned
gnatprove: error during flow analysis and proof
so please double check that the problem can still
so please double check that the problem can still
| Also include sources listed below.                                       |
| Also include sources listed below.                                       |
| Compiling red_black_trees.adb       |
| Compiling search_trees.adb          |
| Error detected at binary_trees.ads:422:29                                |
| Error detected at binary_trees.ads:422:29                                |
| Include the entire contents of this bug box in the report.               |
| Include the entire contents of this bug box in the report.               |
| Include the exact command that you entered.                              |
| Include the exact command that you entered.                              |
| Or submit a bug report by email to report@adacore.com                    |
| Or submit a bug report by email to report@adacore.com                    |
| Please submit a bug report using GNAT Tracker:                           |
| Please submit a bug report using GNAT Tracker:                           |
| Pro 23.0w (19940713) (spark) Assert_Failure predicate failed at why-conversions.ads:6231|
| Pro 23.0w (19940713) (spark) Assert_Failure predicate failed at why-conversions.ads:6231|
| Use a subject line meaningful to you and us to track the bug.            |
| Use a subject line meaningful to you and us to track the bug.            |
| Use plain ASCII or MIME attachment(s).                                   |
| Use plain ASCII or MIME attachment(s).                                   |
| and include your customer number #nnn in the subject line.               |
| and include your customer number #nnn in the subject line.               |
| https://www.adacore.com/login section 'Create New Ticket'.               |
| https://www.adacore.com/login section 'Create New Ticket'.               |
