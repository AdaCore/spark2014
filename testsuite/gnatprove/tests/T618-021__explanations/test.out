inline.adb:12:14: warning: subprogram "A" has no effect
inline.adb:14:14: warning: subprogram "B" has no effect
inline.adb:16:20: medium: aspect Always_Terminates on "B" could be incorrect, "B" and "A" are mutually recursive [possible fix: annotate "B" and "A" with Subprogram_Variant aspects]
inline.adb:21:20: medium: aspect Always_Terminates on "A" could be incorrect, "A" and "B" are mutually recursive [possible fix: annotate "A" and "B" with Subprogram_Variant aspects]
mutually_recursive_nested_package.adb:1:10: info: implicit aspect Always_Terminates on "Mutually_Recursive_Nested_Package" has been proved, subprogram will terminate
mutually_recursive_nested_package.adb:1:10: info: implicit function contract might not be available on recursive calls
mutually_recursive_nested_package.adb:2:17: medium: implicit aspect Always_Terminates on "P" could be incorrect, "P" and "Mutually_Recursive_Nested_Package" are mutually recursive [possible fix: annotate "P" and "Mutually_Recursive_Nested_Package" with Subprogram_Variant aspects]
mutually_recursive_nested_package.adb:2:17: warning: initialization of "X" has no effect
nonterminating.adb:1:11: warning: subprogram "Nonterminating" has no effect
nonterminating.adb:4:14: info: add a contract to analyze it separately from calling contexts
nonterminating.adb:4:14: info: local subprogram "Infinite_Loop" only analyzed in the context of calls
nonterminating.adb:4:14: warning: subprogram "Infinite_Loop" has no effect
nonterminating.adb:7:20: medium: aspect Always_Terminates on "Nonterminating" could be incorrect, loop might be nonterminating, in call inlined at nonterminating.adb:21 [possible fix: add loop variant in the loop body]
nonterminating.adb:8:15: medium: overflow check might fail, cannot prove upper bound for -X, in call inlined at nonterminating.adb:21 (e.g. when X = Integer'First) [reason for check: result of negation must fit in a 32-bits machine integer]
nonterminating.adb:12:33: warning: unused variable "I"
nonterminating.adb:14:07: medium: implicit aspect Always_Terminates on "Infinite_Recursion" could be incorrect, subprogram is recursive [possible fix: annotate "Infinite_Recursion" with a Subprogram_Variant aspect]
nonterminating.adb:14:14: info: analyzing call to "Infinite_Recursion" in context
nonterminating.adb:14:14: info: no contextual analysis of call to recursive subprogram
nonterminating.adb:18:33: medium: aspect Always_Terminates on "Nonterminating" could be incorrect, loop might be nonterminating [possible fix: add loop variant in the loop body]
nonterminating.adb:18:33: warning: loop condition is stable
nonterminating.adb:21:04: info: analyzing call to "Infinite_Loop" in context
nonterminating.adb:25:07: medium: aspect Always_Terminates on "Nonterminating" could be incorrect, subprogram is recursive [possible fix: annotate "Nonterminating" with a Subprogram_Variant aspect]
nonterminating.adb:25:25: info: range check proved (CVC5: 2 VC)
p.adb:3:11: high: all paths in "P" raise exceptions or do not terminate normally
p.adb:5:04: medium: unexpected exception might be raised [possible explanation: No_Return procedures have an implicit exceptional contract]
p.adb:5:04: warning: assuming "Crash" has no effect on global items
p.adb:5:04: warning: no Global contract available for "Crash"
