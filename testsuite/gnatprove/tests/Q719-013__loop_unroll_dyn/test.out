loops_static.adb:6:13: medium: array index check might fail (e.g. when A = (others => 0) and A'First = 2 and I = 1)
loops_static.adb:8:46: info: range check proved (CVC4: 4 VC)
loops_static.adb:11:47: medium: assertion might fail, cannot prove A_Begins (I) = 0 (e.g. when A_Begins = (0 => 1, others => 0) and A_Begins'First = 0 and A_Begins'Last = 1 and I = 0)
loops_static.adb:11:57: info: index check proved (CVC4: 2 VC)
loops_static.adb:14:07: medium: assertion might fail
loops_static.adb:17:04: warning: analyzing unreferenced procedure "Loop11"
loops_static.adb:17:14: high: all paths in "Loop11" raise exceptions or do not terminate normally
loops_static.adb:17:22: warning: "A" is not modified, could be IN
loops_static.adb:21:16: medium: array index check might fail (e.g. when A = (others => 0) and A'First = 2 and I = 1)
loops_static.adb:23:49: info: range check proved (CVC4: 4 VC)
loops_static.adb:26:50: medium: assertion might fail, cannot prove A_Begins (I) = 0 (e.g. when A_Begins = (0 => 1, others => 0) and A_Begins'First = 0 and A_Begins'Last = 1 and I = 0)
loops_static.adb:26:60: info: index check proved (CVC4: 2 VC)
loops_static.adb:30:07: medium: assertion might fail
loops_static.adb:36:13: medium: array index check might fail (e.g. when A = (others => 0) and A'First = 2 and I = 1)
loops_static.adb:38:46: medium: overflow check might fail (e.g. when A'First = -2147483647 and A_Length = 0 and I = 1)
loops_static.adb:38:56: info: range check proved (CVC4: 2 VC)
loops_static.adb:38:56: medium: overflow check might fail (e.g. when A_Length = 0)
loops_static.adb:41:46: medium: assertion might fail, cannot prove A (A'First + I) = 0 (e.g. when A = (0 => 1, others => 0) and A'First = -1 and A_Length = 3 and I = 1)
loops_static.adb:41:57: info: overflow check proved (CVC4: 2 VC)
loops_static.adb:41:57: medium: array index check might fail (e.g. when A'Last = 1)
loops_static.adb:44:07: medium: assertion might fail
loops_static.adb:51:13: medium: array index check might fail (e.g. when A = (others => 0) and A'First = 2 and I = 1)
loops_static.adb:53:19: info: index check proved (CVC4: 4 VC)
loops_static.adb:58:42: medium: assertion might fail, cannot prove A (J) = 0 (e.g. when A = (0 => 1, others => 0) and A'First = 0 and I = 1 and J = 0)
loops_static.adb:58:45: info: index check proved (CVC4: 4 VC)
loops_static.adb:60:07: medium: assertion might fail
loops_static.adb:66:13: medium: array index check might fail (e.g. when A = (others => 0) and A'First = 2 and I = 1)
loops_static.adb:68:42: medium: assertion might fail, cannot prove A (J) = 0 (e.g. when A = (0 => 1, others => 0) and A'First = 0 and I = 1 and J = 0)
loops_static.adb:68:45: info: index check proved (CVC4: 2 VC)
loops_static.adb:70:46: info: range check proved (CVC4: 4 VC)
loops_static.adb:73:22: info: index check proved (CVC4: 2 VC)
loops_static.adb:79:07: medium: assertion might fail
loops_static.adb:86:13: medium: array index check might fail (e.g. when A = (others => 0) and A'First = 2 and I = 1)
loops_static.adb:89:22: info: index check proved (CVC4: 4 VC)
loops_static.adb:95:42: medium: assertion might fail, cannot prove A (J) = 0 (e.g. when A = (0 => 1, others => 0) and A'First = 0 and I = 1 and J = 0)
loops_static.adb:95:45: info: index check proved (CVC4: 4 VC)
loops_static.adb:97:07: medium: assertion might fail
loops_static.adb:104:13: medium: array index check might fail (e.g. when A = (others => 0) and A'First = 2 and I = 1)
loops_static.adb:109:22: info: index check proved (CVC4: 4 VC)
loops_static.adb:115:42: medium: assertion might fail, cannot prove A (J) = 0 (e.g. when A = (0 => 1, others => 0) and A'First = 0 and I = 1 and J = 0)
loops_static.adb:115:45: info: index check proved (CVC4: 4 VC)
loops_static.adb:117:07: medium: assertion might fail
loops_static.adb:124:13: medium: array index check might fail (e.g. when A = (others => 0) and A'First = 2 and I = 1)
loops_static.adb:129:22: info: index check proved (CVC4: 4 VC)
loops_static.adb:135:42: medium: assertion might fail, cannot prove A (J) = 0 (e.g. when A = (0 => 1, others => 0) and A'First = 0 and I = 1 and J = 0)
loops_static.adb:135:45: info: index check proved (CVC4: 4 VC)
loops_static.adb:137:07: medium: assertion might fail
loops_static.adb:144:13: medium: array index check might fail (e.g. when A = (others => 0) and A'First = 2 and I = 1)
loops_static.adb:149:25: info: index check proved (CVC4: 4 VC)
loops_static.adb:155:42: medium: assertion might fail, cannot prove A (J) = 0 (e.g. when A = (0 => 1, others => 0) and A'First = 0 and I = 1 and J = 0)
loops_static.adb:155:45: info: index check proved (CVC4: 4 VC)
loops_static.adb:157:07: medium: assertion might fail
loops_static.adb:164:13: medium: array index check might fail (e.g. when I = 1 and R = (others => 0) and R'First = 2)
loops_static.adb:164:16: info: initialization of "R" proved
loops_static.adb:166:13: info: initialization of "Bad" proved
loops_static.adb:169:22: info: initialization of "R" proved
loops_static.adb:169:25: info: index check proved (CVC4: 4 VC)
loops_static.adb:176:42: info: initialization of "R" proved
loops_static.adb:176:42: medium: assertion might fail, cannot prove R (J) = 0 (e.g. when A = (0 => 1, others => 0) and A'First = 0 and A'Last = 2 and I = 1 and J = 0 and R = (0 => 1, others => 0))
loops_static.adb:176:45: info: index check proved (CVC4: 4 VC)
loops_static.adb:178:07: medium: assertion might fail
loops_static.adb:187:13: medium: array index check might fail (e.g. when I = 1 and R = (others => 0) and R'First = 2)
loops_static.adb:187:16: info: initialization of "R" proved
loops_static.adb:189:13: info: initialization of "Res" proved
loops_static.adb:189:20: info: range check proved (CVC4: 2 VC)
loops_static.adb:190:20: info: length check proved (CVC4: 1 VC)
loops_static.adb:190:23: info: initialization of "R" proved
loops_static.adb:190:23: info: length check proved (CVC4: 1 VC)
loops_static.adb:194:42: info: initialization of "R" proved
loops_static.adb:194:42: medium: assertion might fail, cannot prove R (J) = 0 (e.g. when A = (others => 1) and A'First = 0 and A'Last = 2 and I = 1 and J = 0 and R = (1 => 0, others => 1))
loops_static.adb:194:45: info: index check proved (CVC4: 2 VC)
loops_static.adb:196:07: medium: assertion might fail
loops_static.ads:4:14: high: all paths in "Loop1" raise exceptions or do not terminate normally
loops_static.ads:4:21: warning: "A" is not modified, could be IN
loops_static.ads:6:14: high: all paths in "Loop2" raise exceptions or do not terminate normally
loops_static.ads:6:21: warning: "A" is not modified, could be IN
loops_static.ads:8:14: high: all paths in "Loop3" raise exceptions or do not terminate normally
loops_static.ads:8:21: warning: "A" is not modified, could be IN
loops_static.ads:10:14: high: all paths in "Loop4" raise exceptions or do not terminate normally
loops_static.ads:10:21: warning: "A" is not modified, could be IN
loops_static.ads:12:14: high: all paths in "Loop5" raise exceptions or do not terminate normally
loops_static.ads:12:21: warning: "A" is not modified, could be IN
loops_static.ads:14:14: high: all paths in "Loop6" raise exceptions or do not terminate normally
loops_static.ads:14:21: warning: "A" is not modified, could be IN
loops_static.ads:16:14: high: all paths in "Loop7" raise exceptions or do not terminate normally
loops_static.ads:16:21: warning: "A" is not modified, could be IN
loops_static.ads:18:14: high: all paths in "Loop8" raise exceptions or do not terminate normally
loops_static.ads:18:21: warning: "A" is not modified, could be IN
