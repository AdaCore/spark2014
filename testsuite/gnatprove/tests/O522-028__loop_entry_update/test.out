a-cfdlli.ads:468:49: info: overflow check proved (CVC4: 1 VC), in instantiation at loop_types.ads:16
a-cfdlli.ads:609:49: info: overflow check proved (CVC4: 1 VC), in instantiation at loop_types.ads:16
a-cfdlli.ads:699:57: info: overflow check proved (CVC4: 1 VC), in instantiation at loop_types.ads:16
a-cfdlli.ads:765:57: info: overflow check proved (CVC4: 1 VC), in instantiation at loop_types.ads:16
a-cfdlli.ads:851:28: info: overflow check proved (CVC4: 1 VC), in instantiation at loop_types.ads:16
a-cfdlli.ads:851:39: info: precondition proved (CVC4: 1 VC), in instantiation at loop_types.ads:16
a-cfdlli.ads:1027:43: info: overflow check proved (CVC4: 1 VC), in instantiation at loop_types.ads:16
a-cfdlli.ads:1208:06: info: disjoint contract cases proved (CVC4: 1 VC), in instantiation at loop_types.ads:16
a-cfdlli.ads:1347:20: info: precondition proved (CVC4: 1 VC), in instantiation at loop_types.ads:16
a-cfdlli.ads:1362:20: info: precondition proved (CVC4: 1 VC), in instantiation at loop_types.ads:16
a-cfdlli.ads:1377:20: info: precondition proved (CVC4: 1 VC), in instantiation at loop_types.ads:16
a-cfdlli.ads:1392:20: info: precondition proved (CVC4: 1 VC), in instantiation at loop_types.ads:16
a-cfdlli.ads:1414:14: info: precondition proved (CVC4: 2 VC), in instantiation at loop_types.ads:16
a-cfdlli.ads:1469:14: info: precondition proved (CVC4: 1 VC), in instantiation at loop_types.ads:16
a-cfdlli.ads:1476:23: info: precondition proved (CVC4: 1 VC), in instantiation at loop_types.ads:16
a-cofove.ads:596:57: info: range check proved (CVC4: 1 VC), in instantiation at loop_types.ads:13
a-cofove.ads:724:23: info: precondition proved (CVC4: 1 VC), in instantiation at loop_types.ads:13
a-cofove.ads:727:38: info: range check proved (CVC4: 1 VC), in instantiation at loop_types.ads:13
a-cofove.ads:760:14: info: precondition proved (CVC4: 1 VC), in instantiation at loop_types.ads:13
a-cofove.ads:764:35: info: range check proved (CVC4: 1 VC), in instantiation at loop_types.ads:13
a-cofuve.ads:230:54: info: overflow check proved (CVC4: 1 VC), in instantiation at a-cfdlli.ads:68, in instantiation at loop_types.ads:16
a-cofuve.ads:230:54: info: overflow check proved (CVC4: 1 VC), in instantiation at a-cofove.ads:96, in instantiation at loop_types.ads:13
a-cofuve.ads:235:63: info: range check proved (CVC4: 1 VC), in instantiation at a-cfdlli.ads:68, in instantiation at loop_types.ads:16
a-cofuve.ads:235:63: info: range check proved (CVC4: 1 VC), in instantiation at a-cofove.ads:96, in instantiation at loop_types.ads:13
a-cofuve.ads:236:59: info: overflow check proved (CVC4: 1 VC), in instantiation at a-cfdlli.ads:68, in instantiation at loop_types.ads:16
a-cofuve.ads:236:59: info: overflow check proved (CVC4: 1 VC), in instantiation at a-cofove.ads:96, in instantiation at loop_types.ads:13
a-cofuve.ads:236:76: info: overflow check proved (CVC4: 1 VC), in instantiation at a-cfdlli.ads:68, in instantiation at loop_types.ads:16
a-cofuve.ads:236:76: info: overflow check proved (CVC4: 1 VC), in instantiation at a-cofove.ads:96, in instantiation at loop_types.ads:13
a-cofuve.ads:237:30: info: range check proved (CVC4: 1 VC), in instantiation at a-cfdlli.ads:68, in instantiation at loop_types.ads:16
a-cofuve.ads:237:30: info: range check proved (CVC4: 1 VC), in instantiation at a-cofove.ads:96, in instantiation at loop_types.ads:13
a-cofuve.ads:298:52: info: overflow check proved (CVC4: 1 VC), in instantiation at a-cfdlli.ads:68, in instantiation at loop_types.ads:16
a-cofuve.ads:298:52: info: overflow check proved (CVC4: 1 VC), in instantiation at a-cofove.ads:96, in instantiation at loop_types.ads:13
loop_entry_test.adb:9:30: info: cannot unroll loop (too many loop iterations)
loop_entry_test.adb:21:33: info: loop invariant initialization proved (CVC4: 1 VC)
loop_entry_test.adb:21:33: info: loop invariant preservation proved (CVC4: 1 VC)
loop_entry_test.adb:21:37: info: initialization of "A_Loop_Entry" proved
loop_entry_test.adb:21:67: info: range check proved (CVC4: 2 VC)
loop_entry_test.ads:8:14: medium: postcondition might fail, cannot prove A = A'Old'update (e.g. when A = (1 => 1, others => 0) and A'Old = (1 => 1, others => 0) and First = 1 and Last = 2)
loop_entry_test.ads:11:14: info: postcondition proved (CVC4: 1 VC)
