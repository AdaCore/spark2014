call_actuals.adb:8:14: medium: overflow check might fail (e.g. when G = Integer'Last and Y = 0) [possible explanation: subprogram at line 5 should mention G in a precondition]
call_actuals.adb:13:12: medium: range check might fail (e.g. when G = -1 and X = 0) [possible explanation: subprogram at line 11 should mention G in a precondition]
call_actuals.adb:14:14: info: range check proved (CodePeer)
call_actuals.adb:14:14: medium: overflow check might fail (e.g. when G = Integer'Last and Y = 0) [possible explanation: subprogram at line 11 should mention G in a precondition]
call_actuals.adb:19:14: medium: range check might fail (e.g. when G = -21 and X = 0) [possible explanation: subprogram at line 17 should mention G in a precondition]
call_actuals.adb:20:14: info: range check proved (CodePeer)
call_actuals.adb:20:17: medium: range check might fail (e.g. when Y = 0) [possible explanation: subprogram at line 17 should mention G in a precondition]
call_actuals.adb:25:15: medium: range check might fail (e.g. when G = -1 and X = 0) [possible explanation: subprogram at line 23 should mention G in a precondition]
call_actuals.adb:26:15: info: range check proved (CodePeer)
call_actuals.adb:26:18: medium: range check might fail (e.g. when Y = 0) [possible explanation: subprogram at line 23 should mention G in a precondition]
call_actuals.adb:31:12: medium: range check might fail (e.g. when X = 0) [possible explanation: subprogram at line 29 should mention G in a precondition]
call_actuals.adb:31:14: medium: range check might fail (e.g. when G = -21 and X = 0) [possible explanation: subprogram at line 29 should mention G in a precondition]
call_actuals.adb:32:14: info: range check proved (CodePeer)
call_actuals.adb:32:17: medium: range check might fail (e.g. when Y = 0) [possible explanation: subprogram at line 29 should mention G in a precondition]
call_actuals.adb:38:11: info: range check proved (CVC4: 1 VC)
call_actuals.adb:38:11: medium: range check might fail (e.g. when A1 = -1 and A2 = 0)
call_actuals.adb:38:15: info: range check proved (CVC4: 1 VC)
call_actuals.adb:38:15: medium: range check might fail (e.g. when A1 = 0 and A2 = -1)
call_actuals.adb:41:11: info: range check proved (CVC4: 1 VC)
call_actuals.adb:41:18: info: range check proved (CVC4: 1 VC)
call_actuals.ads:7:18: warning: unused initial value of "X"
call_actuals.ads:7:21: warning: unused initial value of "Y"
call_actuals.ads:7:54: info: postcondition proved (CVC4: 1 VC)
call_actuals.ads:7:60: info: overflow check proved (CVC4: 1 VC)
call_actuals.ads:8:18: warning: unused initial value of "X"
call_actuals.ads:8:21: warning: unused initial value of "Y"
call_actuals.ads:8:54: info: postcondition proved (CVC4: 1 VC)
call_actuals.ads:8:60: info: overflow check proved (CVC4: 1 VC)
call_actuals.ads:9:18: warning: unused initial value of "X"
call_actuals.ads:9:21: warning: unused initial value of "Y"
call_actuals.ads:9:48: info: postcondition proved (CVC4: 1 VC)
call_actuals.ads:10:19: warning: unused initial value of "X"
call_actuals.ads:10:22: warning: unused initial value of "Y"
call_actuals.ads:10:50: info: postcondition proved (CVC4: 1 VC)
call_actuals.ads:11:18: warning: unused initial value of "X"
call_actuals.ads:11:21: warning: unused initial value of "Y"
call_actuals.ads:11:48: info: postcondition proved (CVC4: 1 VC)
