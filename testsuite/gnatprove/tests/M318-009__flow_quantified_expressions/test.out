test.adb:22:26: warning: statement has no effect
test.adb:23:28: warning: "Temp_Table" might not be initialized
test.adb:23:28: warning: unused assignment
// package_body_test_cfg
digraph G {
   graph [splines=True];
    1 [label="start",shape="plaintext"];
    2 [label="end",shape="plaintext"];
    4 [label="type table_t is array (positive range 1 .. 9) of integer;"];
    5 [label="null;"];

    1 ->  4 [arrowType="normal"];
    4 ->  5 [arrowType="normal"];
    5 ->  2 [arrowType="normal"];
}

// package_body_test_pdg
digraph G {
   graph [splines=True];
    1 [label="start",shape="plaintext"];
    4 [label="type table_t is array (positive range 1 .. 9) of integer;"];
    5 [label="null;"];

    1 ->  4 [arrowType="normal"];
    1 ->  5 [arrowType="normal"];
}

// subprogram_qe_1_cfg
digraph G {
   graph [splines=True];
    1 [label="start",shape="plaintext"];
    2 [label="end",shape="plaintext"];
    3 [label="table'initial",shape="plaintext"];
    4 [label="table'final",shape="plaintext",fontcolor="blue"];
    5 [label="x'initial",shape="plaintext"];
    6 [label="x'final",shape="plaintext",fontcolor="red"];
    7 [label="x'initial",shape="plaintext"];
    8 [label="x'final",shape="plaintext",fontcolor="red"];
    11 [label="table (10 - i) := i;\nLoops:&nbsp;L_1"];
    12 [label="i'initial",shape="plaintext"];
    13 [label="i'final",shape="plaintext",fontcolor="red"];
    14 [label="for i in reverse 1 .. 9",shape="diamond"];
    15 [label="pragma assert ( for some x in 1 .. 9 => x = table (x));<<<pragma check (assert,  for some x in 1 .. 9 => x = table (x));>>>"];
    16 [label="if ( for all x in 1 .. 9 => table (x) > 0)",shape="diamond"];
    17 [label="table (5) := 0;"];

    1 ->  11 [arrowType="normal"];
    2 ->  4 [arrowType="normal"];
    2 ->  6 [arrowType="normal"];
    2 ->  8 [arrowType="normal"];
    2 ->  13 [arrowType="normal"];
    3 ->  1 [arrowType="normal"];
    5 ->  1 [arrowType="normal"];
    7 ->  1 [arrowType="normal"];
    11 ->  14 [arrowType="normal"];
    12 ->  1 [arrowType="normal"];
    14 ->  11 [arrowType="normal"];
    14 ->  15 [arrowType="normal"];
    15 ->  16 [arrowType="normal"];
    16 ->  2 [arrowType="normal"];
    16 ->  17 [arrowType="normal"];
    17 ->  2 [arrowType="normal"];
}

// subprogram_qe_1_pdg
digraph G {
   graph [splines=True];
    1 [label="start",shape="plaintext"];
    3 [label="table'initial",shape="plaintext"];
    4 [label="table'final",shape="plaintext",fontcolor="blue"];
    5 [label="x'initial",shape="plaintext"];
    6 [label="x'final",shape="plaintext",fontcolor="red"];
    7 [label="x'initial",shape="plaintext"];
    8 [label="x'final",shape="plaintext",fontcolor="red"];
    11 [label="table (10 - i) := i;\nLoops:&nbsp;L_1"];
    12 [label="i'initial",shape="plaintext"];
    13 [label="i'final",shape="plaintext",fontcolor="red"];
    14 [label="for i in reverse 1 .. 9",shape="diamond"];
    15 [label="pragma assert ( for some x in 1 .. 9 => x = table (x));<<<pragma check (assert,  for some x in 1 .. 9 => x = table (x));>>>"];
    16 [label="if ( for all x in 1 .. 9 => table (x) > 0)",shape="diamond"];
    17 [label="table (5) := 0;"];

    1 ->  11 [arrowType="normal"];
    1 ->  14 [arrowType="normal"];
    1 ->  15 [arrowType="normal"];
    1 ->  16 [arrowType="normal"];
    3 ->  11 [arrowType="normal",color="red"];
    5 ->  6 [arrowType="normal",color="red"];
    5 ->  15 [arrowType="normal",color="red"];
    7 ->  8 [arrowType="normal",color="red"];
    7 ->  16 [arrowType="normal",color="red"];
    11 ->  4 [arrowType="normal",color="red"];
    11 ->  11 [arrowType="normal",color="red"];
    11 ->  15 [arrowType="normal",color="red"];
    11 ->  16 [arrowType="normal",color="red"];
    11 ->  17 [arrowType="normal",color="red"];
    12 ->  11 [arrowType="normal",color="red"];
    14 ->  11 [arrowType="normal"];
    14 ->  13 [arrowType="normal",color="red"];
    14 ->  14 [arrowType="normal"];
    16 ->  17 [arrowType="normal"];
    17 ->  4 [arrowType="normal",color="red"];
    17 ->  17 [arrowType="normal",color="red"];
}

// subprogram_qe_2_cfg
digraph G {
   graph [splines=True];
    1 [label="start",shape="plaintext"];
    2 [label="end",shape="plaintext"];
    3 [label="table'initial",shape="plaintext"];
    4 [label="table'final",shape="plaintext",fontcolor="blue"];
    5 [label="x'initial",shape="plaintext"];
    6 [label="x'final",shape="plaintext",fontcolor="red"];
    9 [label="call qe_1",shape="box"];
    10 [label="table'in&nbsp;:=&nbsp;table",shape="plaintext"];
    11 [label="table&nbsp;:=&nbsp;table'out",shape="plaintext"];
    12 [label="temp_table'initial",shape="plaintext",fontcolor="red"];
    13 [label="temp_table'final",shape="plaintext"];
    15 [label="temp_table (i) := i;\nLoops:&nbsp;L_3"];
    16 [label="i'initial",shape="plaintext"];
    17 [label="i'final",shape="plaintext",fontcolor="red"];
    18 [label="for i in 1 .. 9",shape="diamond"];
    19 [label="pragma assert ( for all x in 1 .. 9 => table (x) /= temp_table (x));<<<pragma check (assert,  for all x in 1 .. 9 => table (x) /= temp_table (x));>>>"];

    1 ->  9 [arrowType="normal"];
    2 ->  4 [arrowType="normal"];
    2 ->  6 [arrowType="normal"];
    2 ->  13 [arrowType="normal"];
    2 ->  17 [arrowType="normal"];
    3 ->  1 [arrowType="normal"];
    5 ->  1 [arrowType="normal"];
    9 ->  10 [arrowType="normal"];
    10 ->  11 [arrowType="normal"];
    11 ->  15 [arrowType="normal"];
    12 ->  1 [arrowType="normal"];
    15 ->  18 [arrowType="normal"];
    16 ->  1 [arrowType="normal"];
    18 ->  15 [arrowType="normal"];
    18 ->  19 [arrowType="normal"];
    19 ->  2 [arrowType="normal"];
}

// subprogram_qe_2_pdg
digraph G {
   graph [splines=True];
    1 [label="start",shape="plaintext"];
    3 [label="table'initial",shape="plaintext"];
    4 [label="table'final",shape="plaintext",fontcolor="blue"];
    5 [label="x'initial",shape="plaintext"];
    6 [label="x'final",shape="plaintext",fontcolor="red"];
    9 [label="call qe_1",shape="box"];
    10 [label="table'in&nbsp;:=&nbsp;table",shape="plaintext"];
    11 [label="table&nbsp;:=&nbsp;table'out",shape="plaintext"];
    12 [label="temp_table'initial",shape="plaintext",fontcolor="red"];
    13 [label="temp_table'final",shape="plaintext"];
    15 [label="temp_table (i) := i;\nLoops:&nbsp;L_3"];
    16 [label="i'initial",shape="plaintext"];
    17 [label="i'final",shape="plaintext",fontcolor="red"];
    18 [label="for i in 1 .. 9",shape="diamond"];
    19 [label="pragma assert ( for all x in 1 .. 9 => table (x) /= temp_table (x));<<<pragma check (assert,  for all x in 1 .. 9 => table (x) /= temp_table (x));>>>"];

    1 ->  9 [arrowType="normal"];
    1 ->  15 [arrowType="normal"];
    1 ->  18 [arrowType="normal"];
    1 ->  19 [arrowType="normal"];
    3 ->  10 [arrowType="normal",color="red"];
    5 ->  6 [arrowType="normal",color="red"];
    5 ->  19 [arrowType="normal",color="red"];
    9 ->  10 [arrowType="normal"];
    9 ->  11 [arrowType="normal"];
    10 ->  11 [arrowType="normal",color="cornflowerblue"];
    11 ->  4 [arrowType="normal",color="red"];
    11 ->  19 [arrowType="normal",color="red"];
    12 ->  15 [arrowType="normal",color="red"];
    15 ->  13 [arrowType="normal",color="red"];
    15 ->  15 [arrowType="normal",color="red"];
    15 ->  19 [arrowType="normal",color="red"];
    16 ->  15 [arrowType="normal",color="red"];
    18 ->  15 [arrowType="normal"];
    18 ->  17 [arrowType="normal",color="red"];
    18 ->  18 [arrowType="normal"];
}

