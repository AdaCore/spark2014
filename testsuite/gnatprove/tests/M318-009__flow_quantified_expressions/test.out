test.adb:15:04: warning: analyzing unreferenced procedure "QE_2"
test.adb:22:26: warning: statement has no effect
test.adb:23:28: warning: unused assignment
// package_body_test_cfg
digraph G {
   graph [splines=True];
    1 [label="start\n<VId: 1>",shape="plaintext"];
    2 [label="end\n<VId: 2>",shape="plaintext"];
    4 [label="null\nVU: {null}\n<VId: 4>",shape="plaintext",fontcolor="chartreuse"];
    6 [label="type table_t is array (positive range 1 .. 9) of integer;\n<VId: 6>"];
    7 [label="null;\n<VId: 7>"];

    1 ->  6 [arrowType="normal"];
    6 ->  7 [arrowType="normal"];
    7 ->  2 [arrowType="normal"];
}

// package_body_test_pdg
digraph G {
   graph [splines=True];
    1 [label="start\n<VId: 1>",shape="plaintext"];
    4 [label="null\nVU: {null}\n<VId: 4>",shape="plaintext",fontcolor="chartreuse"];
    6 [label="type table_t is array (positive range 1 .. 9) of integer;\n<VId: 6>"];
    7 [label="null;\n<VId: 7>"];

    1 ->  6 [arrowType="normal"];
    1 ->  7 [arrowType="normal"];
}

// subprogram_qe_2_cfg
digraph G {
   graph [splines=True];
    1 [label="start\n<VId: 1>",shape="plaintext"];
    2 [label="end\n<VId: 2>",shape="plaintext"];
    4 [label="null\nVU: {null}\n<VId: 4>",shape="plaintext",fontcolor="chartreuse"];
    5 [label="table'initial\nVD: {Table}\n<VId: 5>",shape="plaintext"];
    6 [label="table'final\nVU: {Table}\n<VId: 6>",shape="plaintext",fontcolor="blue"];
    7 [label="x'initial\nVD: {X}\n<VId: 7>",shape="plaintext"];
    8 [label="x'final\nVU: {X}\n<VId: 8>",shape="plaintext",fontcolor="red"];
    9 [label="x'initial\nVD: {X}\n<VId: 9>",shape="plaintext"];
    10 [label="x'final\nVU: {X}\n<VId: 10>",shape="plaintext",fontcolor="red"];
    11 [label="x'initial\nVD: {X}\n<VId: 11>",shape="plaintext"];
    12 [label="x'final\nVU: {X}\n<VId: 12>",shape="plaintext",fontcolor="red"];
    16 [label="table (10 - i) := i;\nLoops:&nbsp;L_1\nVU: {I, Table}\nVD: {Table}\n<VId: 16>"];
    17 [label="i'initial\nVD: {I}\n<VId: 17>",shape="plaintext"];
    18 [label="i'final\nVU: {I}\n<VId: 18>",shape="plaintext",fontcolor="red"];
    19 [label="for i in reverse 1 .. 9\nLoops:&nbsp;L_1\nVD: {I}\n<VId: 19>",shape="diamond"];
    20 [label="pragma check (assert,  for some x in 1 .. 9 => x = table (x));\nVU: {Table, X}\n<VId: 20>"];
    21 [label="if ( for all x in 1 .. 9 => table (x) > 0)\nVU: {Table, X}\n<VId: 21>",shape="diamond"];
    22 [label="table (5) := 0;\nVU: {Table}\nVD: {Table}\n<VId: 22>"];
    23 [label="temp_table'initial\nVD: {Temp_Table}\n<VId: 23>",shape="plaintext",fontcolor="red"];
    24 [label="temp_table'final\nVU: {Temp_Table}\n<VId: 24>",shape="plaintext"];
    26 [label="temp_table (i) := i;\nLoops:&nbsp;L_3\nVU: {Temp_Table, I}\nVD: {Temp_Table}\n<VId: 26>"];
    27 [label="i'initial\nVD: {I}\n<VId: 27>",shape="plaintext"];
    28 [label="i'final\nVU: {I}\n<VId: 28>",shape="plaintext",fontcolor="red"];
    29 [label="for i in 1 .. 9\nLoops:&nbsp;L_3\nVD: {I}\n<VId: 29>",shape="diamond"];
    30 [label="initialization in loop L_3\nVD: {Temp_Table}\n<VId: 30>"];
    31 [label="pragma check (assert,  for all x in 1 .. 9 => table (x) /= temp_table (x));\nVU: {Temp_Table, X, Table}\n<VId: 31>"];

    1 ->  16 [arrowType="normal"];
    2 ->  6 [arrowType="normal"];
    2 ->  8 [arrowType="normal"];
    2 ->  10 [arrowType="normal"];
    2 ->  12 [arrowType="normal"];
    2 ->  18 [arrowType="normal"];
    2 ->  24 [arrowType="normal"];
    2 ->  28 [arrowType="normal"];
    5 ->  1 [arrowType="normal"];
    7 ->  1 [arrowType="normal"];
    9 ->  1 [arrowType="normal"];
    11 ->  1 [arrowType="normal"];
    16 ->  19 [arrowType="normal"];
    17 ->  1 [arrowType="normal"];
    19 ->  16 [arrowType="normal"];
    19 ->  20 [arrowType="normal"];
    20 ->  21 [arrowType="normal"];
    21 ->  22 [arrowType="normal"];
    21 ->  30 [arrowType="normal"];
    22 ->  30 [arrowType="normal"];
    23 ->  1 [arrowType="normal"];
    26 ->  29 [arrowType="normal"];
    27 ->  1 [arrowType="normal"];
    29 ->  26 [arrowType="normal"];
    29 ->  31 [arrowType="normal"];
    30 ->  26 [arrowType="normal"];
    31 ->  2 [arrowType="normal"];
}

// subprogram_qe_2_pdg
digraph G {
   graph [splines=True];
    1 [label="start\n<VId: 1>",shape="plaintext"];
    4 [label="null\nVU: {null}\n<VId: 4>",shape="plaintext",fontcolor="chartreuse"];
    5 [label="table'initial\nVD: {Table}\n<VId: 5>",shape="plaintext"];
    6 [label="table'final\nVU: {Table}\n<VId: 6>",shape="plaintext",fontcolor="blue"];
    7 [label="x'initial\nVD: {X}\n<VId: 7>",shape="plaintext"];
    8 [label="x'final\nVU: {X}\n<VId: 8>",shape="plaintext",fontcolor="red"];
    9 [label="x'initial\nVD: {X}\n<VId: 9>",shape="plaintext"];
    10 [label="x'final\nVU: {X}\n<VId: 10>",shape="plaintext",fontcolor="red"];
    11 [label="x'initial\nVD: {X}\n<VId: 11>",shape="plaintext"];
    12 [label="x'final\nVU: {X}\n<VId: 12>",shape="plaintext",fontcolor="red"];
    16 [label="table (10 - i) := i;\nLoops:&nbsp;L_1\nVU: {I, Table}\nVD: {Table}\n<VId: 16>"];
    17 [label="i'initial\nVD: {I}\n<VId: 17>",shape="plaintext"];
    18 [label="i'final\nVU: {I}\n<VId: 18>",shape="plaintext",fontcolor="red"];
    19 [label="for i in reverse 1 .. 9\nLoops:&nbsp;L_1\nVD: {I}\n<VId: 19>",shape="diamond"];
    20 [label="pragma check (assert,  for some x in 1 .. 9 => x = table (x));\nVU: {Table, X}\n<VId: 20>"];
    21 [label="if ( for all x in 1 .. 9 => table (x) > 0)\nVU: {Table, X}\n<VId: 21>",shape="diamond"];
    22 [label="table (5) := 0;\nVU: {Table}\nVD: {Table}\n<VId: 22>"];
    23 [label="temp_table'initial\nVD: {Temp_Table}\n<VId: 23>",shape="plaintext",fontcolor="red"];
    24 [label="temp_table'final\nVU: {Temp_Table}\n<VId: 24>",shape="plaintext"];
    26 [label="temp_table (i) := i;\nLoops:&nbsp;L_3\nVU: {Temp_Table, I}\nVD: {Temp_Table}\n<VId: 26>"];
    27 [label="i'initial\nVD: {I}\n<VId: 27>",shape="plaintext"];
    28 [label="i'final\nVU: {I}\n<VId: 28>",shape="plaintext",fontcolor="red"];
    29 [label="for i in 1 .. 9\nLoops:&nbsp;L_3\nVD: {I}\n<VId: 29>",shape="diamond"];
    30 [label="initialization in loop L_3\nVD: {Temp_Table}\n<VId: 30>"];
    31 [label="pragma check (assert,  for all x in 1 .. 9 => table (x) /= temp_table (x));\nVU: {Temp_Table, X, Table}\n<VId: 31>"];

    1 ->  16 [arrowType="normal"];
    1 ->  19 [arrowType="normal"];
    1 ->  20 [arrowType="normal"];
    1 ->  21 [arrowType="normal"];
    1 ->  26 [arrowType="normal"];
    1 ->  29 [arrowType="normal"];
    1 ->  30 [arrowType="normal"];
    1 ->  31 [arrowType="normal"];
    5 ->  16 [arrowType="normal",color="red"];
    7 ->  8 [arrowType="normal",color="red"];
    7 ->  20 [arrowType="normal",color="red"];
    9 ->  10 [arrowType="normal",color="red"];
    9 ->  21 [arrowType="normal",color="red"];
    11 ->  12 [arrowType="normal",color="red"];
    11 ->  31 [arrowType="normal",color="red"];
    16 ->  6 [arrowType="normal",color="red"];
    16 ->  16 [arrowType="normal",color="red"];
    16 ->  20 [arrowType="normal",color="red"];
    16 ->  21 [arrowType="normal",color="red"];
    16 ->  22 [arrowType="normal",color="red"];
    16 ->  31 [arrowType="normal",color="red"];
    17 ->  16 [arrowType="normal",color="red"];
    19 ->  16 [arrowType="normal"];
    19 ->  18 [arrowType="normal",color="red"];
    19 ->  19 [arrowType="normal"];
    21 ->  22 [arrowType="normal"];
    22 ->  6 [arrowType="normal",color="red"];
    22 ->  22 [arrowType="normal",color="red"];
    22 ->  31 [arrowType="normal",color="red"];
    26 ->  24 [arrowType="normal",color="red"];
    26 ->  26 [arrowType="normal",color="red"];
    26 ->  31 [arrowType="normal",color="red"];
    27 ->  26 [arrowType="normal",color="red"];
    29 ->  26 [arrowType="normal"];
    29 ->  28 [arrowType="normal",color="red"];
    29 ->  29 [arrowType="normal"];
    30 ->  26 [arrowType="normal",color="red"];
}

