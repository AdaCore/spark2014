main.adb:7:04: info: address in address clause is compatible with object alignment (Trivial)
main.adb:7:04: info: object is suitable for aliasing via address clause (Trivial)
main.adb:7:54: info: object is suitable for aliasing via address clause (Trivial)
main.adb:7:54: info: types of aliased objects have the same size (Trivial)
main.adb:11:13: info: implicit aspect Always_Terminates on "OK_F" has been proved, subprogram will terminate
main.adb:12:06: info: data dependencies proved
main.adb:14:07: info: address in address clause is compatible with object alignment (Trivial)
main.adb:14:07: info: object is suitable for aliasing via address clause (Trivial)
main.adb:14:53: info: object is suitable for aliasing via address clause (Trivial)
main.adb:14:53: info: types of aliased objects have the same size (Trivial)
main.adb:21:04: high: object is unsuitable for aliasing via address clause [possible explanation: type Positive has 16#7FFF_FFFF# values but type Positive has Object_Size 32, which allows 16#1000_0000_0# possible values; aliased object could have invalid values [SPARK RM 13.7]]
main.adb:21:04: info: address in address clause is compatible with object alignment (Trivial)
main.adb:21:55: info: object is suitable for aliasing via address clause (Trivial)
main.adb:21:55: info: types of aliased objects have the same size (Trivial)
main.adb:25:13: info: implicit aspect Always_Terminates on "Bad_F" has been proved, subprogram will terminate
main.adb:26:06: info: data dependencies proved
main.adb:28:07: high: object is unsuitable for aliasing via address clause [possible explanation: type Positive has 16#7FFF_FFFF# values but type Positive has Object_Size 32, which allows 16#1000_0000_0# possible values; aliased object could have invalid values [SPARK RM 13.7]]
main.adb:28:07: info: address in address clause is compatible with object alignment (Trivial)
main.adb:28:54: info: object is suitable for aliasing via address clause (Trivial)
main.adb:28:54: info: types of aliased objects have the same size (Trivial)
