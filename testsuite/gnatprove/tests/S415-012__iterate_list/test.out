list_ex_pledge.adb:9:33: info: loop invariant initialization proved (CVC5: 1 VC)
list_ex_pledge.adb:9:33: info: loop invariant preservation proved (CVC5: 1 VC)
list_ex_pledge.adb:9:38: info: overflow check proved (CVC5: 4 VC)
list_ex_pledge.adb:11:13: info: loop invariant initialization proved (CVC5: 2 VC)
list_ex_pledge.adb:11:13: info: loop invariant preservation proved (CVC5: 2 VC)
list_ex_pledge.adb:11:59: info: overflow check proved (CVC5: 4 VC)
list_ex_pledge.adb:12:49: info: overflow check proved (CVC5: 4 VC)
list_ex_pledge.adb:15:13: info: loop invariant initialization proved (CVC5: 1 VC)
list_ex_pledge.adb:15:13: info: loop invariant preservation proved (Z3: 1 VC)
list_ex_pledge.adb:15:36: info: precondition proved (CVC5: 2 VC)
list_ex_pledge.adb:17:13: info: loop invariant initialization proved (CVC5: 1 VC)
list_ex_pledge.adb:17:13: info: loop invariant preservation proved (Z3: 1 VC)
list_ex_pledge.adb:17:28: info: overflow check proved (CVC5: 4 VC)
list_ex_pledge.adb:18:15: info: precondition proved (CVC5: 2 VC)
list_ex_pledge.adb:18:47: info: range check proved (CVC5: 4 VC)
list_ex_pledge.adb:18:52: info: precondition proved (CVC5: 2 VC)
list_ex_pledge.adb:18:86: info: overflow check proved (CVC5: 4 VC)
list_ex_pledge.adb:18:86: info: range check proved (CVC5: 4 VC)
list_ex_pledge.adb:20:13: info: loop invariant initialization proved (CVC5: 1 VC)
list_ex_pledge.adb:20:13: info: loop invariant preservation proved (CVC5: 1 VC)
list_ex_pledge.adb:20:58: info: overflow check proved (CVC5: 4 VC)
list_ex_pledge.adb:21:15: info: precondition proved (CVC5: 2 VC)
list_ex_pledge.adb:21:49: info: overflow check proved (CVC5: 4 VC)
list_ex_pledge.adb:21:56: info: precondition proved (CVC5: 2 VC)
list_ex_pledge.adb:23:11: info: pointer dereference check proved (CVC5: 1 VC)
list_ex_pledge.adb:24:16: info: pointer dereference check proved (CVC5: 1 VC)
list_ex_pledge.adb:26:17: info: overflow check proved (CVC5: 2 VC)
list_ex_pledge.ads:9:14: info: implicit function contract might not be available on recursive calls
list_ex_pledge.ads:10:08: medium: implicit aspect Always_Terminates on "Length_Aux" could be incorrect, subprogram is recursive [possible fix: annotate "Length_Aux" with a Subprogram_Variant aspect]
list_ex_pledge.ads:11:27: info: pointer dereference check proved (CVC5: 1 VC)
list_ex_pledge.ads:13:15: info: overflow check proved (CVC5: 2 VC)
list_ex_pledge.ads:13:30: info: pointer dereference check proved (CVC5: 1 VC)
list_ex_pledge.ads:15:14: info: implicit aspect Always_Terminates on "Length" has been proved, subprogram will terminate
list_ex_pledge.ads:17:14: info: implicit function contract might not be available on recursive calls
list_ex_pledge.ads:18:08: medium: implicit aspect Always_Terminates on "Get_Nth_Val" could be incorrect, subprogram is recursive [possible fix: annotate "Get_Nth_Val" with a Subprogram_Variant aspect]
list_ex_pledge.ads:18:23: info: pointer dereference check proved (CVC5: 1 VC)
list_ex_pledge.ads:18:35: info: precondition proved (CVC5: 1 VC)
list_ex_pledge.ads:18:49: info: pointer dereference check proved (CVC5: 1 VC)
list_ex_pledge.ads:18:58: info: range check proved (CVC5: 2 VC)
list_ex_pledge.ads:21:13: info: implicit aspect Always_Terminates on "At_End_Borrow" has been proved, subprogram will terminate
list_ex_pledge.ads:21:96: info: dynamic accessibility check proved (Trivial)
list_ex_pledge.ads:26:14: info: postcondition proved (CVC5: 1 VC; Z3: 1 VC)
list_ex_pledge.ads:27:48: info: precondition proved (CVC5: 1 VC)
