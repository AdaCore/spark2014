arrays.adb:21:50: info: length check proved
arrays.adb:51:18: info: postcondition proved
arrays.adb:62:22: medium: postcondition might fail, cannot prove Contains_B'Result = S (C) (e.g. when Contains_B'Result = False and S = (0 => true, others => false) and C = 0)
arrays.adb:71:19: info: postcondition proved
arrays.adb:80:19: medium: postcondition might fail, cannot prove Is_Id_2'Result = (M (C) = C (e.g. when Is_Id_2'Result = False and M = (others => 0) and C = 0)
arrays.adb:94:07: info: assertion proved
arrays.adb:104:22: medium: assertion might fail, cannot prove C = 'a' (e.g. when C = 0)
arrays.adb:112:22: medium: assertion might fail, cannot prove M ('a') = 'a' (e.g. when M = (others => 0))
arrays.adb:120:22: medium: assertion might fail, cannot prove M (Elem_0) = Elem_0 (e.g. when M = (others => 0))
arrays.adb:128:22: medium: assertion might fail, cannot prove MM ('a') (Elem_0) = Elem_1
arrays.adb:131:22: info: initialization of "M" proved
arrays.adb:136:07: info: assertion proved
arrays.adb:136:22: info: initialization of "M" proved
arrays.adb:144:22: medium: assertion might fail, cannot prove R.Exists (e.g. when R = (A => ?, Exists => False))
arrays.adb:146:07: info: assertion proved
arrays.adb:148:22: medium: assertion might fail, cannot prove R.A(1) = 5 (e.g. when R = (A => (others => 0), Exists => ?))
arrays.adb:153:31: info: range check proved
arrays.adb:154:33: info: index check proved
arrays.adb:156:22: info: postcondition proved
arrays.adb:156:31: info: range check proved
arrays.adb:157:33: info: index check proved
arrays.adb:160:22: info: range check proved
arrays.adb:161:16: info: index check proved
arrays.adb:170:07: info: assertion proved
arrays.adb:170:31: info: index check proved
arrays.adb:178:07: medium: assertion might fail (e.g. when A = (others => 0))
arrays.adb:183:19: info: postcondition proved
arrays.adb:191:10: info: loop invariant initialization proved
arrays.adb:191:10: info: loop invariant preservation proved
arrays.adb:191:41: info: range check proved
arrays.adb:192:57: info: initialization of "R" proved
arrays.adb:192:57: medium: "R" might not be initialized
arrays.adb:194:14: info: initialization of "R" proved
arrays.adb:199:22: medium: postcondition might fail, cannot prove Single_Char_Set_Broken'Result (I) = (I > C (e.g. when Single_Char_Set_Broken'Result = (others => false) and C = 0)
arrays.adb:206:10: info: loop invariant initialization proved
arrays.adb:206:10: info: loop invariant preservation proved
arrays.adb:206:41: info: range check proved
arrays.adb:207:57: info: initialization of "R" proved
arrays.adb:207:57: medium: "R" might not be initialized
arrays.adb:209:14: info: initialization of "R" proved
arrays.adb:218:22: info: initialization of "A" proved
arrays.adb:218:22: medium: assertion might fail, cannot prove A ('A') (e.g. when A = (others => false))
arrays.adb:227:07: info: assertion proved
arrays.adb:227:22: info: initialization of "A" proved
arrays.adb:236:22: info: initialization of "A" proved
arrays.adb:236:22: medium: assertion might fail, cannot prove A ('A') (e.g. when A = (others => false))
arrays.adb:245:07: info: assertion proved
arrays.adb:245:22: info: initialization of "A" proved
arrays.adb:253:22: info: length check proved
arrays.adb:254:22: info: initialization of "A" proved
arrays.adb:254:22: medium: assertion might fail, cannot prove A = Random_Array (5) (e.g. when A = (1 => 0, 0 => 0, others => 1))
