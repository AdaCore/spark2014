array_arith.adb:29:19: medium: overflow check might fail, cannot prove upper bound for Y + One (e.g. when One = Integer'Last and Y = 1) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: subprogram at line 26 should mention Y and One in a precondition]
array_arith.adb:29:19: medium: range check might fail, cannot prove lower bound for Y + One (e.g. when One = -1 and Y = 0) [reason for check: returned value must fit in the result type of the function] [possible fix: subprogram at line 26 should mention Y and One in a precondition]
array_arith.adb:63:19: medium: overflow check might fail, cannot prove upper bound for Y + One (e.g. when One = Integer'Last and Y = 1) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: subprogram at line 46 should mention Y and One in a precondition]
array_arith.adb:63:19: medium: range check might fail, cannot prove lower bound for Y + One (e.g. when One = -1 and Y = 0) [reason for check: returned value must fit in the result type of the function] [possible fix: subprogram at line 46 should mention Y and One in a precondition]
array_arith.adb:66:07: high: "X" is not initialized
array_arith.adb:70:29: info: initialization of "Y" proved
array_arith.ads:8:20: medium: "X" might not be initialized in "Init"
array_arith.ads:9:35: medium: "X" might not be initialized
array_arith.ads:9:35: medium: postcondition might fail, cannot prove X(J) = Natural(J) (e.g. when J = 10 and X = (others => 0))
array_arith.ads:11:21: medium: "X" might not be initialized in "Init2"
array_arith.ads:12:35: medium: "X" might not be initialized
array_arith.ads:12:35: medium: postcondition might fail, cannot prove X(J) = Natural(J) + 1 (e.g. when J = 10 and X = (others => 0))
array_arith.ads:15:35: medium: postcondition might fail, cannot prove X(J) = Natural(J) + 1 (e.g. when J = 1 and X = (others => 0)) [possible fix: call at array_arith.adb:66 should mention X in a postcondition]
array_arith.ads:17:20: medium: "X" might not be initialized in "Zero"
array_arith.ads:18:35: medium: "X" might not be initialized
array_arith.ads:18:35: medium: postcondition might fail, cannot prove X(J) = 0 (e.g. when J = 8 and X = (1 => 0, 2 => 0, 3 => 0, 4 => 0, 5 => 0, 6 => 0, 7 => 0, 9 => 0, 10 => 0, others => 1)) [possible fix: call at array_arith.adb:85 should mention Y (for argument X) in a postcondition]
ident.adb:6:42: info: initialization of "Y" proved
ident.adb:40:07: info: initialization of "Y" proved
ident.adb:41:07: info: initialization of "Res" proved
ident.adb:44:22: medium: assertion might fail (e.g. when Res = 0 and X = 10)
ident.adb:46:22: medium: assertion might fail (e.g. when Res = 0 and X = 10)
ident.adb:48:22: medium: assertion might fail (e.g. when Res = 0 and X = 10)
ident.adb:51:22: medium: assertion might fail (e.g. when Y = 0) [possible fix: call at line 50 should mention Y (for argument Y) in a postcondition]
ident.adb:53:22: medium: assertion might fail (e.g. when Y = 0) [possible fix: call at line 52 should mention Y (for argument Y) in a postcondition]
ident.adb:55:22: medium: assertion might fail (e.g. when Y = 0) [possible fix: call at line 54 should mention Y (for argument Y) in a postcondition]
ident.ads:5:44: info: initialization of "Y" proved
ident.ads:6:14: warning: subprogram "Test" has no effect
ident.ads:9:45: info: initialization of "Y" proved
incr_expr_fun.adb:4:62: medium: overflow check might fail, cannot prove upper bound for X + 1 (e.g. when X = Integer'Last) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: subprogram at incr_expr_fun.ads:11 should mention X in a precondition]
incr_expr_fun.adb:6:63: medium: overflow check might fail, cannot prove upper bound for X + 1 (e.g. when X = Integer'Last) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: subprogram at incr_expr_fun.ads:22 should mention X in a precondition]
incr_expr_fun.adb:8:58: medium: overflow check might fail, cannot prove upper bound for X + 1 (e.g. when X = Integer'Last) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: subprogram at line 8 should mention X in a precondition]
incr_expr_fun.adb:11:63: medium: overflow check might fail, cannot prove upper bound for X + 1 (e.g. when X = Integer'Last) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: subprogram at line 10 should mention X in a precondition]
incr_expr_fun.adb:16:22: info: assertion proved (CVC4: 1 VC)
incr_expr_fun.adb:16:39: info: overflow check proved (CVC4: 2 VC)
incr_expr_fun.adb:17:22: info: assertion proved (CVC4: 1 VC)
incr_expr_fun.adb:17:43: info: overflow check proved (CVC4: 2 VC)
incr_expr_fun.adb:18:22: info: assertion proved (CVC4: 1 VC)
incr_expr_fun.adb:18:44: info: overflow check proved (CVC4: 2 VC)
incr_expr_fun.adb:19:22: info: assertion proved (CVC4: 1 VC)
incr_expr_fun.adb:19:44: info: overflow check proved (CVC4: 2 VC)
incr_expr_fun.adb:20:22: info: assertion proved (CVC4: 1 VC)
incr_expr_fun.adb:20:40: info: overflow check proved (CVC4: 2 VC)
incr_expr_fun.adb:21:22: info: assertion proved (CVC4: 1 VC)
incr_expr_fun.adb:21:45: info: overflow check proved (CVC4: 2 VC)
incr_expr_fun.adb:22:22: info: assertion proved (CVC4: 1 VC)
incr_expr_fun.adb:22:45: info: overflow check proved (CVC4: 2 VC)
incr_expr_fun.adb:23:22: info: assertion proved (CVC4: 1 VC)
incr_expr_fun.adb:23:40: info: overflow check proved (CVC4: 2 VC)
incr_expr_fun.adb:24:22: info: assertion proved (CVC4: 1 VC)
incr_expr_fun.adb:24:45: info: overflow check proved (CVC4: 2 VC)
incr_expr_fun.ads:4:57: medium: overflow check might fail, cannot prove upper bound for X + 1 (e.g. when X = Integer'Last) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: subprogram at line 4 should mention X in a precondition]
incr_expr_fun.ads:7:61: medium: overflow check might fail, cannot prove upper bound for X + 1 (e.g. when X = Integer'Last) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: subprogram at line 6 should mention X in a precondition]
incr_expr_fun.ads:13:14: warning: subprogram "Test" has no effect
incr_expr_fun.ads:15:62: medium: overflow check might fail, cannot prove upper bound for X + 1 (e.g. when X = Integer'Last) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: subprogram at line 9 should mention X in a precondition]
incr_expr_fun.ads:17:58: medium: overflow check might fail, cannot prove upper bound for X + 1 (e.g. when X = Integer'Last) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: subprogram at line 17 should mention X in a precondition]
incr_expr_fun.ads:20:63: medium: overflow check might fail, cannot prove upper bound for X + 1 (e.g. when X = Integer'Last) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: subprogram at line 19 should mention X in a precondition]
