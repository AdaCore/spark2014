exponentiate.adb:4:16: medium: postcondition might fail, cannot prove Exponentiate'Result = Val ** Exp
exponentiate.adb:17:30: info: loop invariant initialization proved (altergo: 1 VC)
exponentiate.adb:17:30: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove Result = Val ** Natural(Unsigned_32(Exp) mod (Pow2 (Iter)))
exponentiate.adb:17:71: info: division check proved (CVC4: 2 VC)
exponentiate.adb:17:71: info: range check proved (CVC4: 2 VC)
exponentiate.adb:18:30: info: loop invariant initialization proved (altergo: 1 VC)
exponentiate.adb:18:30: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove Cur_Val = Val ** Natural(Pow2 (Iter))
exponentiate.adb:18:55: medium: range check might fail [reason for check: value must be convertible to the target type of the conversion]
exponentiate.adb:19:30: info: loop invariant initialization proved (CVC4: 1 VC)
exponentiate.adb:19:30: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove Cur_Exp = Cur_Exp'Loop_Entry / (Pow2 (Iter))
exponentiate.adb:19:59: info: division check proved (CVC4: 2 VC)
exponentiate.adb:20:18: info: division check proved (CVC4: 1 VC)
exponentiate.adb:23:26: info: division check proved (CVC4: 1 VC)
exponentiate.adb:25:23: info: range check proved (CVC4: 1 VC)
test_exponentiate.adb:7:24: info: cannot unroll loop (too many loop iterations)
test_exponentiate.adb:8:22: info: function contract not available for proof ("Exponentiate" might not return)
test_exponentiate.adb:8:22: medium: assertion might fail, cannot prove Exponentiate (Val, Exp) = Val ** Exp
