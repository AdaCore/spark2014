gen_pack.adb:5:16: high: overflow check might fail, cannot prove lower bound for X + Y, in instantiation at main.adb:9 (e.g. when X = My_Int'First and Y = -29) [reason for check: result of addition must fit in a 8-bits machine integer] [possible fix: add precondition (if Y >= 0 then X <= 127 - Y else X >= -128 - Y) to subprogram at gen_pack.ads:5]
gen_pack.adb:5:16: high: range check might fail, cannot prove lower bound for X + Y, in instantiation at main.adb:9 (e.g. when X = My_Int'First and Y = -1) [reason for check: returned value must fit in the result type of the function] [possible fix: add precondition (if Y >= 0 then X <= My_Int'Last - Y else X >= My_Int'First - Y) to subprogram at gen_pack.ads:5]
gen_pack.ads:5:13: info: implicit terminating annotation on "Add" has been proved, subprogram will terminate, in instantiation at main.adb:9
=================
gen_pack.adb:5:16: high: range check might fail, cannot prove upper bound for X + Y, in instantiation at main.adb:10 (e.g. when X = Other_Int'Last and Y = 1) [reason for check: returned value must fit in the result type of the function] [possible fix: add precondition (X <= Other_Int'Last - Y) to subprogram at gen_pack.ads:5]
gen_pack.ads:5:13: info: implicit terminating annotation on "Add" has been proved, subprogram will terminate, in instantiation at main.adb:10
=================
gen_pack.adb:5:16: high: overflow check might fail, cannot prove lower bound for X + Y, in instantiation at main.adb:9 (e.g. when X = My_Int'First and Y = -29) [reason for check: result of addition must fit in a 8-bits machine integer] [possible fix: add precondition (if Y >= 0 then X <= 127 - Y else X >= -128 - Y) to subprogram at gen_pack.ads:5]
gen_pack.adb:5:16: high: range check might fail, cannot prove lower bound for X + Y, in instantiation at main.adb:9 (e.g. when X = My_Int'First and Y = -1) [reason for check: returned value must fit in the result type of the function] [possible fix: add precondition (if Y >= 0 then X <= My_Int'Last - Y else X >= My_Int'First - Y) to subprogram at gen_pack.ads:5]
gen_pack.adb:5:16: high: range check might fail, cannot prove upper bound for X + Y, in instantiation at main.adb:10 (e.g. when X = Other_Int'Last and Y = 1) [reason for check: returned value must fit in the result type of the function] [possible fix: add precondition (X <= Other_Int'Last - Y) to subprogram at gen_pack.ads:5]
gen_pack.ads:5:13: info: implicit terminating annotation on "Add" has been proved, subprogram will terminate, in instantiation at main.adb:10
gen_pack.ads:5:13: info: implicit terminating annotation on "Add" has been proved, subprogram will terminate, in instantiation at main.adb:9
