math.adb:9:23: info: initialization of "Prev_Value" proved
math.adb:11:10: info: predicate check proved (CVC4: 1 VC; Z3: 1 VC)
math.adb:11:18: info: initialization of "Tmp_Value" proved
math.adb:13:33: info: initialization of "Prev_Value" proved
math.adb:13:33: info: loop invariant initialization proved (CVC4: 1 VC)
math.adb:13:33: info: loop invariant preservation proved (CVC4: 1 VC)
math.adb:15:13: info: loop invariant initialization proved (CVC4: 1 VC)
math.adb:15:13: info: loop invariant preservation proved (Z3: 1 VC)
math.adb:15:48: info: index check proved (CVC4: 4 VC)
math.adb:15:71: info: index check proved (CVC4: 4 VC)
math.adb:17:13: info: loop invariant initialization proved (CVC4: 1 VC)
math.adb:17:13: info: loop invariant preservation proved (CVC4: 1 VC)
math.adb:17:51: info: index check proved (CVC4: 4 VC)
math.adb:17:69: info: index check proved (CVC4: 4 VC)
math.adb:23:22: info: cannot unroll loop (too many loop iterations)
math.adb:24:25: info: assertion proved (CVC4: 1 VC)
math.adb:25:10: medium: predicate check might fail (e.g. when J = 1 and V = (others => -1)) [possible explanation: loop at line 23 should mention V in a loop invariant]
math.adb:25:23: info: division check proved (CVC4: 1 VC)
math.adb:32:25: info: assertion proved (CVC4: 2 VC)
math.adb:33:10: medium: predicate check might fail (e.g. when J = Index'Last and V = (1 => -2, Index'Last => -1, others => 0)) [possible explanation: loop invariant at line 34 should mention V]
math.adb:33:23: info: division check proved (CVC4: 2 VC)
math.adb:34:33: info: loop invariant initialization proved (CVC4: 1 VC)
math.adb:34:33: info: loop invariant preservation proved (CVC4: 1 VC)
