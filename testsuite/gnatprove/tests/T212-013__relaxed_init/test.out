test_init_by_proof.adb:26:14: warning: subprogram "Test_Discr" has no effect
test_init_by_proof.adb:29:23: info: discriminant check proved (CVC5: 1 VC)
test_init_by_proof.adb:29:23: info: initialization check proved (CVC5: 1 VC)
test_init_by_proof.adb:29:26: info: overflow check proved (CVC5: 2 VC)
test_init_by_proof.adb:30:22: info: initialization check proved (CVC5: 1 VC)
test_init_by_proof.adb:30:25: info: overflow check proved (CVC5: 2 VC)
test_init_by_proof.adb:35:14: warning: subprogram "Test_Discr_2" has no effect
test_init_by_proof.adb:38:23: info: discriminant check proved (CVC5: 1 VC)
test_init_by_proof.adb:38:23: medium: initialization check might fail (e.g. when X = (D => 0, Y => 0, X => ?) and X.Y'Initialized = True and X.X'Initialized = False)
test_init_by_proof.adb:38:26: info: overflow check proved (CVC5: 2 VC)
test_init_by_proof.adb:39:22: medium: initialization check might fail (e.g. when X = (D => 0, Y => ?, X => 0) and X.Y'Initialized = False and X.X'Initialized = True)
test_init_by_proof.adb:39:25: info: overflow check proved (CVC5: 2 VC)
test_init_by_proof.adb:44:14: warning: subprogram "Test_Init_Attr" has no effect
test_init_by_proof.adb:48:22: info: assertion proved (CVC5: 9 VC; Trivial: 16 VC)
test_init_by_proof.adb:51:14: warning: subprogram "Test_Init_Attr_2" has no effect
test_init_by_proof.adb:55:22: medium: assertion might fail
test_init_by_proof.adb:58:04: warning: analyzing unreferenced procedure "P1"
test_init_by_proof.adb:58:14: warning: subprogram "P1" has no effect
test_init_by_proof.adb:60:25: info: initialization check proved (CVC5: 1 VC)
test_init_by_proof.adb:61:24: info: initialization check proved (CVC5: 1 VC)
test_init_by_proof.adb:62:25: info: initialization check proved (CVC5: 1 VC)
test_init_by_proof.adb:66:04: warning: analyzing unreferenced procedure "P2"
test_init_by_proof.adb:66:14: warning: subprogram "P2" has no effect
test_init_by_proof.adb:68:25: medium: initialization check might fail (e.g. when X2 = (Y => 0, others => ?) and X2.X'Initialized = False and X2.Y'Initialized = True and X2.Z'Initialized = False) [possible fix: add or complete related loop invariants or postconditions]
test_init_by_proof.adb:69:24: medium: initialization check might fail (e.g. when X2 = (X => 0, others => ?) and X2.X'Initialized = True and X2.Y'Initialized = False and X2.Z'Initialized = False) [possible fix: add or complete related loop invariants or postconditions]
test_init_by_proof.adb:70:25: medium: initialization check might fail (e.g. when X2 = (X => 0, Y => 0, Z => ?) and X2.X'Initialized = True and X2.Y'Initialized = True and X2.Z'Initialized = False) [possible fix: add or complete related loop invariants or postconditions]
test_init_by_proof.adb:74:04: warning: analyzing unreferenced procedure "P3"
test_init_by_proof.adb:74:14: warning: subprogram "P3" has no effect
test_init_by_proof.adb:77:24: info: initialization check proved (CVC5: 1 VC)
test_init_by_proof.adb:81:04: warning: analyzing unreferenced procedure "P4"
test_init_by_proof.adb:81:14: warning: subprogram "P4" has no effect
test_init_by_proof.adb:83:23: high: "X2.X" is not initialized
test_init_by_proof.adb:84:24: medium: initialization check might fail (e.g. when X2 = (X => 0, Y => ?, Z => False) and X2.Y'Initialized = False) [possible fix: add or complete related loop invariants or postconditions]
test_init_by_proof.adb:88:04: warning: analyzing unreferenced procedure "P5"
test_init_by_proof.adb:88:14: warning: subprogram "P5" has no effect
test_init_by_proof.adb:94:15: info: initialization check proved (CVC5: 1 VC)
test_init_by_proof.adb:95:15: medium: initialization check might fail (e.g. when X2 = (X => 1, others => ?) and X2.X'Initialized = True and X2.Y'Initialized = False and X2.Z'Initialized = False) [possible fix: add or complete related loop invariants or postconditions]
test_init_by_proof.adb:97:04: warning: analyzing unreferenced procedure "P6"
test_init_by_proof.adb:97:14: warning: subprogram "P6" has no effect
test_init_by_proof.adb:98:07: info: initialization of parts of "X2" without Relaxed_Initialization proved
test_init_by_proof.adb:104:15: medium: initialization check might fail (e.g. when X2 = (X => 1, Y => ?, Z => False) and X2.Y'Initialized = False) [possible fix: add or complete related loop invariants or postconditions]
test_init_by_proof.adb:106:04: warning: analyzing unreferenced procedure "P7"
test_init_by_proof.adb:106:14: warning: subprogram "P7" has no effect
test_init_by_proof.adb:112:15: medium: initialization check might fail (e.g. when X2 = (Y => 1, others => ?) and X2.X'Initialized = False and X2.Y'Initialized = True and X2.Z'Initialized = False) [possible fix: add or complete related loop invariants or postconditions]
test_init_by_proof.adb:113:15: info: initialization check proved (CVC5: 1 VC)
test_init_by_proof.adb:115:04: warning: analyzing unreferenced procedure "P8"
test_init_by_proof.adb:115:14: warning: subprogram "P8" has no effect
test_init_by_proof.adb:121:13: high: "X2.X" is not initialized
test_init_by_proof.adb:122:15: info: initialization check proved (CVC5: 1 VC)
test_init_by_proof.adb:124:04: warning: analyzing unreferenced procedure "P9"
test_init_by_proof.adb:124:14: warning: subprogram "P9" has no effect
test_init_by_proof.adb:126:19: medium: initialization check might fail (e.g. when X = (Y => 0, others => ?) and X.X'Initialized = False and X.Y'Initialized = True and X.Z'Initialized = False)
test_init_by_proof.adb:130:04: warning: analyzing unreferenced procedure "P10"
test_init_by_proof.adb:130:14: warning: subprogram "P10" has no effect
test_init_by_proof.adb:136:13: info: initialization check proved (CVC5: 2 VC; Trivial: 3 VC)
test_init_by_proof.adb:138:04: warning: analyzing unreferenced procedure "Q"
test_init_by_proof.adb:138:14: warning: subprogram "Q" has no effect
test_init_by_proof.adb:139:07: info: initialization of parts of "X" without Relaxed_Initialization proved
test_init_by_proof.adb:143:14: medium: initialization check might fail (e.g. when X.I.Z = True and X.G.Y = 15 and X.G.Z = True and X.I.Y'Initialized = False and X.F.Y'Initialized = False and X.G.X'Initialized = False and X.G.Y'Initialized = True and X.G.Z'Initialized = True)
test_init_by_proof.adb:145:04: warning: analyzing unreferenced procedure "Q1"
test_init_by_proof.adb:145:14: warning: subprogram "Q1" has no effect
test_init_by_proof.adb:146:07: info: initialization of parts of "X" without Relaxed_Initialization proved
test_init_by_proof.adb:150:14: info: initialization check proved (CVC5: 2 VC; Trivial: 3 VC)
test_init_by_proof_conv.adb:10:27: info: range check proved (CVC5: 1 VC)
test_init_by_proof_conv.adb:12:27: info: range check proved (CVC5: 1 VC)
test_init_by_proof_conv.adb:18:35: info: discriminant check proved (CVC5: 1 VC)
test_init_by_proof_conv.adb:19:24: info: discriminant check proved (CVC5: 1 VC)
test_init_by_proof_conv.adb:19:26: medium: initialization check might fail (e.g. when X = (D => True, G => ?) and X.G.F'Initialized = False)
test_init_by_proof_mem.adb:14:28: info: range check proved (CVC5: 2 VC)
test_init_by_proof_mem.adb:21:16: info: range check proved (CVC5: 2 VC)
test_init_by_proof_mem.adb:22:16: info: range check proved (CVC5: 2 VC)
test_init_by_proof_mem.adb:22:23: info: discriminant check proved (CVC5: 1 VC)
test_init_by_proof_mem.adb:28:07: warning: assuming "Branch" always returns
test_init_by_proof_mem.adb:28:07: warning: assuming "Branch" has no effect on global items
test_init_by_proof_mem.adb:28:07: warning: no Global contract available for "Branch"
test_init_by_proof_mem.adb:28:07: warning: no returning annotation available for "Branch"
test_init_by_proof_mem.adb:29:22: info: assertion proved (CVC5: 1 VC)
test_init_by_proof_mem.adb:30:22: info: assertion proved (Trivial)
test_init_by_proof_mem.adb:31:22: medium: assertion might fail, cannot prove lower bound for Y1 in My_Nat
test_init_by_proof_mem.adb:31:22: medium: initialization check might fail
test_init_by_proof_mem.adb:32:10: warning: assuming "Branch" always returns
test_init_by_proof_mem.adb:32:10: warning: assuming "Branch" has no effect on global items
test_init_by_proof_mem.adb:32:10: warning: no Global contract available for "Branch"
test_init_by_proof_mem.adb:32:10: warning: no returning annotation available for "Branch"
test_init_by_proof_mem.adb:33:22: info: assertion proved (CVC5: 1 VC)
test_init_by_proof_mem.adb:34:22: info: assertion proved (Trivial)
test_init_by_proof_mem.adb:35:22: info: assertion proved (CVC5: 2 VC)
test_init_by_proof_mem.adb:36:10: warning: assuming "Branch" always returns
test_init_by_proof_mem.adb:36:10: warning: assuming "Branch" has no effect on global items
test_init_by_proof_mem.adb:36:10: warning: no Global contract available for "Branch"
test_init_by_proof_mem.adb:36:10: warning: no returning annotation available for "Branch"
test_init_by_proof_mem.adb:37:22: info: assertion proved (CVC5: 1 VC)
test_init_by_proof_mem.adb:37:22: medium: initialization check might fail
test_init_by_proof_mem.adb:37:36: info: initialization check proved (CVC5: 2 VC; Trivial: 3 VC)
test_init_by_proof_mem.adb:38:22: info: assertion proved (CVC5: 1 VC)
test_init_by_proof_mem.adb:38:22: medium: initialization check might fail
test_init_by_proof_mem.adb:38:39: info: initialization check proved (CVC5: 1 VC; Trivial: 1 VC)
test_init_by_proof_mem.adb:40:22: info: assertion proved (CVC5: 1 VC)
test_init_by_proof_mem.adb:40:22: info: initialization check proved (CVC5: 1 VC; Trivial: 6 VC)
test_init_by_proof_mem.adb:40:22: info: initialization check proved (CVC5: 2 VC; Trivial: 3 VC)
test_init_by_proof_mem.adb:40:36: info: initialization check proved (CVC5: 2 VC; Trivial: 3 VC)
test_init_by_proof_mem.adb:41:22: info: assertion proved (CVC5: 1 VC)
test_init_by_proof_mem.adb:41:22: info: initialization check proved (CVC5: 1 VC; Trivial: 1 VC)
test_init_by_proof_mem.adb:41:39: info: initialization check proved (CVC5: 1 VC; Trivial: 1 VC)
test_init_by_proof_out_params.adb:25:07: info: range check proved (CVC5: 2 VC)
test_init_by_proof_out_params.adb:34:17: high: "X.X" is not initialized in "P" [reason for check: OUT parameter should be fully initialized on return] [possible fix: initialize "X.X" on all paths, make "X" an IN OUT parameter or annotate it with aspect Relaxed_Initialization]
test_init_by_proof_out_params.adb:34:17: high: "X.Z" is not initialized in "P" [reason for check: OUT parameter should be fully initialized on return] [possible fix: initialize "X.Z" on all paths, make "X" an IN OUT parameter or annotate it with aspect Relaxed_Initialization]
test_init_by_proof_out_params.adb:41:17: warning: "X" is not modified, could be IN
test_init_by_proof_out_params.adb:55:17: warning: "X" is not modified, could be IN
test_init_by_proof_out_params.adb:63:39: info: index check proved (CVC5: 2 VC)
test_init_by_proof_out_params.adb:69:17: warning: "X" is not modified, could be IN
test_init_by_proof_out_params.adb:70:39: info: index check proved (CVC5: 2 VC)
test_init_by_proof_out_params.adb:77:39: info: index check proved (CVC5: 2 VC)
test_init_by_proof_out_params.adb:83:17: warning: "X" is not modified, could be IN
test_init_by_proof_out_params.adb:84:39: info: index check proved (CVC5: 2 VC)
test_init_by_proof_out_params.adb:97:17: warning: "X" is not modified, could be IN
test_init_by_proof_out_params.adb:111:17: warning: "X" is not modified, could be IN
test_init_by_proof_out_params.adb:118:17: high: "X" is not initialized in "P" [reason for check: OUT parameter should be fully initialized on return] [possible fix: initialize "X" on all paths, make "X" an IN OUT parameter or annotate it with aspect Relaxed_Initialization]
test_init_by_proof_out_params.adb:119:13: high: "X" is not initialized
test_init_by_proof_out_params.adb:119:39: info: index check proved (CVC5: 2 VC)
test_init_by_proof_out_params.adb:125:17: warning: "X" is not modified, could be IN
test_init_by_proof_out_params.adb:126:39: info: index check proved (CVC5: 2 VC)
test_init_by_proof_out_params.adb:132:17: high: "X.C" is not initialized in "P" [reason for check: OUT parameter should be fully initialized on return] [possible fix: initialize "X.C" on all paths, make "X" an IN OUT parameter or annotate it with aspect Relaxed_Initialization]
test_init_by_proof_out_params.adb:133:30: high: "X.C" is not initialized
test_init_by_proof_out_params.adb:133:35: info: index check proved (CVC5: 2 VC)
test_init_by_proof_out_params.adb:139:17: warning: "X" is not modified, could be IN
test_init_by_proof_out_params.adb:140:35: info: index check proved (CVC5: 2 VC)
test_init_by_proof_out_params.adb:146:17: high: "X.C.X" is not initialized in "P" [reason for check: OUT parameter should be fully initialized on return] [possible fix: initialize "X.C.X" on all paths, make "X" an IN OUT parameter or annotate it with aspect Relaxed_Initialization]
test_init_by_proof_out_params.adb:146:17: high: "X.C.Z" is not initialized in "P" [reason for check: OUT parameter should be fully initialized on return] [possible fix: initialize "X.C.Z" on all paths, make "X" an IN OUT parameter or annotate it with aspect Relaxed_Initialization]
test_init_by_proof_out_params.adb:153:17: warning: "X" is not modified, could be IN
test_init_by_proof_out_params.adb:167:17: warning: "X" is not modified, could be IN
test_init_by_proof_out_params.adb:186:07: warning: assuming "Branch" always returns
test_init_by_proof_out_params.adb:186:07: warning: assuming "Branch" has no effect on global items
test_init_by_proof_out_params.adb:186:07: warning: no Global contract available for "Branch"
test_init_by_proof_out_params.adb:186:07: warning: no returning annotation available for "Branch"
test_init_by_proof_out_params.adb:187:07: medium: precondition might fail
test_init_by_proof_out_params.adb:189:07: info: precondition proved (CVC5: 1 VC)
test_init_by_proof_out_params.adb:191:07: warning: assuming "Branch" always returns
test_init_by_proof_out_params.adb:191:07: warning: assuming "Branch" has no effect on global items
test_init_by_proof_out_params.adb:191:07: warning: no Global contract available for "Branch"
test_init_by_proof_out_params.adb:191:07: warning: no returning annotation available for "Branch"
test_init_by_proof_out_params.adb:192:07: medium: precondition might fail
test_init_by_proof_out_params.adb:194:07: info: precondition proved (CVC5: 1 VC)
test_init_by_proof_out_params.adb:196:07: warning: assuming "Branch" always returns
test_init_by_proof_out_params.adb:196:07: warning: assuming "Branch" has no effect on global items
test_init_by_proof_out_params.adb:196:07: warning: no Global contract available for "Branch"
test_init_by_proof_out_params.adb:196:07: warning: no returning annotation available for "Branch"
test_init_by_proof_out_params.adb:197:07: medium: precondition might fail, cannot prove X (X'First)'Initialized
test_init_by_proof_out_params.adb:199:07: info: precondition proved (CVC5: 2 VC)
test_init_by_proof_out_params.adb:201:07: warning: assuming "Branch" always returns
test_init_by_proof_out_params.adb:201:07: warning: assuming "Branch" has no effect on global items
test_init_by_proof_out_params.adb:201:07: warning: no Global contract available for "Branch"
test_init_by_proof_out_params.adb:201:07: warning: no returning annotation available for "Branch"
test_init_by_proof_out_params.adb:202:07: medium: precondition might fail, cannot prove X (X'First)'Initialized
test_init_by_proof_out_params.adb:204:07: info: precondition proved (CVC5: 2 VC)
test_init_by_proof_out_params.adb:206:07: warning: assuming "Branch" always returns
test_init_by_proof_out_params.adb:206:07: warning: assuming "Branch" has no effect on global items
test_init_by_proof_out_params.adb:206:07: warning: no Global contract available for "Branch"
test_init_by_proof_out_params.adb:206:07: warning: no returning annotation available for "Branch"
test_init_by_proof_out_params.adb:207:07: medium: precondition might fail
test_init_by_proof_out_params.adb:209:07: info: precondition proved (CVC5: 1 VC)
test_init_by_proof_out_params.adb:211:07: warning: assuming "Branch" always returns
test_init_by_proof_out_params.adb:211:07: warning: assuming "Branch" has no effect on global items
test_init_by_proof_out_params.adb:211:07: warning: no Global contract available for "Branch"
test_init_by_proof_out_params.adb:211:07: warning: no returning annotation available for "Branch"
test_init_by_proof_out_params.adb:212:07: medium: precondition might fail
test_init_by_proof_out_params.adb:214:07: info: precondition proved (CVC5: 1 VC)
test_init_by_proof_out_params.adb:216:07: warning: assuming "Branch" always returns
test_init_by_proof_out_params.adb:216:07: warning: assuming "Branch" has no effect on global items
test_init_by_proof_out_params.adb:216:07: warning: no Global contract available for "Branch"
test_init_by_proof_out_params.adb:216:07: warning: no returning annotation available for "Branch"
test_init_by_proof_out_params.adb:217:07: medium: precondition might fail, cannot prove X (X'First).Y'Initialized
test_init_by_proof_out_params.adb:219:07: info: precondition proved (CVC5: 2 VC)
test_init_by_proof_out_params.adb:221:07: warning: assuming "Branch" always returns
test_init_by_proof_out_params.adb:221:07: warning: assuming "Branch" has no effect on global items
test_init_by_proof_out_params.adb:221:07: warning: no Global contract available for "Branch"
test_init_by_proof_out_params.adb:221:07: warning: no returning annotation available for "Branch"
test_init_by_proof_out_params.adb:222:07: medium: precondition might fail, cannot prove X (X'First).Y'Initialized
test_init_by_proof_out_params.adb:224:07: info: precondition proved (CVC5: 2 VC)
test_init_by_proof_out_params.adb:226:07: warning: assuming "Branch" always returns
test_init_by_proof_out_params.adb:226:07: warning: assuming "Branch" has no effect on global items
test_init_by_proof_out_params.adb:226:07: warning: no Global contract available for "Branch"
test_init_by_proof_out_params.adb:226:07: warning: no returning annotation available for "Branch"
test_init_by_proof_out_params.adb:227:07: medium: precondition might fail, cannot prove X.C (1).Y'Initialized
test_init_by_proof_out_params.adb:229:07: info: precondition proved (CVC5: 2 VC)
test_init_by_proof_out_params.adb:231:07: warning: assuming "Branch" always returns
test_init_by_proof_out_params.adb:231:07: warning: assuming "Branch" has no effect on global items
test_init_by_proof_out_params.adb:231:07: warning: no Global contract available for "Branch"
test_init_by_proof_out_params.adb:231:07: warning: no returning annotation available for "Branch"
test_init_by_proof_out_params.adb:232:07: medium: precondition might fail
test_init_by_proof_out_params.adb:234:07: info: precondition proved (CVC5: 1 VC)
test_init_by_proof_out_params.adb:236:07: warning: assuming "Branch" always returns
test_init_by_proof_out_params.adb:236:07: warning: assuming "Branch" has no effect on global items
test_init_by_proof_out_params.adb:236:07: warning: no Global contract available for "Branch"
test_init_by_proof_out_params.adb:236:07: warning: no returning annotation available for "Branch"
test_init_by_proof_out_params.adb:237:07: medium: precondition might fail
test_init_by_proof_out_params.adb:239:07: info: precondition proved (CVC5: 1 VC)
