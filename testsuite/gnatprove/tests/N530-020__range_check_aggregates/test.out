aggregate_checks.adb:4:15: info: range check proved (CVC5: 2 VC)
aggregate_checks.adb:10:53: high: range check might fail, cannot prove lower bound for 0 (e.g. when A = (1 => 1)) [reason for check: value must fit in component type]
aggregate_checks.adb:16:15: info: range check proved (CVC5: 2 VC)
aggregate_checks.adb:19:49: high: range check might fail, cannot prove lower bound for 0 (e.g. when A = (1 => 1)) [reason for check: value must fit in component type]
aggregate_checks.adb:25:15: info: range check proved (CVC5: 2 VC)
aggregate_checks.adb:28:50: info: range check proved (CVC5: 2 VC)
aggregate_checks.adb:28:58: high: range check might fail, cannot prove lower bound for 0 (e.g. when A = (1 => 1)) [reason for check: value must fit in component type]
aggregate_checks.adb:34:15: info: range check proved (CVC5: 2 VC)
aggregate_checks.adb:37:41: high: range check might fail (e.g. when A = (1 => 1))
aggregate_checks.adb:37:44: info: range check proved (CVC5: 2 VC)
aggregate_checks.ads:4:14: warning: subprogram "Do_Wrong_Aggregate" has no effect
aggregate_checks.ads:6:14: warning: subprogram "Do_Wrong_Aggregate_2" has no effect
aggregate_checks.ads:8:14: warning: subprogram "Do_Wrong_Aggregate_3" has no effect
aggregate_checks.ads:10:14: warning: subprogram "Do_Wrong_Aggregate_4" has no effect
