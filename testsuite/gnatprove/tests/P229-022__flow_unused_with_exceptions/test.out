fileio.adb:7:10: medium: exception might be raised
fileio.adb:9:14: medium: overflow check might fail, cannot prove upper bound for X + 1 [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: subprogram at fileio.ads:15 should mention X in a precondition]
fileio.adb:10:14: medium: overflow check might fail, cannot prove upper bound for Y + 1 [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: subprogram at fileio.ads:15 should mention Y in a precondition]
fileio.adb:14:07: warning: initialization of "Z" has no effect
fileio.adb:18:10: medium: exception might be raised
fileio.adb:20:14: medium: overflow check might fail, cannot prove upper bound for X + 1 [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: subprogram at fileio.ads:17 should mention X in a precondition]
fileio.adb:21:14: medium: overflow check might fail, cannot prove upper bound for Y + 1 [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: subprogram at fileio.ads:17 should mention Y in a precondition]
fileio.adb:29:10: medium: exception might be raised
fileio.adb:34:07: info: initialization of "Result" proved
fileio.adb:39:13: medium: exception might be raised
fileio.ads:19:38: info: initialization of "Ch" proved
fileio.ads:20:32: medium: "The_File" must be a Proof_In as it is only used in assertions (SPARK RM 6.1.4(18))
fileio.ads:21:14: medium: postcondition might fail, cannot prove Ch = Character'pos
fileio.ads:22:46: medium: overflow check might fail, cannot prove upper bound for Cur_Position'Old + 1 [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit Ada.Numerics.Big_Numerics.Big_Integers]
fileio.ads:28:06: info: data dependencies proved
fileio.ads:29:14: medium: postcondition might fail, cannot prove The_File = The_File'Old'update
fileio.ads:29:81: medium: range check might fail, cannot prove lower bound for ch [reason for check: value must correspond to position in the type] [possible fix: add precondition (ch in Character) to subprogram at line 27]
helpers.ads:9:54: info: division check proved (CVC4: 1 VC)
