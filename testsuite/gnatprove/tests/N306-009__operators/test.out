inst_ext_ax.ads:16:16: info: implicit aspect Always_Terminates on "Add_Wrap" has been proved, subprogram will terminate, in instantiation at inst_ext_ax.ads:31
inst_ext_ax.ads:17:11: high: range check might fail, cannot prove upper bound for Add (I1, I2), in instantiation at inst_ext_ax.ads:31 (e.g. when I1 = Int100'Last and I2 = 1) [reason for check: returned value must fit in the result type of the function] [possible fix: add precondition (I1 <= Int100'Last - I2) to subprogram at line 16]
inst_ext_ax.ads:24:16: info: implicit aspect Always_Terminates on "Add_Wrap" has been proved, subprogram will terminate, in instantiation at inst_ext_ax.ads:32
inst_ext_ax.ads:25:24: high: range check might fail, cannot prove upper bound for Add (I1, I2) + Add2(I1, I2, I1), in instantiation at inst_ext_ax.ads:32 (e.g. when I1 = 67 and I2 = 0) [reason for check: returned value must fit in the result type of the function] [possible fix: add precondition (if Add2(I1, I2, I1) >= 0 then Add (I1, I2) <= Int200'Last - Add2(I1, I2, I1) else Add (I1, I2) >= Int200'First - Add2(I1, I2, I1)) to subprogram at line 24]
inst_ext_ax.ads:25:24: info: overflow check proved (CVC5: 2 VC), in instantiation at inst_ext_ax.ads:32
inst_ext_ax.ads:28:13: info: implicit aspect Always_Terminates on "AddThree" has been proved, subprogram will terminate
