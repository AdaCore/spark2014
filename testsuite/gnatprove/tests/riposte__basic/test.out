basic.adb:6:19: info: postcondition proved (CVC4: 1 VC)
basic.adb:9:16: medium: range check might fail, cannot prove upper bound for A + B (e.g. when A = Unsigned_Byte'Last and B = 1) [reason for check: returned value must fit in the result type of the function] [possible fix: subprogram at line 5 should mention A and B in a precondition]
basic.adb:13:19: info: postcondition proved (CVC4: 1 VC)
basic.adb:13:36: info: overflow check proved (CVC4: 2 VC)
basic.adb:16:16: medium: overflow check might fail, cannot prove lower bound for A + B (e.g. when A = Integer'First and B = -1) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: subprogram at line 12 should mention A and B in a precondition]
basic.adb:20:19: info: postcondition proved (CVC4: 3 VC)
basic.adb:24:07: info: initialization of "R" proved
basic.adb:31:30: info: assertion proved (CVC4: 2 VC; Trivial: 2 VC)
basic.adb:39:25: info: initialization of "X" proved
basic.adb:39:28: info: initialization of "Y" proved
basic.adb:41:17: info: postcondition proved (CVC4: 2 VC)
basic.adb:44:16: info: overflow check proved (CVC4: 2 VC)
basic.adb:45:16: info: overflow check proved (CVC4: 2 VC)
basic.adb:45:22: info: overflow check proved (CVC4: 2 VC)
basic.adb:45:28: info: overflow check proved (CVC4: 2 VC)
basic.adb:45:34: info: overflow check proved (CVC4: 2 VC)
basic.adb:51:11: info: flow dependencies proved
basic.adb:53:22: info: postcondition proved (CVC4: 1 VC)
basic.adb:53:32: info: overflow check proved (CVC4: 2 VC)
basic.adb:57:14: info: overflow check proved (CVC4: 2 VC)
basic.adb:58:30: info: assertion proved (CVC4: 2 VC)
basic.adb:58:41: info: overflow check proved (CVC4: 2 VC)
basic.adb:58:60: info: overflow check proved (CVC4: 2 VC)
basic.adb:59:14: info: overflow check proved (CVC4: 2 VC)
basic.adb:63:11: info: flow dependencies proved
basic.adb:65:22: medium: postcondition might fail (e.g. when X = 7 and X'Old = 1)
basic.adb:65:32: info: overflow check proved (CVC4: 2 VC)
basic.adb:69:14: info: overflow check proved (CVC4: 2 VC)
basic.adb:70:30: info: assertion proved (CVC4: 2 VC)
basic.adb:70:41: info: overflow check proved (CVC4: 2 VC)
basic.adb:70:60: info: overflow check proved (CVC4: 2 VC)
basic.adb:71:14: info: overflow check proved (CVC4: 2 VC)
basic.adb:75:19: info: postcondition proved (CVC4: 1 VC)
basic.adb:77:07: info: initialization of "R" proved
basic.adb:88:19: medium: postcondition might fail (e.g. when A = 0 and B = 1 and Int_Min_B'Result = 1)
basic.adb:90:07: info: initialization of "R" proved
basic.adb:101:19: info: postcondition proved (CVC4: 1 VC)
basic.adb:103:07: info: initialization of "R" proved
basic.adb:114:11: info: flow dependencies proved
basic.adb:117:22: info: postcondition proved (CVC4: 1 VC)
basic.adb:120:22: info: assertion proved (Trivial)
basic.adb:121:22: info: assertion proved (CVC4: 1 VC)
counterexample expected for check at basic.adb:9
  trace at basic.adb:5 --> A = Unsigned_Byte'Last and B = 1
  trace at basic.adb:9 --> A = Unsigned_Byte'Last and B = 1
counterexample expected for check at basic.adb:16
  trace at basic.adb:12 --> A = Integer'First and B = -1
  trace at basic.adb:16 --> A = Integer'First and B = -1
counterexample expected for check at basic.adb:65
  trace at basic.adb:62 --> X = 1
  trace at basic.adb:65 --> X = 7 and X'Old = 1
  trace at basic.adb:67 --> X_Old = 1
  trace at basic.adb:70 --> X_Old = 1
  trace at basic.adb:71 --> X = 7
counterexample expected for check at basic.adb:88
  trace at basic.adb:87 --> A = 0 and B = 1
  trace at basic.adb:88 --> A = 0 and B = 1 and Int_Min_B'Result = 1
  trace at basic.adb:92 --> A = 0
  trace at basic.adb:95 --> B = 1 and R = 1
  trace at basic.adb:97 --> Int_Min_B'Result = 1 and R = 1
