test_constrained.adb:8:13: info: function contract might not be available on calls from enclosing unit
test_constrained.adb:8:13: info: implicit terminating annotation on "Get_Constr" has been proved, subprogram will terminate
test_constrained.adb:10:19: info: postcondition proved (CVC5: 1 VC)
test_constrained.adb:12:13: info: implicit terminating annotation on "F" has been proved, subprogram will terminate
test_constrained.adb:15:22: info: assertion proved (CVC5: 1 VC)
test_constrained.adb:16:22: info: assertion proved (CVC5: 1 VC)
test_constrained.adb:19:13: info: function contract might not be available on calls from enclosing unit
test_constrained.adb:28:13: info: implicit function contract might not be available on calls from enclosing unit
test_constrained.adb:28:13: info: implicit terminating annotation on "F_H" has been proved, subprogram will terminate
test_constrained.adb:33:19: info: assertion proved (Trivial: 1 VC)
test_constrained.adb:33:19: info: no contextual analysis of "F" (in assertion expression)
test_constrained.adb:34:19: info: assertion proved (Trivial: 1 VC)
test_constrained.adb:34:27: medium: resource or memory leak might occur at end of scope
test_constrained.adb:34:50: medium: resource or memory leak might occur [possible explanation: call to allocating function inside an assertion leaks some resource or memory]
test_constrained.adb:34:68: info: pointer dereference check proved (CVC5: 1 VC)
test_constrained.adb:35:19: info: assertion proved (Trivial: 1 VC)
test_constrained.adb:35:19: info: no contextual analysis of "F_H" (in assertion expression)
test_constrained.adb:39:24: warning: "X" is not modified, could be IN
test_constrained.adb:50:22: info: assertion proved (CVC5: 1 VC)
test_constrained.adb:51:22: info: assertion proved (Trivial: 1 VC)
test_constrained.adb:52:07: info: precondition proved (CVC5: 1 VC)
test_constrained.adb:57:04: info: precondition proved (CVC5: 1 VC)
