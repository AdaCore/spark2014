arrays.adb:5:24: info: cannot unroll loop (too many loop iterations)
arrays.adb:6:17: medium: overflow check might fail (e.g. when J = 1 and S = 1 and X = (others => Positive'Last) and X'First = 1 and X'Last = 1) [reason for check: result of addition must fit in a 32-bits machine integer] [possible explanation: loop at line 5 should mention S in a loop invariant]
arrays.adb:14:24: info: cannot unroll loop (too many loop iterations)
arrays.adb:15:19: info: division check proved (CVC4: 1 VC)
arrays.adb:16:20: medium: overflow check might fail (e.g. when C = Natural'Last) [reason for check: result of addition must fit in a 32-bits machine integer] [possible explanation: loop at line 14 should mention C in a loop invariant]
arrays.adb:23:09: info: range check proved (CVC4: 1 VC)
arrays.adb:23:17: info: overflow check proved (CVC4: 1 VC)
arrays.adb:23:17: info: range check proved (CVC4: 1 VC)
arrays.ads:5:14: medium: postcondition might fail, cannot prove Sum'Result >= X'length (e.g. when Sum'Result = 1 and X = (others => 1) and X'First = 1 and X'Last = 2)
arrays.ads:5:29: info: range check proved (CVC4: 1 VC)
arrays.ads:6:06: medium: contract cases might not be complete (e.g. when X = (others => 1) and X'First = 1 and X'Last = 1)
arrays.ads:6:06: medium: contract cases might not be disjoint (e.g. when X'First = 1 and X'Last = 0)
arrays.ads:6:38: info: contract case proved (CVC4: 1 VC; Trivial: 1 VC)
arrays.ads:7:52: info: index check proved (CVC4: 2 VC)
arrays.ads:7:60: info: contract case proved (CVC4: 1 VC; Trivial: 1 VC)
arrays.ads:20:14: medium: postcondition might fail, cannot prove Count_Even'Result <= X'length (e.g. when Count_Even'Result = 2 and X = (others => 1) and X'First = 1 and X'Last = 1)
arrays.ads:20:36: info: range check proved (CVC4: 1 VC)
arrays.ads:21:06: medium: contract cases might not be complete (e.g. when X'First = 1 and X'Last = 1)
arrays.ads:21:38: info: contract case proved (CVC4: 1 VC; Trivial: 1 VC)
