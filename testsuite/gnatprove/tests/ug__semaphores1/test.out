 info: implicit aspect Always_Terminates on "Get" has been proved, subprogram will terminate
--> semaphores1.adb:8:16

 medium: overflow check might fail, cannot prove upper bound for The_Data + 1
--> semaphores1.adb:17:31
   17 |             The_Data := The_Data + 1;
      |                         ~~~~~~~~~^~~
      + reason for check: result of addition must fit in a 32-bits machine integer

 warning: no Always_Terminates aspect available for "Set_True" [assumed-always-terminates]
--> semaphores1.adb:34:07
   34 |          Set_True (Semaphore);
      |          ^~~~~~~~~~~~~~~~~~~
      + assuming "Set_True" always terminates

 warning: no Always_Terminates aspect available for "Suspend_Until_True" [assumed-always-terminates]
--> semaphores1.adb:42:07
   42 |          Suspend_Until_True (Semaphore);
      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      + assuming "Suspend_Until_True" always terminates

 medium: ceiling priority protocol might not be respected
--> semaphores1.ads:6:09
    6 |       task T1;
      |            ^~
      + reason for check: ceiling priority of the protected object "Semaphores1.Protected_Natural" must be >= the priority of the caller "Semaphores1.T1" in the call chain:
        "Semaphores1.T1"
        -> "Semaphores1.Initialize_Shared_Data"
        -> "Semaphores1.Protected_Natural.Incr"

 info: nontermination of task proved
--> semaphores1.ads:6:09

 medium: ceiling priority protocol might not be respected
--> semaphores1.ads:7:09
    7 |       task T2;
      |            ^~
      + reason for check: ceiling priority of the protected object "Semaphores1.Protected_Natural" must be >= the priority of the caller "Semaphores1.T2" in the call "Semaphores1.T2" -> "Semaphores1.Protected_Natural.Get"

 info: nontermination of task proved
--> semaphores1.ads:7:09
