opers.adb:5:16: high: overflow check might fail, cannot prove lower bound for X + X, in instantiation at opers.adb:10 (e.g. when X = -1073741825) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: add precondition (if X >= 0 then X <= Integer'Last - X else X >= Integer'First - X) to subprogram at line 10]
opers.adb:5:16: high: overflow check might fail, cannot prove lower bound for X + X, in instantiation at opers.adb:8 (e.g. when X = -1073741825) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: add precondition (if X >= 0 then X <= Integer'Last - X else X >= Integer'First - X) to subprogram at line 8]
opers.adb:8:13: info: implicit aspect Always_Terminates on "Double1" has been proved, subprogram will terminate
opers.adb:10:13: info: implicit aspect Always_Terminates on "Double2" has been proved, subprogram will terminate
opers.adb:12:13: info: implicit aspect Always_Terminates on "Ten1" has been proved, subprogram will terminate
opers.adb:14:13: info: implicit aspect Always_Terminates on "Ten2" has been proved, subprogram will terminate
opers.adb:21:13: info: implicit aspect Always_Terminates on "False1" has been proved, subprogram will terminate
opers.adb:23:13: info: implicit aspect Always_Terminates on "False2" has been proved, subprogram will terminate
opers.adb:25:13: info: implicit aspect Always_Terminates on "Fixed_True1" has been proved, subprogram will terminate
opers.adb:27:13: info: implicit aspect Always_Terminates on "Fixed_True2" has been proved, subprogram will terminate
opers.adb:34:13: info: implicit aspect Always_Terminates on "True1r" has been proved, subprogram will terminate
opers.adb:36:13: info: implicit aspect Always_Terminates on "True2r" has been proved, subprogram will terminate
opers.adb:38:13: info: implicit aspect Always_Terminates on "Fixed_False1r" has been proved, subprogram will terminate
opers.adb:40:13: info: implicit aspect Always_Terminates on "Fixed_False2r" has been proved, subprogram will terminate
opers.adb:46:35: high: range check might fail, cannot prove lower bound for A (e.g. when A = 0) [reason for check: value must be convertible to the target type of the conversion] [possible fix: subprogram at opers.ads:24 should mention A in a precondition]
opers.adb:47:35: info: range check proved (CVC5: 2 VC)
opers.adb:48:22: medium: assertion might fail [possible fix: subprogram at opers.ads:24 should mention A in a precondition]
opers.adb:49:22: medium: assertion might fail [possible fix: subprogram at opers.ads:24 should mention A in a precondition]
opers.adb:50:22: high: assertion might fail (e.g. when A = 10) [possible fix: subprogram at opers.ads:24 should mention A in a precondition]
opers.adb:50:44: info: range check proved (CVC5: 2 VC)
opers.adb:51:22: medium: assertion might fail [possible fix: subprogram at opers.ads:24 should mention A in a precondition]
opers.adb:51:44: info: range check proved (CVC5: 2 VC)
opers.adb:52:22: medium: assertion might fail [possible fix: subprogram at opers.ads:24 should mention A in a precondition]
opers.adb:53:22: medium: assertion might fail [possible fix: subprogram at opers.ads:24 should mention A in a precondition]
opers.adb:54:22: medium: assertion might fail [possible fix: subprogram at opers.ads:24 should mention A in a precondition]
opers.adb:54:47: info: range check proved (CVC5: 2 VC)
opers.adb:55:22: medium: assertion might fail [possible fix: subprogram at opers.ads:24 should mention A in a precondition]
opers.adb:55:47: info: range check proved (CVC5: 2 VC)
opers.ads:5:13: info: implicit aspect Always_Terminates on overriding operator "+" has been proved, subprogram will terminate
opers.ads:5:18: warning: unused variable "X"
opers.ads:5:21: warning: unused variable "Y"
opers.ads:6:13: info: implicit aspect Always_Terminates on overriding operator "<" has been proved, subprogram will terminate
opers.ads:6:18: warning: unused variable "X"
opers.ads:6:21: warning: unused variable "Y"
opers.ads:7:13: info: implicit aspect Always_Terminates on overriding operator "=" has been proved, subprogram will terminate
opers.ads:7:18: warning: unused variable "X"
opers.ads:7:21: warning: unused variable "Y"
opers.ads:17:32: warning: unused variable "X", in instantiation at opers.adb:21
opers.ads:17:32: warning: unused variable "X", in instantiation at opers.adb:23
opers.ads:22:30: warning: unused variable "X", in instantiation at opers.adb:34
opers.ads:22:30: warning: unused variable "X", in instantiation at opers.adb:36
