array_applications.adb:14:09: info: data dependencies proved
array_applications.adb:15:09: info: flow dependencies proved
array_applications.adb:16:20: medium: postcondition might fail
array_applications.adb:23:27: info: overflow check proved (CVC4: 4 VC)
array_applications.adb:26:13: info: loop invariant initialization proved (CVC4: 3 VC)
array_applications.adb:26:13: info: loop invariant preservation proved (CVC4: 3 VC)
array_applications.adb:26:22: info: range check proved (CVC4: 4 VC)
array_applications.adb:27:18: info: index check proved (CVC4: 4 VC)
array_applications.adb:27:27: info: index check proved (CVC4: 4 VC)
array_applications.adb:27:32: info: overflow check proved (CVC4: 4 VC)
array_applications.adb:27:38: info: index check proved (CVC4: 4 VC)
array_applications.adb:34:09: info: data dependencies proved
array_applications.adb:35:09: info: flow dependencies proved
array_applications.adb:36:20: info: postcondition proved (CVC4: 1 VC)
array_applications.adb:43:27: info: overflow check proved (CVC4: 4 VC)
array_applications.adb:46:13: info: loop invariant initialization proved (CVC4: 3 VC)
array_applications.adb:46:13: info: loop invariant preservation proved (CVC4: 3 VC)
array_applications.adb:46:22: info: range check proved (CVC4: 4 VC)
array_applications.adb:47:18: info: index check proved (CVC4: 4 VC)
array_applications.adb:47:27: info: index check proved (CVC4: 4 VC)
array_applications.adb:47:32: info: overflow check proved (CVC4: 4 VC)
array_applications.adb:47:38: info: index check proved (CVC4: 4 VC)
array_applications.adb:60:09: info: data dependencies proved
array_applications.adb:61:09: info: flow dependencies proved
array_applications.adb:62:20: medium: postcondition might fail
array_applications.adb:69:27: medium: overflow check might fail, cannot prove upper bound for A(I - 1) + A(I - 2) [reason for check: result of addition must fit in a 32-bits machine integer]
array_applications.adb:71:13: info: loop invariant initialization proved (CVC4: 5 VC)
array_applications.adb:73:22: info: range check proved (CVC4: 4 VC)
array_applications.adb:74:16: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove A(J) = A(J - 1) + A(J - 2)
array_applications.adb:74:18: info: index check proved (CVC4: 4 VC)
array_applications.adb:74:27: info: index check proved (CVC4: 4 VC)
array_applications.adb:74:32: medium: overflow check might fail, cannot prove upper bound for A(J - 1) + A(J - 2) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit Ada.Numerics.Big_Numerics.Big_Integers]
array_applications.adb:74:38: info: index check proved (CVC4: 4 VC)
array_applications.adb:75:22: info: range check proved (CVC4: 4 VC)
array_applications.adb:76:18: info: index check proved (CVC4: 4 VC)
array_applications.adb:76:32: info: index check proved (CVC4: 4 VC)
array_applications.adb:76:38: info: overflow check proved (CVC4: 3 VC; colibri: 1 VC)
array_applications.adb:81:09: info: data dependencies proved
array_applications.adb:82:09: info: flow dependencies proved
array_applications.adb:83:20: medium: postcondition might fail
array_applications.adb:90:27: medium: overflow check might fail, cannot prove upper bound for A(I - 1) + A(I - 2) [reason for check: result of addition must fit in a 32-bits machine integer]
array_applications.adb:92:13: info: loop invariant initialization proved (CVC4: 5 VC)
array_applications.adb:94:22: info: range check proved (CVC4: 4 VC)
array_applications.adb:95:16: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove A(J) = A(J - 1) + A(J - 2)
array_applications.adb:95:18: info: index check proved (CVC4: 4 VC)
array_applications.adb:95:27: info: index check proved (CVC4: 4 VC)
array_applications.adb:95:32: medium: overflow check might fail, cannot prove upper bound for A(J - 1) + A(J - 2) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit Ada.Numerics.Big_Numerics.Big_Integers]
array_applications.adb:95:38: info: index check proved (CVC4: 4 VC)
array_applications.adb:96:22: info: range check proved (CVC4: 4 VC)
array_applications.adb:97:18: info: index check proved (CVC4: 4 VC)
array_applications.adb:97:32: info: index check proved (CVC4: 4 VC)
array_applications.adb:97:38: info: overflow check proved (CVC4: 3 VC; colibri: 1 VC)
