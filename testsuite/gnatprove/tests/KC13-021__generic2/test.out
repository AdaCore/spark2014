p.adb:4:07: info: initialization of "Result" proved, in instantiation at q.adb:13
p.adb:4:07: info: initialization of "Result" proved, in instantiation at q.ads:9
p.adb:5:07: info: initialization of "Tmp" proved, in instantiation at q.adb:13
p.adb:5:07: info: initialization of "Tmp" proved, in instantiation at q.ads:9
p.adb:8:19: medium: overflow check might fail, cannot prove upper bound for Tmp + F1 (Y), in instantiation at q.adb:13 (e.g. when Tmp = 4) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: you should consider adding a postcondition to function QF1 or turning it into an expression function]
p.adb:8:19: medium: overflow check might fail, cannot prove upper bound for Tmp + F1 (Y), in instantiation at q.ads:9 (e.g. when Tmp = 1) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: you should consider adding a postcondition to function QF1 or turning it into an expression function]
p.adb:8:29: medium: overflow check might fail, cannot prove upper bound for (Tmp + F1 (Y)) + (Z + T), in instantiation at q.adb:13 (e.g. when Tmp = 4) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: you should consider adding a postcondition to function QF1 or turning it into an expression function]
p.adb:8:29: medium: overflow check might fail, cannot prove upper bound for (Tmp + F1 (Y)) + (Z + T), in instantiation at q.ads:9 (e.g. when Tmp = 1) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: you should consider adding a postcondition to function QF1 or turning it into an expression function]
p.adb:9:07: medium: precondition might fail, in instantiation at q.adb:13 (e.g. when Tmp = Integer'Last)
p.adb:9:07: medium: precondition might fail, in instantiation at q.ads:9 (e.g. when Tmp = Integer'Last)
q.adb:10:14: info: overflow check proved (CVC4: 2 VC)
q.adb:16:07: info: initialization of "R1" proved
q.adb:17:07: info: initialization of "R2" proved
q.adb:21:18: medium: overflow check might fail, cannot prove lower bound for R1.D + R2.D (e.g. when R1 = (A => -1, B => False, C => 0, D => Integer'First) and R2 = (A => False, B => -1, C => 0, D => -1)) [reason for check: result of addition must fit in a 32-bits machine integer]
q.ads:5:18: warning: unused variable "J"
q.ads:11:60: info: initialization of "X4" proved
