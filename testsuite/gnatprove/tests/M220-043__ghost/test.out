semantics.adb:9:22: medium: assertion might fail [possible fix: you should consider adding a postcondition to function Ghost_Func or turning it into an expression function]
semantics.adb:9:29: medium: overflow check might fail, cannot prove lower bound for Formal + Ghost_Func [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit SPARK.Big_Integers]
semantics.adb:10:29: medium: overflow check might fail, cannot prove upper bound for Formal + Ghost_Func [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit SPARK.Big_Integers]
semantics.adb:13:27: medium: overflow check might fail, cannot prove upper bound for Formal + 1 [reason for check: result of addition must fit in a 32-bits machine integer]
semantics.adb:15:33: info: loop invariant initialization proved (CVC5: 1 VC)
semantics.adb:15:33: info: loop invariant preservation proved (CVC5: 1 VC)
semantics.adb:15:40: medium: overflow check might fail, cannot prove upper bound for Formal + Ghost_Func [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit SPARK.Big_Integers]
semantics.adb:16:33: info: loop variant proved (CVC5: 1 VC)
semantics.adb:16:53: info: overflow check proved (CVC5: 4 VC)
semantics.adb:25:17: info: add a contract to analyze it separately from calling contexts
semantics.adb:25:17: info: local subprogram "Nested_Non_Ghost" only analyzed in the context of calls
semantics.adb:35:14: warning: unused assignment, in call inlined at semantics.adb:41
semantics.adb:35:21: medium: overflow check might fail, cannot prove lower bound for Var + Ghost_Func, in call inlined at semantics.adb:41 [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: you should consider adding a postcondition to function Ghost_Func or turning it into an expression function]
semantics.adb:35:34: medium: overflow check might fail, cannot prove lower bound for Var + Ghost_Func + Ghost_Func, in call inlined at semantics.adb:41 [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: you should consider adding a postcondition to function Ghost_Func or turning it into an expression function]
semantics.adb:41:07: info: analyzing call to "Nested_Non_Ghost" in context
semantics.ads:12:19: info: postcondition proved (CVC5: 1 VC)
semantics.ads:12:43: info: overflow check proved (CVC5: 2 VC)
semantics.ads:13:41: info: contract case proved (CVC5: 1 VC; Trivial: 1 VC)
semantics.ads:13:44: warning: unreachable branch (CVC5: 1 VC)
semantics.ads:14:41: medium: contract case might fail
semantics.ads:14:68: info: overflow check proved (CVC5: 2 VC)
