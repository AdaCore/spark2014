semantics.adb:9:22: medium: assertion might fail, cannot prove Formal + Ghost_Func > 0
semantics.adb:9:29: medium: overflow check might fail (e.g. when Formal = -1073741825)
semantics.adb:10:29: medium: overflow check might fail (e.g. when Formal = 1073741824)
semantics.adb:13:27: medium: overflow check might fail (e.g. when Formal = Integer'Last)
semantics.adb:15:33: info: loop invariant initialization proved (CVC4: 1 VC)
semantics.adb:15:33: info: loop invariant preservation proved (CVC4: 1 VC)
semantics.adb:15:40: medium: overflow check might fail (e.g. when Formal = 1073741825)
semantics.adb:16:33: info: loop variant proved (CVC4: 1 VC)
semantics.adb:16:53: info: overflow check proved (CVC4: 2 VC)
semantics.adb:25:17: info: add a contract to analyze it separately from calling contexts
semantics.adb:25:17: info: local subprogram "Nested_Non_Ghost" only analyzed in the context of calls
semantics.adb:35:14: warning: unused assignment, in call inlined at semantics.adb:41
semantics.adb:35:21: medium: overflow check might fail, in call inlined at semantics.adb:41
semantics.adb:35:34: medium: overflow check might fail, in call inlined at semantics.adb:41
semantics.ads:12:19: info: postcondition proved (CVC4: 1 VC)
semantics.ads:12:43: info: overflow check proved (CVC4: 1 VC)
semantics.ads:13:41: info: contract case proved (CVC4: 1 VC; Trivial: 1 VC)
semantics.ads:13:44: warning: unreachable branch (CVC4: 1 VC)
semantics.ads:14:41: medium: contract case might fail (e.g. when Formal = 0)
semantics.ads:14:68: info: overflow check proved (CVC4: 1 VC)
