area_math.adb:11:14: info: predicate check proved (CVC4: 2 VC)
area_math.adb:216:07: info: initialization of "Result" proved
area_math.adb:216:33: info: overflow check proved (CVC4: 2 VC)
area_math.adb:216:33: info: range check proved (CVC4: 2 VC)
area_math.adb:218:07: info: initialization of "Skip" proved
area_math.adb:220:13: info: predicate check proved (CVC4: 2 VC)
area_math.adb:221:13: info: predicate check proved (CVC4: 2 VC)
area_math.adb:221:19: info: length check proved (CVC4: 3 VC; Trivial: 1 VC)
area_math.adb:221:22: info: length check proved (CVC4: 3 VC; Trivial: 1 VC)
area_math.adb:222:13: info: predicate check proved (CVC4: 2 VC)
area_math.adb:222:17: info: length check proved (CVC4: 3 VC; Trivial: 1 VC)
area_math.adb:222:20: info: length check proved (CVC4: 3 VC; Trivial: 1 VC)
area_math.adb:228:47: info: index check proved (CVC4: 4 VC)
area_math.adb:228:47: info: overflow check proved (CVC4: 4 VC)
area_math.adb:234:27: info: index check proved (CVC4: 4 VC)
area_math.adb:238:43: info: index check proved (CVC4: 4 VC)
area_math.adb:244:31: info: index check proved (CVC4: 4 VC)
area_math.adb:244:31: info: overflow check proved (CVC4: 4 VC)
area_math.adb:248:28: info: assertion proved (CVC4: 2 VC)
area_math.adb:249:28: info: assertion proved (CVC4: 2 VC; Trivial: 2 VC)
area_math.adb:249:76: info: index check proved (CVC4: 4 VC)
area_math.adb:252:19: info: predicate check proved (CVC4: 4 VC)
area_math.adb:252:40: info: overflow check proved (CVC4: 4 VC)
area_math.adb:253:19: info: predicate check proved (CVC4: 4 VC)
area_math.adb:253:32: info: index check proved (CVC4: 4 VC)
area_math.adb:254:19: info: predicate check proved (CVC4: 4 VC)
area_math.adb:254:30: info: index check proved (CVC4: 4 VC)
area_math.adb:256:28: info: assertion proved (CVC4: 1 VC; Z3: 1 VC)
area_math.adb:259:28: info: assertion proved (CVC4: 2 VC)
area_math.adb:259:47: info: index check proved (CVC4: 4 VC)
area_math.adb:259:119: info: index check proved (CVC4: 4 VC)
area_math.adb:259:134: info: index check proved (CVC4: 4 VC)
area_math.adb:260:28: info: assertion proved (CVC4: 2 VC)
area_math.adb:260:45: info: index check proved (CVC4: 4 VC)
area_math.adb:260:97: info: index check proved (CVC4: 4 VC)
area_math.adb:260:116: info: index check proved (CVC4: 4 VC)
area_math.adb:260:116: info: overflow check proved (CVC4: 4 VC)
area_math.adb:263:33: info: loop invariant initialization proved (CVC4: 1 VC)
area_math.adb:263:33: info: loop invariant preservation proved (CVC4: 1 VC)
area_math.adb:263:50: info: overflow check proved (CVC4: 4 VC)
area_math.adb:264:33: info: loop invariant initialization proved (CVC4: 1 VC; Trivial: 1 VC)
area_math.adb:264:33: info: loop invariant preservation proved (CVC4: 1 VC; Trivial: 1 VC)
area_math.adb:265:33: info: loop invariant initialization proved (CVC4: 1 VC; Trivial: 1 VC)
area_math.adb:265:33: info: loop invariant preservation proved (CVC4: 1 VC; Trivial: 1 VC)
area_math.adb:265:69: info: index check proved (CVC4: 4 VC)
area_math.adb:265:141: info: index check proved (CVC4: 4 VC)
area_math.adb:265:156: info: index check proved (CVC4: 4 VC)
area_math.adb:266:33: info: loop invariant initialization proved (CVC4: 1 VC; Trivial: 1 VC)
area_math.adb:266:33: info: loop invariant preservation proved (CVC4: 1 VC; Trivial: 1 VC)
area_math.adb:266:67: info: index check proved (CVC4: 4 VC)
area_math.adb:266:140: info: index check proved (CVC4: 4 VC)
area_math.adb:266:159: info: index check proved (CVC4: 4 VC)
area_math.adb:266:159: info: overflow check proved (CVC4: 4 VC)
area_math.adb:268:13: info: loop invariant initialization proved (CVC4: 1 VC; Trivial: 1 VC)
area_math.adb:268:13: info: loop invariant preservation proved (CVC4: 1 VC; Trivial: 1 VC)
area_math.adb:269:62: info: index check proved (CVC4: 4 VC)
area_math.adb:269:62: info: overflow check proved (CVC4: 4 VC)
area_math.adb:270:67: info: index check proved (CVC4: 4 VC)
area_math.adb:274:33: info: loop invariant initialization proved (CVC4: 3 VC)
area_math.adb:274:33: info: loop invariant preservation proved (CVC4: 3 VC)
area_math.adb:278:56: info: index check proved (CVC4: 4 VC)
area_math.adb:278:75: info: index check proved (CVC4: 4 VC)
area_math.adb:278:75: info: overflow check proved (CVC4: 4 VC)
area_math.adb:278:88: medium: loop invariant might fail in first iteration, cannot prove Result.To (Result.Size) < E.To (I + 1) + 1 (e.g. when E = (Max => 1, Size => 1, From => (1 => Address_Type'Last), To => (1 => Address_Type'Last)) and E.From'First = 1 and E.From'Last = 1 and E.To'First = 1 and E.To'Last = 1 and I = 0 and Result = (Max => ?, Size => 1, From => (1 => 0), To => (1 => Address_Type'Last-1)) and Result.From'First = 0 and Result.From'Last = 1 and Result.To'First = 0 and Result.To'Last = 1)
area_math.adb:278:88: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove Result.To (Result.Size) < E.To (I + 1) + 1 (e.g. when E.Max = 4 and E.Size = 4 and E.From(1) = 1 and E.From(3) = 1 and E.From(4) = Address_Type'Last and E.From'First = 1 and E.From'Last = 4 and E.To'First = 1 and E.To'Last = 4 and I = 3 and Result = (Size => 2, To => (5 => Address_Type'Last), others => ?) and Result.From'First = 5 and Result.From'Last = 1 and Result.To'First = 5 and Result.To'Last = 5)
area_math.adb:278:105: info: index check proved (CVC4: 4 VC)
area_math.adb:278:122: info: index check proved (CVC4: 4 VC)
area_math.adb:278:122: info: overflow check proved (CVC4: 4 VC)
area_math.adb:285:33: info: loop invariant initialization proved (CVC4: 3 VC)
area_math.adb:285:33: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove E.To (R) < E.From (R + 1) (e.g. when R = 1 and Result = (Size => 2, To => (4 => 1), others => ?) and Result.From'First = 4 and Result.From'Last = 1 and Result.To'First = 4 and Result.To'Last = 4)
area_math.ads:15:07: info: range check proved (CVC4: 2 VC)
area_math.ads:16:07: info: range check proved (CVC4: 2 VC)
area_math.ads:22:46: info: index check proved (CVC4: 2 VC)
area_math.ads:22:61: info: index check proved (CVC4: 2 VC)
area_math.ads:22:61: info: overflow check proved (CVC4: 2 VC)
area_math.ads:22:85: info: index check proved (CVC4: 2 VC)
area_math.ads:22:85: info: overflow check proved (CVC4: 2 VC)
area_math.ads:22:98: info: index check proved (CVC4: 2 VC)
area_math.ads:24:46: info: index check proved (CVC4: 2 VC)
area_math.ads:24:58: info: index check proved (CVC4: 2 VC)
area_math.ads:26:24: info: predicate check proved (CVC4: 2 VC)
area_math.ads:33:50: info: index check proved (CVC4: 2 VC)
area_math.ads:33:62: info: index check proved (CVC4: 2 VC)
area_math.ads:48:22: info: overflow check proved (CVC4: 2 VC)
area_math.ads:52:38: medium: postcondition might fail, cannot prove (B < "not"'Result) = (not B < E) (e.g. when B = 0 and E = (Max => 0, Size => 0, others => ?) and E.From'First = 1 and E.From'Last = 0 and E.To'First = 1 and E.To'Last = 0)
area_math.ads:53:36: info: overflow check proved (CVC4: 2 VC)
area_math.ads:54:35: info: overflow check proved (CVC4: 2 VC)
