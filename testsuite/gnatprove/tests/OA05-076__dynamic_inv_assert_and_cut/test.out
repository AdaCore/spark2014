lsc-bignum.adb:10:11: info: range check proved (CVC4: 2 VC)
lsc-bignum.adb:13:10: info: loop invariant initialization proved (CVC4: 1 VC)
lsc-bignum.adb:13:10: info: loop invariant preservation proved (CVC4: 1 VC)
lsc-bignum.adb:14:21: info: range check proved (CVC4: 2 VC)
lsc-bignum.adb:14:53: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:14:64: info: index check proved (CVC4: 2 VC)
lsc-bignum.adb:16:10: warning: no check message justified by this pragma
lsc-bignum.adb:21:13: info: index check proved (CVC4: 2 VC)
lsc-bignum.adb:43:11: info: range check proved (CVC4: 2 VC)
lsc-bignum.adb:45:10: info: loop invariant initialization proved (CVC4: 1 VC)
lsc-bignum.adb:45:10: info: loop invariant preservation proved (CVC4: 2 VC)
lsc-bignum.adb:46:21: info: range check proved (CVC4: 2 VC)
lsc-bignum.adb:47:44: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:47:48: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:47:58: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:48:22: info: index check proved (CVC4: 2 VC)
lsc-bignum.adb:48:38: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:48:42: info: index check proved (CVC4: 2 VC)
lsc-bignum.adb:48:42: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:49:48: medium: overflow check might fail
lsc-bignum.adb:49:52: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:49:62: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:50:22: info: index check proved (CVC4: 2 VC)
lsc-bignum.adb:50:41: info: index check proved (CVC4: 2 VC)
lsc-bignum.adb:52:21: info: index check proved (CVC4: 2 VC)
lsc-bignum.adb:52:21: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:52:26: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:52:44: info: index check proved (CVC4: 2 VC)
lsc-bignum.adb:54:10: info: assertion proved (CVC4: 2 VC)
lsc-bignum.adb:55:21: info: range check proved (CVC4: 2 VC)
lsc-bignum.adb:56:44: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:56:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:56:54: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:56:64: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:57:22: info: index check proved (CVC4: 2 VC)
lsc-bignum.adb:57:38: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:57:42: info: index check proved (CVC4: 2 VC)
lsc-bignum.adb:57:42: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:58:48: medium: overflow check might fail
lsc-bignum.adb:58:53: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:58:58: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:58:68: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:59:22: info: index check proved (CVC4: 2 VC)
lsc-bignum.adb:59:41: info: index check proved (CVC4: 2 VC)
lsc-bignum.adb:67:08: medium: postcondition might fail, cannot prove Math_Int.From_Word32 (Word_Of_Boolean'Result) = Num_Of_Boolean (B)
lsc-bignum.adb:77:14: info: initialization of "Result" proved
lsc-bignum.adb:95:11: info: range check proved (CVC4: 2 VC)
lsc-bignum.adb:97:10: info: loop invariant preservation proved (CVC4: 2 VC)
lsc-bignum.adb:98:13: medium: loop invariant might fail in first iteration, cannot prove Num_Of_Big_Int (A'Loop_Entry, A_First, I - A_First) - Num_Of_Big_Int (B, B_First, I - A_First) = Num_Of_Big_Int (A, A_First, I - A_First) - Base ** (I - A_First) * Num_Of_Boolean (Carry)
lsc-bignum.adb:98:54: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:98:54: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:99:43: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:99:43: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:100:43: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:100:43: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:101:24: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:101:24: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:101:53: info: initialization of "Carry" proved
lsc-bignum.adb:102:22: info: range check proved (CVC4: 2 VC)
lsc-bignum.adb:103:20: info: index check proved (CVC4: 2 VC)
lsc-bignum.adb:103:39: info: index check proved (CVC4: 2 VC)
lsc-bignum.adb:105:23: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:105:23: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:105:28: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:106:26: info: index check proved (CVC4: 2 VC)
lsc-bignum.adb:106:34: info: index check proved (CVC4: 2 VC)
lsc-bignum.adb:106:34: info: initialization of "J" proved
lsc-bignum.adb:106:49: info: index check proved (CVC4: 2 VC)
lsc-bignum.adb:106:57: info: index check proved (CVC4: 2 VC)
lsc-bignum.adb:106:69: info: initialization of "Carry" proved
lsc-bignum.adb:107:13: info: index check proved (CVC4: 2 VC)
lsc-bignum.adb:107:23: info: index check proved (CVC4: 2 VC)
lsc-bignum.adb:107:31: info: index check proved (CVC4: 2 VC)
lsc-bignum.adb:107:31: info: initialization of "J" proved
lsc-bignum.adb:107:54: info: initialization of "Carry" proved
lsc-bignum.adb:108:19: info: initialization of "New_Carry" proved
lsc-bignum.adb:111:13: medium: assertion might fail, cannot prove Num_Of_Big_Int (A'Loop_Entry, A_First, (I + 1) - A_First) - Num_Of_Big_Int (B, B_First, (I + 1) - A_First) = Num_Of_Big_Int (A, A_First, (I + 1) - A_First) - Base ** ((I + 1) - A_First) * Num_Of_Boolean (Carry)
lsc-bignum.adb:111:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:111:60: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:111:60: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:112:44: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:112:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:112:49: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:113:44: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:113:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:113:49: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:114:25: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:114:30: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:114:30: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:114:59: info: initialization of "Carry" proved
lsc-bignum.adb:115:22: info: range check proved (CVC4: 2 VC)
lsc-bignum.adb:115:43: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:116:20: info: index check proved (CVC4: 2 VC)
lsc-bignum.adb:116:39: info: index check proved (CVC4: 2 VC)
lsc-bignum.adb:135:11: info: range check proved (CVC4: 2 VC)
lsc-bignum.adb:138:13: medium: loop invariant might fail after first iteration, cannot prove Num_Of_Big_Int (A, I + 1, A_Last - I) = Num_Of_Big_Int (B, B_First + (I - A_First) + 1, A_Last - I)
lsc-bignum.adb:138:13: medium: loop invariant might fail in first iteration, cannot prove Num_Of_Big_Int (A, I + 1, A_Last - I) = Num_Of_Big_Int (B, B_First + (I - A_First) + 1, A_Last - I)
lsc-bignum.adb:138:34: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:138:34: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:138:46: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:138:46: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:139:40: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:139:45: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:139:56: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:139:56: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:139:68: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:139:68: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:140:17: info: initialization of "Result" proved
lsc-bignum.adb:142:23: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:142:23: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:142:28: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:144:16: info: index check proved (CVC4: 2 VC)
lsc-bignum.adb:144:24: info: index check proved (CVC4: 2 VC)
lsc-bignum.adb:144:24: info: initialization of "J" proved
lsc-bignum.adb:149:23: info: index check proved (CVC4: 2 VC)
lsc-bignum.adb:149:31: info: index check proved (CVC4: 2 VC)
lsc-bignum.adb:149:31: info: initialization of "J" proved
lsc-bignum.adb:152:14: info: initialization of "Result" proved
lsc-bignum.adb:170:10: medium: postcondition might fail, cannot prove Math_Int.From_Word32 (A'Old) + Math_Int.From_Word32 (V) * Math_Int.From_Word32 (W) + Math_Int.From_Word32 (X) * Math_Int.From_Word32 (Y) + Math_Int.From_Word32 (Carry1'Old) + Base * Math_Int.From_Word32 (Carry2'Old) = Math_Int.From_Word32 (A) + Base * (Math_Int.From_Word32 (Carry1) + Base * Math_Int.From_Word32 (Carry2)
lsc-bignum.adb:186:10: info: initialization of "Mult1" proved
lsc-bignum.adb:187:10: info: initialization of "Mult2" proved
lsc-bignum.adb:188:36: info: initialization of "Temp" proved
lsc-bignum.adb:188:41: info: range check proved (CVC4: 2 VC)
lsc-bignum.adb:191:33: info: initialization of "Mult1" proved
lsc-bignum.adb:192:33: info: initialization of "Mult2" proved
lsc-bignum.adb:193:33: info: initialization of "Temp" proved
lsc-bignum.adb:194:41: info: initialization of "Temp" proved
lsc-bignum.adb:194:46: info: range check proved (CVC4: 2 VC)
lsc-bignum.adb:195:51: info: range check proved (CVC4: 2 VC)
lsc-bignum.adb:195:65: info: initialization of "Temp" proved
lsc-bignum.adb:218:17: medium: overflow check might fail
lsc-bignum.adb:221:18: medium: overflow check might fail
lsc-bignum.adb:221:28: info: overflow check proved (CVC4: 2 VC)
lsc-bignum.adb:223:18: medium: overflow check might fail
lsc-bignum.adb:223:28: info: overflow check proved (CVC4: 2 VC)
lsc-bignum.adb:225:10: info: postcondition proved (CVC4: 1 VC)
lsc-bignum.adb:225:41: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:225:53: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:225:63: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:225:63: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:226:45: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:226:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:226:55: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:228:45: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:228:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:228:55: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:232:45: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:232:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:232:55: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:233:26: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:233:36: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:233:36: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:238:11: info: range check proved (CVC4: 2 VC)
lsc-bignum.adb:240:10: info: loop invariant preservation proved (CVC4: 2 VC)
lsc-bignum.adb:241:13: medium: loop invariant might fail in first iteration, cannot prove Num_Of_Big_Int (A'Loop_Entry, A_First + 1, I - A_First) + Num_Of_Big_Int (B, B_First, I - A_First) * Math_Int.From_Word32 (X) + Num_Of_Big_Int (C, C_First, I - A_First) * Math_Int.From_Word32 (Y) + Math_Int.From_Word32 (Carry1'Loop_Entry) + Base * Math_Int.From_Word32 (Carry2'Loop_Entry) = Num_Of_Big_Int (A, A_First, I - A_First) + Base ** (I - A_First) * (Math_Int.From_Word32 (Carry1) + Base * Math_Int.From_Word32 (Carry2)
lsc-bignum.adb:241:51: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:241:58: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:241:58: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:242:43: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:242:43: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:244:43: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:244:43: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:248:43: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:248:43: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:249:24: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:249:24: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:251:22: info: range check proved (CVC4: 2 VC)
lsc-bignum.adb:251:53: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:252:20: info: index check proved (CVC4: 2 VC)
lsc-bignum.adb:252:39: info: index check proved (CVC4: 2 VC)
lsc-bignum.adb:254:23: info: index check proved (CVC4: 2 VC)
lsc-bignum.adb:254:23: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:256:13: info: initialization of "Temp" proved
lsc-bignum.adb:257:24: info: index check proved (CVC4: 2 VC)
lsc-bignum.adb:257:24: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:257:29: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:258:24: info: index check proved (CVC4: 2 VC)
lsc-bignum.adb:258:24: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:258:29: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:260:13: info: index check proved (CVC4: 2 VC)
lsc-bignum.adb:260:19: info: initialization of "Temp" proved
lsc-bignum.adb:263:13: medium: assertion might fail, cannot prove Num_Of_Big_Int (A'Loop_Entry, A_First + 1, (I + 1) - A_First) + Num_Of_Big_Int (B, B_First, (I + 1) - A_First) * Math_Int.From_Word32 (X) + Num_Of_Big_Int (C, C_First, (I + 1) - A_First) * Math_Int.From_Word32 (Y) + Math_Int.From_Word32 (Carry1'Loop_Entry) + Base * Math_Int.From_Word32 (Carry2'Loop_Entry) = Num_Of_Big_Int (A, A_First, (I + 1) - A_First) + Base ** ((I + 1) - A_First) * (Math_Int.From_Word32 (Carry1) + Base * Math_Int.From_Word32 (Carry2)
lsc-bignum.adb:263:51: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:263:59: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:263:64: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:263:64: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:264:44: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:264:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:264:49: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:266:44: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:266:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:266:49: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:270:44: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:270:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:270:49: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:271:25: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:271:30: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:271:30: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:273:22: info: range check proved (CVC4: 2 VC)
lsc-bignum.adb:273:43: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:273:57: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:274:20: info: index check proved (CVC4: 2 VC)
lsc-bignum.adb:274:39: info: index check proved (CVC4: 2 VC)
lsc-bignum.adb:295:07: info: precondition proved (CVC4: 5 VC)
lsc-bignum.adb:298:11: info: range check proved (CVC4: 2 VC)
lsc-bignum.adb:300:10: info: loop invariant preservation proved (CVC4: 2 VC)
lsc-bignum.adb:301:13: medium: loop invariant might fail in first iteration, cannot prove Num_Of_Big_Int (A, A_First, A_Last - A_First + 1) + Base ** (A_Last - A_First + 1) * Math_Int.From_Word32 (A_MSW)) mod Num_Of_Big_Int (M, M_First, A_Last - A_First + 1) = (Num_Of_Big_Int (B, B_First, I - A_First) * Num_Of_Big_Int (C, C_First, A_Last - A_First + 1) * Inverse (Num_Of_Big_Int (M, M_First, A_Last - A_First + 1), Base) ** (I - A_First)) mod Num_Of_Big_Int (M, M_First, A_Last - A_First + 1)
lsc-bignum.adb:301:30: info: initialization of "A" proved
lsc-bignum.adb:301:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:301:59: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:301:59: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:302:30: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:302:40: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:302:40: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:302:69: info: initialization of "A_MSW" proved
lsc-bignum.adb:303:48: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:303:58: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:303:58: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:304:44: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:304:44: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:305:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:305:59: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:305:59: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:306:58: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:306:68: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:306:68: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:307:28: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:307:28: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:308:48: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:308:58: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:308:58: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:309:48: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:309:58: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:309:58: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:310:29: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:310:39: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:310:39: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:312:48: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:312:58: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:312:58: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:317:27: info: index check proved (CVC4: 2 VC)
lsc-bignum.adb:317:27: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:317:32: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:318:16: info: initialization of "A" proved
lsc-bignum.adb:318:19: info: index check proved (CVC4: 2 VC)
lsc-bignum.adb:318:30: info: initialization of "BI" proved
lsc-bignum.adb:318:38: info: index check proved (CVC4: 2 VC)
lsc-bignum.adb:320:13: info: initialization of "A" proved
lsc-bignum.adb:320:16: info: index check proved (CVC4: 2 VC)
lsc-bignum.adb:320:26: info: initialization of "BI" proved
lsc-bignum.adb:320:33: info: index check proved (CVC4: 2 VC)
lsc-bignum.adb:320:46: info: index check proved (CVC4: 2 VC)
lsc-bignum.adb:320:56: info: initialization of "U" proved
lsc-bignum.adb:320:59: info: initialization of "Carry1" proved
lsc-bignum.adb:320:67: info: initialization of "Carry2" proved
lsc-bignum.adb:321:10: info: precondition proved (CVC4: 13 VC)
lsc-bignum.adb:322:13: info: initialization of "A" proved
lsc-bignum.adb:322:32: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:323:24: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:323:40: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:324:13: info: initialization of "BI" proved
lsc-bignum.adb:324:17: info: initialization of "U" proved
lsc-bignum.adb:324:20: info: initialization of "Carry1" proved
lsc-bignum.adb:324:28: info: initialization of "Carry2" proved
lsc-bignum.adb:325:13: info: index check proved (CVC4: 2 VC)
lsc-bignum.adb:325:21: info: initialization of "A" proved
lsc-bignum.adb:325:24: info: initialization of "A_MSW" proved
lsc-bignum.adb:325:32: info: initialization of "Carry1" proved
lsc-bignum.adb:326:19: info: initialization of "Carry2" proved
lsc-bignum.adb:326:45: info: initialization of "A" proved
lsc-bignum.adb:326:48: info: index check proved (CVC4: 2 VC)
lsc-bignum.adb:326:58: info: initialization of "Carry1" proved
lsc-bignum.adb:329:13: medium: assertion might fail, cannot prove Num_Of_Big_Int (A, A_First, A_Last - A_First + 1) + Base ** (A_Last - A_First + 1) * Math_Int.From_Word32 (A_MSW)) mod Num_Of_Big_Int (M, M_First, A_Last - A_First + 1) = (Num_Of_Big_Int (B, B_First, (I + 1) - A_First) * Num_Of_Big_Int (C, C_First, A_Last - A_First + 1) * Inverse (Num_Of_Big_Int (M, M_First, A_Last - A_First + 1), Base) ** ((I + 1) - A_First)) mod Num_Of_Big_Int (M, M_First, A_Last - A_First + 1)
lsc-bignum.adb:329:30: info: initialization of "A" proved
lsc-bignum.adb:329:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:329:59: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:329:59: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:330:30: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:330:40: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:330:40: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:330:69: info: initialization of "A_MSW" proved
lsc-bignum.adb:331:48: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:331:58: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:331:58: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:332:45: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:332:50: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:332:50: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:333:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:333:59: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:333:59: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:334:58: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:334:68: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:334:68: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:335:29: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:335:34: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:335:34: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:336:48: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:336:58: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:336:58: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:337:48: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:337:58: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:337:58: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:338:29: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:338:39: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:338:39: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:340:48: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:340:58: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:340:58: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:344:10: info: initialization of "A_MSW" proved
lsc-bignum.adb:345:13: info: precondition proved (CVC4: 9 VC)
lsc-bignum.adb:345:19: info: initialization of "A" proved
lsc-bignum.adb:348:10: info: precondition proved (CVC4: 9 VC)
lsc-bignum.adb:348:23: info: initialization of "A" proved
lsc-bignum.adb:363:12: info: division check proved (CVC4: 1 VC)
lsc-bignum.adb:363:51: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:363:51: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:365:10: medium: postcondition might fail, cannot prove Bit_Set'Result = ((A (A_First + Natural (I / 32)) and 2 ** (Natural (I mod 32))) /= 0
lsc-bignum.adb:366:23: info: index check proved (CVC4: 2 VC)
lsc-bignum.adb:366:23: medium: overflow check might fail
lsc-bignum.adb:366:36: info: division check proved (CVC4: 1 VC)
lsc-bignum.adb:366:36: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:367:29: info: division check proved (CVC4: 1 VC)
lsc-bignum.adb:367:29: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:371:21: medium: array index check might fail
lsc-bignum.adb:371:21: medium: overflow check might fail
lsc-bignum.adb:371:34: info: division check proved (CVC4: 1 VC)
lsc-bignum.adb:371:34: medium: range check might fail
lsc-bignum.adb:372:27: info: division check proved (CVC4: 1 VC)
lsc-bignum.adb:372:27: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:405:19: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:405:19: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:407:07: info: precondition proved (CVC4: 5 VC)
lsc-bignum.adb:407:48: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:407:50: info: initialization of "L" proved
lsc-bignum.adb:408:13: info: index check proved (CVC4: 2 VC)
lsc-bignum.adb:408:25: info: initialization of "Aux1" proved
lsc-bignum.adb:410:07: medium: precondition might fail
lsc-bignum.adb:411:39: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:411:41: info: initialization of "L" proved
lsc-bignum.adb:412:22: info: initialization of "Aux1" proved
lsc-bignum.adb:415:07: medium: precondition might fail
lsc-bignum.adb:416:39: medium: overflow check might fail
lsc-bignum.adb:416:41: info: initialization of "L" proved
lsc-bignum.adb:420:07: medium: precondition might fail
lsc-bignum.adb:421:39: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:421:41: info: initialization of "L" proved
lsc-bignum.adb:422:10: info: initialization of "Aux4" proved
lsc-bignum.adb:422:28: info: initialization of "Aux4" proved
lsc-bignum.adb:426:10: info: initialization of "L" proved
lsc-bignum.adb:426:21: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:427:10: medium: assertion might fail, cannot prove Num_Of_Big_Int (Aux1, Aux1_First, L + 1) = Math_Int.From_Word32 (1)
lsc-bignum.adb:427:26: info: initialization of "Aux1" proved
lsc-bignum.adb:427:46: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:429:26: info: initialization of "Aux2" proved
lsc-bignum.adb:429:46: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:430:40: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:431:40: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:432:21: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:433:40: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:434:26: info: initialization of "Aux3" proved
lsc-bignum.adb:434:46: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:435:21: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:436:40: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:437:26: info: initialization of "Aux4" proved
lsc-bignum.adb:437:46: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:438:40: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:439:21: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:440:40: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:442:11: medium: range check might fail
lsc-bignum.adb:442:37: medium: overflow check might fail
lsc-bignum.adb:442:42: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:445:13: info: initialization of "L" proved
lsc-bignum.adb:445:24: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:446:29: info: initialization of "Aux1" proved
lsc-bignum.adb:446:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:448:29: info: initialization of "Aux2" proved
lsc-bignum.adb:448:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:449:43: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:450:43: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:451:24: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:452:43: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:453:29: info: initialization of "Aux3" proved
lsc-bignum.adb:453:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:454:24: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:455:43: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:456:22: info: range check proved (CVC4: 2 VC)
lsc-bignum.adb:457:16: medium: loop invariant might fail after first iteration, cannot prove Num_Of_Big_Int (Aux4, Aux4_First + N * (L + 1), L + 1) = Num_Of_Big_Int (X, X_First, L + 1) ** (2 * N + 1) * Base ** (L + 1) mod Num_Of_Big_Int (M, M_First, L + 1)
lsc-bignum.adb:457:16: medium: loop invariant might fail in first iteration, cannot prove Num_Of_Big_Int (Aux4, Aux4_First + N * (L + 1), L + 1) = Num_Of_Big_Int (X, X_First, L + 1) ** (2 * N + 1) * Base ** (L + 1) mod Num_Of_Big_Int (M, M_First, L + 1)
lsc-bignum.adb:457:33: info: initialization of "Aux4" proved
lsc-bignum.adb:457:50: medium: overflow check might fail
lsc-bignum.adb:457:50: medium: range check might fail
lsc-bignum.adb:457:54: medium: overflow check might fail
lsc-bignum.adb:457:59: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:457:67: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:458:47: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:458:58: medium: overflow check might fail
lsc-bignum.adb:458:62: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:458:62: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:459:28: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:460:47: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:462:10: medium: precondition might fail
lsc-bignum.adb:464:13: info: initialization of "Aux4" proved
lsc-bignum.adb:464:30: medium: overflow check might fail
lsc-bignum.adb:464:30: medium: range check might fail
lsc-bignum.adb:464:40: medium: overflow check might fail
lsc-bignum.adb:464:43: info: initialization of "L" proved
lsc-bignum.adb:464:45: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:464:51: info: initialization of "Aux2" proved
lsc-bignum.adb:467:10: medium: precondition might fail
lsc-bignum.adb:467:16: info: initialization of "A" proved
lsc-bignum.adb:467:36: info: initialization of "Aux4" proved
lsc-bignum.adb:467:53: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:467:53: medium: overflow check might fail
lsc-bignum.adb:467:57: medium: overflow check might fail
lsc-bignum.adb:467:60: info: initialization of "L" proved
lsc-bignum.adb:467:62: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:470:13: info: initialization of "L" proved
lsc-bignum.adb:470:24: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:471:29: info: initialization of "Aux1" proved
lsc-bignum.adb:471:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:473:29: info: initialization of "Aux2" proved
lsc-bignum.adb:473:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:474:43: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:475:43: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:476:24: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:477:43: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:478:29: info: initialization of "Aux3" proved
lsc-bignum.adb:478:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:479:24: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:480:43: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:481:22: info: range check proved (CVC4: 2 VC)
lsc-bignum.adb:482:16: medium: assertion might fail, cannot prove Num_Of_Big_Int (Aux4, Aux4_First + N * (L + 1), L + 1) = Num_Of_Big_Int (X, X_First, L + 1) ** (2 * N + 1) * Base ** (L + 1) mod Num_Of_Big_Int (M, M_First, L + 1)
lsc-bignum.adb:482:33: info: initialization of "Aux4" proved
lsc-bignum.adb:482:50: medium: overflow check might fail
lsc-bignum.adb:482:50: medium: range check might fail
lsc-bignum.adb:482:54: medium: overflow check might fail
lsc-bignum.adb:482:59: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:482:67: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:483:47: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:483:58: medium: overflow check might fail
lsc-bignum.adb:483:62: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:483:62: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:484:28: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:485:47: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:488:44: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:488:44: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:492:13: info: initialization of "L" proved
lsc-bignum.adb:492:24: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:493:29: info: initialization of "Aux1" proved
lsc-bignum.adb:493:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:495:29: info: initialization of "Aux2" proved
lsc-bignum.adb:495:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:496:43: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:497:43: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:498:24: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:499:43: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:500:13: medium: loop invariant might fail after first iteration, cannot prove Num_Of_Big_Int (Aux3, Aux3_First, L + 1) = Num_Of_Big_Int (X, X_First, L + 1) ** (Num_Of_Big_Int (E, E_First, E_Last - E_First + 1) / Math_Int.From_Word32 (2) ** (Math_Int.From_Word64 (I) + Math_Int.From_Word32 (1))) * Base ** (L + 1) mod Num_Of_Big_Int (M, M_First, L + 1)
lsc-bignum.adb:500:13: medium: loop invariant might fail in first iteration, cannot prove Num_Of_Big_Int (Aux3, Aux3_First, L + 1) = Num_Of_Big_Int (X, X_First, L + 1) ** (Num_Of_Big_Int (E, E_First, E_Last - E_First + 1) / Math_Int.From_Word32 (2) ** (Math_Int.From_Word64 (I) + Math_Int.From_Word32 (1))) * Base ** (L + 1) mod Num_Of_Big_Int (M, M_First, L + 1)
lsc-bignum.adb:500:29: info: initialization of "Aux3" proved
lsc-bignum.adb:500:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:501:43: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:502:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:502:59: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:502:59: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:504:39: info: initialization of "I" proved
lsc-bignum.adb:505:24: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:506:43: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:507:22: info: range check proved (CVC4: 2 VC)
lsc-bignum.adb:507:48: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:507:53: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:508:33: info: initialization of "Aux4" proved
lsc-bignum.adb:508:50: medium: overflow check might fail
lsc-bignum.adb:508:50: medium: range check might fail
lsc-bignum.adb:508:54: medium: overflow check might fail
lsc-bignum.adb:508:59: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:508:67: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:509:47: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:509:58: medium: overflow check might fail
lsc-bignum.adb:509:62: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:509:62: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:510:28: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:511:47: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:512:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:512:49: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:514:13: medium: precondition might fail
lsc-bignum.adb:514:34: info: initialization of "I" proved
lsc-bignum.adb:521:19: info: initialization of "L" proved
lsc-bignum.adb:521:30: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:522:35: info: initialization of "Aux1" proved
lsc-bignum.adb:522:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:524:35: info: initialization of "Aux2" proved
lsc-bignum.adb:524:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:525:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:526:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:527:30: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:528:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:529:35: info: initialization of "Aux3" proved
lsc-bignum.adb:529:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:530:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:531:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:531:65: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:531:65: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:533:45: info: initialization of "I" proved
lsc-bignum.adb:534:30: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:535:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:536:28: info: range check proved (CVC4: 2 VC)
lsc-bignum.adb:536:54: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:536:59: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:537:22: medium: loop invariant might fail after first iteration, cannot prove Num_Of_Big_Int (Aux4, Aux4_First + N * (L + 1), L + 1) = Num_Of_Big_Int (X, X_First, L + 1) ** (2 * N + 1) * Base ** (L + 1) mod Num_Of_Big_Int (M, M_First, L + 1)
lsc-bignum.adb:537:22: medium: loop invariant might fail in first iteration, cannot prove Num_Of_Big_Int (Aux4, Aux4_First + N * (L + 1), L + 1) = Num_Of_Big_Int (X, X_First, L + 1) ** (2 * N + 1) * Base ** (L + 1) mod Num_Of_Big_Int (M, M_First, L + 1)
lsc-bignum.adb:537:39: info: initialization of "Aux4" proved
lsc-bignum.adb:537:56: medium: overflow check might fail
lsc-bignum.adb:537:56: medium: range check might fail
lsc-bignum.adb:537:60: medium: overflow check might fail
lsc-bignum.adb:537:65: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:537:73: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:538:53: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:538:64: medium: overflow check might fail
lsc-bignum.adb:538:68: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:538:68: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:539:34: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:540:53: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:541:41: info: initialization of "W" proved
lsc-bignum.adb:541:77: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:541:79: info: initialization of "S" proved
lsc-bignum.adb:541:81: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:541:81: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:542:54: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:542:64: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:542:64: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:545:47: info: initialization of "J" proved
lsc-bignum.adb:546:21: info: division check proved (CVC4: 1 VC)
lsc-bignum.adb:546:63: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:549:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:549:55: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:552:31: info: initialization of "J" proved
lsc-bignum.adb:552:72: info: initialization of "I" proved
lsc-bignum.adb:554:19: medium: precondition might fail
lsc-bignum.adb:554:40: info: initialization of "I" proved
lsc-bignum.adb:554:68: info: initialization of "J" proved
lsc-bignum.adb:555:47: info: initialization of "W" proved
lsc-bignum.adb:555:50: info: initialization of "J" proved
lsc-bignum.adb:555:52: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:555:52: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:555:54: info: initialization of "S" proved
lsc-bignum.adb:556:24: info: initialization of "J" proved
lsc-bignum.adb:559:21: info: initialization of "J" proved
lsc-bignum.adb:559:23: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:562:18: info: initialization of "S" proved
lsc-bignum.adb:562:20: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:564:17: info: range check proved (CVC4: 2 VC)
lsc-bignum.adb:564:41: info: initialization of "S" proved
lsc-bignum.adb:567:19: info: initialization of "L" proved
lsc-bignum.adb:567:30: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:568:35: info: initialization of "Aux1" proved
lsc-bignum.adb:568:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:570:35: info: initialization of "Aux2" proved
lsc-bignum.adb:570:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:571:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:572:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:573:30: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:574:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:575:19: medium: loop invariant might fail in first iteration, cannot prove Num_Of_Big_Int (Aux3, Aux3_First, L + 1) = Num_Of_Big_Int (X, X_First, L + 1) ** (Num_Of_Big_Int (E, E_First, E_Last - E_First + 1) / Math_Int.From_Word32 (2) ** (Math_Int.From_Word64 (I) + Math_Int.From_Word32 (1)) * Math_Int.From_Word32 (2) ** (H - 1)) * Base ** (L + 1) mod Num_Of_Big_Int (M, M_First, L + 1)
lsc-bignum.adb:575:35: info: initialization of "Aux3" proved
lsc-bignum.adb:575:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:576:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:577:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:577:65: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:577:65: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:579:45: info: initialization of "I" proved
lsc-bignum.adb:581:30: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:582:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:583:28: info: range check proved (CVC4: 2 VC)
lsc-bignum.adb:583:54: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:583:59: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:584:22: medium: loop invariant might fail after first iteration, cannot prove Num_Of_Big_Int (Aux4, Aux4_First + N * (L + 1), L + 1) = Num_Of_Big_Int (X, X_First, L + 1) ** (2 * N + 1) * Base ** (L + 1) mod Num_Of_Big_Int (M, M_First, L + 1)
lsc-bignum.adb:584:39: info: initialization of "Aux4" proved
lsc-bignum.adb:584:56: medium: overflow check might fail
lsc-bignum.adb:584:56: medium: range check might fail
lsc-bignum.adb:584:60: medium: overflow check might fail
lsc-bignum.adb:584:65: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:584:73: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:585:53: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:585:64: medium: overflow check might fail
lsc-bignum.adb:585:68: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:585:68: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:586:34: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:587:53: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:588:41: info: initialization of "W" proved
lsc-bignum.adb:589:54: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:589:64: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:589:64: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:592:47: info: initialization of "S" proved
lsc-bignum.adb:593:21: info: division check proved (CVC4: 1 VC)
lsc-bignum.adb:593:53: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:593:62: info: initialization of "S" proved
lsc-bignum.adb:596:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:596:55: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:598:16: medium: precondition might fail
lsc-bignum.adb:600:19: info: initialization of "Aux3" proved
lsc-bignum.adb:600:37: info: initialization of "Aux3" proved
lsc-bignum.adb:603:16: info: precondition proved (CVC4: 9 VC)
lsc-bignum.adb:603:22: info: initialization of "A" proved
lsc-bignum.adb:603:42: info: initialization of "Aux3" proved
lsc-bignum.adb:606:19: info: initialization of "L" proved
lsc-bignum.adb:606:30: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:607:35: info: initialization of "Aux1" proved
lsc-bignum.adb:607:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:609:35: info: initialization of "Aux2" proved
lsc-bignum.adb:609:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:610:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:611:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:612:30: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:613:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:614:19: medium: assertion might fail, cannot prove Num_Of_Big_Int (Aux3, Aux3_First, L + 1) = Num_Of_Big_Int (X, X_First, L + 1) ** (Num_Of_Big_Int (E, E_First, E_Last - E_First + 1) / Math_Int.From_Word32 (2) ** (Math_Int.From_Word64 (I) + Math_Int.From_Word32 (1)) * Math_Int.From_Word32 (2) ** H) * Base ** (L + 1) mod Num_Of_Big_Int (M, M_First, L + 1)
lsc-bignum.adb:614:35: info: initialization of "Aux3" proved
lsc-bignum.adb:614:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:615:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:616:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:616:65: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:616:65: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:618:45: info: initialization of "I" proved
lsc-bignum.adb:620:30: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:621:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:622:28: info: range check proved (CVC4: 2 VC)
lsc-bignum.adb:622:54: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:622:59: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:623:39: info: initialization of "Aux4" proved
lsc-bignum.adb:623:56: medium: overflow check might fail
lsc-bignum.adb:623:56: medium: range check might fail
lsc-bignum.adb:623:60: medium: overflow check might fail
lsc-bignum.adb:623:65: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:623:73: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:624:53: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:624:64: medium: overflow check might fail
lsc-bignum.adb:624:68: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:624:68: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:625:34: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:626:53: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:627:41: info: initialization of "W" proved
lsc-bignum.adb:628:54: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:628:64: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:628:64: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:631:47: info: initialization of "S" proved
lsc-bignum.adb:632:21: info: division check proved (CVC4: 1 VC)
lsc-bignum.adb:632:53: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:632:62: info: initialization of "S" proved
lsc-bignum.adb:635:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:635:55: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:638:13: medium: precondition might fail
lsc-bignum.adb:640:16: info: initialization of "Aux3" proved
lsc-bignum.adb:641:16: info: initialization of "Aux4" proved
lsc-bignum.adb:641:33: medium: overflow check might fail
lsc-bignum.adb:641:33: medium: range check might fail
lsc-bignum.adb:641:54: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:641:68: info: initialization of "W" proved
lsc-bignum.adb:641:75: medium: overflow check might fail
lsc-bignum.adb:641:78: info: initialization of "L" proved
lsc-bignum.adb:641:80: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:644:13: info: precondition proved (CVC4: 9 VC)
lsc-bignum.adb:644:19: info: initialization of "A" proved
lsc-bignum.adb:644:39: info: initialization of "Aux3" proved
lsc-bignum.adb:648:13: medium: precondition might fail
lsc-bignum.adb:650:16: info: initialization of "Aux3" proved
lsc-bignum.adb:650:34: info: initialization of "Aux3" proved
lsc-bignum.adb:653:13: info: precondition proved (CVC4: 9 VC)
lsc-bignum.adb:653:19: info: initialization of "A" proved
lsc-bignum.adb:653:39: info: initialization of "Aux3" proved
lsc-bignum.adb:657:13: info: initialization of "L" proved
lsc-bignum.adb:657:24: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:658:29: info: initialization of "Aux1" proved
lsc-bignum.adb:658:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:660:29: info: initialization of "Aux2" proved
lsc-bignum.adb:660:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:661:43: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:662:43: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:663:24: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:664:43: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:665:13: medium: assertion might fail, cannot prove Num_Of_Big_Int (Aux3, Aux3_First, L + 1) = Num_Of_Big_Int (X, X_First, L + 1) ** (Num_Of_Big_Int (E, E_First, E_Last - E_First + 1) / Math_Int.From_Word32 (2) ** (Math_Int.From_Word64 (I) - Math_Int.From_Integer (S) + Math_Int.From_Word32 (1))) * Base ** (L + 1) mod Num_Of_Big_Int (M, M_First, L + 1)
lsc-bignum.adb:665:29: info: initialization of "Aux3" proved
lsc-bignum.adb:665:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:666:43: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:667:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:667:59: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:667:59: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:668:65: info: initialization of "I" proved
lsc-bignum.adb:669:39: info: initialization of "S" proved
lsc-bignum.adb:670:24: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:671:43: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:672:22: info: range check proved (CVC4: 2 VC)
lsc-bignum.adb:672:48: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:672:53: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:673:33: info: initialization of "Aux4" proved
lsc-bignum.adb:673:50: medium: overflow check might fail
lsc-bignum.adb:673:50: medium: range check might fail
lsc-bignum.adb:673:54: medium: overflow check might fail
lsc-bignum.adb:673:59: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:673:67: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:674:47: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:674:58: medium: overflow check might fail
lsc-bignum.adb:674:62: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:674:62: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:675:28: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:676:47: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:679:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:679:49: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:681:20: info: initialization of "I" proved
lsc-bignum.adb:681:48: info: initialization of "S" proved
lsc-bignum.adb:683:15: info: initialization of "I" proved
lsc-bignum.adb:683:43: info: initialization of "S" proved
lsc-bignum.adb:686:07: medium: precondition might fail
lsc-bignum.adb:688:10: info: initialization of "Aux3" proved
lsc-bignum.adb:688:28: info: initialization of "Aux1" proved
lsc-bignum.ads:40:10: info: postcondition proved (CVC4: 1 VC)
lsc-bignum.ads:40:19: info: range check proved (CVC4: 2 VC)
lsc-bignum.ads:40:63: info: index check proved (CVC4: 2 VC)
lsc-bignum.ads:56:18: medium: overflow check might fail
lsc-bignum.ads:56:28: info: overflow check proved (CVC4: 2 VC)
lsc-bignum.ads:58:10: info: postcondition proved (CVC4: 2 VC)
lsc-bignum.ads:58:19: info: range check proved (CVC4: 2 VC)
lsc-bignum.ads:59:42: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:59:51: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:60:20: info: index check proved (CVC4: 2 VC)
lsc-bignum.ads:60:36: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:60:40: info: index check proved (CVC4: 2 VC)
lsc-bignum.ads:60:40: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:61:46: medium: overflow check might fail
lsc-bignum.ads:61:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:62:20: info: index check proved (CVC4: 2 VC)
lsc-bignum.ads:62:32: info: index check proved (CVC4: 2 VC)
lsc-bignum.ads:70:07: info: initialization of "Carry" proved
lsc-bignum.ads:78:18: medium: overflow check might fail
lsc-bignum.ads:78:28: info: overflow check proved (CVC4: 2 VC)
lsc-bignum.ads:81:10: info: postcondition proved (CVC4: 1 VC)
lsc-bignum.ads:81:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:81:59: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:81:59: info: range check proved (CVC4: 1 VC)
lsc-bignum.ads:82:45: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:82:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:82:55: info: range check proved (CVC4: 1 VC)
lsc-bignum.ads:83:45: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:83:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:83:55: info: range check proved (CVC4: 1 VC)
lsc-bignum.ads:84:26: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:84:36: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:84:36: info: range check proved (CVC4: 1 VC)
lsc-bignum.ads:84:59: info: initialization of "Carry" proved
lsc-bignum.ads:98:18: medium: overflow check might fail
lsc-bignum.ads:98:28: info: overflow check proved (CVC4: 2 VC)
lsc-bignum.ads:101:10: medium: postcondition might fail, cannot prove Less'Result = (Num_Of_Big_Int (A, A_First, A_Last - A_First + 1) < Num_Of_Big_Int (B, B_First, A_Last - A_First + 1)
lsc-bignum.ads:102:46: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:102:56: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:102:56: info: range check proved (CVC4: 1 VC)
lsc-bignum.ads:103:46: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:103:56: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:103:56: info: range check proved (CVC4: 1 VC)
lsc-bignum.ads:106:07: info: initialization of "A" proved
lsc-bignum.ads:124:18: medium: overflow check might fail
lsc-bignum.ads:124:28: info: overflow check proved (CVC4: 2 VC)
lsc-bignum.ads:126:18: medium: overflow check might fail
lsc-bignum.ads:126:28: info: overflow check proved (CVC4: 2 VC)
lsc-bignum.ads:128:18: medium: overflow check might fail
lsc-bignum.ads:128:28: info: overflow check proved (CVC4: 2 VC)
lsc-bignum.ads:129:45: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:129:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:129:55: info: range check proved (CVC4: 1 VC)
lsc-bignum.ads:130:45: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:130:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:130:55: info: range check proved (CVC4: 1 VC)
lsc-bignum.ads:132:45: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:132:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:132:55: info: range check proved (CVC4: 1 VC)
lsc-bignum.ads:133:25: info: index check proved (CVC4: 2 VC)
lsc-bignum.ads:135:10: medium: postcondition might fail, cannot prove Num_Of_Big_Int (A, A_First, A_Last - A_First + 1) = (Num_Of_Big_Int (B, B_First, A_Last - A_First + 1) * Num_Of_Big_Int (C, C_First, A_Last - A_First + 1) * Inverse (Num_Of_Big_Int (M, M_First, A_Last - A_First + 1), Base) ** (A_Last - A_First + 1)) mod Num_Of_Big_Int (M, M_First, A_Last - A_First + 1)
lsc-bignum.ads:135:26: info: initialization of "A" proved
lsc-bignum.ads:135:45: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:135:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:135:55: info: range check proved (CVC4: 1 VC)
lsc-bignum.ads:136:46: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:136:56: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:136:56: info: range check proved (CVC4: 1 VC)
lsc-bignum.ads:137:46: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:137:56: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:137:56: info: range check proved (CVC4: 1 VC)
lsc-bignum.ads:138:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:138:65: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:138:65: info: range check proved (CVC4: 1 VC)
lsc-bignum.ads:139:30: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:139:40: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:139:40: info: range check proved (CVC4: 1 VC)
lsc-bignum.ads:140:45: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:140:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:140:55: info: range check proved (CVC4: 1 VC)
lsc-bignum.ads:143:07: info: initialization of "A" proved
lsc-bignum.ads:154:07: info: initialization of "Aux1" proved
lsc-bignum.ads:156:07: info: initialization of "Aux2" proved
lsc-bignum.ads:158:07: info: initialization of "Aux3" proved
lsc-bignum.ads:160:07: info: initialization of "Aux4" proved
lsc-bignum.ads:190:18: medium: overflow check might fail
lsc-bignum.ads:190:28: info: overflow check proved (CVC4: 2 VC)
lsc-bignum.ads:195:18: medium: overflow check might fail
lsc-bignum.ads:195:28: info: overflow check proved (CVC4: 2 VC)
lsc-bignum.ads:197:21: medium: overflow check might fail
lsc-bignum.ads:197:31: info: overflow check proved (CVC4: 2 VC)
lsc-bignum.ads:199:21: medium: overflow check might fail
lsc-bignum.ads:199:31: info: overflow check proved (CVC4: 2 VC)
lsc-bignum.ads:201:21: medium: overflow check might fail
lsc-bignum.ads:201:31: info: overflow check proved (CVC4: 2 VC)
lsc-bignum.ads:203:21: medium: overflow check might fail
lsc-bignum.ads:203:26: medium: overflow check might fail
lsc-bignum.ads:203:31: medium: overflow check might fail
lsc-bignum.ads:203:41: info: overflow check proved (CVC4: 2 VC)
lsc-bignum.ads:203:51: info: overflow check proved (CVC4: 2 VC)
lsc-bignum.ads:203:56: medium: overflow check might fail
lsc-bignum.ads:206:18: medium: overflow check might fail
lsc-bignum.ads:206:28: info: overflow check proved (CVC4: 2 VC)
lsc-bignum.ads:207:45: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:207:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:207:55: info: range check proved (CVC4: 1 VC)
lsc-bignum.ads:209:42: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:209:52: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:210:45: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:210:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:210:55: info: range check proved (CVC4: 1 VC)
lsc-bignum.ads:212:45: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:212:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:212:55: info: range check proved (CVC4: 1 VC)
lsc-bignum.ads:213:25: info: index check proved (CVC4: 2 VC)
lsc-bignum.ads:215:10: medium: postcondition might fail, cannot prove Num_Of_Big_Int (A, A_First, A_Last - A_First + 1) = Num_Of_Big_Int (X, X_First, A_Last - A_First + 1) ** Num_Of_Big_Int (E, E_First, E_Last - E_First + 1) mod Num_Of_Big_Int (M, M_First, A_Last - A_First + 1)
lsc-bignum.ads:215:26: info: initialization of "A" proved
lsc-bignum.ads:215:45: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:215:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:215:55: info: range check proved (CVC4: 1 VC)
lsc-bignum.ads:216:45: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:216:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:216:55: info: range check proved (CVC4: 1 VC)
lsc-bignum.ads:217:45: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:217:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:217:55: info: range check proved (CVC4: 1 VC)
lsc-bignum.ads:218:45: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:218:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:218:55: info: range check proved (CVC4: 1 VC)
