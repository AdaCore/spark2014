lsc-bignum.adb:441:19: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:441:19: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:443:07: info: precondition proved (CVC4: 5 VC)
lsc-bignum.adb:443:48: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:443:50: info: initialization of "L" proved
lsc-bignum.adb:444:13: info: index check proved (CVC4: 2 VC)
lsc-bignum.adb:444:25: info: initialization of "Aux1" proved
lsc-bignum.adb:446:07: medium: precondition might fail
lsc-bignum.adb:447:39: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:447:41: info: initialization of "L" proved
lsc-bignum.adb:448:22: info: initialization of "Aux1" proved
lsc-bignum.adb:451:07: medium: precondition might fail
lsc-bignum.adb:452:39: medium: overflow check might fail
lsc-bignum.adb:452:41: info: initialization of "L" proved
lsc-bignum.adb:456:07: medium: precondition might fail
lsc-bignum.adb:457:39: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:457:41: info: initialization of "L" proved
lsc-bignum.adb:458:10: info: initialization of "Aux4" proved
lsc-bignum.adb:458:28: info: initialization of "Aux4" proved
lsc-bignum.adb:462:10: info: initialization of "L" proved
lsc-bignum.adb:462:21: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:463:10: medium: assertion might fail, cannot prove Num_Of_Big_Int (Aux1, Aux1_First, L + 1) = Math_Int.From_Word32 (1)
lsc-bignum.adb:463:26: info: initialization of "Aux1" proved
lsc-bignum.adb:463:46: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:465:26: info: initialization of "Aux2" proved
lsc-bignum.adb:465:46: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:466:40: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:467:40: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:468:21: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:469:40: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:470:26: info: initialization of "Aux3" proved
lsc-bignum.adb:470:46: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:471:21: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:472:40: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:473:26: info: initialization of "Aux4" proved
lsc-bignum.adb:473:46: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:474:40: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:475:21: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:476:40: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:478:11: medium: range check might fail
lsc-bignum.adb:478:37: medium: overflow check might fail
lsc-bignum.adb:478:42: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:481:13: info: initialization of "L" proved
lsc-bignum.adb:481:24: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:482:29: info: initialization of "Aux1" proved
lsc-bignum.adb:482:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:484:29: info: initialization of "Aux2" proved
lsc-bignum.adb:484:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:485:43: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:486:43: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:487:24: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:488:43: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:489:29: info: initialization of "Aux3" proved
lsc-bignum.adb:489:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:490:24: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:491:43: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:492:22: info: range check proved (CVC4: 2 VC)
lsc-bignum.adb:493:16: medium: loop invariant might fail after first iteration, cannot prove Num_Of_Big_Int (Aux4, Aux4_First + N * (L + 1), L + 1) = Num_Of_Big_Int (X, X_First, L + 1) ** (2 * N + 1) * Base ** (L + 1) mod Num_Of_Big_Int (M, M_First, L + 1)
lsc-bignum.adb:493:16: medium: loop invariant might fail in first iteration, cannot prove Num_Of_Big_Int (Aux4, Aux4_First + N * (L + 1), L + 1) = Num_Of_Big_Int (X, X_First, L + 1) ** (2 * N + 1) * Base ** (L + 1) mod Num_Of_Big_Int (M, M_First, L + 1)
lsc-bignum.adb:493:33: info: initialization of "Aux4" proved
lsc-bignum.adb:493:50: medium: overflow check might fail
lsc-bignum.adb:493:50: medium: range check might fail
lsc-bignum.adb:493:54: medium: overflow check might fail
lsc-bignum.adb:493:59: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:493:67: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:494:47: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:494:58: medium: overflow check might fail
lsc-bignum.adb:494:62: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:494:62: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:495:28: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:496:47: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:498:10: medium: precondition might fail
lsc-bignum.adb:500:13: info: initialization of "Aux4" proved
lsc-bignum.adb:500:30: medium: overflow check might fail
lsc-bignum.adb:500:30: medium: range check might fail
lsc-bignum.adb:500:40: medium: overflow check might fail
lsc-bignum.adb:500:43: info: initialization of "L" proved
lsc-bignum.adb:500:45: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:500:51: info: initialization of "Aux2" proved
lsc-bignum.adb:503:10: medium: precondition might fail
lsc-bignum.adb:503:16: info: initialization of "A" proved
lsc-bignum.adb:503:36: info: initialization of "Aux4" proved
lsc-bignum.adb:503:53: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:503:53: medium: overflow check might fail
lsc-bignum.adb:503:57: medium: overflow check might fail
lsc-bignum.adb:503:60: info: initialization of "L" proved
lsc-bignum.adb:503:62: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:506:13: info: initialization of "L" proved
lsc-bignum.adb:506:24: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:507:29: info: initialization of "Aux1" proved
lsc-bignum.adb:507:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:509:29: info: initialization of "Aux2" proved
lsc-bignum.adb:509:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:510:43: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:511:43: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:512:24: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:513:43: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:514:29: info: initialization of "Aux3" proved
lsc-bignum.adb:514:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:515:24: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:516:43: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:517:22: info: range check proved (CVC4: 2 VC)
lsc-bignum.adb:518:16: medium: assertion might fail, cannot prove Num_Of_Big_Int (Aux4, Aux4_First + N * (L + 1), L + 1) = Num_Of_Big_Int (X, X_First, L + 1) ** (2 * N + 1) * Base ** (L + 1) mod Num_Of_Big_Int (M, M_First, L + 1)
lsc-bignum.adb:518:33: info: initialization of "Aux4" proved
lsc-bignum.adb:518:50: medium: overflow check might fail
lsc-bignum.adb:518:50: medium: range check might fail
lsc-bignum.adb:518:54: medium: overflow check might fail
lsc-bignum.adb:518:59: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:518:67: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:519:47: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:519:58: medium: overflow check might fail
lsc-bignum.adb:519:62: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:519:62: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:520:28: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:521:47: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:524:34: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:524:34: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:528:13: info: initialization of "L" proved
lsc-bignum.adb:528:24: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:529:29: info: initialization of "Aux1" proved
lsc-bignum.adb:529:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:531:29: info: initialization of "Aux2" proved
lsc-bignum.adb:531:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:532:43: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:533:43: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:534:24: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:535:43: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:536:13: medium: loop invariant might fail after first iteration, cannot prove Num_Of_Big_Int (Aux3, Aux3_First, L + 1) = Num_Of_Big_Int (X, X_First, L + 1) ** (Num_Of_Big_Int (E, E_First, E_Last - E_First + 1) / Math_Int.From_Word32 (2) ** (Math_Int.From_Word64 (I) + Math_Int.From_Word32 (1))) * Base ** (L + 1) mod Num_Of_Big_Int (M, M_First, L + 1)
lsc-bignum.adb:536:13: medium: loop invariant might fail in first iteration, cannot prove Num_Of_Big_Int (Aux3, Aux3_First, L + 1) = Num_Of_Big_Int (X, X_First, L + 1) ** (Num_Of_Big_Int (E, E_First, E_Last - E_First + 1) / Math_Int.From_Word32 (2) ** (Math_Int.From_Word64 (I) + Math_Int.From_Word32 (1))) * Base ** (L + 1) mod Num_Of_Big_Int (M, M_First, L + 1)
lsc-bignum.adb:536:29: info: initialization of "Aux3" proved
lsc-bignum.adb:536:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:537:43: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:538:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:538:59: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:538:59: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:540:39: info: initialization of "I" proved
lsc-bignum.adb:541:24: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:542:43: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:543:22: info: range check proved (CVC4: 2 VC)
lsc-bignum.adb:543:48: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:543:53: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:544:33: info: initialization of "Aux4" proved
lsc-bignum.adb:544:50: medium: overflow check might fail
lsc-bignum.adb:544:50: medium: range check might fail
lsc-bignum.adb:544:54: medium: overflow check might fail
lsc-bignum.adb:544:59: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:544:67: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:545:47: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:545:58: medium: overflow check might fail
lsc-bignum.adb:545:62: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:545:62: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:546:28: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:547:47: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:548:39: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:548:39: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:550:13: medium: precondition might fail
lsc-bignum.adb:550:34: info: initialization of "I" proved
lsc-bignum.adb:557:19: info: initialization of "L" proved
lsc-bignum.adb:557:30: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:558:35: info: initialization of "Aux1" proved
lsc-bignum.adb:558:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:560:35: info: initialization of "Aux2" proved
lsc-bignum.adb:560:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:561:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:562:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:563:30: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:564:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:565:35: info: initialization of "Aux3" proved
lsc-bignum.adb:565:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:566:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:567:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:567:65: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:567:65: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:569:45: info: initialization of "I" proved
lsc-bignum.adb:570:30: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:571:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:572:28: info: range check proved (CVC4: 2 VC)
lsc-bignum.adb:572:54: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:572:59: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:573:22: medium: loop invariant might fail after first iteration, cannot prove Num_Of_Big_Int (Aux4, Aux4_First + N * (L + 1), L + 1) = Num_Of_Big_Int (X, X_First, L + 1) ** (2 * N + 1) * Base ** (L + 1) mod Num_Of_Big_Int (M, M_First, L + 1)
lsc-bignum.adb:573:22: medium: loop invariant might fail in first iteration, cannot prove Num_Of_Big_Int (Aux4, Aux4_First + N * (L + 1), L + 1) = Num_Of_Big_Int (X, X_First, L + 1) ** (2 * N + 1) * Base ** (L + 1) mod Num_Of_Big_Int (M, M_First, L + 1)
lsc-bignum.adb:573:39: info: initialization of "Aux4" proved
lsc-bignum.adb:573:56: medium: overflow check might fail
lsc-bignum.adb:573:56: medium: range check might fail
lsc-bignum.adb:573:60: medium: overflow check might fail
lsc-bignum.adb:573:65: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:573:73: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:574:53: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:574:64: medium: overflow check might fail
lsc-bignum.adb:574:68: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:574:68: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:575:34: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:576:53: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:577:41: info: initialization of "W" proved
lsc-bignum.adb:577:77: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:577:79: info: initialization of "S" proved
lsc-bignum.adb:577:81: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:577:81: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:578:54: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:578:64: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:578:64: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:581:47: info: initialization of "J" proved
lsc-bignum.adb:582:21: info: division check proved (CVC4: 1 VC)
lsc-bignum.adb:582:63: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:585:45: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:585:45: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:588:31: info: initialization of "J" proved
lsc-bignum.adb:588:62: info: initialization of "I" proved
lsc-bignum.adb:590:19: medium: precondition might fail
lsc-bignum.adb:590:40: info: initialization of "I" proved
lsc-bignum.adb:590:58: info: initialization of "J" proved
lsc-bignum.adb:591:47: info: initialization of "W" proved
lsc-bignum.adb:591:50: info: initialization of "J" proved
lsc-bignum.adb:591:52: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:591:52: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:591:54: info: initialization of "S" proved
lsc-bignum.adb:592:24: info: initialization of "J" proved
lsc-bignum.adb:595:21: info: initialization of "J" proved
lsc-bignum.adb:595:23: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:598:18: info: initialization of "S" proved
lsc-bignum.adb:598:20: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:600:17: info: range check proved (CVC4: 2 VC)
lsc-bignum.adb:600:41: info: initialization of "S" proved
lsc-bignum.adb:603:19: info: initialization of "L" proved
lsc-bignum.adb:603:30: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:604:35: info: initialization of "Aux1" proved
lsc-bignum.adb:604:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:606:35: info: initialization of "Aux2" proved
lsc-bignum.adb:606:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:607:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:608:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:609:30: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:610:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:611:19: medium: loop invariant might fail in first iteration, cannot prove Num_Of_Big_Int (Aux3, Aux3_First, L + 1) = Num_Of_Big_Int (X, X_First, L + 1) ** (Num_Of_Big_Int (E, E_First, E_Last - E_First + 1) / Math_Int.From_Word32 (2) ** (Math_Int.From_Word64 (I) + Math_Int.From_Word32 (1)) * Math_Int.From_Word32 (2) ** (H - 1)) * Base ** (L + 1) mod Num_Of_Big_Int (M, M_First, L + 1)
lsc-bignum.adb:611:35: info: initialization of "Aux3" proved
lsc-bignum.adb:611:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:612:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:613:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:613:65: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:613:65: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:615:45: info: initialization of "I" proved
lsc-bignum.adb:617:30: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:618:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:619:28: info: range check proved (CVC4: 2 VC)
lsc-bignum.adb:619:54: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:619:59: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:620:22: medium: loop invariant might fail after first iteration, cannot prove Num_Of_Big_Int (Aux4, Aux4_First + N * (L + 1), L + 1) = Num_Of_Big_Int (X, X_First, L + 1) ** (2 * N + 1) * Base ** (L + 1) mod Num_Of_Big_Int (M, M_First, L + 1)
lsc-bignum.adb:620:39: info: initialization of "Aux4" proved
lsc-bignum.adb:620:56: medium: overflow check might fail
lsc-bignum.adb:620:56: medium: range check might fail
lsc-bignum.adb:620:60: medium: overflow check might fail
lsc-bignum.adb:620:65: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:620:73: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:621:53: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:621:64: medium: overflow check might fail
lsc-bignum.adb:621:68: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:621:68: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:622:34: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:623:53: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:624:41: info: initialization of "W" proved
lsc-bignum.adb:625:54: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:625:64: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:625:64: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:628:47: info: initialization of "S" proved
lsc-bignum.adb:629:21: info: division check proved (CVC4: 1 VC)
lsc-bignum.adb:629:53: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:629:61: info: initialization of "S" proved
lsc-bignum.adb:632:45: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:632:45: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:634:16: medium: precondition might fail
lsc-bignum.adb:636:19: info: initialization of "Aux3" proved
lsc-bignum.adb:636:37: info: initialization of "Aux3" proved
lsc-bignum.adb:639:16: info: precondition proved (CVC4: 9 VC)
lsc-bignum.adb:639:22: info: initialization of "A" proved
lsc-bignum.adb:639:42: info: initialization of "Aux3" proved
lsc-bignum.adb:642:19: info: initialization of "L" proved
lsc-bignum.adb:642:30: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:643:35: info: initialization of "Aux1" proved
lsc-bignum.adb:643:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:645:35: info: initialization of "Aux2" proved
lsc-bignum.adb:645:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:646:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:647:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:648:30: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:649:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:650:19: medium: assertion might fail, cannot prove Num_Of_Big_Int (Aux3, Aux3_First, L + 1) = Num_Of_Big_Int (X, X_First, L + 1) ** (Num_Of_Big_Int (E, E_First, E_Last - E_First + 1) / Math_Int.From_Word32 (2) ** (Math_Int.From_Word64 (I) + Math_Int.From_Word32 (1)) * Math_Int.From_Word32 (2) ** H) * Base ** (L + 1) mod Num_Of_Big_Int (M, M_First, L + 1)
lsc-bignum.adb:650:35: info: initialization of "Aux3" proved
lsc-bignum.adb:650:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:651:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:652:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:652:65: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:652:65: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:654:45: info: initialization of "I" proved
lsc-bignum.adb:656:30: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:657:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:658:28: info: range check proved (CVC4: 2 VC)
lsc-bignum.adb:658:54: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:658:59: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:659:39: info: initialization of "Aux4" proved
lsc-bignum.adb:659:56: medium: overflow check might fail
lsc-bignum.adb:659:56: medium: range check might fail
lsc-bignum.adb:659:60: medium: overflow check might fail
lsc-bignum.adb:659:65: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:659:73: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:660:53: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:660:64: medium: overflow check might fail
lsc-bignum.adb:660:68: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:660:68: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:661:34: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:662:53: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:663:41: info: initialization of "W" proved
lsc-bignum.adb:664:54: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:664:64: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:664:64: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:667:47: info: initialization of "S" proved
lsc-bignum.adb:668:21: info: division check proved (CVC4: 1 VC)
lsc-bignum.adb:668:53: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:668:61: info: initialization of "S" proved
lsc-bignum.adb:671:45: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:671:45: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:674:13: medium: precondition might fail
lsc-bignum.adb:676:16: info: initialization of "Aux3" proved
lsc-bignum.adb:677:16: info: initialization of "Aux4" proved
lsc-bignum.adb:677:33: medium: overflow check might fail
lsc-bignum.adb:677:33: medium: range check might fail
lsc-bignum.adb:677:54: medium: range check might fail
lsc-bignum.adb:677:68: info: initialization of "W" proved
lsc-bignum.adb:677:75: medium: overflow check might fail
lsc-bignum.adb:677:78: info: initialization of "L" proved
lsc-bignum.adb:677:80: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:680:13: info: precondition proved (CVC4: 9 VC)
lsc-bignum.adb:680:19: info: initialization of "A" proved
lsc-bignum.adb:680:39: info: initialization of "Aux3" proved
lsc-bignum.adb:684:13: medium: precondition might fail
lsc-bignum.adb:686:16: info: initialization of "Aux3" proved
lsc-bignum.adb:686:34: info: initialization of "Aux3" proved
lsc-bignum.adb:689:13: info: precondition proved (CVC4: 9 VC)
lsc-bignum.adb:689:19: info: initialization of "A" proved
lsc-bignum.adb:689:39: info: initialization of "Aux3" proved
lsc-bignum.adb:693:13: info: initialization of "L" proved
lsc-bignum.adb:693:24: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:694:29: info: initialization of "Aux1" proved
lsc-bignum.adb:694:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:696:29: info: initialization of "Aux2" proved
lsc-bignum.adb:696:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:697:43: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:698:43: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:699:24: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:700:43: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:701:13: medium: assertion might fail, cannot prove Num_Of_Big_Int (Aux3, Aux3_First, L + 1) = Num_Of_Big_Int (X, X_First, L + 1) ** (Num_Of_Big_Int (E, E_First, E_Last - E_First + 1) / Math_Int.From_Word32 (2) ** (Math_Int.From_Word64 (I) - Math_Int.From_Integer (S) + Math_Int.From_Word32 (1))) * Base ** (L + 1) mod Num_Of_Big_Int (M, M_First, L + 1)
lsc-bignum.adb:701:29: info: initialization of "Aux3" proved
lsc-bignum.adb:701:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:702:43: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:703:49: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:703:59: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:703:59: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:704:65: info: initialization of "I" proved
lsc-bignum.adb:705:39: info: initialization of "S" proved
lsc-bignum.adb:706:24: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:707:43: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:708:22: info: range check proved (CVC4: 2 VC)
lsc-bignum.adb:708:48: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:708:53: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:709:33: info: initialization of "Aux4" proved
lsc-bignum.adb:709:50: medium: overflow check might fail
lsc-bignum.adb:709:50: medium: range check might fail
lsc-bignum.adb:709:54: medium: overflow check might fail
lsc-bignum.adb:709:59: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:709:67: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:710:47: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:710:58: medium: overflow check might fail
lsc-bignum.adb:710:62: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:710:62: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:711:28: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:712:47: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:715:39: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.adb:715:39: info: range check proved (CVC4: 1 VC)
lsc-bignum.adb:717:20: info: initialization of "I" proved
lsc-bignum.adb:717:38: info: initialization of "S" proved
lsc-bignum.adb:719:15: info: initialization of "I" proved
lsc-bignum.adb:719:33: info: initialization of "S" proved
lsc-bignum.adb:722:07: medium: precondition might fail
lsc-bignum.adb:724:10: info: initialization of "Aux3" proved
lsc-bignum.adb:724:28: info: initialization of "Aux1" proved
lsc-bignum.ads:177:07: info: initialization of "A" proved
lsc-bignum.ads:188:07: info: initialization of "Aux1" proved
lsc-bignum.ads:190:07: info: initialization of "Aux2" proved
lsc-bignum.ads:192:07: info: initialization of "Aux3" proved
lsc-bignum.ads:194:07: info: initialization of "Aux4" proved
lsc-bignum.ads:224:18: medium: overflow check might fail
lsc-bignum.ads:224:28: info: overflow check proved (CVC4: 2 VC)
lsc-bignum.ads:229:18: medium: overflow check might fail
lsc-bignum.ads:229:28: info: overflow check proved (CVC4: 2 VC)
lsc-bignum.ads:231:21: medium: overflow check might fail
lsc-bignum.ads:231:31: info: overflow check proved (CVC4: 2 VC)
lsc-bignum.ads:233:21: medium: overflow check might fail
lsc-bignum.ads:233:31: info: overflow check proved (CVC4: 2 VC)
lsc-bignum.ads:235:21: medium: overflow check might fail
lsc-bignum.ads:235:31: info: overflow check proved (CVC4: 2 VC)
lsc-bignum.ads:237:21: medium: overflow check might fail
lsc-bignum.ads:237:26: medium: overflow check might fail
lsc-bignum.ads:237:31: medium: overflow check might fail
lsc-bignum.ads:237:41: info: overflow check proved (CVC4: 2 VC)
lsc-bignum.ads:237:51: info: overflow check proved (CVC4: 2 VC)
lsc-bignum.ads:237:56: medium: overflow check might fail
lsc-bignum.ads:240:18: medium: overflow check might fail
lsc-bignum.ads:240:28: info: overflow check proved (CVC4: 2 VC)
lsc-bignum.ads:241:45: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:241:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:241:55: info: range check proved (CVC4: 1 VC)
lsc-bignum.ads:243:42: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:243:52: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:244:45: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:244:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:244:55: info: range check proved (CVC4: 1 VC)
lsc-bignum.ads:246:45: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:246:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:246:55: info: range check proved (CVC4: 1 VC)
lsc-bignum.ads:247:25: info: index check proved (CVC4: 2 VC)
lsc-bignum.ads:249:10: medium: postcondition might fail, cannot prove Num_Of_Big_Int (A, A_First, A_Last - A_First + 1) = Num_Of_Big_Int (X, X_First, A_Last - A_First + 1) ** Num_Of_Big_Int (E, E_First, E_Last - E_First + 1) mod Num_Of_Big_Int (M, M_First, A_Last - A_First + 1)
lsc-bignum.ads:249:26: info: initialization of "A" proved
lsc-bignum.ads:249:45: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:249:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:249:55: info: range check proved (CVC4: 1 VC)
lsc-bignum.ads:250:45: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:250:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:250:55: info: range check proved (CVC4: 1 VC)
lsc-bignum.ads:251:45: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:251:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:251:55: info: range check proved (CVC4: 1 VC)
lsc-bignum.ads:252:45: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:252:55: info: overflow check proved (CVC4: 1 VC)
lsc-bignum.ads:252:55: info: range check proved (CVC4: 1 VC)
