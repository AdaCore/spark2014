lsc-bignum.adb:46:11: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:50:13: info: loop invariant initialization proved (Z3: 1 VC)
lsc-bignum.adb:50:13: info: loop invariant preservation proved (Z3: 1 VC)
lsc-bignum.adb:50:21: info: range check proved (Z3: 4 VC)
lsc-bignum.adb:50:53: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:50:61: info: justified that "A" might not be initialized
lsc-bignum.adb:50:64: info: index check proved (Z3: 4 VC)
lsc-bignum.adb:52:10: warning: no check message justified by this pragma
lsc-bignum.adb:57:13: info: index check proved (Z3: 2 VC)
lsc-bignum.adb:79:11: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:82:13: info: loop invariant initialization proved (Trivial: 2 VC; Z3: 2 VC)
lsc-bignum.adb:82:13: info: loop invariant preservation proved (Trivial: 2 VC; Z3: 2 VC)
lsc-bignum.adb:82:21: info: range check proved (Z3: 4 VC)
lsc-bignum.adb:83:44: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:83:48: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:83:58: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:84:22: info: index check proved (Z3: 4 VC)
lsc-bignum.adb:84:38: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:84:42: info: index check proved (Z3: 4 VC)
lsc-bignum.adb:84:42: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:85:48: medium: overflow check might fail, cannot prove upper bound for B_First + I [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit SPARK.Big_Integers]
lsc-bignum.adb:85:52: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:85:62: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:86:22: info: index check proved (Z3: 4 VC)
lsc-bignum.adb:86:41: info: index check proved (Z3: 4 VC)
lsc-bignum.adb:88:21: info: index check proved (Z3: 2 VC)
lsc-bignum.adb:88:21: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:88:26: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:88:44: info: index check proved (Z3: 2 VC)
lsc-bignum.adb:91:13: info: assertion proved (Trivial: 2 VC; Z3: 2 VC)
lsc-bignum.adb:91:21: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:92:44: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:92:49: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:92:54: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:92:64: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:93:22: info: index check proved (Z3: 2 VC)
lsc-bignum.adb:93:38: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:93:42: info: index check proved (Z3: 2 VC)
lsc-bignum.adb:93:42: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:94:48: medium: overflow check might fail, cannot prove upper bound for B_First + (I + 1) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit SPARK.Big_Integers]
lsc-bignum.adb:94:53: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:94:58: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:94:68: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:95:22: info: index check proved (Z3: 2 VC)
lsc-bignum.adb:95:41: info: index check proved (Z3: 2 VC)
lsc-bignum.adb:103:08: medium: postcondition might fail
lsc-bignum.adb:103:16: warning: assuming "From_Word32" always returns
lsc-bignum.adb:103:16: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:103:54: warning: assuming "=" always returns
lsc-bignum.adb:103:54: warning: no returning annotation available for "="
lsc-bignum.adb:103:56: warning: assuming "Num_Of_Boolean" always returns
lsc-bignum.adb:103:56: warning: no returning annotation available for "Num_Of_Boolean"
lsc-bignum.adb:105:07: info: initialization of "Result" proved
lsc-bignum.adb:126:07: info: initialization of "J" proved
lsc-bignum.adb:127:07: info: initialization of "New_Carry" proved
lsc-bignum.adb:131:11: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:134:13: info: loop invariant preservation proved (Z3: 2 VC)
lsc-bignum.adb:134:13: medium: loop invariant might fail in first iteration, cannot prove Num_Of_Big_Int (A'Loop_Entry, A_First, I - A_First) - Num_Of_Big_Int (B, B_First, I - A_First) = Num_Of_Big_Int (A, A_First, I - A_First) - Base ** (I - A_First) * Num_Of_Boolean (Carry) [possible fix: you should consider adding a postcondition to function Num_Of_Big_Int and function Num_Of_Boolean and operator "-" and operator "*" and operator "**" and operator "=" or turning them into expression functions in their unit spec]
lsc-bignum.adb:134:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:134:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:134:54: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:134:54: info: range check proved (Z3: 4 VC)
lsc-bignum.adb:134:65: warning: assuming "-" always returns
lsc-bignum.adb:134:65: warning: no returning annotation available for "-"
lsc-bignum.adb:135:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:135:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:135:43: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:135:43: info: range check proved (Z3: 4 VC)
lsc-bignum.adb:135:54: warning: assuming "=" always returns
lsc-bignum.adb:135:54: warning: no returning annotation available for "="
lsc-bignum.adb:136:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:136:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:136:43: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:136:43: info: range check proved (Z3: 4 VC)
lsc-bignum.adb:136:54: warning: assuming "-" always returns
lsc-bignum.adb:136:54: warning: no returning annotation available for "-"
lsc-bignum.adb:137:18: warning: assuming "**" always returns
lsc-bignum.adb:137:18: warning: no returning annotation available for "**"
lsc-bignum.adb:137:24: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:137:24: info: range check proved (Z3: 4 VC)
lsc-bignum.adb:137:35: warning: assuming "*" always returns
lsc-bignum.adb:137:35: warning: no returning annotation available for "*"
lsc-bignum.adb:137:37: warning: assuming "Num_Of_Boolean" always returns
lsc-bignum.adb:137:37: warning: no returning annotation available for "Num_Of_Boolean"
lsc-bignum.adb:138:22: info: range check proved (Z3: 4 VC)
lsc-bignum.adb:139:20: info: index check proved (Z3: 4 VC)
lsc-bignum.adb:139:39: info: index check proved (Z3: 4 VC)
lsc-bignum.adb:141:23: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:141:23: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:141:28: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:142:26: info: index check proved (Z3: 2 VC)
lsc-bignum.adb:142:34: info: index check proved (Z3: 2 VC)
lsc-bignum.adb:142:49: info: index check proved (Z3: 2 VC)
lsc-bignum.adb:142:57: info: index check proved (Z3: 2 VC)
lsc-bignum.adb:143:13: info: index check proved (Z3: 2 VC)
lsc-bignum.adb:143:23: info: index check proved (Z3: 2 VC)
lsc-bignum.adb:143:31: info: index check proved (Z3: 2 VC)
lsc-bignum.adb:147:13: medium: assertion might fail, cannot prove Num_Of_Big_Int (A'Loop_Entry, A_First, (I + 1) - A_First) - Num_Of_Big_Int (B, B_First, (I + 1) - A_First) = Num_Of_Big_Int (A, A_First, (I + 1) - A_First) - Base ** ((I + 1) - A_First) * Num_Of_Boolean (Carry) [possible fix: you should consider adding a postcondition to function Num_Of_Big_Int and function Num_Of_Boolean and operator "-" and operator "*" and operator "**" and operator "=" or turning them into expression functions in their unit spec]
lsc-bignum.adb:147:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:147:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:147:55: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:147:60: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:147:60: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:147:71: warning: assuming "-" always returns
lsc-bignum.adb:147:71: warning: no returning annotation available for "-"
lsc-bignum.adb:148:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:148:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:148:44: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:148:49: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:148:49: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:148:60: warning: assuming "=" always returns
lsc-bignum.adb:148:60: warning: no returning annotation available for "="
lsc-bignum.adb:149:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:149:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:149:44: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:149:49: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:149:49: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:149:60: warning: assuming "-" always returns
lsc-bignum.adb:149:60: warning: no returning annotation available for "-"
lsc-bignum.adb:150:18: warning: assuming "**" always returns
lsc-bignum.adb:150:18: warning: no returning annotation available for "**"
lsc-bignum.adb:150:25: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:150:30: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:150:30: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:150:41: warning: assuming "*" always returns
lsc-bignum.adb:150:41: warning: no returning annotation available for "*"
lsc-bignum.adb:150:43: warning: assuming "Num_Of_Boolean" always returns
lsc-bignum.adb:150:43: warning: no returning annotation available for "Num_Of_Boolean"
lsc-bignum.adb:151:22: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:151:43: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:152:20: info: index check proved (Z3: 2 VC)
lsc-bignum.adb:152:39: info: index check proved (Z3: 2 VC)
lsc-bignum.adb:166:07: info: initialization of "J" proved
lsc-bignum.adb:167:07: info: initialization of "Result" proved
lsc-bignum.adb:171:11: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:174:13: medium: loop invariant might fail in first iteration, cannot prove Num_Of_Big_Int (A, I + 1, A_Last - I) = Num_Of_Big_Int (B, B_First + (I - A_First) + 1, A_Last - I) [possible fix: precondition of subprogram at lsc-bignum.ads:120 should mention A and B]
lsc-bignum.adb:174:13: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove Num_Of_Big_Int (A, I + 1, A_Last - I) = Num_Of_Big_Int (B, B_First + (I - A_First) + 1, A_Last - I) [possible fix: precondition of subprogram at lsc-bignum.ads:120 should mention A and B]
lsc-bignum.adb:174:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:174:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:174:34: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:174:34: info: range check proved (Z3: 4 VC)
lsc-bignum.adb:174:46: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:174:46: info: range check proved (Z3: 4 VC)
lsc-bignum.adb:174:51: warning: assuming "=" always returns
lsc-bignum.adb:174:51: warning: no returning annotation available for "="
lsc-bignum.adb:175:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:175:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:175:40: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:175:45: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:175:56: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:175:56: info: range check proved (Z3: 4 VC)
lsc-bignum.adb:175:68: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:175:68: info: range check proved (Z3: 4 VC)
lsc-bignum.adb:178:23: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:178:23: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:178:28: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:180:16: info: index check proved (Z3: 2 VC)
lsc-bignum.adb:180:24: info: index check proved (Z3: 2 VC)
lsc-bignum.adb:185:23: info: index check proved (Z3: 2 VC)
lsc-bignum.adb:185:31: info: index check proved (Z3: 2 VC)
lsc-bignum.adb:202:08: info: flow dependencies proved
lsc-bignum.adb:206:10: medium: postcondition might fail [possible fix: you should consider adding a postcondition to operator "+" and operator "*" and operator "=" and function From_Word32 or turning them into expression functions in their unit spec]
lsc-bignum.adb:206:18: warning: assuming "From_Word32" always returns
lsc-bignum.adb:206:18: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:206:39: warning: assuming "+" always returns
lsc-bignum.adb:206:39: warning: no returning annotation available for "+"
lsc-bignum.adb:207:18: warning: assuming "From_Word32" always returns
lsc-bignum.adb:207:18: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:207:35: warning: assuming "*" always returns
lsc-bignum.adb:207:35: warning: no returning annotation available for "*"
lsc-bignum.adb:207:45: warning: assuming "From_Word32" always returns
lsc-bignum.adb:207:45: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:207:62: warning: assuming "+" always returns
lsc-bignum.adb:207:62: warning: no returning annotation available for "+"
lsc-bignum.adb:208:18: warning: assuming "From_Word32" always returns
lsc-bignum.adb:208:18: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:208:35: warning: assuming "*" always returns
lsc-bignum.adb:208:35: warning: no returning annotation available for "*"
lsc-bignum.adb:208:45: warning: assuming "From_Word32" always returns
lsc-bignum.adb:208:45: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:208:62: warning: assuming "+" always returns
lsc-bignum.adb:208:62: warning: no returning annotation available for "+"
lsc-bignum.adb:209:18: warning: assuming "From_Word32" always returns
lsc-bignum.adb:209:18: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:209:44: warning: assuming "+" always returns
lsc-bignum.adb:209:44: warning: no returning annotation available for "+"
lsc-bignum.adb:210:15: warning: assuming "*" always returns
lsc-bignum.adb:210:15: warning: no returning annotation available for "*"
lsc-bignum.adb:210:25: warning: assuming "From_Word32" always returns
lsc-bignum.adb:210:25: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:210:51: warning: assuming "=" always returns
lsc-bignum.adb:210:51: warning: no returning annotation available for "="
lsc-bignum.adb:211:18: warning: assuming "From_Word32" always returns
lsc-bignum.adb:211:18: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:211:35: warning: assuming "+" always returns
lsc-bignum.adb:211:35: warning: no returning annotation available for "+"
lsc-bignum.adb:212:15: warning: assuming "*" always returns
lsc-bignum.adb:212:15: warning: no returning annotation available for "*"
lsc-bignum.adb:212:26: warning: assuming "From_Word32" always returns
lsc-bignum.adb:212:26: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:212:48: warning: assuming "+" always returns
lsc-bignum.adb:212:48: warning: no returning annotation available for "+"
lsc-bignum.adb:213:17: warning: assuming "*" always returns
lsc-bignum.adb:213:17: warning: no returning annotation available for "*"
lsc-bignum.adb:213:27: warning: assuming "From_Word32" always returns
lsc-bignum.adb:213:27: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:215:07: info: initialization of "Mult1" proved
lsc-bignum.adb:215:14: info: initialization of "Mult2" proved
lsc-bignum.adb:215:21: info: initialization of "Temp" proved
lsc-bignum.adb:224:31: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:230:36: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:231:41: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:249:08: info: flow dependencies proved
lsc-bignum.adb:254:17: medium: overflow check might fail, cannot prove upper bound for A_Last + 1 [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit SPARK.Big_Integers]
lsc-bignum.adb:257:18: medium: overflow check might fail, cannot prove upper bound for B_First + (A_Last - A_First) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: use "and then" instead of "and" in precondition]
lsc-bignum.adb:257:28: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:259:18: medium: overflow check might fail, cannot prove upper bound for C_First + (A_Last - A_First) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: use "and then" instead of "and" in precondition]
lsc-bignum.adb:259:28: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:261:10: info: postcondition proved (Z3: 1 VC)
lsc-bignum.adb:261:10: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:261:10: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:261:41: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:261:53: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:261:63: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:261:63: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:261:68: warning: assuming "+" always returns
lsc-bignum.adb:261:68: warning: no returning annotation available for "+"
lsc-bignum.adb:262:10: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:262:10: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:262:45: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:262:55: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:262:55: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:262:60: warning: assuming "*" always returns
lsc-bignum.adb:262:60: warning: no returning annotation available for "*"
lsc-bignum.adb:263:18: warning: assuming "From_Word32" always returns
lsc-bignum.adb:263:18: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:263:35: warning: assuming "+" always returns
lsc-bignum.adb:263:35: warning: no returning annotation available for "+"
lsc-bignum.adb:264:10: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:264:10: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:264:45: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:264:55: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:264:55: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:264:60: warning: assuming "*" always returns
lsc-bignum.adb:264:60: warning: no returning annotation available for "*"
lsc-bignum.adb:265:18: warning: assuming "From_Word32" always returns
lsc-bignum.adb:265:18: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:265:35: warning: assuming "+" always returns
lsc-bignum.adb:265:35: warning: no returning annotation available for "+"
lsc-bignum.adb:266:18: warning: assuming "From_Word32" always returns
lsc-bignum.adb:266:18: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:266:44: warning: assuming "+" always returns
lsc-bignum.adb:266:44: warning: no returning annotation available for "+"
lsc-bignum.adb:267:15: warning: assuming "*" always returns
lsc-bignum.adb:267:15: warning: no returning annotation available for "*"
lsc-bignum.adb:267:25: warning: assuming "From_Word32" always returns
lsc-bignum.adb:267:25: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:267:51: warning: assuming "=" always returns
lsc-bignum.adb:267:51: warning: no returning annotation available for "="
lsc-bignum.adb:268:10: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:268:10: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:268:45: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:268:55: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:268:55: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:268:60: warning: assuming "+" always returns
lsc-bignum.adb:268:60: warning: no returning annotation available for "+"
lsc-bignum.adb:269:15: warning: assuming "**" always returns
lsc-bignum.adb:269:15: warning: no returning annotation available for "**"
lsc-bignum.adb:269:26: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:269:36: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:269:36: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:269:41: warning: assuming "*" always returns
lsc-bignum.adb:269:41: warning: no returning annotation available for "*"
lsc-bignum.adb:269:52: warning: assuming "From_Word32" always returns
lsc-bignum.adb:269:52: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:269:74: warning: assuming "+" always returns
lsc-bignum.adb:269:74: warning: no returning annotation available for "+"
lsc-bignum.adb:270:17: warning: assuming "*" always returns
lsc-bignum.adb:270:17: warning: no returning annotation available for "*"
lsc-bignum.adb:270:27: warning: assuming "From_Word32" always returns
lsc-bignum.adb:270:27: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:272:07: info: initialization of "Temp" proved
lsc-bignum.adb:274:11: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:277:13: info: loop invariant preservation proved (Z3: 2 VC)
lsc-bignum.adb:277:13: medium: loop invariant might fail in first iteration, cannot prove Num_Of_Big_Int (A'Loop_Entry, A_First + 1, I - A_First) + Num_Of_Big_Int (B, B_First, I - A_First) * Math_Int.From_Word32 (X) + Num_Of_Big_Int (C, C_First, I - A_First) * Math_Int.From_Word32 (Y) + Math_Int.From_Word32 (Carry1'Loop_Entry) + Base * Math_Int... [possible fix: you should consider adding a postcondition to function Num_Of_Big_Int and operator "+" and operator "*" and operator "**" and operator "=" and function From_Word32 or turning them into expression functions in their unit spec]
lsc-bignum.adb:277:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:277:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:277:51: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:277:58: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:277:58: info: range check proved (Z3: 4 VC)
lsc-bignum.adb:277:69: warning: assuming "+" always returns
lsc-bignum.adb:277:69: warning: no returning annotation available for "+"
lsc-bignum.adb:278:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:278:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:278:43: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:278:43: info: range check proved (Z3: 4 VC)
lsc-bignum.adb:278:54: warning: assuming "*" always returns
lsc-bignum.adb:278:54: warning: no returning annotation available for "*"
lsc-bignum.adb:279:21: warning: assuming "From_Word32" always returns
lsc-bignum.adb:279:21: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:279:38: warning: assuming "+" always returns
lsc-bignum.adb:279:38: warning: no returning annotation available for "+"
lsc-bignum.adb:280:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:280:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:280:43: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:280:43: info: range check proved (Z3: 4 VC)
lsc-bignum.adb:280:54: warning: assuming "*" always returns
lsc-bignum.adb:280:54: warning: no returning annotation available for "*"
lsc-bignum.adb:281:21: warning: assuming "From_Word32" always returns
lsc-bignum.adb:281:21: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:281:38: warning: assuming "+" always returns
lsc-bignum.adb:281:38: warning: no returning annotation available for "+"
lsc-bignum.adb:282:21: warning: assuming "From_Word32" always returns
lsc-bignum.adb:282:21: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:282:54: warning: assuming "+" always returns
lsc-bignum.adb:282:54: warning: no returning annotation available for "+"
lsc-bignum.adb:283:18: warning: assuming "*" always returns
lsc-bignum.adb:283:18: warning: no returning annotation available for "*"
lsc-bignum.adb:283:28: warning: assuming "From_Word32" always returns
lsc-bignum.adb:283:28: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:283:61: warning: assuming "=" always returns
lsc-bignum.adb:283:61: warning: no returning annotation available for "="
lsc-bignum.adb:284:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:284:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:284:43: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:284:43: info: range check proved (Z3: 4 VC)
lsc-bignum.adb:284:54: warning: assuming "+" always returns
lsc-bignum.adb:284:54: warning: no returning annotation available for "+"
lsc-bignum.adb:285:18: warning: assuming "**" always returns
lsc-bignum.adb:285:18: warning: no returning annotation available for "**"
lsc-bignum.adb:285:24: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:285:24: info: range check proved (Z3: 4 VC)
lsc-bignum.adb:285:35: warning: assuming "*" always returns
lsc-bignum.adb:285:35: warning: no returning annotation available for "*"
lsc-bignum.adb:285:46: warning: assuming "From_Word32" always returns
lsc-bignum.adb:285:46: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:285:68: warning: assuming "+" always returns
lsc-bignum.adb:285:68: warning: no returning annotation available for "+"
lsc-bignum.adb:286:20: warning: assuming "*" always returns
lsc-bignum.adb:286:20: warning: no returning annotation available for "*"
lsc-bignum.adb:286:30: warning: assuming "From_Word32" always returns
lsc-bignum.adb:286:30: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:287:22: info: range check proved (Z3: 4 VC)
lsc-bignum.adb:287:53: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:288:20: info: index check proved (Z3: 4 VC)
lsc-bignum.adb:288:39: info: index check proved (Z3: 4 VC)
lsc-bignum.adb:290:23: info: index check proved (Z3: 2 VC)
lsc-bignum.adb:290:23: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:293:24: info: index check proved (Z3: 2 VC)
lsc-bignum.adb:293:24: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:293:29: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:294:24: info: index check proved (Z3: 2 VC)
lsc-bignum.adb:294:24: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:294:29: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:296:13: info: index check proved (Z3: 2 VC)
lsc-bignum.adb:299:13: medium: assertion might fail, cannot prove Num_Of_Big_Int (A'Loop_Entry, A_First + 1, (I + 1) - A_First) + Num_Of_Big_Int (B, B_First, (I + 1) - A_First) * Math_Int.From_Word32 (X) + Num_Of_Big_Int (C, C_First, (I + 1) - A_First) * Math_Int.From_Word32 (Y) + Math_Int.From_Word32 (Carry1'Loop_Entry)... [possible fix: you should consider adding a postcondition to function Num_Of_Big_Int and operator "+" and operator "*" and operator "**" and operator "=" and function From_Word32 or turning them into expression functions in their unit spec]
lsc-bignum.adb:299:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:299:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:299:51: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:299:59: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:299:64: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:299:64: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:299:75: warning: assuming "+" always returns
lsc-bignum.adb:299:75: warning: no returning annotation available for "+"
lsc-bignum.adb:300:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:300:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:300:44: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:300:49: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:300:49: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:300:60: warning: assuming "*" always returns
lsc-bignum.adb:300:60: warning: no returning annotation available for "*"
lsc-bignum.adb:301:21: warning: assuming "From_Word32" always returns
lsc-bignum.adb:301:21: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:301:38: warning: assuming "+" always returns
lsc-bignum.adb:301:38: warning: no returning annotation available for "+"
lsc-bignum.adb:302:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:302:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:302:44: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:302:49: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:302:49: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:302:60: warning: assuming "*" always returns
lsc-bignum.adb:302:60: warning: no returning annotation available for "*"
lsc-bignum.adb:303:21: warning: assuming "From_Word32" always returns
lsc-bignum.adb:303:21: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:303:38: warning: assuming "+" always returns
lsc-bignum.adb:303:38: warning: no returning annotation available for "+"
lsc-bignum.adb:304:21: warning: assuming "From_Word32" always returns
lsc-bignum.adb:304:21: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:304:54: warning: assuming "+" always returns
lsc-bignum.adb:304:54: warning: no returning annotation available for "+"
lsc-bignum.adb:305:18: warning: assuming "*" always returns
lsc-bignum.adb:305:18: warning: no returning annotation available for "*"
lsc-bignum.adb:305:28: warning: assuming "From_Word32" always returns
lsc-bignum.adb:305:28: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:305:61: warning: assuming "=" always returns
lsc-bignum.adb:305:61: warning: no returning annotation available for "="
lsc-bignum.adb:306:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:306:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:306:44: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:306:49: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:306:49: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:306:60: warning: assuming "+" always returns
lsc-bignum.adb:306:60: warning: no returning annotation available for "+"
lsc-bignum.adb:307:18: warning: assuming "**" always returns
lsc-bignum.adb:307:18: warning: no returning annotation available for "**"
lsc-bignum.adb:307:25: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:307:30: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:307:30: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:307:41: warning: assuming "*" always returns
lsc-bignum.adb:307:41: warning: no returning annotation available for "*"
lsc-bignum.adb:307:52: warning: assuming "From_Word32" always returns
lsc-bignum.adb:307:52: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:307:74: warning: assuming "+" always returns
lsc-bignum.adb:307:74: warning: no returning annotation available for "+"
lsc-bignum.adb:308:20: warning: assuming "*" always returns
lsc-bignum.adb:308:20: warning: no returning annotation available for "*"
lsc-bignum.adb:308:30: warning: assuming "From_Word32" always returns
lsc-bignum.adb:308:30: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:309:22: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:309:43: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:309:57: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:310:20: info: index check proved (Z3: 2 VC)
lsc-bignum.adb:310:39: info: index check proved (Z3: 2 VC)
lsc-bignum.adb:329:07: info: initialization of "Carry1" proved
lsc-bignum.adb:329:15: info: initialization of "Carry2" proved
lsc-bignum.adb:329:23: info: initialization of "A_MSW" proved
lsc-bignum.adb:329:30: info: initialization of "BI" proved
lsc-bignum.adb:329:34: info: initialization of "U" proved
lsc-bignum.adb:331:07: info: precondition proved (Z3: 5 VC)
lsc-bignum.adb:334:11: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:337:13: info: loop invariant preservation proved (Z3: 2 VC)
lsc-bignum.adb:337:13: medium: loop invariant might fail in first iteration, cannot prove (Num_Of_Big_Int (A, A_First, A_Last - A_First + 1) + Base ** (A_Last - A_First + 1) * Math_Int.From_Word32 (A_MSW)) mod Num_Of_Big_Int (M, M_First, A_Last - A_First + 1) = (Num_Of_Big_Int (B, B_First, I - A_First) * Num_Of_Big_Int (C, C_First, A_Last - A_Fi...)) [possible fix: you should consider adding a postcondition to function Num_Of_Big_Int and function Inverse and operator "+" and operator "*" and operator "mod" and operator "**" and operator "=" and function From_Word32 or turning them into expression functions in their unit spec]
lsc-bignum.adb:337:14: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:337:14: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:337:49: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:337:59: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:337:59: info: range check proved (Z3: 4 VC)
lsc-bignum.adb:337:64: warning: assuming "+" always returns
lsc-bignum.adb:337:64: warning: no returning annotation available for "+"
lsc-bignum.adb:338:19: warning: assuming "**" always returns
lsc-bignum.adb:338:19: warning: no returning annotation available for "**"
lsc-bignum.adb:338:30: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:338:40: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:338:40: info: range check proved (Z3: 4 VC)
lsc-bignum.adb:338:45: warning: assuming "*" always returns
lsc-bignum.adb:338:45: warning: no returning annotation available for "*"
lsc-bignum.adb:338:55: warning: assuming "From_Word32" always returns
lsc-bignum.adb:338:55: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:338:77: warning: assuming "mod" always returns
lsc-bignum.adb:338:77: warning: no returning annotation available for "mod"
lsc-bignum.adb:339:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:339:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:339:48: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:339:58: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:339:58: info: range check proved (Z3: 4 VC)
lsc-bignum.adb:339:63: warning: assuming "=" always returns
lsc-bignum.adb:339:63: warning: no returning annotation available for "="
lsc-bignum.adb:340:14: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:340:14: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:340:44: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:340:44: info: range check proved (Z3: 4 VC)
lsc-bignum.adb:340:55: warning: assuming "*" always returns
lsc-bignum.adb:340:55: warning: no returning annotation available for "*"
lsc-bignum.adb:341:14: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:341:14: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:341:49: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:341:59: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:341:59: info: range check proved (Z3: 4 VC)
lsc-bignum.adb:341:64: warning: assuming "*" always returns
lsc-bignum.adb:341:64: warning: no returning annotation available for "*"
lsc-bignum.adb:342:14: warning: assuming "Inverse" always returns
lsc-bignum.adb:342:14: warning: no returning annotation available for "Inverse"
lsc-bignum.adb:342:23: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:342:23: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:342:58: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:342:68: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:342:68: info: range check proved (Z3: 4 VC)
lsc-bignum.adb:343:22: warning: assuming "**" always returns
lsc-bignum.adb:343:22: warning: no returning annotation available for "**"
lsc-bignum.adb:343:28: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:343:28: info: range check proved (Z3: 4 VC)
lsc-bignum.adb:343:40: warning: assuming "mod" always returns
lsc-bignum.adb:343:40: warning: no returning annotation available for "mod"
lsc-bignum.adb:344:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:344:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:344:48: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:344:58: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:344:58: info: range check proved (Z3: 4 VC)
lsc-bignum.adb:345:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:345:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:345:48: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:345:58: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:345:58: info: range check proved (Z3: 4 VC)
lsc-bignum.adb:345:63: warning: assuming "+" always returns
lsc-bignum.adb:345:63: warning: no returning annotation available for "+"
lsc-bignum.adb:346:18: warning: assuming "**" always returns
lsc-bignum.adb:346:18: warning: no returning annotation available for "**"
lsc-bignum.adb:346:29: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:346:39: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:346:39: info: range check proved (Z3: 4 VC)
lsc-bignum.adb:346:44: warning: assuming "*" always returns
lsc-bignum.adb:346:44: warning: no returning annotation available for "*"
lsc-bignum.adb:346:54: warning: assuming "From_Word32" always returns
lsc-bignum.adb:346:54: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:346:75: warning: assuming "<" always returns
lsc-bignum.adb:346:75: warning: no returning annotation available for "<"
lsc-bignum.adb:347:21: warning: assuming "From_Word32" always returns
lsc-bignum.adb:347:21: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:347:38: warning: assuming "*" always returns
lsc-bignum.adb:347:38: warning: no returning annotation available for "*"
lsc-bignum.adb:348:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:348:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:348:48: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:348:58: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:348:58: info: range check proved (Z3: 4 VC)
lsc-bignum.adb:348:63: warning: assuming "-" always returns
lsc-bignum.adb:348:63: warning: no returning annotation available for "-"
lsc-bignum.adb:349:21: warning: assuming "From_Word32" always returns
lsc-bignum.adb:349:21: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:353:27: info: index check proved (Z3: 2 VC)
lsc-bignum.adb:353:27: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:353:32: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:354:19: info: index check proved (Z3: 2 VC)
lsc-bignum.adb:354:38: info: index check proved (Z3: 2 VC)
lsc-bignum.adb:356:16: info: index check proved (Z3: 2 VC)
lsc-bignum.adb:356:33: info: index check proved (Z3: 2 VC)
lsc-bignum.adb:356:46: info: index check proved (Z3: 2 VC)
lsc-bignum.adb:357:10: info: precondition proved (Z3: 13 VC)
lsc-bignum.adb:358:32: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:359:24: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:359:40: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:361:13: info: index check proved (Z3: 2 VC)
lsc-bignum.adb:362:48: info: index check proved (Z3: 2 VC)
lsc-bignum.adb:365:13: medium: assertion might fail, cannot prove (Num_Of_Big_Int (A, A_First, A_Last - A_First + 1) + Base ** (A_Last - A_First + 1) * Math_Int.From_Word32 (A_MSW)) mod Num_Of_Big_Int (M, M_First, A_Last - A_First + 1) = (Num_Of_Big_Int (B, B_First, (I + 1) - A_First) * Num_Of_Big_Int (C, C_First, A_Last ...)) [possible fix: you should consider adding a postcondition to function Num_Of_Big_Int and function Inverse and operator "+" and operator "*" and operator "mod" and operator "**" and operator "=" and function From_Word32 or turning them into expression functions in their unit spec]
lsc-bignum.adb:365:14: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:365:14: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:365:49: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:365:59: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:365:59: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:365:64: warning: assuming "+" always returns
lsc-bignum.adb:365:64: warning: no returning annotation available for "+"
lsc-bignum.adb:366:19: warning: assuming "**" always returns
lsc-bignum.adb:366:19: warning: no returning annotation available for "**"
lsc-bignum.adb:366:30: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:366:40: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:366:40: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:366:45: warning: assuming "*" always returns
lsc-bignum.adb:366:45: warning: no returning annotation available for "*"
lsc-bignum.adb:366:55: warning: assuming "From_Word32" always returns
lsc-bignum.adb:366:55: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:366:77: warning: assuming "mod" always returns
lsc-bignum.adb:366:77: warning: no returning annotation available for "mod"
lsc-bignum.adb:367:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:367:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:367:48: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:367:58: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:367:58: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:367:63: warning: assuming "=" always returns
lsc-bignum.adb:367:63: warning: no returning annotation available for "="
lsc-bignum.adb:368:14: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:368:14: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:368:45: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:368:50: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:368:50: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:368:61: warning: assuming "*" always returns
lsc-bignum.adb:368:61: warning: no returning annotation available for "*"
lsc-bignum.adb:369:14: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:369:14: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:369:49: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:369:59: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:369:59: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:369:64: warning: assuming "*" always returns
lsc-bignum.adb:369:64: warning: no returning annotation available for "*"
lsc-bignum.adb:370:14: warning: assuming "Inverse" always returns
lsc-bignum.adb:370:14: warning: no returning annotation available for "Inverse"
lsc-bignum.adb:370:23: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:370:23: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:370:58: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:370:68: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:370:68: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:371:22: warning: assuming "**" always returns
lsc-bignum.adb:371:22: warning: no returning annotation available for "**"
lsc-bignum.adb:371:29: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:371:34: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:371:34: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:371:46: warning: assuming "mod" always returns
lsc-bignum.adb:371:46: warning: no returning annotation available for "mod"
lsc-bignum.adb:372:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:372:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:372:48: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:372:58: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:372:58: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:373:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:373:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:373:48: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:373:58: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:373:58: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:373:63: warning: assuming "+" always returns
lsc-bignum.adb:373:63: warning: no returning annotation available for "+"
lsc-bignum.adb:374:18: warning: assuming "**" always returns
lsc-bignum.adb:374:18: warning: no returning annotation available for "**"
lsc-bignum.adb:374:29: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:374:39: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:374:39: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:374:44: warning: assuming "*" always returns
lsc-bignum.adb:374:44: warning: no returning annotation available for "*"
lsc-bignum.adb:374:54: warning: assuming "From_Word32" always returns
lsc-bignum.adb:374:54: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:374:75: warning: assuming "<" always returns
lsc-bignum.adb:374:75: warning: no returning annotation available for "<"
lsc-bignum.adb:375:21: warning: assuming "From_Word32" always returns
lsc-bignum.adb:375:21: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:375:38: warning: assuming "*" always returns
lsc-bignum.adb:375:38: warning: no returning annotation available for "*"
lsc-bignum.adb:376:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:376:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:376:48: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:376:58: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:376:58: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:376:63: warning: assuming "-" always returns
lsc-bignum.adb:376:63: warning: no returning annotation available for "-"
lsc-bignum.adb:377:21: warning: assuming "From_Word32" always returns
lsc-bignum.adb:377:21: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:381:13: info: precondition proved (Z3: 9 VC)
lsc-bignum.adb:384:10: info: precondition proved (Z3: 9 VC)
lsc-bignum.adb:384:55: warning: "Carry" is set by "Sub_Inplace" but not used after the call
lsc-bignum.adb:399:12: info: division check proved (Z3: 1 VC)
lsc-bignum.adb:399:41: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:399:41: info: range check proved (Z3: 1 VC)
lsc-bignum.adb:401:10: info: postcondition proved (Z3: 2 VC)
lsc-bignum.adb:402:23: info: index check proved (Z3: 2 VC)
lsc-bignum.adb:402:23: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:402:36: info: division check proved (Z3: 1 VC)
lsc-bignum.adb:402:36: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:403:29: info: division check proved (Z3: 1 VC)
lsc-bignum.adb:403:29: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:407:21: medium: array index check might fail [reason for check: result of addition must be a valid index into the array] [possible fix: add precondition (A_First <= Big_Int_Range'Last - Natural (I / 32)) to subprogram at line 391]
lsc-bignum.adb:407:21: medium: overflow check might fail, cannot prove upper bound for A_First + Natural (I / 32) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: add precondition (A_First <= Integer'Last - Natural (I / 32)) to subprogram at line 391]
lsc-bignum.adb:407:34: info: division check proved (Z3: 1 VC)
lsc-bignum.adb:407:34: medium: range check might fail, cannot prove upper bound for I / 32 [reason for check: result of division must be convertible to the target type of the conversion] [possible fix: add precondition (I / 32 in Natural) to subprogram at line 391]
lsc-bignum.adb:408:27: info: division check proved (Z3: 1 VC)
lsc-bignum.adb:408:27: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:437:07: info: initialization of "J" proved
lsc-bignum.adb:437:10: info: initialization of "L" proved
lsc-bignum.adb:437:13: info: initialization of "S" proved
lsc-bignum.adb:438:07: info: initialization of "I" proved
lsc-bignum.adb:439:07: info: initialization of "W" proved
lsc-bignum.adb:441:19: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:441:19: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:443:07: info: precondition proved (Z3: 5 VC)
lsc-bignum.adb:443:48: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:444:13: info: index check proved (Z3: 2 VC)
lsc-bignum.adb:446:07: medium: precondition might fail, cannot prove Num_Of_Big_Int (C, C_First, A_Last - A_First + 1) < Num_Of_Big_Int (M, M_First, A_Last - A_First + 1)
lsc-bignum.adb:447:39: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:451:07: medium: precondition might fail, cannot prove A_Last in A'range
lsc-bignum.adb:452:39: medium: overflow check might fail, cannot prove upper bound for Aux4_First + L [reason for check: result of addition must fit in a 32-bits machine integer]
lsc-bignum.adb:456:07: medium: precondition might fail, cannot prove B_First + (A_Last - A_First) in B'range
lsc-bignum.adb:457:39: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:462:21: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:463:10: medium: assertion might fail, cannot prove Num_Of_Big_Int (Aux1, Aux1_First, L + 1) = Math_Int.From_Word32 (1) [possible fix: you should consider adding a postcondition to function Num_Of_Big_Int and operator "=" and function From_Word32 or turning them into expression functions in their unit spec]
lsc-bignum.adb:463:10: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:463:10: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:463:46: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:463:51: warning: assuming "=" always returns
lsc-bignum.adb:463:51: warning: no returning annotation available for "="
lsc-bignum.adb:464:18: warning: assuming "From_Word32" always returns
lsc-bignum.adb:464:18: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:465:10: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:465:10: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:465:46: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:465:51: warning: assuming "=" always returns
lsc-bignum.adb:465:51: warning: no returning annotation available for "="
lsc-bignum.adb:466:10: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:466:10: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:466:40: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:466:45: warning: assuming "*" always returns
lsc-bignum.adb:466:45: warning: no returning annotation available for "*"
lsc-bignum.adb:467:10: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:467:10: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:467:40: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:467:45: warning: assuming "*" always returns
lsc-bignum.adb:467:45: warning: no returning annotation available for "*"
lsc-bignum.adb:468:15: warning: assuming "**" always returns
lsc-bignum.adb:468:15: warning: no returning annotation available for "**"
lsc-bignum.adb:468:21: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:468:26: warning: assuming "mod" always returns
lsc-bignum.adb:468:26: warning: no returning annotation available for "mod"
lsc-bignum.adb:469:10: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:469:10: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:469:40: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:470:10: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:470:10: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:470:46: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:470:51: warning: assuming "=" always returns
lsc-bignum.adb:470:51: warning: no returning annotation available for "="
lsc-bignum.adb:471:15: warning: assuming "**" always returns
lsc-bignum.adb:471:15: warning: no returning annotation available for "**"
lsc-bignum.adb:471:21: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:471:26: warning: assuming "mod" always returns
lsc-bignum.adb:471:26: warning: no returning annotation available for "mod"
lsc-bignum.adb:472:10: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:472:10: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:472:40: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:473:10: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:473:10: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:473:46: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:473:51: warning: assuming "=" always returns
lsc-bignum.adb:473:51: warning: no returning annotation available for "="
lsc-bignum.adb:474:10: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:474:10: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:474:40: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:474:45: warning: assuming "*" always returns
lsc-bignum.adb:474:45: warning: no returning annotation available for "*"
lsc-bignum.adb:475:15: warning: assuming "**" always returns
lsc-bignum.adb:475:15: warning: no returning annotation available for "**"
lsc-bignum.adb:475:21: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:475:26: warning: assuming "mod" always returns
lsc-bignum.adb:475:26: warning: no returning annotation available for "mod"
lsc-bignum.adb:476:10: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:476:10: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:476:40: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:478:11: medium: range check might fail
lsc-bignum.adb:478:37: medium: overflow check might fail, cannot prove upper bound for 2 ** K [reason for check: result of exponentiation must fit in a 32-bits machine integer] [possible fix: add precondition (2 ** K in Integer) to subprogram at lsc-bignum.ads:176]
lsc-bignum.adb:478:42: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:481:13: info: loop invariant preservation proved (Z3: 5 VC)
lsc-bignum.adb:481:24: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:482:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:482:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:482:49: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:482:54: warning: assuming "=" always returns
lsc-bignum.adb:482:54: warning: no returning annotation available for "="
lsc-bignum.adb:483:21: warning: assuming "From_Word32" always returns
lsc-bignum.adb:483:21: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:484:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:484:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:484:49: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:484:54: warning: assuming "=" always returns
lsc-bignum.adb:484:54: warning: no returning annotation available for "="
lsc-bignum.adb:485:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:485:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:485:43: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:485:48: warning: assuming "*" always returns
lsc-bignum.adb:485:48: warning: no returning annotation available for "*"
lsc-bignum.adb:486:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:486:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:486:43: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:486:48: warning: assuming "*" always returns
lsc-bignum.adb:486:48: warning: no returning annotation available for "*"
lsc-bignum.adb:487:18: warning: assuming "**" always returns
lsc-bignum.adb:487:18: warning: no returning annotation available for "**"
lsc-bignum.adb:487:24: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:487:29: warning: assuming "mod" always returns
lsc-bignum.adb:487:29: warning: no returning annotation available for "mod"
lsc-bignum.adb:488:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:488:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:488:43: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:489:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:489:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:489:49: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:489:54: warning: assuming "=" always returns
lsc-bignum.adb:489:54: warning: no returning annotation available for "="
lsc-bignum.adb:490:18: warning: assuming "**" always returns
lsc-bignum.adb:490:18: warning: no returning annotation available for "**"
lsc-bignum.adb:490:24: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:490:29: warning: assuming "mod" always returns
lsc-bignum.adb:490:29: warning: no returning annotation available for "mod"
lsc-bignum.adb:491:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:491:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:491:43: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:492:22: info: range check proved (Z3: 4 VC)
lsc-bignum.adb:493:16: medium: loop invariant might fail in first iteration, cannot prove Num_Of_Big_Int (Aux4, Aux4_First + N * (L + 1), L + 1) = Num_Of_Big_Int (X, X_First, L + 1) ** (2 * N + 1) * Base ** (L + 1) mod Num_Of_Big_Int (M, M_First, L + 1) [possible fix: you should consider adding a postcondition to function Num_Of_Big_Int and operator "*" and operator "mod" and operator "**" and operator "=" or turning them into expression functions in their unit spec]
lsc-bignum.adb:493:17: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:493:17: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:493:50: medium: overflow check might fail, cannot prove upper bound for Aux4_First + N * (L + 1) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit SPARK.Big_Integers]
lsc-bignum.adb:493:54: medium: overflow check might fail, cannot prove lower bound for N * (L + 1) [reason for check: result of multiplication must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit SPARK.Big_Integers]
lsc-bignum.adb:493:59: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:493:67: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:493:72: warning: assuming "=" always returns
lsc-bignum.adb:493:72: warning: no returning annotation available for "="
lsc-bignum.adb:494:17: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:494:17: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:494:47: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:494:52: warning: assuming "**" always returns
lsc-bignum.adb:494:52: warning: no returning annotation available for "**"
lsc-bignum.adb:494:58: medium: overflow check might fail, cannot prove upper bound for 2 * N [reason for check: result of multiplication must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit SPARK.Big_Integers]
lsc-bignum.adb:494:62: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:494:67: warning: assuming "*" always returns
lsc-bignum.adb:494:67: warning: no returning annotation available for "*"
lsc-bignum.adb:495:22: warning: assuming "**" always returns
lsc-bignum.adb:495:22: warning: no returning annotation available for "**"
lsc-bignum.adb:495:28: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:495:33: warning: assuming "mod" always returns
lsc-bignum.adb:495:33: warning: no returning annotation available for "mod"
lsc-bignum.adb:496:17: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:496:17: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:496:47: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:498:10: medium: precondition might fail, cannot prove B_First in B'range
lsc-bignum.adb:500:30: medium: overflow check might fail, cannot prove upper bound for Aux4_First + (H - 1) * (L + 1) [reason for check: result of addition must fit in a 32-bits machine integer]
lsc-bignum.adb:500:40: medium: overflow check might fail, cannot prove lower bound for (H - 1) * (L + 1) [reason for check: result of multiplication must fit in a 32-bits machine integer]
lsc-bignum.adb:500:45: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:503:10: medium: precondition might fail, cannot prove B_First in B'range
lsc-bignum.adb:503:53: medium: overflow check might fail, cannot prove upper bound for Aux4_First + H * (L + 1) [reason for check: result of addition must fit in a 32-bits machine integer]
lsc-bignum.adb:503:57: medium: overflow check might fail, cannot prove upper bound for H * (L + 1) [reason for check: result of multiplication must fit in a 32-bits machine integer]
lsc-bignum.adb:503:62: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:506:24: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:507:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:507:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:507:49: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:507:54: warning: assuming "=" always returns
lsc-bignum.adb:507:54: warning: no returning annotation available for "="
lsc-bignum.adb:508:21: warning: assuming "From_Word32" always returns
lsc-bignum.adb:508:21: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:509:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:509:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:509:49: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:509:54: warning: assuming "=" always returns
lsc-bignum.adb:509:54: warning: no returning annotation available for "="
lsc-bignum.adb:510:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:510:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:510:43: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:510:48: warning: assuming "*" always returns
lsc-bignum.adb:510:48: warning: no returning annotation available for "*"
lsc-bignum.adb:511:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:511:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:511:43: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:511:48: warning: assuming "*" always returns
lsc-bignum.adb:511:48: warning: no returning annotation available for "*"
lsc-bignum.adb:512:18: warning: assuming "**" always returns
lsc-bignum.adb:512:18: warning: no returning annotation available for "**"
lsc-bignum.adb:512:24: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:512:29: warning: assuming "mod" always returns
lsc-bignum.adb:512:29: warning: no returning annotation available for "mod"
lsc-bignum.adb:513:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:513:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:513:43: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:514:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:514:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:514:49: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:514:54: warning: assuming "=" always returns
lsc-bignum.adb:514:54: warning: no returning annotation available for "="
lsc-bignum.adb:515:18: warning: assuming "**" always returns
lsc-bignum.adb:515:18: warning: no returning annotation available for "**"
lsc-bignum.adb:515:24: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:515:29: warning: assuming "mod" always returns
lsc-bignum.adb:515:29: warning: no returning annotation available for "mod"
lsc-bignum.adb:516:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:516:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:516:43: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:517:22: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:518:16: medium: assertion might fail, cannot prove Num_Of_Big_Int (Aux4, Aux4_First + N * (L + 1), L + 1) = Num_Of_Big_Int (X, X_First, L + 1) ** (2 * N + 1) * Base ** (L + 1) mod Num_Of_Big_Int (M, M_First, L + 1) [possible fix: precondition of subprogram at lsc-bignum.ads:176 should mention X]
lsc-bignum.adb:518:17: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:518:17: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:518:50: medium: overflow check might fail, cannot prove upper bound for Aux4_First + N * (L + 1) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit SPARK.Big_Integers]
lsc-bignum.adb:518:54: medium: overflow check might fail, cannot prove lower bound for N * (L + 1) [reason for check: result of multiplication must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit SPARK.Big_Integers]
lsc-bignum.adb:518:59: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:518:67: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:518:72: warning: assuming "=" always returns
lsc-bignum.adb:518:72: warning: no returning annotation available for "="
lsc-bignum.adb:519:17: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:519:17: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:519:47: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:519:52: warning: assuming "**" always returns
lsc-bignum.adb:519:52: warning: no returning annotation available for "**"
lsc-bignum.adb:519:58: medium: overflow check might fail, cannot prove upper bound for 2 * N [reason for check: result of multiplication must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit SPARK.Big_Integers]
lsc-bignum.adb:519:62: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:519:67: warning: assuming "*" always returns
lsc-bignum.adb:519:67: warning: no returning annotation available for "*"
lsc-bignum.adb:520:22: warning: assuming "**" always returns
lsc-bignum.adb:520:22: warning: no returning annotation available for "**"
lsc-bignum.adb:520:28: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:520:33: warning: assuming "mod" always returns
lsc-bignum.adb:520:33: warning: no returning annotation available for "mod"
lsc-bignum.adb:521:17: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:521:17: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:521:47: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:524:34: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:524:34: info: range check proved (Z3: 1 VC)
lsc-bignum.adb:528:24: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:529:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:529:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:529:49: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:529:54: warning: assuming "=" always returns
lsc-bignum.adb:529:54: warning: no returning annotation available for "="
lsc-bignum.adb:530:21: warning: assuming "From_Word32" always returns
lsc-bignum.adb:530:21: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:531:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:531:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:531:49: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:531:54: warning: assuming "=" always returns
lsc-bignum.adb:531:54: warning: no returning annotation available for "="
lsc-bignum.adb:532:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:532:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:532:43: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:532:48: warning: assuming "*" always returns
lsc-bignum.adb:532:48: warning: no returning annotation available for "*"
lsc-bignum.adb:533:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:533:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:533:43: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:533:48: warning: assuming "*" always returns
lsc-bignum.adb:533:48: warning: no returning annotation available for "*"
lsc-bignum.adb:534:18: warning: assuming "**" always returns
lsc-bignum.adb:534:18: warning: no returning annotation available for "**"
lsc-bignum.adb:534:24: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:534:29: warning: assuming "mod" always returns
lsc-bignum.adb:534:29: warning: no returning annotation available for "mod"
lsc-bignum.adb:535:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:535:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:535:43: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:536:13: medium: loop invariant might fail in first iteration, cannot prove Num_Of_Big_Int (Aux3, Aux3_First, L + 1) = Num_Of_Big_Int (X, X_First, L + 1) ** (Num_Of_Big_Int (E, E_First, E_Last - E_First + 1) / Math_Int.From_Word32 (2) ** (Math_Int.From_Word64 (I) + Math_Int.From_Word32 (1))) * Base ** (L + 1) mod Num_Of_Big_Int (M...) [possible fix: you should consider adding a postcondition to function Num_Of_Big_Int and operator "+" and operator "*" and operator "/" and operator "mod" and operator "**" and operator "**" and operator "=" and function From_Word32 and function From_Word64 or turning them into expression functions in their unit spec]
lsc-bignum.adb:536:13: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove Num_Of_Big_Int (Aux3, Aux3_First, L + 1) = Num_Of_Big_Int (X, X_First, L + 1) ** (Num_Of_Big_Int (E, E_First, E_Last - E_First + 1) / Math_Int.From_Word32 (2) ** (Math_Int.From_Word64 (I) + Math_Int.From_Word32 (1))) * Base ** (L + 1) mod Num_Of_Big_Int (M...) [possible fix: you should consider adding a postcondition to function Num_Of_Big_Int and operator "+" and operator "*" and operator "/" and operator "mod" and operator "**" and operator "**" and operator "=" and function From_Word32 and function From_Word64 or turning them into expression functions in their unit spec]
lsc-bignum.adb:536:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:536:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:536:49: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:536:54: warning: assuming "=" always returns
lsc-bignum.adb:536:54: warning: no returning annotation available for "="
lsc-bignum.adb:537:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:537:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:537:43: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:537:48: warning: assuming "**" always returns
lsc-bignum.adb:537:48: warning: no returning annotation available for "**"
lsc-bignum.adb:538:14: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:538:14: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:538:49: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:538:59: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:538:59: info: range check proved (Z3: 4 VC)
lsc-bignum.adb:538:64: warning: assuming "/" always returns
lsc-bignum.adb:538:64: warning: no returning annotation available for "/"
lsc-bignum.adb:539:22: warning: assuming "From_Word32" always returns
lsc-bignum.adb:539:22: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:539:39: warning: assuming "**" always returns
lsc-bignum.adb:539:39: warning: no returning annotation available for "**"
lsc-bignum.adb:540:25: warning: assuming "From_Word64" always returns
lsc-bignum.adb:540:25: warning: no returning annotation available for "From_Word64"
lsc-bignum.adb:540:42: warning: assuming "+" always returns
lsc-bignum.adb:540:42: warning: no returning annotation available for "+"
lsc-bignum.adb:540:52: warning: assuming "From_Word32" always returns
lsc-bignum.adb:540:52: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:540:71: warning: assuming "*" always returns
lsc-bignum.adb:540:71: warning: no returning annotation available for "*"
lsc-bignum.adb:541:18: warning: assuming "**" always returns
lsc-bignum.adb:541:18: warning: no returning annotation available for "**"
lsc-bignum.adb:541:24: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:541:29: warning: assuming "mod" always returns
lsc-bignum.adb:541:29: warning: no returning annotation available for "mod"
lsc-bignum.adb:542:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:542:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:542:43: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:543:22: info: range check proved (Z3: 4 VC)
lsc-bignum.adb:543:48: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:543:53: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:544:17: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:544:17: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:544:50: medium: overflow check might fail, cannot prove upper bound for Aux4_First + N * (L + 1) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit SPARK.Big_Integers]
lsc-bignum.adb:544:54: medium: overflow check might fail, cannot prove lower bound for N * (L + 1) [reason for check: result of multiplication must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit SPARK.Big_Integers]
lsc-bignum.adb:544:59: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:544:67: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:544:72: warning: assuming "=" always returns
lsc-bignum.adb:544:72: warning: no returning annotation available for "="
lsc-bignum.adb:545:17: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:545:17: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:545:47: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:545:52: warning: assuming "**" always returns
lsc-bignum.adb:545:52: warning: no returning annotation available for "**"
lsc-bignum.adb:545:58: medium: overflow check might fail, cannot prove upper bound for 2 * N [reason for check: result of multiplication must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit SPARK.Big_Integers]
lsc-bignum.adb:545:62: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:545:67: warning: assuming "*" always returns
lsc-bignum.adb:545:67: warning: no returning annotation available for "*"
lsc-bignum.adb:546:22: warning: assuming "**" always returns
lsc-bignum.adb:546:22: warning: no returning annotation available for "**"
lsc-bignum.adb:546:28: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:546:33: warning: assuming "mod" always returns
lsc-bignum.adb:546:33: warning: no returning annotation available for "mod"
lsc-bignum.adb:547:17: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:547:17: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:547:47: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:548:39: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:548:39: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:550:13: medium: precondition might fail, cannot prove I / 32 <= Types.Word64 (A'Last - A_First)
lsc-bignum.adb:557:30: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:558:19: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:558:19: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:558:55: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:558:60: warning: assuming "=" always returns
lsc-bignum.adb:558:60: warning: no returning annotation available for "="
lsc-bignum.adb:559:27: warning: assuming "From_Word32" always returns
lsc-bignum.adb:559:27: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:560:19: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:560:19: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:560:55: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:560:60: warning: assuming "=" always returns
lsc-bignum.adb:560:60: warning: no returning annotation available for "="
lsc-bignum.adb:561:19: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:561:19: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:561:49: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:561:54: warning: assuming "*" always returns
lsc-bignum.adb:561:54: warning: no returning annotation available for "*"
lsc-bignum.adb:562:19: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:562:19: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:562:49: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:562:54: warning: assuming "*" always returns
lsc-bignum.adb:562:54: warning: no returning annotation available for "*"
lsc-bignum.adb:563:24: warning: assuming "**" always returns
lsc-bignum.adb:563:24: warning: no returning annotation available for "**"
lsc-bignum.adb:563:30: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:563:35: warning: assuming "mod" always returns
lsc-bignum.adb:563:35: warning: no returning annotation available for "mod"
lsc-bignum.adb:564:19: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:564:19: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:564:49: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:565:19: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:565:19: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:565:55: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:565:60: warning: assuming "=" always returns
lsc-bignum.adb:565:60: warning: no returning annotation available for "="
lsc-bignum.adb:566:19: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:566:19: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:566:49: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:566:54: warning: assuming "**" always returns
lsc-bignum.adb:566:54: warning: no returning annotation available for "**"
lsc-bignum.adb:567:20: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:567:20: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:567:55: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:567:65: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:567:65: info: range check proved (Z3: 4 VC)
lsc-bignum.adb:567:70: warning: assuming "/" always returns
lsc-bignum.adb:567:70: warning: no returning annotation available for "/"
lsc-bignum.adb:568:28: warning: assuming "From_Word32" always returns
lsc-bignum.adb:568:28: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:568:45: warning: assuming "**" always returns
lsc-bignum.adb:568:45: warning: no returning annotation available for "**"
lsc-bignum.adb:569:31: warning: assuming "From_Word64" always returns
lsc-bignum.adb:569:31: warning: no returning annotation available for "From_Word64"
lsc-bignum.adb:569:48: warning: assuming "+" always returns
lsc-bignum.adb:569:48: warning: no returning annotation available for "+"
lsc-bignum.adb:569:58: warning: assuming "From_Word32" always returns
lsc-bignum.adb:569:58: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:569:77: warning: assuming "*" always returns
lsc-bignum.adb:569:77: warning: no returning annotation available for "*"
lsc-bignum.adb:570:24: warning: assuming "**" always returns
lsc-bignum.adb:570:24: warning: no returning annotation available for "**"
lsc-bignum.adb:570:30: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:570:35: warning: assuming "mod" always returns
lsc-bignum.adb:570:35: warning: no returning annotation available for "mod"
lsc-bignum.adb:571:19: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:571:19: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:571:49: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:572:28: info: range check proved (Z3: 4 VC)
lsc-bignum.adb:572:54: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:572:59: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:573:23: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:573:23: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:573:56: medium: overflow check might fail, cannot prove upper bound for Aux4_First + N * (L + 1) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit SPARK.Big_Integers]
lsc-bignum.adb:573:60: medium: overflow check might fail, cannot prove lower bound for N * (L + 1) [reason for check: result of multiplication must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit SPARK.Big_Integers]
lsc-bignum.adb:573:65: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:573:73: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:573:78: warning: assuming "=" always returns
lsc-bignum.adb:573:78: warning: no returning annotation available for "="
lsc-bignum.adb:574:23: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:574:23: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:574:53: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:574:58: warning: assuming "**" always returns
lsc-bignum.adb:574:58: warning: no returning annotation available for "**"
lsc-bignum.adb:574:64: medium: overflow check might fail, cannot prove upper bound for 2 * N [reason for check: result of multiplication must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit SPARK.Big_Integers]
lsc-bignum.adb:574:68: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:574:73: warning: assuming "*" always returns
lsc-bignum.adb:574:73: warning: no returning annotation available for "*"
lsc-bignum.adb:575:28: warning: assuming "**" always returns
lsc-bignum.adb:575:28: warning: no returning annotation available for "**"
lsc-bignum.adb:575:34: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:575:39: warning: assuming "mod" always returns
lsc-bignum.adb:575:39: warning: no returning annotation available for "mod"
lsc-bignum.adb:576:23: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:576:23: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:576:53: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:577:19: medium: loop invariant might fail in first iteration, cannot prove Math_Int.From_Word32 (W) * Math_Int.From_Word32 (2) ** (J - S - 1) = Num_Of_Big_Int (E, E_First, E_Last - E_First + 1) / Math_Int.From_Word32 (2) ** (Math_Int.From_Word64 (I) - (Math_Int.From_Integer (J) - Math_Int.From_Word32 (1))) mod Math_Int.From_Word3... [possible fix: you should consider adding a postcondition to function Num_Of_Big_Int and operator "-" and operator "*" and operator "/" and operator "mod" and operator "**" and operator "**" and operator "=" and function From_Integer and function From_Word32 and function From_Word64 or turning them into expression functions in their unit spec]
lsc-bignum.adb:577:19: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove Math_Int.From_Word32 (W) * Math_Int.From_Word32 (2) ** (J - S - 1) = Num_Of_Big_Int (E, E_First, E_Last - E_First + 1) / Math_Int.From_Word32 (2) ** (Math_Int.From_Word64 (I) - (Math_Int.From_Integer (J) - Math_Int.From_Word32 (1))) mod Math_Int.From_Word3... [possible fix: you should consider adding a postcondition to function Num_Of_Big_Int and operator "-" and operator "*" and operator "/" and operator "mod" and operator "**" and operator "**" and operator "=" and function From_Integer and function From_Word32 and function From_Word64 or turning them into expression functions in their unit spec]
lsc-bignum.adb:577:27: warning: assuming "From_Word32" always returns
lsc-bignum.adb:577:27: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:577:44: warning: assuming "*" always returns
lsc-bignum.adb:577:44: warning: no returning annotation available for "*"
lsc-bignum.adb:577:54: warning: assuming "From_Word32" always returns
lsc-bignum.adb:577:54: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:577:71: warning: assuming "**" always returns
lsc-bignum.adb:577:71: warning: no returning annotation available for "**"
lsc-bignum.adb:577:77: medium: overflow check might fail, cannot prove lower bound for J - S [reason for check: result of subtraction must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit SPARK.Big_Integers]
lsc-bignum.adb:577:81: medium: overflow check might fail, cannot prove lower bound for J - S - 1 [reason for check: result of subtraction must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit SPARK.Big_Integers]
lsc-bignum.adb:577:81: medium: range check might fail, cannot prove lower bound for J - S - 1 [reason for check: input value must fit in parameter type]
lsc-bignum.adb:577:86: warning: assuming "=" always returns
lsc-bignum.adb:577:86: warning: no returning annotation available for "="
lsc-bignum.adb:578:19: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:578:19: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:578:54: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:578:64: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:578:64: info: range check proved (Z3: 4 VC)
lsc-bignum.adb:578:69: warning: assuming "/" always returns
lsc-bignum.adb:578:69: warning: no returning annotation available for "/"
lsc-bignum.adb:579:27: warning: assuming "From_Word32" always returns
lsc-bignum.adb:579:27: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:579:44: warning: assuming "**" always returns
lsc-bignum.adb:579:44: warning: no returning annotation available for "**"
lsc-bignum.adb:579:56: warning: assuming "From_Word64" always returns
lsc-bignum.adb:579:56: warning: no returning annotation available for "From_Word64"
lsc-bignum.adb:579:73: warning: assuming "-" always returns
lsc-bignum.adb:579:73: warning: no returning annotation available for "-"
lsc-bignum.adb:580:30: warning: assuming "From_Integer" always returns
lsc-bignum.adb:580:30: warning: no returning annotation available for "From_Integer"
lsc-bignum.adb:580:48: warning: assuming "-" always returns
lsc-bignum.adb:580:48: warning: no returning annotation available for "-"
lsc-bignum.adb:580:58: warning: assuming "From_Word32" always returns
lsc-bignum.adb:580:58: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:580:77: warning: assuming "mod" always returns
lsc-bignum.adb:580:77: warning: no returning annotation available for "mod"
lsc-bignum.adb:581:27: warning: assuming "From_Word32" always returns
lsc-bignum.adb:581:27: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:581:44: warning: assuming "**" always returns
lsc-bignum.adb:581:44: warning: no returning annotation available for "**"
lsc-bignum.adb:582:21: info: division check proved (Z3: 2 VC)
lsc-bignum.adb:582:63: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:583:27: warning: assuming "From_Integer" always returns
lsc-bignum.adb:583:27: warning: no returning annotation available for "From_Integer"
lsc-bignum.adb:583:45: warning: assuming "<=" always returns
lsc-bignum.adb:583:45: warning: no returning annotation available for "<="
lsc-bignum.adb:584:27: warning: assuming "From_Word64" always returns
lsc-bignum.adb:584:27: warning: no returning annotation available for "From_Word64"
lsc-bignum.adb:584:44: warning: assuming "+" always returns
lsc-bignum.adb:584:44: warning: no returning annotation available for "+"
lsc-bignum.adb:584:54: warning: assuming "From_Word32" always returns
lsc-bignum.adb:584:54: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:585:45: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:585:45: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:590:19: medium: precondition might fail, cannot prove I / 32 <= Types.Word64 (A'Last - A_First)
lsc-bignum.adb:591:52: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:591:52: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:595:23: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:598:20: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:600:17: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:603:19: info: loop invariant preservation proved (Z3: 12 VC)
lsc-bignum.adb:603:30: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:604:19: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:604:19: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:604:55: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:604:60: warning: assuming "=" always returns
lsc-bignum.adb:604:60: warning: no returning annotation available for "="
lsc-bignum.adb:605:27: warning: assuming "From_Word32" always returns
lsc-bignum.adb:605:27: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:606:19: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:606:19: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:606:55: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:606:60: warning: assuming "=" always returns
lsc-bignum.adb:606:60: warning: no returning annotation available for "="
lsc-bignum.adb:607:19: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:607:19: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:607:49: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:607:54: warning: assuming "*" always returns
lsc-bignum.adb:607:54: warning: no returning annotation available for "*"
lsc-bignum.adb:608:19: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:608:19: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:608:49: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:608:54: warning: assuming "*" always returns
lsc-bignum.adb:608:54: warning: no returning annotation available for "*"
lsc-bignum.adb:609:24: warning: assuming "**" always returns
lsc-bignum.adb:609:24: warning: no returning annotation available for "**"
lsc-bignum.adb:609:30: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:609:35: warning: assuming "mod" always returns
lsc-bignum.adb:609:35: warning: no returning annotation available for "mod"
lsc-bignum.adb:610:19: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:610:19: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:610:49: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:611:19: medium: loop invariant might fail in first iteration, cannot prove Num_Of_Big_Int (Aux3, Aux3_First, L + 1) = Num_Of_Big_Int (X, X_First, L + 1) ** (Num_Of_Big_Int (E, E_First, E_Last - E_First + 1) / Math_Int.From_Word32 (2) ** (Math_Int.From_Word64 (I) + Math_Int.From_Word32 (1)) * Math_Int.From_Word32 (2) ** (H - 1)) *... [possible fix: you should consider adding a postcondition to function Num_Of_Big_Int and operator "+" and operator "*" and operator "/" and operator "mod" and operator "**" and operator "**" and operator "=" and function From_Word32 and function From_Word64 or turning them into expression functions in their unit spec]
lsc-bignum.adb:611:19: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:611:19: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:611:55: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:611:60: warning: assuming "=" always returns
lsc-bignum.adb:611:60: warning: no returning annotation available for "="
lsc-bignum.adb:612:19: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:612:19: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:612:49: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:612:54: warning: assuming "**" always returns
lsc-bignum.adb:612:54: warning: no returning annotation available for "**"
lsc-bignum.adb:613:20: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:613:20: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:613:55: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:613:65: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:613:65: info: range check proved (Z3: 4 VC)
lsc-bignum.adb:613:70: warning: assuming "/" always returns
lsc-bignum.adb:613:70: warning: no returning annotation available for "/"
lsc-bignum.adb:614:28: warning: assuming "From_Word32" always returns
lsc-bignum.adb:614:28: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:614:45: warning: assuming "**" always returns
lsc-bignum.adb:614:45: warning: no returning annotation available for "**"
lsc-bignum.adb:615:31: warning: assuming "From_Word64" always returns
lsc-bignum.adb:615:31: warning: no returning annotation available for "From_Word64"
lsc-bignum.adb:615:48: warning: assuming "+" always returns
lsc-bignum.adb:615:48: warning: no returning annotation available for "+"
lsc-bignum.adb:615:58: warning: assuming "From_Word32" always returns
lsc-bignum.adb:615:58: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:615:76: warning: assuming "*" always returns
lsc-bignum.adb:615:76: warning: no returning annotation available for "*"
lsc-bignum.adb:616:28: warning: assuming "From_Word32" always returns
lsc-bignum.adb:616:28: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:616:45: warning: assuming "**" always returns
lsc-bignum.adb:616:45: warning: no returning annotation available for "**"
lsc-bignum.adb:616:57: warning: assuming "*" always returns
lsc-bignum.adb:616:57: warning: no returning annotation available for "*"
lsc-bignum.adb:617:24: warning: assuming "**" always returns
lsc-bignum.adb:617:24: warning: no returning annotation available for "**"
lsc-bignum.adb:617:30: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:617:35: warning: assuming "mod" always returns
lsc-bignum.adb:617:35: warning: no returning annotation available for "mod"
lsc-bignum.adb:618:19: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:618:19: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:618:49: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:619:28: info: range check proved (Z3: 4 VC)
lsc-bignum.adb:619:54: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:619:59: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:620:23: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:620:23: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:620:56: medium: overflow check might fail, cannot prove upper bound for Aux4_First + N * (L + 1) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit SPARK.Big_Integers]
lsc-bignum.adb:620:60: medium: overflow check might fail, cannot prove lower bound for N * (L + 1) [reason for check: result of multiplication must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit SPARK.Big_Integers]
lsc-bignum.adb:620:65: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:620:73: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:620:78: warning: assuming "=" always returns
lsc-bignum.adb:620:78: warning: no returning annotation available for "="
lsc-bignum.adb:621:23: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:621:23: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:621:53: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:621:58: warning: assuming "**" always returns
lsc-bignum.adb:621:58: warning: no returning annotation available for "**"
lsc-bignum.adb:621:64: medium: overflow check might fail, cannot prove upper bound for 2 * N [reason for check: result of multiplication must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit SPARK.Big_Integers]
lsc-bignum.adb:621:68: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:621:73: warning: assuming "*" always returns
lsc-bignum.adb:621:73: warning: no returning annotation available for "*"
lsc-bignum.adb:622:28: warning: assuming "**" always returns
lsc-bignum.adb:622:28: warning: no returning annotation available for "**"
lsc-bignum.adb:622:34: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:622:39: warning: assuming "mod" always returns
lsc-bignum.adb:622:39: warning: no returning annotation available for "mod"
lsc-bignum.adb:623:23: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:623:23: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:623:53: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:624:27: warning: assuming "From_Word32" always returns
lsc-bignum.adb:624:27: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:624:44: warning: assuming "=" always returns
lsc-bignum.adb:624:44: warning: no returning annotation available for "="
lsc-bignum.adb:625:19: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:625:19: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:625:54: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:625:64: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:625:64: info: range check proved (Z3: 4 VC)
lsc-bignum.adb:625:69: warning: assuming "/" always returns
lsc-bignum.adb:625:69: warning: no returning annotation available for "/"
lsc-bignum.adb:626:27: warning: assuming "From_Word32" always returns
lsc-bignum.adb:626:27: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:626:44: warning: assuming "**" always returns
lsc-bignum.adb:626:44: warning: no returning annotation available for "**"
lsc-bignum.adb:626:56: warning: assuming "From_Word64" always returns
lsc-bignum.adb:626:56: warning: no returning annotation available for "From_Word64"
lsc-bignum.adb:626:73: warning: assuming "-" always returns
lsc-bignum.adb:626:73: warning: no returning annotation available for "-"
lsc-bignum.adb:627:30: warning: assuming "From_Integer" always returns
lsc-bignum.adb:627:30: warning: no returning annotation available for "From_Integer"
lsc-bignum.adb:627:48: warning: assuming "-" always returns
lsc-bignum.adb:627:48: warning: no returning annotation available for "-"
lsc-bignum.adb:627:58: warning: assuming "From_Word32" always returns
lsc-bignum.adb:627:58: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:627:77: warning: assuming "mod" always returns
lsc-bignum.adb:627:77: warning: no returning annotation available for "mod"
lsc-bignum.adb:628:27: warning: assuming "From_Word32" always returns
lsc-bignum.adb:628:27: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:628:44: warning: assuming "**" always returns
lsc-bignum.adb:628:44: warning: no returning annotation available for "**"
lsc-bignum.adb:629:21: info: division check proved (Z3: 2 VC)
lsc-bignum.adb:629:53: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:630:27: warning: assuming "From_Integer" always returns
lsc-bignum.adb:630:27: warning: no returning annotation available for "From_Integer"
lsc-bignum.adb:630:45: warning: assuming "<=" always returns
lsc-bignum.adb:630:45: warning: no returning annotation available for "<="
lsc-bignum.adb:631:27: warning: assuming "From_Word64" always returns
lsc-bignum.adb:631:27: warning: no returning annotation available for "From_Word64"
lsc-bignum.adb:631:44: warning: assuming "+" always returns
lsc-bignum.adb:631:44: warning: no returning annotation available for "+"
lsc-bignum.adb:631:54: warning: assuming "From_Word32" always returns
lsc-bignum.adb:631:54: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:632:45: info: overflow check proved (Z3: 4 VC)
lsc-bignum.adb:632:45: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:634:16: medium: precondition might fail, cannot prove Num_Of_Big_Int (C, C_First, A_Last - A_First + 1) < Num_Of_Big_Int (M, M_First, A_Last - A_First + 1)
lsc-bignum.adb:639:16: info: precondition proved (Z3: 9 VC)
lsc-bignum.adb:642:30: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:643:19: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:643:19: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:643:55: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:643:60: warning: assuming "=" always returns
lsc-bignum.adb:643:60: warning: no returning annotation available for "="
lsc-bignum.adb:644:27: warning: assuming "From_Word32" always returns
lsc-bignum.adb:644:27: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:645:19: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:645:19: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:645:55: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:645:60: warning: assuming "=" always returns
lsc-bignum.adb:645:60: warning: no returning annotation available for "="
lsc-bignum.adb:646:19: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:646:19: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:646:49: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:646:54: warning: assuming "*" always returns
lsc-bignum.adb:646:54: warning: no returning annotation available for "*"
lsc-bignum.adb:647:19: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:647:19: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:647:49: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:647:54: warning: assuming "*" always returns
lsc-bignum.adb:647:54: warning: no returning annotation available for "*"
lsc-bignum.adb:648:24: warning: assuming "**" always returns
lsc-bignum.adb:648:24: warning: no returning annotation available for "**"
lsc-bignum.adb:648:30: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:648:35: warning: assuming "mod" always returns
lsc-bignum.adb:648:35: warning: no returning annotation available for "mod"
lsc-bignum.adb:649:19: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:649:19: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:649:49: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:650:19: medium: assertion might fail, cannot prove Num_Of_Big_Int (Aux3, Aux3_First, L + 1) = Num_Of_Big_Int (X, X_First, L + 1) ** (Num_Of_Big_Int (E, E_First, E_Last - E_First + 1) / Math_Int.From_Word32 (2) ** (Math_Int.From_Word64 (I) + Math_Int.From_Word32 (1)) * Math_Int.From_Word32 (2) ** H) * Base ... [possible fix: you should consider adding a postcondition to function Num_Of_Big_Int and operator "+" and operator "*" and operator "/" and operator "mod" and operator "**" and operator "**" and operator "=" and function From_Word32 and function From_Word64 or turning them into expression functions in their unit spec]
lsc-bignum.adb:650:19: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:650:19: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:650:55: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:650:60: warning: assuming "=" always returns
lsc-bignum.adb:650:60: warning: no returning annotation available for "="
lsc-bignum.adb:651:19: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:651:19: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:651:49: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:651:54: warning: assuming "**" always returns
lsc-bignum.adb:651:54: warning: no returning annotation available for "**"
lsc-bignum.adb:652:20: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:652:20: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:652:55: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:652:65: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:652:65: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:652:70: warning: assuming "/" always returns
lsc-bignum.adb:652:70: warning: no returning annotation available for "/"
lsc-bignum.adb:653:28: warning: assuming "From_Word32" always returns
lsc-bignum.adb:653:28: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:653:45: warning: assuming "**" always returns
lsc-bignum.adb:653:45: warning: no returning annotation available for "**"
lsc-bignum.adb:654:31: warning: assuming "From_Word64" always returns
lsc-bignum.adb:654:31: warning: no returning annotation available for "From_Word64"
lsc-bignum.adb:654:48: warning: assuming "+" always returns
lsc-bignum.adb:654:48: warning: no returning annotation available for "+"
lsc-bignum.adb:654:58: warning: assuming "From_Word32" always returns
lsc-bignum.adb:654:58: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:654:76: warning: assuming "*" always returns
lsc-bignum.adb:654:76: warning: no returning annotation available for "*"
lsc-bignum.adb:655:28: warning: assuming "From_Word32" always returns
lsc-bignum.adb:655:28: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:655:45: warning: assuming "**" always returns
lsc-bignum.adb:655:45: warning: no returning annotation available for "**"
lsc-bignum.adb:655:51: warning: assuming "*" always returns
lsc-bignum.adb:655:51: warning: no returning annotation available for "*"
lsc-bignum.adb:656:24: warning: assuming "**" always returns
lsc-bignum.adb:656:24: warning: no returning annotation available for "**"
lsc-bignum.adb:656:30: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:656:35: warning: assuming "mod" always returns
lsc-bignum.adb:656:35: warning: no returning annotation available for "mod"
lsc-bignum.adb:657:19: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:657:19: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:657:49: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:658:28: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:658:54: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:658:59: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:659:23: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:659:23: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:659:56: medium: overflow check might fail, cannot prove upper bound for Aux4_First + N * (L + 1) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit SPARK.Big_Integers]
lsc-bignum.adb:659:60: medium: overflow check might fail, cannot prove lower bound for N * (L + 1) [reason for check: result of multiplication must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit SPARK.Big_Integers]
lsc-bignum.adb:659:65: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:659:73: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:659:78: warning: assuming "=" always returns
lsc-bignum.adb:659:78: warning: no returning annotation available for "="
lsc-bignum.adb:660:23: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:660:23: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:660:53: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:660:58: warning: assuming "**" always returns
lsc-bignum.adb:660:58: warning: no returning annotation available for "**"
lsc-bignum.adb:660:64: medium: overflow check might fail, cannot prove upper bound for 2 * N [reason for check: result of multiplication must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit SPARK.Big_Integers]
lsc-bignum.adb:660:68: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:660:73: warning: assuming "*" always returns
lsc-bignum.adb:660:73: warning: no returning annotation available for "*"
lsc-bignum.adb:661:28: warning: assuming "**" always returns
lsc-bignum.adb:661:28: warning: no returning annotation available for "**"
lsc-bignum.adb:661:34: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:661:39: warning: assuming "mod" always returns
lsc-bignum.adb:661:39: warning: no returning annotation available for "mod"
lsc-bignum.adb:662:23: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:662:23: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:662:53: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:663:27: warning: assuming "From_Word32" always returns
lsc-bignum.adb:663:27: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:663:44: warning: assuming "=" always returns
lsc-bignum.adb:663:44: warning: no returning annotation available for "="
lsc-bignum.adb:664:19: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:664:19: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:664:54: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:664:64: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:664:64: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:664:69: warning: assuming "/" always returns
lsc-bignum.adb:664:69: warning: no returning annotation available for "/"
lsc-bignum.adb:665:27: warning: assuming "From_Word32" always returns
lsc-bignum.adb:665:27: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:665:44: warning: assuming "**" always returns
lsc-bignum.adb:665:44: warning: no returning annotation available for "**"
lsc-bignum.adb:665:56: warning: assuming "From_Word64" always returns
lsc-bignum.adb:665:56: warning: no returning annotation available for "From_Word64"
lsc-bignum.adb:665:73: warning: assuming "-" always returns
lsc-bignum.adb:665:73: warning: no returning annotation available for "-"
lsc-bignum.adb:666:30: warning: assuming "From_Integer" always returns
lsc-bignum.adb:666:30: warning: no returning annotation available for "From_Integer"
lsc-bignum.adb:666:48: warning: assuming "-" always returns
lsc-bignum.adb:666:48: warning: no returning annotation available for "-"
lsc-bignum.adb:666:58: warning: assuming "From_Word32" always returns
lsc-bignum.adb:666:58: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:666:77: warning: assuming "mod" always returns
lsc-bignum.adb:666:77: warning: no returning annotation available for "mod"
lsc-bignum.adb:667:27: warning: assuming "From_Word32" always returns
lsc-bignum.adb:667:27: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:667:44: warning: assuming "**" always returns
lsc-bignum.adb:667:44: warning: no returning annotation available for "**"
lsc-bignum.adb:668:21: info: division check proved (Z3: 1 VC)
lsc-bignum.adb:668:53: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:669:27: warning: assuming "From_Integer" always returns
lsc-bignum.adb:669:27: warning: no returning annotation available for "From_Integer"
lsc-bignum.adb:669:45: warning: assuming "<=" always returns
lsc-bignum.adb:669:45: warning: no returning annotation available for "<="
lsc-bignum.adb:670:27: warning: assuming "From_Word64" always returns
lsc-bignum.adb:670:27: warning: no returning annotation available for "From_Word64"
lsc-bignum.adb:670:44: warning: assuming "+" always returns
lsc-bignum.adb:670:44: warning: no returning annotation available for "+"
lsc-bignum.adb:670:54: warning: assuming "From_Word32" always returns
lsc-bignum.adb:670:54: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:671:45: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:671:45: info: range check proved (Z3: 1 VC)
lsc-bignum.adb:674:13: medium: precondition might fail, cannot prove C_First in C'range
lsc-bignum.adb:677:33: medium: overflow check might fail, cannot prove upper bound for Aux4_First + Natural (Interfaces.Shift_Right (W, 1)) * (L + 1) [reason for check: result of addition must fit in a 32-bits machine integer]
lsc-bignum.adb:677:54: medium: range check might fail, cannot prove lower bound for Interfaces.Shift_Right (W, 1) [reason for check: value must be convertible to the target type of the conversion]
lsc-bignum.adb:677:75: medium: overflow check might fail, cannot prove lower bound for Natural (Interfaces.Shift_Right (W, 1)) * (L + 1) [reason for check: result of multiplication must fit in a 32-bits machine integer]
lsc-bignum.adb:677:80: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:680:13: info: precondition proved (Z3: 9 VC)
lsc-bignum.adb:684:13: medium: precondition might fail, cannot prove Num_Of_Big_Int (C, C_First, A_Last - A_First + 1) < Num_Of_Big_Int (M, M_First, A_Last - A_First + 1)
lsc-bignum.adb:689:13: info: precondition proved (Z3: 9 VC)
lsc-bignum.adb:693:24: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:694:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:694:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:694:49: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:694:54: warning: assuming "=" always returns
lsc-bignum.adb:694:54: warning: no returning annotation available for "="
lsc-bignum.adb:695:21: warning: assuming "From_Word32" always returns
lsc-bignum.adb:695:21: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:696:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:696:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:696:49: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:696:54: warning: assuming "=" always returns
lsc-bignum.adb:696:54: warning: no returning annotation available for "="
lsc-bignum.adb:697:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:697:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:697:43: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:697:48: warning: assuming "*" always returns
lsc-bignum.adb:697:48: warning: no returning annotation available for "*"
lsc-bignum.adb:698:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:698:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:698:43: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:698:48: warning: assuming "*" always returns
lsc-bignum.adb:698:48: warning: no returning annotation available for "*"
lsc-bignum.adb:699:18: warning: assuming "**" always returns
lsc-bignum.adb:699:18: warning: no returning annotation available for "**"
lsc-bignum.adb:699:24: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:699:29: warning: assuming "mod" always returns
lsc-bignum.adb:699:29: warning: no returning annotation available for "mod"
lsc-bignum.adb:700:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:700:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:700:43: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:701:13: medium: assertion might fail, cannot prove Num_Of_Big_Int (Aux3, Aux3_First, L + 1) = Num_Of_Big_Int (X, X_First, L + 1) ** (Num_Of_Big_Int (E, E_First, E_Last - E_First + 1) / Math_Int.From_Word32 (2) ** (Math_Int.From_Word64 (I) - Math_Int.From_Integer (S) + Math_Int.From_Word32 (1))) * Base ** (...) [possible fix: loop invariant at line 527 should mention S]
lsc-bignum.adb:701:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:701:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:701:49: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:701:54: warning: assuming "=" always returns
lsc-bignum.adb:701:54: warning: no returning annotation available for "="
lsc-bignum.adb:702:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:702:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:702:43: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:702:48: warning: assuming "**" always returns
lsc-bignum.adb:702:48: warning: no returning annotation available for "**"
lsc-bignum.adb:703:14: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:703:14: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:703:49: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:703:59: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:703:59: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:703:64: warning: assuming "/" always returns
lsc-bignum.adb:703:64: warning: no returning annotation available for "/"
lsc-bignum.adb:704:22: warning: assuming "From_Word32" always returns
lsc-bignum.adb:704:22: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:704:39: warning: assuming "**" always returns
lsc-bignum.adb:704:39: warning: no returning annotation available for "**"
lsc-bignum.adb:704:51: warning: assuming "From_Word64" always returns
lsc-bignum.adb:704:51: warning: no returning annotation available for "From_Word64"
lsc-bignum.adb:704:68: warning: assuming "-" always returns
lsc-bignum.adb:704:68: warning: no returning annotation available for "-"
lsc-bignum.adb:705:24: warning: assuming "From_Integer" always returns
lsc-bignum.adb:705:24: warning: no returning annotation available for "From_Integer"
lsc-bignum.adb:705:42: warning: assuming "+" always returns
lsc-bignum.adb:705:42: warning: no returning annotation available for "+"
lsc-bignum.adb:705:52: warning: assuming "From_Word32" always returns
lsc-bignum.adb:705:52: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:705:71: warning: assuming "*" always returns
lsc-bignum.adb:705:71: warning: no returning annotation available for "*"
lsc-bignum.adb:706:18: warning: assuming "**" always returns
lsc-bignum.adb:706:18: warning: no returning annotation available for "**"
lsc-bignum.adb:706:24: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:706:29: warning: assuming "mod" always returns
lsc-bignum.adb:706:29: warning: no returning annotation available for "mod"
lsc-bignum.adb:707:13: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:707:13: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:707:43: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:708:22: info: range check proved (Z3: 2 VC)
lsc-bignum.adb:708:48: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:708:53: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:709:17: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:709:17: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:709:50: medium: overflow check might fail, cannot prove upper bound for Aux4_First + N * (L + 1) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit SPARK.Big_Integers]
lsc-bignum.adb:709:54: medium: overflow check might fail, cannot prove lower bound for N * (L + 1) [reason for check: result of multiplication must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit SPARK.Big_Integers]
lsc-bignum.adb:709:59: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:709:67: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:709:72: warning: assuming "=" always returns
lsc-bignum.adb:709:72: warning: no returning annotation available for "="
lsc-bignum.adb:710:17: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:710:17: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:710:47: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:710:52: warning: assuming "**" always returns
lsc-bignum.adb:710:52: warning: no returning annotation available for "**"
lsc-bignum.adb:710:58: medium: overflow check might fail, cannot prove upper bound for 2 * N [reason for check: result of multiplication must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit SPARK.Big_Integers]
lsc-bignum.adb:710:62: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:710:67: warning: assuming "*" always returns
lsc-bignum.adb:710:67: warning: no returning annotation available for "*"
lsc-bignum.adb:711:22: warning: assuming "**" always returns
lsc-bignum.adb:711:22: warning: no returning annotation available for "**"
lsc-bignum.adb:711:28: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:711:33: warning: assuming "mod" always returns
lsc-bignum.adb:711:33: warning: no returning annotation available for "mod"
lsc-bignum.adb:712:17: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.adb:712:17: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.adb:712:47: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:713:21: warning: assuming "From_Integer" always returns
lsc-bignum.adb:713:21: warning: no returning annotation available for "From_Integer"
lsc-bignum.adb:713:39: warning: assuming "<=" always returns
lsc-bignum.adb:713:39: warning: no returning annotation available for "<="
lsc-bignum.adb:714:21: warning: assuming "From_Word64" always returns
lsc-bignum.adb:714:21: warning: no returning annotation available for "From_Word64"
lsc-bignum.adb:714:38: warning: assuming "+" always returns
lsc-bignum.adb:714:38: warning: no returning annotation available for "+"
lsc-bignum.adb:714:48: warning: assuming "From_Word32" always returns
lsc-bignum.adb:714:48: warning: no returning annotation available for "From_Word32"
lsc-bignum.adb:715:39: info: overflow check proved (Z3: 2 VC)
lsc-bignum.adb:715:39: info: range check proved (Z3: 1 VC)
lsc-bignum.adb:722:07: medium: precondition might fail, cannot prove Num_Of_Big_Int (C, C_First, A_Last - A_First + 1) < Num_Of_Big_Int (M, M_First, A_Last - A_First + 1)
lsc-bignum.ads:45:55: warning: assuming "From_Word32" always returns
lsc-bignum.ads:45:55: warning: no returning annotation available for "From_Word32"
lsc-bignum.ads:45:72: warning: assuming "**" always returns
lsc-bignum.ads:45:72: warning: no returning annotation available for "**"
lsc-bignum.ads:63:07: info: justified that "A" might not be initialized in "Initialize"
lsc-bignum.ads:67:08: info: flow dependencies proved
lsc-bignum.ads:74:10: info: postcondition proved (Z3: 1 VC)
lsc-bignum.ads:74:19: info: range check proved (Z3: 2 VC)
lsc-bignum.ads:74:60: info: justified that "A" might not be initialized
lsc-bignum.ads:74:63: info: index check proved (Z3: 2 VC)
lsc-bignum.ads:83:08: info: flow dependencies proved
lsc-bignum.ads:90:18: medium: overflow check might fail, cannot prove upper bound for B_First + (A_Last - A_First) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: use "and then" instead of "and" in precondition]
lsc-bignum.ads:90:28: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:92:10: info: postcondition proved (Trivial: 2 VC; Z3: 2 VC)
lsc-bignum.ads:92:19: info: range check proved (Z3: 2 VC)
lsc-bignum.ads:93:42: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:93:51: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:94:20: info: index check proved (Z3: 2 VC)
lsc-bignum.ads:94:36: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:94:40: info: index check proved (Z3: 2 VC)
lsc-bignum.ads:94:40: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:95:46: medium: overflow check might fail, cannot prove upper bound for B_First + A_Last [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit SPARK.Big_Integers]
lsc-bignum.ads:95:55: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:96:20: info: index check proved (Z3: 2 VC)
lsc-bignum.ads:96:32: info: index check proved (Z3: 2 VC)
lsc-bignum.ads:104:07: info: initialization of "Carry" proved
lsc-bignum.ads:106:08: info: flow dependencies proved
lsc-bignum.ads:112:18: medium: overflow check might fail, cannot prove upper bound for B_First + (A_Last - A_First) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: use "and then" instead of "and" in precondition]
lsc-bignum.ads:112:28: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:115:10: info: postcondition proved (Z3: 1 VC)
lsc-bignum.ads:115:10: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.ads:115:10: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.ads:115:49: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:115:59: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:115:59: info: range check proved (Z3: 2 VC)
lsc-bignum.ads:115:64: warning: assuming "-" always returns
lsc-bignum.ads:115:64: warning: no returning annotation available for "-"
lsc-bignum.ads:116:10: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.ads:116:10: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.ads:116:45: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:116:55: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:116:55: info: range check proved (Z3: 2 VC)
lsc-bignum.ads:116:60: warning: assuming "=" always returns
lsc-bignum.ads:116:60: warning: no returning annotation available for "="
lsc-bignum.ads:117:10: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.ads:117:10: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.ads:117:45: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:117:55: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:117:55: info: range check proved (Z3: 2 VC)
lsc-bignum.ads:117:60: warning: assuming "-" always returns
lsc-bignum.ads:117:60: warning: no returning annotation available for "-"
lsc-bignum.ads:118:15: warning: assuming "**" always returns
lsc-bignum.ads:118:15: warning: no returning annotation available for "**"
lsc-bignum.ads:118:26: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:118:36: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:118:36: info: range check proved (Z3: 2 VC)
lsc-bignum.ads:118:41: warning: assuming "*" always returns
lsc-bignum.ads:118:41: warning: no returning annotation available for "*"
lsc-bignum.ads:118:43: warning: assuming "Num_Of_Boolean" always returns
lsc-bignum.ads:118:43: warning: no returning annotation available for "Num_Of_Boolean"
lsc-bignum.ads:132:18: medium: overflow check might fail, cannot prove upper bound for B_First + (A_Last - A_First) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: use "and then" instead of "and" in precondition]
lsc-bignum.ads:132:28: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:135:10: medium: postcondition might fail
lsc-bignum.ads:136:11: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.ads:136:11: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.ads:136:46: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:136:56: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:136:56: info: range check proved (Z3: 2 VC)
lsc-bignum.ads:136:61: warning: assuming "<" always returns
lsc-bignum.ads:136:61: warning: no returning annotation available for "<"
lsc-bignum.ads:137:11: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.ads:137:11: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.ads:137:46: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:137:56: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:137:56: info: range check proved (Z3: 2 VC)
lsc-bignum.ads:140:07: info: initialization of "A" proved
lsc-bignum.ads:151:08: info: flow dependencies proved
lsc-bignum.ads:158:18: medium: overflow check might fail, cannot prove upper bound for B_First + (A_Last - A_First) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit SPARK.Big_Integers]
lsc-bignum.ads:158:28: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:160:18: medium: overflow check might fail, cannot prove upper bound for C_First + (A_Last - A_First) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit SPARK.Big_Integers]
lsc-bignum.ads:160:28: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:162:18: medium: overflow check might fail, cannot prove upper bound for M_First + (A_Last - A_First) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit SPARK.Big_Integers]
lsc-bignum.ads:162:28: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:163:10: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.ads:163:10: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.ads:163:45: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:163:55: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:163:55: info: range check proved (Z3: 2 VC)
lsc-bignum.ads:163:60: warning: assuming "<" always returns
lsc-bignum.ads:163:60: warning: no returning annotation available for "<"
lsc-bignum.ads:164:10: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.ads:164:10: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.ads:164:45: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:164:55: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:164:55: info: range check proved (Z3: 2 VC)
lsc-bignum.ads:165:18: warning: assuming "From_Word32" always returns
lsc-bignum.ads:165:18: warning: no returning annotation available for "From_Word32"
lsc-bignum.ads:165:35: warning: assuming "<" always returns
lsc-bignum.ads:165:35: warning: no returning annotation available for "<"
lsc-bignum.ads:166:10: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.ads:166:10: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.ads:166:45: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:166:55: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:166:55: info: range check proved (Z3: 2 VC)
lsc-bignum.ads:167:25: info: index check proved (Z3: 2 VC)
lsc-bignum.ads:169:10: medium: postcondition might fail [possible fix: you should consider adding a postcondition to function Num_Of_Big_Int and function Inverse and operator "*" and operator "mod" and operator "**" and operator "=" or turning them into expression functions in their unit spec]
lsc-bignum.ads:169:10: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.ads:169:10: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.ads:169:45: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:169:55: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:169:55: info: range check proved (Z3: 2 VC)
lsc-bignum.ads:169:60: warning: assuming "=" always returns
lsc-bignum.ads:169:60: warning: no returning annotation available for "="
lsc-bignum.ads:170:11: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.ads:170:11: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.ads:170:46: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:170:56: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:170:56: info: range check proved (Z3: 2 VC)
lsc-bignum.ads:170:61: warning: assuming "*" always returns
lsc-bignum.ads:170:61: warning: no returning annotation available for "*"
lsc-bignum.ads:171:11: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.ads:171:11: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.ads:171:46: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:171:56: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:171:56: info: range check proved (Z3: 2 VC)
lsc-bignum.ads:171:61: warning: assuming "*" always returns
lsc-bignum.ads:171:61: warning: no returning annotation available for "*"
lsc-bignum.ads:172:11: warning: assuming "Inverse" always returns
lsc-bignum.ads:172:11: warning: no returning annotation available for "Inverse"
lsc-bignum.ads:172:20: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.ads:172:20: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.ads:172:55: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:172:65: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:172:65: info: range check proved (Z3: 2 VC)
lsc-bignum.ads:173:19: warning: assuming "**" always returns
lsc-bignum.ads:173:19: warning: no returning annotation available for "**"
lsc-bignum.ads:173:30: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:173:40: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:173:40: info: range check proved (Z3: 2 VC)
lsc-bignum.ads:173:46: warning: assuming "mod" always returns
lsc-bignum.ads:173:46: warning: no returning annotation available for "mod"
lsc-bignum.ads:174:10: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.ads:174:10: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.ads:174:45: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:174:55: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:174:55: info: range check proved (Z3: 2 VC)
lsc-bignum.ads:177:07: info: initialization of "A" proved
lsc-bignum.ads:188:07: info: initialization of "Aux1" proved
lsc-bignum.ads:190:07: info: initialization of "Aux2" proved
lsc-bignum.ads:192:07: info: initialization of "Aux3" proved
lsc-bignum.ads:194:07: info: initialization of "Aux4" proved
lsc-bignum.ads:200:08: info: flow dependencies proved
lsc-bignum.ads:224:18: medium: overflow check might fail, cannot prove upper bound for X_First + (A_Last - A_First) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit SPARK.Big_Integers]
lsc-bignum.ads:224:28: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:229:18: medium: overflow check might fail, cannot prove upper bound for M_First + (A_Last - A_First) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit SPARK.Big_Integers]
lsc-bignum.ads:229:28: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:231:21: medium: overflow check might fail, cannot prove upper bound for Aux1_First + (A_Last - A_First) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit SPARK.Big_Integers]
lsc-bignum.ads:231:31: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:233:21: medium: overflow check might fail, cannot prove upper bound for Aux2_First + (A_Last - A_First) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit SPARK.Big_Integers]
lsc-bignum.ads:233:31: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:235:21: medium: overflow check might fail, cannot prove upper bound for Aux3_First + (A_Last - A_First) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit SPARK.Big_Integers]
lsc-bignum.ads:235:31: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:237:21: medium: overflow check might fail, cannot prove upper bound for Aux4_First + (2 ** K * (A_Last - A_First + 1) - 1) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit SPARK.Big_Integers]
lsc-bignum.ads:237:26: medium: overflow check might fail, cannot prove upper bound for 2 ** K [reason for check: result of exponentiation must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit SPARK.Big_Integers]
lsc-bignum.ads:237:31: medium: overflow check might fail, cannot prove lower bound for 2 ** K * (A_Last - A_First + 1) [reason for check: result of multiplication must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit SPARK.Big_Integers]
lsc-bignum.ads:237:41: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:237:51: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:237:56: medium: overflow check might fail, cannot prove lower bound for 2 ** K * (A_Last - A_First + 1) - 1 [reason for check: result of subtraction must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit SPARK.Big_Integers]
lsc-bignum.ads:240:18: medium: overflow check might fail, cannot prove upper bound for R_First + (A_Last - A_First) [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit SPARK.Big_Integers]
lsc-bignum.ads:240:28: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:241:10: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.ads:241:10: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.ads:241:45: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:241:55: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:241:55: info: range check proved (Z3: 2 VC)
lsc-bignum.ads:241:60: warning: assuming "=" always returns
lsc-bignum.ads:241:60: warning: no returning annotation available for "="
lsc-bignum.ads:242:15: warning: assuming "**" always returns
lsc-bignum.ads:242:15: warning: no returning annotation available for "**"
lsc-bignum.ads:242:27: warning: assuming "From_Integer" always returns
lsc-bignum.ads:242:27: warning: no returning annotation available for "From_Integer"
lsc-bignum.ads:242:45: warning: assuming "*" always returns
lsc-bignum.ads:242:45: warning: no returning annotation available for "*"
lsc-bignum.ads:243:20: warning: assuming "From_Integer" always returns
lsc-bignum.ads:243:20: warning: no returning annotation available for "From_Integer"
lsc-bignum.ads:243:42: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:243:52: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:243:58: warning: assuming "mod" always returns
lsc-bignum.ads:243:58: warning: no returning annotation available for "mod"
lsc-bignum.ads:244:10: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.ads:244:10: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.ads:244:45: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:244:55: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:244:55: info: range check proved (Z3: 2 VC)
lsc-bignum.ads:245:18: warning: assuming "From_Word32" always returns
lsc-bignum.ads:245:18: warning: no returning annotation available for "From_Word32"
lsc-bignum.ads:245:35: warning: assuming "<" always returns
lsc-bignum.ads:245:35: warning: no returning annotation available for "<"
lsc-bignum.ads:246:10: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.ads:246:10: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.ads:246:45: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:246:55: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:246:55: info: range check proved (Z3: 2 VC)
lsc-bignum.ads:247:25: info: index check proved (Z3: 2 VC)
lsc-bignum.ads:249:10: medium: postcondition might fail [possible fix: you should consider adding a postcondition to function Num_Of_Big_Int and operator "mod" and operator "**" and operator "=" or turning them into expression functions in their unit spec]
lsc-bignum.ads:249:10: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.ads:249:10: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.ads:249:45: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:249:55: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:249:55: info: range check proved (Z3: 2 VC)
lsc-bignum.ads:249:60: warning: assuming "=" always returns
lsc-bignum.ads:249:60: warning: no returning annotation available for "="
lsc-bignum.ads:250:10: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.ads:250:10: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.ads:250:45: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:250:55: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:250:55: info: range check proved (Z3: 2 VC)
lsc-bignum.ads:250:60: warning: assuming "**" always returns
lsc-bignum.ads:250:60: warning: no returning annotation available for "**"
lsc-bignum.ads:251:10: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.ads:251:10: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.ads:251:45: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:251:55: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:251:55: info: range check proved (Z3: 2 VC)
lsc-bignum.ads:251:60: warning: assuming "mod" always returns
lsc-bignum.ads:251:60: warning: no returning annotation available for "mod"
lsc-bignum.ads:252:10: warning: assuming "Num_Of_Big_Int" always returns
lsc-bignum.ads:252:10: warning: no returning annotation available for "Num_Of_Big_Int"
lsc-bignum.ads:252:45: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:252:55: info: overflow check proved (Z3: 2 VC)
lsc-bignum.ads:252:55: info: range check proved (Z3: 2 VC)
