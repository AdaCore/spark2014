counterexamples.adb:1:11: warning: subprogram "Counterexamples" has no effect
counterexamples.adb:17:14: warning: subprogram "Bad_1" has no effect
counterexamples.adb:21:22: medium: assertion might fail (e.g. when X = (First => null, Second => new Integer'(0)))
counterexamples.adb:21:30: medium: pointer dereference check might fail (e.g. when X = (First => null, Second => new Integer'(0)))
counterexamples.adb:22:22: medium: assertion might fail (e.g. when X = (First => null, Second => new Integer'(0)))
counterexamples.adb:22:31: info: pointer dereference check proved (CVC5: 1 VC)
counterexamples.adb:25:14: warning: subprogram "Bad_2" has no effect
counterexamples.adb:26:07: medium: memory leak might occur at end of scope
counterexamples.adb:28:22: medium: assertion might fail (e.g. when C = 11 and Y.all = 10)
counterexamples.adb:28:24: info: pointer dereference check proved (CVC5: 1 VC)
counterexamples.adb:31:14: warning: subprogram "Bad_3" has no effect
counterexamples.adb:32:07: medium: memory leak might occur at end of scope
counterexamples.adb:34:22: medium: assertion might fail
counterexamples.adb:34:24: info: pointer dereference check proved (CVC5: 1 VC)
counterexamples.adb:34:27: info: range check proved (CVC5: 2 VC)
counterexamples.adb:37:14: warning: subprogram "Bad_4" has no effect
counterexamples.adb:38:07: info: absence of memory leak at end of scope proved (CVC5: 1 VC)
counterexamples.adb:39:07: info: absence of memory leak at end of scope proved (CVC5: 1 VC)
counterexamples.adb:41:22: info: pointer dereference check proved (CVC5: 1 VC)
counterexamples.adb:41:22: medium: assertion might fail
counterexamples.adb:41:25: info: index check proved (CVC5: 2 VC)
counterexamples.adb:41:29: info: index check proved (CVC5: 2 VC)
counterexamples.adb:44:14: warning: subprogram "Bad_5" has no effect
counterexamples.adb:45:07: info: absence of memory leak at end of scope proved (CVC5: 1 VC)
counterexamples.adb:46:07: medium: memory leak might occur at end of scope
counterexamples.adb:48:22: info: pointer dereference check proved (CVC5: 1 VC)
counterexamples.adb:48:22: medium: assertion might fail
counterexamples.adb:48:25: info: index check proved (CVC5: 2 VC)
counterexamples.adb:48:28: info: pointer dereference check proved (CVC5: 1 VC)
counterexamples.adb:48:31: info: range check proved (CVC5: 2 VC)
counterexamples.adb:51:14: warning: subprogram "Bad_6" has no effect
counterexamples.adb:52:07: info: absence of memory leak at end of scope proved (CVC5: 1 VC)
counterexamples.adb:52:45: info: range check proved (CVC5: 2 VC)
counterexamples.adb:52:48: info: range check proved (CVC5: 2 VC)
counterexamples.adb:54:22: medium: assertion might fail
counterexamples.adb:54:29: info: pointer dereference check proved (CVC5: 1 VC)
counterexamples.adb:55:22: info: pointer dereference check proved (CVC5: 1 VC)
counterexamples.adb:55:22: medium: assertion might fail
counterexamples.adb:55:25: info: index check proved (CVC5: 2 VC)
counterexamples.adb:58:04: info: absence of memory leak at end of scope proved (CVC5: 1 VC)
counterexamples.adb:58:04: info: initialization of "X" proved
counterexamples.adb:61:04: medium: precondition might fail (e.g. when X = (First => null, Second => null))
