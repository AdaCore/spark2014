(* this is a prelude for Alt-Ergo*)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

type unit1

type 'a ref

logic mk_ref : 'a -> 'a ref

logic contents : 'a ref -> 'a

axiom contents_def : (forall u:'a. (contents(mk_ref(u)) = u))

axiom ref_inversion : (forall u:'a ref. (u = mk_ref(contents(u))))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function xorb(x: bool, y: bool) : bool = match_bool(y, match_bool(x, false,
  true), match_bool(x, true, false))

function notb(x: bool) : bool = match_bool(x, false, true)

function implb(x: bool, y: bool) : bool = match_bool(y, true, match_bool(x,
  false, true))

logic us__ignore : 'a -> unit

type us_character

type us_private

type us_type_of_heap

type 'a map

type 'a t

logic mk_t : 'a map, int, int, int -> 'a t

logic elts : 'a t -> 'a map

axiom elts_def :
  (forall u:'a map. forall u1:int. forall u2:int. forall u3:int.
  (elts(mk_t(u, u1, u2, u3)) = u))

logic offset : 'a t -> int

axiom offset_def :
  (forall u:'a map. forall u1:int. forall u2:int. forall u3:int.
  (offset(mk_t(u, u1, u2, u3)) = u1))

logic first : 'a t -> int

axiom first_def :
  (forall u:'a map. forall u1:int. forall u2:int. forall u3:int.
  (first(mk_t(u, u1, u2, u3)) = u2))

logic last : 'a t -> int

axiom last_def :
  (forall u:'a map. forall u1:int. forall u2:int. forall u3:int.
  (last(mk_t(u, u1, u2, u3)) = u3))

axiom t_inversion :
  (forall u:'a t. (u = mk_t(elts(u), offset(u), first(u), last(u))))

type range_type

type us_string

logic mk___string : us_character map, int, range_type -> us_string

logic elts1 : us_string -> us_character map

axiom elts_def1 :
  (forall u:us_character map. forall u1:int. forall u2:range_type.
  (elts1(mk___string(u, u1, u2)) = u))

logic offset1 : us_string -> int

axiom offset_def1 :
  (forall u:us_character map. forall u1:int. forall u2:range_type.
  (offset1(mk___string(u, u1, u2)) = u1))

logic rt : us_string -> range_type

axiom rt_def :
  (forall u:us_character map. forall u1:int. forall u2:range_type.
  (rt(mk___string(u, u1, u2)) = u2))

axiom us_string_inversion :
  (forall u:us_string. (u = mk___string(elts1(u), offset1(u), rt(u))))

logic abs : int -> int

axiom abs_def :
  (forall x:int. (((0 <= x) -> (abs(x) = x)) and ((not (0 <= x)) ->
  (abs(x) = (-x)))))

axiom Abs_le :
  (forall x:int. forall y:int. ((abs(x) <= y) <-> (((-y) <= x) and
  (x <= y))))

axiom Abs_pos : (forall x:int. (0 <= abs(x)))

logic power : int, int -> int

axiom Power_0 : (forall x:int. (power(x, 0) = 1))

axiom Power_s :
  (forall x:int. forall n:int. ((0 <= n) -> (power(x,
  (n + 1)) = (x * power(x, n)))))

axiom Power_s_alt :
  (forall x:int. forall n:int. ((0 <  n) -> (power(x, n) = (x * power(x,
  (n - 1))))))

axiom Power_1 : (forall x:int. (power(x, 1) = x))

axiom Power_sum :
  (forall x:int. forall n:int. forall m:int. ((0 <= n) -> ((0 <= m) ->
  (power(x, (n + m)) = (power(x, n) * power(x, m))))))

axiom Power_mult :
  (forall x:int. forall n:int. forall m:int. ((0 <= n) -> ((0 <= m) ->
  (power(x, (n * m)) = power(power(x, n), m)))))

axiom Power_mult2 :
  (forall x:int. forall y:int. forall n:int. ((0 <= n) -> (power((x * y),
  n) = (power(x, n) * power(y, n)))))

logic min : int, int -> int

logic max : int, int -> int

axiom Max_is_ge :
  (forall x:int. forall y:int. ((x <= max(x, y)) and (y <= max(x, y))))

axiom Max_is_some :
  (forall x:int. forall y:int. ((max(x, y) = x) or (max(x, y) = y)))

axiom Min_is_le :
  (forall x:int. forall y:int. ((min(x, y) <= x) and (min(x, y) <= y)))

axiom Min_is_some :
  (forall x:int. forall y:int. ((min(x, y) = x) or (min(x, y) = y)))

axiom Max_x : (forall x:int. forall y:int. ((y <= x) -> (max(x, y) = x)))

axiom Max_y : (forall x:int. forall y:int. ((x <= y) -> (max(x, y) = y)))

axiom Min_x : (forall x:int. forall y:int. ((x <= y) -> (min(x, y) = x)))

axiom Min_y : (forall x:int. forall y:int. ((y <= x) -> (min(x, y) = y)))

axiom Max_sym :
  (forall x:int. forall y:int. ((y <= x) -> (max(x, y) = max(y, x))))

axiom Min_sym :
  (forall x:int. forall y:int. ((y <= x) -> (min(x, y) = min(y, x))))

logic div : int, int -> int

logic mod : int, int -> int

axiom Div_mod :
  (forall x:int. forall y:int. ((not (y = 0)) -> (x = ((y * div(x,
  y)) + mod(x, y)))))

axiom Div_bound :
  (forall x:int. forall y:int. (((0 <= x) and (0 <  y)) -> ((0 <= div(x,
  y)) and (div(x, y) <= x))))

axiom Mod_bound :
  (forall x:int. forall y:int. ((not (y = 0)) -> (((-abs(y)) <  mod(x,
  y)) and (mod(x, y) <  abs(y)))))

axiom Div_sign_pos :
  (forall x:int. forall y:int. (((0 <= x) and (0 <  y)) -> (0 <= div(x, y))))

axiom Div_sign_neg :
  (forall x:int. forall y:int. (((x <= 0) and (0 <  y)) -> (div(x, y) <= 0)))

axiom Mod_sign_pos :
  (forall x:int. forall y:int. (((0 <= x) and (not (y = 0))) -> (0 <= mod(x,
  y))))

axiom Mod_sign_neg :
  (forall x:int. forall y:int. (((x <= 0) and (not (y = 0))) -> (mod(x,
  y) <= 0)))

axiom Rounds_toward_zero :
  (forall x:int. forall y:int. ((not (y = 0)) -> (abs((div(x,
  y) * y)) <= abs(x))))

axiom Div_1 : (forall x:int. (div(x, 1) = x))

axiom Mod_1 : (forall x:int. (mod(x, 1) = 0))

axiom Div_inf :
  (forall x:int. forall y:int. (((0 <= x) and (x <  y)) -> (div(x, y) = 0)))

axiom Mod_inf :
  (forall x:int. forall y:int. (((0 <= x) and (x <  y)) -> (mod(x, y) = x)))

axiom Div_mult :
  (forall x:int. forall y:int. forall z:int [div(((x * y) + z), x)].
  (((0 <  x) and ((0 <= y) and (0 <= z))) -> (div(((x * y) + z),
  x) = (y + div(z, x)))))

axiom Mod_mult :
  (forall x:int. forall y:int. forall z:int [mod(((x * y) + z), x)].
  (((0 <  x) and ((0 <= y) and (0 <= z))) -> (mod(((x * y) + z), x) = mod(z,
  x))))

axiom Div_mod1 :
  (forall x:int. forall y:int. ((not (y = 0)) ->
  (x = ((y * (x / y)) + (x % y)))))

axiom Div_bound1 :
  (forall x:int. forall y:int. (((0 <= x) and (0 <  y)) ->
  ((0 <= (x / y)) and ((x / y) <= x))))

axiom Mod_bound1 :
  (forall x:int. forall y:int. ((not (y = 0)) -> ((0 <= (x % y)) and
  ((x % y) <  abs(y)))))

axiom Mod_11 : (forall x:int. ((x % 1) = 0))

axiom Div_11 : (forall x:int. ((x / 1) = x))

axiom Div_inf1 :
  (forall x:int. forall y:int. (((0 <= x) and (x <  y)) -> ((x / y) = 0)))

axiom Div_inf_neg :
  (forall x:int. forall y:int. (((0 <  x) and (x <= y)) ->
  (((-x) / y) = (-1))))

axiom Mod_0 : (forall y:int. ((not (y = 0)) -> ((0 % y) = 0)))

axiom Div_1_left : (forall y:int. ((1 <  y) -> ((1 / y) = 0)))

axiom Div_minus1_left : (forall y:int. ((1 <  y) -> (((-1) / y) = (-1))))

axiom Mod_1_left : (forall y:int. ((1 <  y) -> ((1 % y) = 1)))

axiom Mod_minus1_left : (forall y:int. ((1 <  y) -> (((-1) % y) = (y - 1))))

logic bool_eq : int, int -> bool

logic bool_ne : int, int -> bool

logic bool_lt : int, int -> bool

logic bool_le : int, int -> bool

logic bool_gt : int, int -> bool

logic bool_ge : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq(x, y) = true) <-> (x = y))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne(x, y) = true) <-> (not (x = y)))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) <-> (x <  y))))

axiom Bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le(x, y) = true) <-> (x <= y))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt(x, y) = true) <-> (y <  x))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge(x, y) = true) <-> (y <= x))))

type t70b

logic attr__ATTRIBUTE_FIRST12 : int

logic attr__ATTRIBUTE_LAST12 : int

logic attr__ATTRIBUTE_MODULUS22 : int

logic attr__ATTRIBUTE_IMAGE22 : int -> us_string

logic attr__ATTRIBUTE_VALUE__pre_check22 : us_string -> prop

logic attr__ATTRIBUTE_VALUE22 : us_string -> int

predicate in_range22(x: int) = ((attr__ATTRIBUTE_FIRST12 <= x) and
  (x <= attr__ATTRIBUTE_LAST12))

logic to_int23 : t70b -> int

logic of_int23 : int -> t70b

predicate eq22(x: t70b, y: t70b) = (to_int23(x) = to_int23(y))

axiom range_axiom23 : (forall x:t70b. in_range22(to_int23(x)))

axiom coerce_axiom22 :
  (forall x:int [to_int23(of_int23(x))| in_range22(x), of_int23(x)].
  (in_range22(x) -> (to_int23(of_int23(x)) = x)))

axiom unicity_axiom22 :
  (forall x:t70b. forall y:t70b [to_int23(x), to_int23(y)].
  ((to_int23(x) = to_int23(y)) -> (x = y)))

logic dummy26 : t70b

type t49b

logic attr__ATTRIBUTE_FIRST13 : int

logic attr__ATTRIBUTE_LAST13 : int

logic attr__ATTRIBUTE_MODULUS23 : int

logic attr__ATTRIBUTE_IMAGE23 : int -> us_string

logic attr__ATTRIBUTE_VALUE__pre_check23 : us_string -> prop

logic attr__ATTRIBUTE_VALUE23 : us_string -> int

predicate in_range23(x: int) = ((attr__ATTRIBUTE_FIRST13 <= x) and
  (x <= attr__ATTRIBUTE_LAST13))

logic to_int24 : t49b -> int

logic of_int24 : int -> t49b

predicate eq23(x: t49b, y: t49b) = (to_int24(x) = to_int24(y))

axiom range_axiom24 : (forall x:t49b. in_range23(to_int24(x)))

axiom coerce_axiom23 :
  (forall x:int [to_int24(of_int24(x))| in_range23(x), of_int24(x)].
  (in_range23(x) -> (to_int24(of_int24(x)) = x)))

axiom unicity_axiom23 :
  (forall x:t49b. forall y:t49b [to_int24(x), to_int24(y)].
  ((to_int24(x) = to_int24(y)) -> (x = y)))

logic dummy27 : t49b

type integer

logic attr__ATTRIBUTE_MODULUS : int

logic attr__ATTRIBUTE_IMAGE : int -> us_string

logic attr__ATTRIBUTE_VALUE__pre_check : us_string -> prop

logic attr__ATTRIBUTE_VALUE : us_string -> int

predicate in_range(x: int) = (((-2147483648) <= x) and (x <= 2147483647))

logic to_int : integer -> int

logic of_int : int -> integer

predicate eq(x: integer, y: integer) = (to_int(x) = to_int(y))

axiom range_axiom : (forall x:integer. in_range(to_int(x)))

axiom coerce_axiom :
  (forall x:int [to_int(of_int(x))| in_range(x), of_int(x)]. (in_range(x) ->
  (to_int(of_int(x)) = x)))

axiom unicity_axiom :
  (forall x:integer. forall y:integer [to_int(x), to_int(y)].
  ((to_int(x) = to_int(y)) -> (x = y)))

logic dummy : integer

logic k_1 : integer

type t61b

logic attr__ATTRIBUTE_FIRST14 : int

logic attr__ATTRIBUTE_LAST14 : int

logic attr__ATTRIBUTE_MODULUS24 : int

logic attr__ATTRIBUTE_IMAGE24 : int -> us_string

logic attr__ATTRIBUTE_VALUE__pre_check24 : us_string -> prop

logic attr__ATTRIBUTE_VALUE24 : us_string -> int

predicate in_range24(x: int) = ((attr__ATTRIBUTE_FIRST14 <= x) and
  (x <= attr__ATTRIBUTE_LAST14))

logic to_int25 : t61b -> int

logic of_int25 : int -> t61b

predicate eq24(x: t61b, y: t61b) = (to_int25(x) = to_int25(y))

axiom range_axiom25 : (forall x:t61b. in_range24(to_int25(x)))

axiom coerce_axiom24 :
  (forall x:int [to_int25(of_int25(x))| in_range24(x), of_int25(x)].
  (in_range24(x) -> (to_int25(of_int25(x)) = x)))

axiom unicity_axiom24 :
  (forall x:t61b. forall y:t61b [to_int25(x), to_int25(y)].
  ((to_int25(x) = to_int25(y)) -> (x = y)))

logic dummy28 : t61b

type tS41bP1

logic attr__ATTRIBUTE_FIRST15 : int

logic attr__ATTRIBUTE_LAST15 : int

logic attr__ATTRIBUTE_MODULUS25 : int

logic attr__ATTRIBUTE_IMAGE25 : int -> us_string

logic attr__ATTRIBUTE_VALUE__pre_check25 : us_string -> prop

logic attr__ATTRIBUTE_VALUE25 : us_string -> int

predicate in_range25(x: int) = ((attr__ATTRIBUTE_FIRST15 <= x) and
  (x <= attr__ATTRIBUTE_LAST15))

logic to_int26 : tS41bP1 -> int

logic of_int26 : int -> tS41bP1

predicate eq25(x: tS41bP1, y: tS41bP1) = (to_int26(x) = to_int26(y))

axiom range_axiom26 : (forall x:tS41bP1. in_range25(to_int26(x)))

axiom coerce_axiom25 :
  (forall x:int [to_int26(of_int26(x))| in_range25(x), of_int26(x)].
  (in_range25(x) -> (to_int26(of_int26(x)) = x)))

axiom unicity_axiom25 :
  (forall x:tS41bP1. forall y:tS41bP1 [to_int26(x), to_int26(y)].
  ((to_int26(x) = to_int26(y)) -> (x = y)))

logic dummy29 : tS41bP1

logic get : 'a map, int -> 'a

logic set : 'a map, int, 'a -> 'a map

axiom Select_eq :
  (forall m:'a map.
  (forall i2:int. forall j1:int.
  (forall a:'a [get(set(m, i2, a), j1)]. ((i2 = j1) -> (get(set(m, i2, a),
  j1) = a)))))

axiom Select_neq :
  (forall m:'a map.
  (forall i2:int. forall j1:int.
  (forall a:'a [get(set(m, i2, a), j1)| set(m, i2, a), get(m, j1)].
  ((not (i2 = j1)) -> (get(set(m, i2, a), j1) = get(m, j1))))))

logic attr__ATTRIBUTE_LENGTH : 'a t -> int

axiom attr__ATTRIBUTE_LENGTH_def7 :
  (forall x:'a t. (((first(x) <= last(x)) ->
  (attr__ATTRIBUTE_LENGTH(x) = ((last(x) - first(x)) + 1))) and
  ((not (first(x) <= last(x))) -> (attr__ATTRIBUTE_LENGTH(x) = 0))))

logic bool_eq1 : 'a t, 'a t -> bool

axiom T__ada_array___equal_def :
  (forall a:'a map. forall a1:int. forall a2:int. forall a3:int.
  (forall b:'a map. forall b1:int. forall b2:int. forall b3:int
  [bool_eq1(mk_t(a, a1, a2, a3), mk_t(b, b1, b2, b3))].
  ((((attr__ATTRIBUTE_LENGTH(mk_t(a, a1, a2,
  a3)) = attr__ATTRIBUTE_LENGTH(mk_t(b, b1, b2, b3))) and
  (forall i2:int [get(elts(mk_t(a, a1, a2, a3)), ((i2 + offset(mk_t(a, a1,
  a2, a3))) - first(mk_t(a, a1, a2, a3))))]. (((a2 <= i2) and (i2 <= a3)) ->
  (get(a, ((i2 + a1) - a2)) = get(b, ((((b2 - a2) + i2) + b1) - b2)))))) ->
  (bool_eq1(mk_t(a, a1, a2, a3), mk_t(b, b1, b2, b3)) = true)) and
  ((bool_eq1(mk_t(a, a1, a2, a3), mk_t(b, b1, b2, b3)) = true) ->
  ((attr__ATTRIBUTE_LENGTH(mk_t(a, a1, a2,
  a3)) = attr__ATTRIBUTE_LENGTH(mk_t(b, b1, b2, b3))) and
  (forall i2:int [get(elts(mk_t(a, a1, a2, a3)), ((i2 + offset(mk_t(a, a1,
  a2, a3))) - first(mk_t(a, a1, a2, a3))))]. (((a2 <= i2) and (i2 <= a3)) ->
  (get(a, ((i2 + a1) - a2)) = get(b, ((((b2 - a2) + i2) + b1) - b2))))))))))

type range_type2

logic first2 : range_type2 -> integer

logic last2 : range_type2 -> integer

logic mk1 : int, int -> range_type2

axiom range_axiom27 :
  (forall a:range_type2. ((to_int(first2(a)) <= to_int(last2(a))) ->
  ((((-2147483648) <= to_int(first2(a))) and
  (to_int(first2(a)) <= 2147483647)) and
  (((-2147483648) <= to_int(last2(a))) and
  (to_int(last2(a)) <= 2147483647)))))

type arr

logic mk_arr : integer map, int, range_type2 -> arr

logic elts6 : arr -> integer map

axiom elts_def9 :
  (forall u:integer map. forall u1:int. forall u2:range_type2.
  (elts6(mk_arr(u, u1, u2)) = u))

logic offset6 : arr -> int

axiom offset_def9 :
  (forall u:integer map. forall u1:int. forall u2:range_type2.
  (offset6(mk_arr(u, u1, u2)) = u1))

logic rt2 : arr -> range_type2

axiom rt_def4 :
  (forall u:integer map. forall u1:int. forall u2:range_type2. (rt2(mk_arr(u,
  u1, u2)) = u2))

axiom arr_inversion :
  (forall u:arr. (u = mk_arr(elts6(u), offset6(u), rt2(u))))

function to_array4(a: arr) : integer t = mk_t(elts6(a), offset6(a),
  to_int(first2(rt2(a))), to_int(last2(rt2(a))))

function of_array4(a: integer t) : arr = mk_arr(elts(a), offset(a),
  mk1(first(a), last(a)))

logic dummy30 : arr

type t39

logic k_2 : integer

type tS39bP1

logic attr__ATTRIBUTE_FIRST16 : int

logic attr__ATTRIBUTE_LAST16 : int

logic attr__ATTRIBUTE_MODULUS26 : int

logic attr__ATTRIBUTE_IMAGE26 : int -> us_string

logic attr__ATTRIBUTE_VALUE__pre_check26 : us_string -> prop

logic attr__ATTRIBUTE_VALUE26 : us_string -> int

predicate in_range26(x: int) = ((attr__ATTRIBUTE_FIRST16 <= x) and
  (x <= attr__ATTRIBUTE_LAST16))

logic to_int27 : tS39bP1 -> int

logic of_int27 : int -> tS39bP1

predicate eq26(x: tS39bP1, y: tS39bP1) = (to_int27(x) = to_int27(y))

axiom range_axiom28 : (forall x:tS39bP1. in_range26(to_int27(x)))

axiom coerce_axiom26 :
  (forall x:int [to_int27(of_int27(x))| in_range26(x), of_int27(x)].
  (in_range26(x) -> (to_int27(of_int27(x)) = x)))

axiom unicity_axiom26 :
  (forall x:tS39bP1. forall y:tS39bP1 [to_int27(x), to_int27(y)].
  ((to_int27(x) = to_int27(y)) -> (x = y)))

logic dummy31 : tS39bP1

type t77b

logic attr__ATTRIBUTE_FIRST17 : int

logic attr__ATTRIBUTE_LAST17 : int

logic attr__ATTRIBUTE_MODULUS27 : int

logic attr__ATTRIBUTE_IMAGE27 : int -> us_string

logic attr__ATTRIBUTE_VALUE__pre_check27 : us_string -> prop

logic attr__ATTRIBUTE_VALUE27 : us_string -> int

predicate in_range27(x: int) = ((attr__ATTRIBUTE_FIRST17 <= x) and
  (x <= attr__ATTRIBUTE_LAST17))

logic to_int28 : t77b -> int

logic of_int28 : int -> t77b

predicate eq27(x: t77b, y: t77b) = (to_int28(x) = to_int28(y))

axiom range_axiom29 : (forall x:t77b. in_range27(to_int28(x)))

axiom coerce_axiom27 :
  (forall x:int [to_int28(of_int28(x))| in_range27(x), of_int28(x)].
  (in_range27(x) -> (to_int28(of_int28(x)) = x)))

axiom unicity_axiom27 :
  (forall x:t77b. forall y:t77b [to_int28(x), to_int28(y)].
  ((to_int28(x) = to_int28(y)) -> (x = y)))

logic dummy32 : t77b

type t72b

logic attr__ATTRIBUTE_FIRST18 : int

logic attr__ATTRIBUTE_LAST18 : int

logic attr__ATTRIBUTE_MODULUS28 : int

logic attr__ATTRIBUTE_IMAGE28 : int -> us_string

logic attr__ATTRIBUTE_VALUE__pre_check28 : us_string -> prop

logic attr__ATTRIBUTE_VALUE28 : us_string -> int

predicate in_range28(x: int) = ((attr__ATTRIBUTE_FIRST18 <= x) and
  (x <= attr__ATTRIBUTE_LAST18))

logic to_int29 : t72b -> int

logic of_int29 : int -> t72b

predicate eq28(x: t72b, y: t72b) = (to_int29(x) = to_int29(y))

axiom range_axiom30 : (forall x:t72b. in_range28(to_int29(x)))

axiom coerce_axiom28 :
  (forall x:int [to_int29(of_int29(x))| in_range28(x), of_int29(x)].
  (in_range28(x) -> (to_int29(of_int29(x)) = x)))

axiom unicity_axiom28 :
  (forall x:t72b. forall y:t72b [to_int29(x), to_int29(y)].
  ((to_int29(x) = to_int29(y)) -> (x = y)))

logic dummy33 : t72b

type t51b

logic attr__ATTRIBUTE_FIRST19 : int

logic attr__ATTRIBUTE_LAST19 : int

logic attr__ATTRIBUTE_MODULUS29 : int

logic attr__ATTRIBUTE_IMAGE29 : int -> us_string

logic attr__ATTRIBUTE_VALUE__pre_check29 : us_string -> prop

logic attr__ATTRIBUTE_VALUE29 : us_string -> int

predicate in_range29(x: int) = ((attr__ATTRIBUTE_FIRST19 <= x) and
  (x <= attr__ATTRIBUTE_LAST19))

logic to_int30 : t51b -> int

logic of_int30 : int -> t51b

predicate eq29(x: t51b, y: t51b) = (to_int30(x) = to_int30(y))

axiom range_axiom31 : (forall x:t51b. in_range29(to_int30(x)))

axiom coerce_axiom29 :
  (forall x:int [to_int30(of_int30(x))| in_range29(x), of_int30(x)].
  (in_range29(x) -> (to_int30(of_int30(x)) = x)))

axiom unicity_axiom29 :
  (forall x:t51b. forall y:t51b [to_int30(x), to_int30(y)].
  ((to_int30(x) = to_int30(y)) -> (x = y)))

logic dummy34 : t51b

type t40

type tS37bP1

logic attr__ATTRIBUTE_FIRST20 : int

logic attr__ATTRIBUTE_LAST20 : int

logic attr__ATTRIBUTE_MODULUS30 : int

logic attr__ATTRIBUTE_IMAGE30 : int -> us_string

logic attr__ATTRIBUTE_VALUE__pre_check30 : us_string -> prop

logic attr__ATTRIBUTE_VALUE30 : us_string -> int

predicate in_range30(x: int) = ((attr__ATTRIBUTE_FIRST20 <= x) and
  (x <= attr__ATTRIBUTE_LAST20))

logic to_int31 : tS37bP1 -> int

logic of_int31 : int -> tS37bP1

predicate eq30(x: tS37bP1, y: tS37bP1) = (to_int31(x) = to_int31(y))

axiom range_axiom32 : (forall x:tS37bP1. in_range30(to_int31(x)))

axiom coerce_axiom30 :
  (forall x:int [to_int31(of_int31(x))| in_range30(x), of_int31(x)].
  (in_range30(x) -> (to_int31(of_int31(x)) = x)))

axiom unicity_axiom30 :
  (forall x:tS37bP1. forall y:tS37bP1 [to_int31(x), to_int31(y)].
  ((to_int31(x) = to_int31(y)) -> (x = y)))

logic dummy35 : tS37bP1

logic i2 : integer

type t62b

logic attr__ATTRIBUTE_FIRST21 : int

logic attr__ATTRIBUTE_LAST21 : int

logic attr__ATTRIBUTE_MODULUS31 : int

logic attr__ATTRIBUTE_IMAGE31 : int -> us_string

logic attr__ATTRIBUTE_VALUE__pre_check31 : us_string -> prop

logic attr__ATTRIBUTE_VALUE31 : us_string -> int

predicate in_range31(x: int) = ((attr__ATTRIBUTE_FIRST21 <= x) and
  (x <= attr__ATTRIBUTE_LAST21))

logic to_int32 : t62b -> int

logic of_int32 : int -> t62b

predicate eq31(x: t62b, y: t62b) = (to_int32(x) = to_int32(y))

axiom range_axiom33 : (forall x:t62b. in_range31(to_int32(x)))

axiom coerce_axiom31 :
  (forall x:int [to_int32(of_int32(x))| in_range31(x), of_int32(x)].
  (in_range31(x) -> (to_int32(of_int32(x)) = x)))

axiom unicity_axiom31 :
  (forall x:t62b. forall y:t62b [to_int32(x), to_int32(y)].
  ((to_int32(x) = to_int32(y)) -> (x = y)))

logic dummy36 : t62b

type t42b

logic attr__ATTRIBUTE_FIRST22 : int

logic attr__ATTRIBUTE_LAST22 : int

logic attr__ATTRIBUTE_MODULUS32 : int

logic attr__ATTRIBUTE_IMAGE32 : int -> us_string

logic attr__ATTRIBUTE_VALUE__pre_check32 : us_string -> prop

logic attr__ATTRIBUTE_VALUE32 : us_string -> int

predicate in_range32(x: int) = ((attr__ATTRIBUTE_FIRST22 <= x) and
  (x <= attr__ATTRIBUTE_LAST22))

logic to_int33 : t42b -> int

logic of_int33 : int -> t42b

predicate eq32(x: t42b, y: t42b) = (to_int33(x) = to_int33(y))

axiom range_axiom34 : (forall x:t42b. in_range32(to_int33(x)))

axiom coerce_axiom32 :
  (forall x:int [to_int33(of_int33(x))| in_range32(x), of_int33(x)].
  (in_range32(x) -> (to_int33(of_int33(x)) = x)))

axiom unicity_axiom32 :
  (forall x:t42b. forall y:t42b [to_int33(x), to_int33(y)].
  ((to_int33(x) = to_int33(y)) -> (x = y)))

logic dummy37 : t42b

logic b_v1 : arr

type t73b

logic attr__ATTRIBUTE_FIRST23 : int

logic attr__ATTRIBUTE_LAST23 : int

logic attr__ATTRIBUTE_MODULUS33 : int

logic attr__ATTRIBUTE_IMAGE33 : int -> us_string

logic attr__ATTRIBUTE_VALUE__pre_check33 : us_string -> prop

logic attr__ATTRIBUTE_VALUE33 : us_string -> int

predicate in_range33(x: int) = ((attr__ATTRIBUTE_FIRST23 <= x) and
  (x <= attr__ATTRIBUTE_LAST23))

logic to_int34 : t73b -> int

logic of_int34 : int -> t73b

predicate eq33(x: t73b, y: t73b) = (to_int34(x) = to_int34(y))

axiom range_axiom35 : (forall x:t73b. in_range33(to_int34(x)))

axiom coerce_axiom33 :
  (forall x:int [to_int34(of_int34(x))| in_range33(x), of_int34(x)].
  (in_range33(x) -> (to_int34(of_int34(x)) = x)))

axiom unicity_axiom33 :
  (forall x:t73b. forall y:t73b [to_int34(x), to_int34(y)].
  ((to_int34(x) = to_int34(y)) -> (x = y)))

logic dummy38 : t73b

type t68b

logic attr__ATTRIBUTE_FIRST24 : int

logic attr__ATTRIBUTE_LAST24 : int

logic attr__ATTRIBUTE_MODULUS34 : int

logic attr__ATTRIBUTE_IMAGE34 : int -> us_string

logic attr__ATTRIBUTE_VALUE__pre_check34 : us_string -> prop

logic attr__ATTRIBUTE_VALUE34 : us_string -> int

predicate in_range34(x: int) = ((attr__ATTRIBUTE_FIRST24 <= x) and
  (x <= attr__ATTRIBUTE_LAST24))

logic to_int35 : t68b -> int

logic of_int35 : int -> t68b

predicate eq34(x: t68b, y: t68b) = (to_int35(x) = to_int35(y))

axiom range_axiom36 : (forall x:t68b. in_range34(to_int35(x)))

axiom coerce_axiom34 :
  (forall x:int [to_int35(of_int35(x))| in_range34(x), of_int35(x)].
  (in_range34(x) -> (to_int35(of_int35(x)) = x)))

axiom unicity_axiom34 :
  (forall x:t68b. forall y:t68b [to_int35(x), to_int35(y)].
  ((to_int35(x) = to_int35(y)) -> (x = y)))

logic dummy39 : t68b

type t53b

logic attr__ATTRIBUTE_FIRST25 : int

logic attr__ATTRIBUTE_LAST25 : int

logic attr__ATTRIBUTE_MODULUS35 : int

logic attr__ATTRIBUTE_IMAGE35 : int -> us_string

logic attr__ATTRIBUTE_VALUE__pre_check35 : us_string -> prop

logic attr__ATTRIBUTE_VALUE35 : us_string -> int

predicate in_range35(x: int) = ((attr__ATTRIBUTE_FIRST25 <= x) and
  (x <= attr__ATTRIBUTE_LAST25))

logic to_int36 : t53b -> int

logic of_int36 : int -> t53b

predicate eq35(x: t53b, y: t53b) = (to_int36(x) = to_int36(y))

axiom range_axiom37 : (forall x:t53b. in_range35(to_int36(x)))

axiom coerce_axiom35 :
  (forall x:int [to_int36(of_int36(x))| in_range35(x), of_int36(x)].
  (in_range35(x) -> (to_int36(of_int36(x)) = x)))

axiom unicity_axiom35 :
  (forall x:t53b. forall y:t53b [to_int36(x), to_int36(y)].
  ((to_int36(x) = to_int36(y)) -> (x = y)))

logic dummy40 : t53b

type t48b

logic attr__ATTRIBUTE_FIRST26 : int

logic attr__ATTRIBUTE_LAST26 : int

logic attr__ATTRIBUTE_MODULUS36 : int

logic attr__ATTRIBUTE_IMAGE36 : int -> us_string

logic attr__ATTRIBUTE_VALUE__pre_check36 : us_string -> prop

logic attr__ATTRIBUTE_VALUE36 : us_string -> int

predicate in_range36(x: int) = ((attr__ATTRIBUTE_FIRST26 <= x) and
  (x <= attr__ATTRIBUTE_LAST26))

logic to_int37 : t48b -> int

logic of_int37 : int -> t48b

predicate eq36(x: t48b, y: t48b) = (to_int37(x) = to_int37(y))

axiom range_axiom38 : (forall x:t48b. in_range36(to_int37(x)))

axiom coerce_axiom36 :
  (forall x:int [to_int37(of_int37(x))| in_range36(x), of_int37(x)].
  (in_range36(x) -> (to_int37(of_int37(x)) = x)))

axiom unicity_axiom36 :
  (forall x:t48b. forall y:t48b [to_int37(x), to_int37(y)].
  ((to_int37(x) = to_int37(y)) -> (x = y)))

logic dummy41 : t48b

logic c_v1 : arr

type tS40bP1

logic attr__ATTRIBUTE_FIRST27 : int

logic attr__ATTRIBUTE_LAST27 : int

logic attr__ATTRIBUTE_MODULUS37 : int

logic attr__ATTRIBUTE_IMAGE37 : int -> us_string

logic attr__ATTRIBUTE_VALUE__pre_check37 : us_string -> prop

logic attr__ATTRIBUTE_VALUE37 : us_string -> int

predicate in_range37(x: int) = ((attr__ATTRIBUTE_FIRST27 <= x) and
  (x <= attr__ATTRIBUTE_LAST27))

logic to_int38 : tS40bP1 -> int

logic of_int38 : int -> tS40bP1

predicate eq37(x: tS40bP1, y: tS40bP1) = (to_int38(x) = to_int38(y))

axiom range_axiom39 : (forall x:tS40bP1. in_range37(to_int38(x)))

axiom coerce_axiom37 :
  (forall x:int [to_int38(of_int38(x))| in_range37(x), of_int38(x)].
  (in_range37(x) -> (to_int38(of_int38(x)) = x)))

axiom unicity_axiom37 :
  (forall x:tS40bP1. forall y:tS40bP1 [to_int38(x), to_int38(y)].
  ((to_int38(x) = to_int38(y)) -> (x = y)))

logic dummy42 : tS40bP1

logic b_v2 : arr

type t64b

logic attr__ATTRIBUTE_FIRST28 : int

logic attr__ATTRIBUTE_LAST28 : int

logic attr__ATTRIBUTE_MODULUS38 : int

logic attr__ATTRIBUTE_IMAGE38 : int -> us_string

logic attr__ATTRIBUTE_VALUE__pre_check38 : us_string -> prop

logic attr__ATTRIBUTE_VALUE38 : us_string -> int

predicate in_range38(x: int) = ((attr__ATTRIBUTE_FIRST28 <= x) and
  (x <= attr__ATTRIBUTE_LAST28))

logic to_int39 : t64b -> int

logic of_int39 : int -> t64b

predicate eq38(x: t64b, y: t64b) = (to_int39(x) = to_int39(y))

axiom range_axiom40 : (forall x:t64b. in_range38(to_int39(x)))

axiom coerce_axiom38 :
  (forall x:int [to_int39(of_int39(x))| in_range38(x), of_int39(x)].
  (in_range38(x) -> (to_int39(of_int39(x)) = x)))

axiom unicity_axiom38 :
  (forall x:t64b. forall y:t64b [to_int39(x), to_int39(y)].
  ((to_int39(x) = to_int39(y)) -> (x = y)))

logic dummy43 : t64b

type t44b

logic attr__ATTRIBUTE_FIRST29 : int

logic attr__ATTRIBUTE_LAST29 : int

logic attr__ATTRIBUTE_MODULUS39 : int

logic attr__ATTRIBUTE_IMAGE39 : int -> us_string

logic attr__ATTRIBUTE_VALUE__pre_check39 : us_string -> prop

logic attr__ATTRIBUTE_VALUE39 : us_string -> int

predicate in_range39(x: int) = ((attr__ATTRIBUTE_FIRST29 <= x) and
  (x <= attr__ATTRIBUTE_LAST29))

logic to_int40 : t44b -> int

logic of_int40 : int -> t44b

predicate eq39(x: t44b, y: t44b) = (to_int40(x) = to_int40(y))

axiom range_axiom41 : (forall x:t44b. in_range39(to_int40(x)))

axiom coerce_axiom39 :
  (forall x:int [to_int40(of_int40(x))| in_range39(x), of_int40(x)].
  (in_range39(x) -> (to_int40(of_int40(x)) = x)))

axiom unicity_axiom39 :
  (forall x:t44b. forall y:t44b [to_int40(x), to_int40(y)].
  ((to_int40(x) = to_int40(y)) -> (x = y)))

logic dummy44 : t44b

type tS38bP1

logic attr__ATTRIBUTE_FIRST30 : int

logic attr__ATTRIBUTE_LAST30 : int

logic attr__ATTRIBUTE_MODULUS40 : int

logic attr__ATTRIBUTE_IMAGE40 : int -> us_string

logic attr__ATTRIBUTE_VALUE__pre_check40 : us_string -> prop

logic attr__ATTRIBUTE_VALUE40 : us_string -> int

predicate in_range40(x: int) = ((attr__ATTRIBUTE_FIRST30 <= x) and
  (x <= attr__ATTRIBUTE_LAST30))

logic to_int41 : tS38bP1 -> int

logic of_int41 : int -> tS38bP1

predicate eq40(x: tS38bP1, y: tS38bP1) = (to_int41(x) = to_int41(y))

axiom range_axiom42 : (forall x:tS38bP1. in_range40(to_int41(x)))

axiom coerce_axiom40 :
  (forall x:int [to_int41(of_int41(x))| in_range40(x), of_int41(x)].
  (in_range40(x) -> (to_int41(of_int41(x)) = x)))

axiom unicity_axiom40 :
  (forall x:tS38bP1. forall y:tS38bP1 [to_int41(x), to_int41(y)].
  ((to_int41(x) = to_int41(y)) -> (x = y)))

logic dummy45 : tS38bP1

type t59b

logic attr__ATTRIBUTE_FIRST31 : int

logic attr__ATTRIBUTE_LAST31 : int

logic attr__ATTRIBUTE_MODULUS41 : int

logic attr__ATTRIBUTE_IMAGE41 : int -> us_string

logic attr__ATTRIBUTE_VALUE__pre_check41 : us_string -> prop

logic attr__ATTRIBUTE_VALUE41 : us_string -> int

predicate in_range41(x: int) = ((attr__ATTRIBUTE_FIRST31 <= x) and
  (x <= attr__ATTRIBUTE_LAST31))

logic to_int42 : t59b -> int

logic of_int42 : int -> t59b

predicate eq41(x: t59b, y: t59b) = (to_int42(x) = to_int42(y))

axiom range_axiom43 : (forall x:t59b. in_range41(to_int42(x)))

axiom coerce_axiom41 :
  (forall x:int [to_int42(of_int42(x))| in_range41(x), of_int42(x)].
  (in_range41(x) -> (to_int42(of_int42(x)) = x)))

axiom unicity_axiom41 :
  (forall x:t59b. forall y:t59b [to_int42(x), to_int42(y)].
  ((to_int42(x) = to_int42(y)) -> (x = y)))

logic dummy46 : t59b

logic c_v2 : arr

type tS36bP1

logic attr__ATTRIBUTE_FIRST32 : int

logic attr__ATTRIBUTE_LAST32 : int

logic attr__ATTRIBUTE_MODULUS42 : int

logic attr__ATTRIBUTE_IMAGE42 : int -> us_string

logic attr__ATTRIBUTE_VALUE__pre_check42 : us_string -> prop

logic attr__ATTRIBUTE_VALUE42 : us_string -> int

predicate in_range42(x: int) = ((attr__ATTRIBUTE_FIRST32 <= x) and
  (x <= attr__ATTRIBUTE_LAST32))

logic to_int43 : tS36bP1 -> int

logic of_int43 : int -> tS36bP1

predicate eq42(x: tS36bP1, y: tS36bP1) = (to_int43(x) = to_int43(y))

axiom range_axiom44 : (forall x:tS36bP1. in_range42(to_int43(x)))

axiom coerce_axiom42 :
  (forall x:int [to_int43(of_int43(x))| in_range42(x), of_int43(x)].
  (in_range42(x) -> (to_int43(of_int43(x)) = x)))

axiom unicity_axiom42 :
  (forall x:tS36bP1. forall y:tS36bP1 [to_int43(x), to_int43(y)].
  ((to_int43(x) = to_int43(y)) -> (x = y)))

logic dummy47 : tS36bP1

type t75b

logic attr__ATTRIBUTE_FIRST33 : int

logic attr__ATTRIBUTE_LAST33 : int

logic attr__ATTRIBUTE_MODULUS43 : int

logic attr__ATTRIBUTE_IMAGE43 : int -> us_string

logic attr__ATTRIBUTE_VALUE__pre_check43 : us_string -> prop

logic attr__ATTRIBUTE_VALUE43 : us_string -> int

predicate in_range43(x: int) = ((attr__ATTRIBUTE_FIRST33 <= x) and
  (x <= attr__ATTRIBUTE_LAST33))

logic to_int44 : t75b -> int

logic of_int44 : int -> t75b

predicate eq43(x: t75b, y: t75b) = (to_int44(x) = to_int44(y))

axiom range_axiom45 : (forall x:t75b. in_range43(to_int44(x)))

axiom coerce_axiom43 :
  (forall x:int [to_int44(of_int44(x))| in_range43(x), of_int44(x)].
  (in_range43(x) -> (to_int44(of_int44(x)) = x)))

axiom unicity_axiom43 :
  (forall x:t75b. forall y:t75b [to_int44(x), to_int44(y)].
  ((to_int44(x) = to_int44(y)) -> (x = y)))

logic dummy48 : t75b

goal WP_parameter_def8 :
  (forall infoflow__arraypartitionedtransfer__L69b__m:int.
  forall a_v1:integer map. forall a_v11:int. forall a_v12:range_type2.
  forall a_v2:integer map. forall a_v21:int. forall a_v22:range_type2.
  forall a_v13:integer map. forall a_v14:int. forall a_v15:range_type2.
  forall infoflow__arraypartitionedtransfer__L_14__i_v2:int.
  forall infoflow__arraypartitionedtransfer__L_14__i_v21:int.
  forall a_v23:integer map. forall a_v24:int. forall a_v25:range_type2.
  forall a_v26:integer map. forall a_v27:int. forall a_v28:range_type2.
  forall infoflow__arraypartitionedtransfer__L_14__i_v22:int.
  forall rho:integer map. forall rho1:int. forall rho2:range_type2.
  forall rho3:int. forall c:bool. (((first(to_array4(mk_arr(a_v1, a_v11,
  a_v12))) = 1) and ((first(to_array4(b_v1)) = 1) and
  ((first(to_array4(c_v1)) = 1) and ((last(to_array4(mk_arr(a_v1, a_v11,
  a_v12))) = last(to_array4(b_v1))) and ((last(to_array4(mk_arr(a_v1, a_v11,
  a_v12))) = last(to_array4(c_v1))) and
  (((first(to_array4(b_v1)) <= to_int(k_1)) and
  (to_int(k_1) <= last(to_array4(b_v1)))) and ((first(to_array4(mk_arr(a_v2,
  a_v21, a_v22))) = 1) and ((first(to_array4(b_v2)) = 1) and
  ((first(to_array4(c_v2)) = 1) and ((last(to_array4(mk_arr(a_v2, a_v21,
  a_v22))) = last(to_array4(b_v2))) and ((last(to_array4(mk_arr(a_v2, a_v21,
  a_v22))) = last(to_array4(c_v2))) and
  (((first(to_array4(b_v2)) <= to_int(k_2)) and
  (to_int(k_2) <= last(to_array4(b_v2)))) and (last(to_array4(mk_arr(a_v1,
  a_v11, a_v12))) = last(to_array4(mk_arr(a_v2, a_v21,
  a_v22)))))))))))))))) ->
  (((first(to_array4(c_v2)) = attr__ATTRIBUTE_FIRST15) and
  (last(to_array4(c_v2)) = attr__ATTRIBUTE_LAST15)) ->
  (((first(to_array4(b_v2)) = attr__ATTRIBUTE_FIRST27) and
  (last(to_array4(b_v2)) = attr__ATTRIBUTE_LAST27)) ->
  (((first(to_array4(c_v1)) = attr__ATTRIBUTE_FIRST16) and
  (last(to_array4(c_v1)) = attr__ATTRIBUTE_LAST16)) ->
  (((first(to_array4(b_v1)) = attr__ATTRIBUTE_FIRST30) and
  (last(to_array4(b_v1)) = attr__ATTRIBUTE_LAST30)) ->
  (((first(to_array4(mk_arr(a_v2, a_v21,
  a_v22))) = attr__ATTRIBUTE_FIRST20) and (last(to_array4(mk_arr(a_v2, a_v21,
  a_v22))) = attr__ATTRIBUTE_LAST20)) -> (((first(to_array4(mk_arr(a_v1,
  a_v11, a_v12))) = attr__ATTRIBUTE_FIRST32) and (last(to_array4(mk_arr(a_v1,
  a_v11, a_v12))) = attr__ATTRIBUTE_LAST32)) ->
  (((forall infoflow__arraypartitionedtransfer__L58b__m:int.
    (((first(to_array4(mk_arr(a_v13, a_v14,
    a_v15))) <= infoflow__arraypartitionedtransfer__L58b__m) and
    (infoflow__arraypartitionedtransfer__L58b__m <= to_int(k_1))) ->
    (to_int(get(elts(to_array4(mk_arr(a_v13, a_v14, a_v15))),
    ((infoflow__arraypartitionedtransfer__L58b__m + offset(to_array4(mk_arr(a_v13,
    a_v14, a_v15)))) - first(to_array4(mk_arr(a_v13, a_v14,
    a_v15)))))) = to_int(get(elts(to_array4(b_v1)),
    ((infoflow__arraypartitionedtransfer__L58b__m + offset(to_array4(b_v1))) - first(to_array4(b_v1)))))))) and
  (forall infoflow__arraypartitionedtransfer__L60b__m:int.
  ((((to_int(k_1) + 1) <= infoflow__arraypartitionedtransfer__L60b__m) and
  (infoflow__arraypartitionedtransfer__L60b__m <= last(to_array4(mk_arr(a_v13,
  a_v14, a_v15))))) -> (to_int(get(elts(to_array4(mk_arr(a_v13, a_v14,
  a_v15))),
  ((infoflow__arraypartitionedtransfer__L60b__m + offset(to_array4(mk_arr(a_v13,
  a_v14, a_v15)))) - first(to_array4(mk_arr(a_v13, a_v14,
  a_v15)))))) = to_int(get(elts(to_array4(c_v1)),
  (((infoflow__arraypartitionedtransfer__L60b__m - to_int(k_1)) + offset(to_array4(c_v1))) - first(to_array4(c_v1))))))))) ->
  (((infoflow__arraypartitionedtransfer__L_14__i_v2 = first(to_array4(mk_arr(a_v2,
  a_v21, a_v22)))) and ((((first(to_array4(mk_arr(a_v2, a_v21,
  a_v22))) <= infoflow__arraypartitionedtransfer__L_14__i_v2) and
  (infoflow__arraypartitionedtransfer__L_14__i_v2 <= to_int(k_2))) and
  ((((forall infoflow__arraypartitionedtransfer__L_14__L65b__m:int.
     (((first(to_array4(mk_arr(a_v23, a_v24,
     a_v25))) <= infoflow__arraypartitionedtransfer__L_14__L65b__m) and
     (infoflow__arraypartitionedtransfer__L_14__L65b__m <= (infoflow__arraypartitionedtransfer__L_14__i_v21 - 1))) ->
     (to_int(get(elts(to_array4(mk_arr(a_v23, a_v24, a_v25))),
     ((infoflow__arraypartitionedtransfer__L_14__L65b__m + offset(to_array4(mk_arr(a_v23,
     a_v24, a_v25)))) - first(to_array4(mk_arr(a_v23, a_v24,
     a_v25)))))) = to_int(get(elts(to_array4(b_v2)),
     ((infoflow__arraypartitionedtransfer__L_14__L65b__m + offset(to_array4(b_v2))) - first(to_array4(b_v2)))))))) and
  false) and ((mk_arr(a_v26, a_v27, a_v28) = mk_arr(rho, rho1, rho2)) and
  (infoflow__arraypartitionedtransfer__L_14__i_v22 = rho3))) or
  ((forall infoflow__arraypartitionedtransfer__L_14__L65b__m:int.
   (((first(to_array4(mk_arr(a_v23, a_v24,
   a_v25))) <= infoflow__arraypartitionedtransfer__L_14__L65b__m) and
   (infoflow__arraypartitionedtransfer__L_14__L65b__m <= (infoflow__arraypartitionedtransfer__L_14__i_v21 - 1))) ->
   (to_int(get(elts(to_array4(mk_arr(a_v23, a_v24, a_v25))),
   ((infoflow__arraypartitionedtransfer__L_14__L65b__m + offset(to_array4(mk_arr(a_v23,
   a_v24, a_v25)))) - first(to_array4(mk_arr(a_v23, a_v24,
   a_v25)))))) = to_int(get(elts(to_array4(b_v2)),
   ((infoflow__arraypartitionedtransfer__L_14__L65b__m + offset(to_array4(b_v2))) - first(to_array4(b_v2)))))))) and
  ((((not (infoflow__arraypartitionedtransfer__L_14__i_v22 <= to_int(k_2))) and
  (infoflow__arraypartitionedtransfer__L_14__i_v22 = (infoflow__arraypartitionedtransfer__L_14__i_v21 + 1))) and
  (((set(elts(to_array4(mk_arr(a_v23, a_v24, a_v25))),
  ((infoflow__arraypartitionedtransfer__L_14__i_v21 + offset(to_array4(mk_arr(a_v23,
  a_v24, a_v25)))) - first(to_array4(mk_arr(a_v23, a_v24, a_v25)))),
  get(elts(to_array4(b_v2)),
  ((infoflow__arraypartitionedtransfer__L_14__i_v21 + offset(to_array4(b_v2))) - first(to_array4(b_v2))))) = a_v26) and
  (offset(to_array4(mk_arr(a_v23, a_v24, a_v25))) = a_v27)) and
  (mk1(first(to_array4(mk_arr(a_v23, a_v24, a_v25))),
  last(to_array4(mk_arr(a_v23, a_v24, a_v25)))) = a_v28))) and
  ((first(to_array4(mk_arr(a_v23, a_v24,
  a_v25))) <= infoflow__arraypartitionedtransfer__L_14__i_v21) and
  (infoflow__arraypartitionedtransfer__L_14__i_v21 <= to_int(k_2))))))) or
  ((not ((first(to_array4(mk_arr(a_v2, a_v21,
  a_v22))) <= infoflow__arraypartitionedtransfer__L_14__i_v2) and
  (infoflow__arraypartitionedtransfer__L_14__i_v2 <= to_int(k_2)))) and
  ((mk_arr(a_v26, a_v27, a_v28) = mk_arr(a_v2, a_v21, a_v22)) and
  (infoflow__arraypartitionedtransfer__L_14__i_v22 = infoflow__arraypartitionedtransfer__L_14__i_v2))))) ->
  ((((c = true) or
  (forall infoflow__arraypartitionedtransfer__L67b__m:int.
  (((first(to_array4(mk_arr(a_v13, a_v14,
  a_v15))) <= infoflow__arraypartitionedtransfer__L67b__m) and
  (infoflow__arraypartitionedtransfer__L67b__m <= to_int(k_1))) ->
  (to_int(get(elts(to_array4(mk_arr(a_v13, a_v14, a_v15))),
  ((infoflow__arraypartitionedtransfer__L67b__m + offset(to_array4(mk_arr(a_v13,
  a_v14, a_v15)))) - first(to_array4(mk_arr(a_v13, a_v14,
  a_v15)))))) = to_int(get(elts(to_array4(b_v1)),
  ((infoflow__arraypartitionedtransfer__L67b__m + offset(to_array4(b_v1))) - first(to_array4(b_v1))))))))) ->
  ((c = true) and
  (forall infoflow__arraypartitionedtransfer__L67b__m:int.
  (((first(to_array4(mk_arr(a_v13, a_v14,
  a_v15))) <= infoflow__arraypartitionedtransfer__L67b__m) and
  (infoflow__arraypartitionedtransfer__L67b__m <= to_int(k_1))) ->
  (to_int(get(elts(to_array4(mk_arr(a_v13, a_v14, a_v15))),
  ((infoflow__arraypartitionedtransfer__L67b__m + offset(to_array4(mk_arr(a_v13,
  a_v14, a_v15)))) - first(to_array4(mk_arr(a_v13, a_v14,
  a_v15)))))) = to_int(get(elts(to_array4(b_v1)),
  ((infoflow__arraypartitionedtransfer__L67b__m + offset(to_array4(b_v1))) - first(to_array4(b_v1)))))))))) ->
  ((c = true) ->
  ((((to_int(k_1) + 1) <= infoflow__arraypartitionedtransfer__L69b__m) and
  (infoflow__arraypartitionedtransfer__L69b__m <= last(to_array4(mk_arr(a_v13,
  a_v14, a_v15))))) ->
  in_range((infoflow__arraypartitionedtransfer__L69b__m - to_int(k_1))))))))))))))))

